Search.setIndex({"docnames": ["README", "changelog", "cmake_doc/index", "cmake_doc/options", "coreneuron/compatibility", "coreneuron/examples", "coreneuron/index", "coreneuron/installation", "coreneuron/running-a-simulation", "courses/artificial_cells_neuron", "courses/batch_runs_bulletin_board_parallelization", "courses/batch_runs_with_bulletin_board", "courses/building_and_labeling_a_two_electrod", "courses/bulletin_board_walkthrough", "courses/cellbuilder_overview_and_hints", "courses/code/cell.ho", "courses/code/initbatpar.ho", "courses/code/initbatser.ho", "courses/code/initonerun.ho", "courses/code/initplotfi.ho", "courses/code/net1run.hoc", "courses/code/net1spec.ho", "courses/code/net2spec.ho", "courses/code/test0.hoc", "courses/custom-initialization", "courses/electrotonic_analysis", "courses/exercises2018", "courses/hints_for_inhomogeneous_channel_dist", "courses/hoc_exercises", "courses/hopfield_brody_network_in_python", "courses/interactive_modeling", "courses/intro_to_gui", "courses/intro_to_the_network_builder", "courses/introduction_to_the_linear_circuit", "courses/managing_models_on_the_fly", "courses/mpi_parallelization", "courses/multithread_parallelization", "courses/network_ready_cells_from_the_cellb", "courses/neuron_scripting_exercises", "courses/numerical-methods-exercises", "courses/quality_issues_with_morphometric", "courses/rxd_exercises", "courses/saving_windows", "courses/specifying_inhomogeneous_channel_dis", "courses/state_and_parameter_discontinuities", "courses/the_cellbuilder", "courses/using_modeldb_and_modelview", "courses/using_morphometric_data", "courses/using_nmodl_files", "courses/using_nsg_portal", "courses/working_with_shape_plots", "dealing_simulations_generate_lot", "dev/HOCInterpreter/HOCInterpreter", "dev/gpu-testing", "dev/how-do-i/how-do-i", "dev/index", "docs_requirements", "doxygen", "example_of_generating_movie", "guide/bio_faq", "guide/cellbuilder", "guide/cellbuilder1", "guide/cellbuilder2", "guide/cellbuilder3", "guide/data/finithnd1.hoc", "guide/data/idraw-readme", "guide/data/readme", "guide/data/solution.ses", "guide/differences_between_idraw_and_core", "guide/example_hybrid_network", "guide/example_of_simple_network", "guide/faq", "guide/finitialize_handler", "guide/fixing_funny_axes", "guide/heres_how_delete_v5", "guide/heres_how_page", "guide/hoc_chapter_11_old_reference", "guide/how_to_get_started", "guide/how_to_get_started_with_neuron", "guide/how_to_move_labels", "guide/how_to_translate_view", "guide/import3d", "guide/index", "guide/introduction_to_network_construction", "guide/modelview_compact_display", "guide/network_builder_tutorials", "guide/nmodls_built_in_functions", "guide/nrn_defaults", "guide/optimization", "guide/optimization1", "guide/optimization1a", "guide/optimization2", "guide/plot_what", "guide/porting_mechanisms_to_cpp", "guide/print_file_manager", "guide/randomness", "guide/run_simulation_plot_input_output", "guide/run_simulation_plot_input_output2", "guide/saveses", "guide/set_up_a_subsetdomainiterator", "guide/specify_and_verify_the_functions", "guide/specify_the_model_parameters_varied", "guide/step_1_define_type_cell", "guide/step_1_define_type_of_cell", "guide/step_1_define_type_of_cell2", "guide/step_1_define_type_of_cell3", "guide/step_2_create_each_cell", "guide/step_2_create_network_cell", "guide/step_3_connect_cells", "guide/step_3_connect_cells_continued", "guide/step_3_connect_the_cells", "guide/step_3_connect_the_cells_continued", "guide/tutorial_2_hybrid_nets", "guide/tutorial_artificial_neurons", "guide/units", "guide/units_tutorial", "guide/use_the_model_specification", "guide/using_neuron_on_the_mac", "guide/using_plotwhat_to_specify_a_variable", "guide/using_session_files_for_saving", "guide/using_the_d_lambda_rule", "guide/what_is_neuron", "guide/working_with_postscript_and_idraw", "hoc/analysis/guitools", "hoc/analysis/guitools/funfit", "hoc/analysis/guitools/impedancetools", "hoc/analysis/guitools/impedanx", "hoc/analysis/guitools/impratio", "hoc/analysis/guitools/mulfit", "hoc/analysis/guitools/runfit", "hoc/analysis/programmatic", "hoc/analysis/programmatic/impedance", "hoc/analysis/programmatic/misc", "hoc/analysis/programmatic/optimization", "hoc/compilationoptions", "hoc/index", "hoc/modelspec/guitools", "hoc/modelspec/guitools/cellbuilder", "hoc/modelspec/guitools/inserter", "hoc/modelspec/guitools/pointman", "hoc/modelspec/guitools/showmech", "hoc/modelspec/programmatic", "hoc/modelspec/programmatic/electrod", "hoc/modelspec/programmatic/hocmech", "hoc/modelspec/programmatic/ions", "hoc/modelspec/programmatic/kschan", "hoc/modelspec/programmatic/linmod", "hoc/modelspec/programmatic/mechanisms", "hoc/modelspec/programmatic/mechanisms/mech", "hoc/modelspec/programmatic/mechanisms/nmodl", "hoc/modelspec/programmatic/mechanisms/nmodl2", "hoc/modelspec/programmatic/mechtype", "hoc/modelspec/programmatic/network", "hoc/modelspec/programmatic/network/lyttonmpi", "hoc/modelspec/programmatic/network/netcon", "hoc/modelspec/programmatic/network/parcon", "hoc/modelspec/programmatic/network/parnet", "hoc/modelspec/programmatic/obsoletestimuli", "hoc/modelspec/programmatic/rxd", "hoc/modelspec/programmatic/ste", "hoc/modelspec/programmatic/topology", "hoc/modelspec/programmatic/topology/geometry", "hoc/modelspec/programmatic/topology/seclist", "hoc/modelspec/programmatic/topology/secref", "hoc/modelspec/programmatic/topology/secspec", "hoc/programming/dynamiccode", "hoc/programming/errors", "hoc/programming/gui/dialog", "hoc/programming/gui/layout", "hoc/programming/gui/list", "hoc/programming/gui/misc", "hoc/programming/gui/nfunc", "hoc/programming/gui/pwman", "hoc/programming/gui/secbrows", "hoc/programming/gui/symchooser", "hoc/programming/gui/texteditor", "hoc/programming/gui/textmenus", "hoc/programming/gui/vfe", "hoc/programming/gui/widgets", "hoc/programming/guidesign", "hoc/programming/hoc", "hoc/programming/hocsyntax", "hoc/programming/internals", "hoc/programming/io", "hoc/programming/io/file", "hoc/programming/io/plotters", "hoc/programming/io/printf", "hoc/programming/io/read", "hoc/programming/io/ropen", "hoc/programming/math/constants", "hoc/programming/math/eqnsolve", "hoc/programming/math/functions", "hoc/programming/math/guimath", "hoc/programming/math/matrix", "hoc/programming/math/mcran4", "hoc/programming/math/misc", "hoc/programming/math/random", "hoc/programming/math/vector", "hoc/programming/mathematics", "hoc/programming/mechstan", "hoc/programming/neuronpython", "hoc/programming/ockeywor", "hoc/programming/oop", "hoc/programming/pointers/misc", "hoc/programming/pointers/pointer", "hoc/programming/pointers/ptrvector", "hoc/programming/predec", "hoc/programming/projectmanagement", "hoc/programming/python", "hoc/programming/references", "hoc/programming/sscanf", "hoc/programming/strfun", "hoc/programming/strings", "hoc/programming/system", "hoc/programming/timer", "hoc/simctrl/batch", "hoc/simctrl/bbsavestate", "hoc/simctrl/cvode", "hoc/simctrl/family", "hoc/simctrl/interpretermanagement", "hoc/simctrl/programmatic", "hoc/simctrl/runctrl", "hoc/simctrl/savstate", "hoc/simctrl/sessionsave", "hoc/simctrl/stdrun", "hoc/visualization/glyph", "hoc/visualization/graph", "hoc/visualization/grapher", "hoc/visualization/gui", "hoc/visualization/notify", "hoc/visualization/oldgrph", "hoc/visualization/plotshape", "hoc/visualization/plotshapeclass", "hoc/visualization/rvarplt", "hoc/visualization/shape", "hoc/visualization/shapebox", "how_to_develop_and_debug_code", "index", "install/code_coverage", "install/debug", "install/developer", "install/install", "install/install_instructions", "install/mac_pkg", "install/python_wheels", "install/windows", "nmodl/verbatim", "otherscripting", "publications", "publications-using-neuron", "python/analysis/guitools", "python/analysis/guitools/funfit", "python/analysis/guitools/impedancetools", "python/analysis/guitools/impedanx", "python/analysis/guitools/impratio", "python/analysis/guitools/mulfit", "python/analysis/guitools/runfit", "python/analysis/programmatic", "python/analysis/programmatic/impedance", "python/analysis/programmatic/misc", "python/analysis/programmatic/optimization", "python/compilationoptions", "python/envvariables", "python/index", "python/modelspec/guitools", "python/modelspec/guitools/cellbuilder", "python/modelspec/guitools/inserter", "python/modelspec/guitools/pointman", "python/modelspec/guitools/showmech", "python/modelspec/programmatic", "python/modelspec/programmatic/electrod", "python/modelspec/programmatic/hocmech", "python/modelspec/programmatic/ions", "python/modelspec/programmatic/kschan", "python/modelspec/programmatic/linmod", "python/modelspec/programmatic/mechanisms", "python/modelspec/programmatic/mechanisms/mech", "python/modelspec/programmatic/mechanisms/nmodl", "python/modelspec/programmatic/mechanisms/nmodl2", "python/modelspec/programmatic/mechtype", "python/modelspec/programmatic/network", "python/modelspec/programmatic/network/lyttonmpi", "python/modelspec/programmatic/network/netcon", "python/modelspec/programmatic/network/parcon", "python/modelspec/programmatic/network/parnet", "python/modelspec/programmatic/obsoletestimuli", "python/modelspec/programmatic/rxd", "python/modelspec/programmatic/rxdmath", "python/modelspec/programmatic/ste", "python/modelspec/programmatic/topology", "python/modelspec/programmatic/topology/geometry", "python/modelspec/programmatic/topology/seclist", "python/modelspec/programmatic/topology/secref", "python/modelspec/programmatic/topology/secspec", "python/programming/dynamiccode", "python/programming/errors", "python/programming/gui/dialog", "python/programming/gui/layout", "python/programming/gui/list", "python/programming/gui/misc", "python/programming/gui/nfunc", "python/programming/gui/pwman", "python/programming/gui/secbrows", "python/programming/gui/symchooser", "python/programming/gui/texteditor", "python/programming/gui/textmenus", "python/programming/gui/vfe", "python/programming/gui/widgets", "python/programming/guidesign", "python/programming/hoc", "python/programming/hocsyntax", "python/programming/internals", "python/programming/io", "python/programming/io/file", "python/programming/io/plotters", "python/programming/io/printf", "python/programming/io/read", "python/programming/io/ropen", "python/programming/math/constants", "python/programming/math/eqnsolve", "python/programming/math/functions", "python/programming/math/guimath", "python/programming/math/matrix", "python/programming/math/mcran4", "python/programming/math/misc", "python/programming/math/random", "python/programming/math/vector", "python/programming/mathematics", "python/programming/mechstan", "python/programming/neuronpython", "python/programming/ockeywor", "python/programming/oop", "python/programming/pointers/misc", "python/programming/pointers/pointer", "python/programming/pointers/ptrvector", "python/programming/predec", "python/programming/projectmanagement", "python/programming/python", "python/programming/references", "python/programming/sscanf", "python/programming/strfun", "python/programming/strings", "python/programming/system", "python/programming/timer", "python/simctrl/batch", "python/simctrl/bbsavestate", "python/simctrl/cvode", "python/simctrl/family", "python/simctrl/interpretermanagement", "python/simctrl/programmatic", "python/simctrl/runctrl", "python/simctrl/savstate", "python/simctrl/sessionsave", "python/simctrl/stdrun", "python/visualization/glyph", "python/visualization/graph", "python/visualization/grapher", "python/visualization/gui", "python/visualization/notify", "python/visualization/oldgrph", "python/visualization/plotshape", "python/visualization/plotshapeclass", "python/visualization/rvarplt", "python/visualization/shape", "python/visualization/shapebox", "removed_features", "rst_substitutions", "rxd-tutorials/Changing initial conditions and parameters", "rxd-tutorials/Reaction-Diffusion tutorial", "rxd-tutorials/Restricting reactions to certain sections", "rxd-tutorials/basic-initialization", "rxd-tutorials/calcium waves", "rxd-tutorials/circadian", "rxd-tutorials/combining currents from mod files with rxd", "rxd-tutorials/degradable_buffer", "rxd-tutorials/extracellular", "rxd-tutorials/index", "rxd-tutorials/ip3-demo", "rxd-tutorials/thresholds", "scm/guide/SCMGuide", "scm/guidelines/SCMGuidelines", "scm/index", "tutorials/ball-and-stick-1", "tutorials/ball-and-stick-2", "tutorials/ball-and-stick-3", "tutorials/ball-and-stick-4", "tutorials/index", "tutorials/pythontutorial", "tutorials/scripting-neuron-basics", "videos/cns-tutorial-2021", "videos/incfcns-tutorial-2022", "videos/index", "videos/netpyne-course-2021", "videos/neuron-course-2021"], "filenames": ["README.md", "changelog.md", "cmake_doc/index.rst", "cmake_doc/options.rst", "coreneuron/compatibility.rst", "coreneuron/examples.rst", "coreneuron/index.rst", "coreneuron/installation.rst", "coreneuron/running-a-simulation.rst", "courses/artificial_cells_neuron.rst", "courses/batch_runs_bulletin_board_parallelization.rst", "courses/batch_runs_with_bulletin_board.rst", "courses/building_and_labeling_a_two_electrod.rst", "courses/bulletin_board_walkthrough.rst", "courses/cellbuilder_overview_and_hints.rst", "courses/code/cell.ho.txt", "courses/code/initbatpar.ho.txt", "courses/code/initbatser.ho.txt", "courses/code/initonerun.ho.txt", "courses/code/initplotfi.ho.txt", "courses/code/net1run.hoc.txt", "courses/code/net1spec.ho.txt", "courses/code/net2spec.ho.txt", "courses/code/test0.hoc.txt", "courses/custom-initialization.rst", "courses/electrotonic_analysis.rst", "courses/exercises2018.rst", "courses/hints_for_inhomogeneous_channel_dist.rst", "courses/hoc_exercises.rst", "courses/hopfield_brody_network_in_python.rst", "courses/interactive_modeling.rst", "courses/intro_to_gui.rst", "courses/intro_to_the_network_builder.rst", "courses/introduction_to_the_linear_circuit.rst", "courses/managing_models_on_the_fly.rst", "courses/mpi_parallelization.rst", "courses/multithread_parallelization.rst", "courses/network_ready_cells_from_the_cellb.rst", "courses/neuron_scripting_exercises.rst", "courses/numerical-methods-exercises.rst", "courses/quality_issues_with_morphometric.rst", "courses/rxd_exercises.rst", "courses/saving_windows.rst", "courses/specifying_inhomogeneous_channel_dis.rst", "courses/state_and_parameter_discontinuities.rst", "courses/the_cellbuilder.rst", "courses/using_modeldb_and_modelview.rst", "courses/using_morphometric_data.rst", "courses/using_nmodl_files.rst", "courses/using_nsg_portal.rst", "courses/working_with_shape_plots.rst", "dealing_simulations_generate_lot.rst", "dev/HOCInterpreter/HOCInterpreter.md", "dev/gpu-testing.rst", "dev/how-do-i/how-do-i.rst", "dev/index.rst", "docs_requirements.txt", "doxygen.rst", "example_of_generating_movie.rst", "guide/bio_faq.rst", "guide/cellbuilder.rst", "guide/cellbuilder1.rst", "guide/cellbuilder2.rst", "guide/cellbuilder3.rst", "guide/data/finithnd1.hoc.txt", "guide/data/idraw-readme.txt", "guide/data/readme.txt", "guide/data/solution.ses.txt", "guide/differences_between_idraw_and_core.rst", "guide/example_hybrid_network.rst", "guide/example_of_simple_network.rst", "guide/faq.rst", "guide/finitialize_handler.rst", "guide/fixing_funny_axes.rst", "guide/heres_how_delete_v5.rst", "guide/heres_how_page.rst", "guide/hoc_chapter_11_old_reference.rst", "guide/how_to_get_started.rst", "guide/how_to_get_started_with_neuron.rst", "guide/how_to_move_labels.rst", "guide/how_to_translate_view.rst", "guide/import3d.rst", "guide/index.rst", "guide/introduction_to_network_construction.rst", "guide/modelview_compact_display.rst", "guide/network_builder_tutorials.rst", "guide/nmodls_built_in_functions.rst", "guide/nrn_defaults.rst", "guide/optimization.rst", "guide/optimization1.rst", "guide/optimization1a.rst", "guide/optimization2.rst", "guide/plot_what.rst", "guide/porting_mechanisms_to_cpp.rst", "guide/print_file_manager.rst", "guide/randomness.rst", "guide/run_simulation_plot_input_output.rst", "guide/run_simulation_plot_input_output2.rst", "guide/saveses.rst", "guide/set_up_a_subsetdomainiterator.rst", "guide/specify_and_verify_the_functions.rst", "guide/specify_the_model_parameters_varied.rst", "guide/step_1_define_type_cell.rst", "guide/step_1_define_type_of_cell.rst", "guide/step_1_define_type_of_cell2.rst", "guide/step_1_define_type_of_cell3.rst", "guide/step_2_create_each_cell.rst", "guide/step_2_create_network_cell.rst", "guide/step_3_connect_cells.rst", "guide/step_3_connect_cells_continued.rst", "guide/step_3_connect_the_cells.rst", "guide/step_3_connect_the_cells_continued.rst", "guide/tutorial_2_hybrid_nets.rst", "guide/tutorial_artificial_neurons.rst", "guide/units.rst", "guide/units_tutorial.rst", "guide/use_the_model_specification.rst", "guide/using_neuron_on_the_mac.rst", "guide/using_plotwhat_to_specify_a_variable.rst", "guide/using_session_files_for_saving.rst", "guide/using_the_d_lambda_rule.rst", "guide/what_is_neuron.rst", "guide/working_with_postscript_and_idraw.rst", "hoc/analysis/guitools.rst", "hoc/analysis/guitools/funfit.rst", "hoc/analysis/guitools/impedancetools.rst", "hoc/analysis/guitools/impedanx.rst", "hoc/analysis/guitools/impratio.rst", "hoc/analysis/guitools/mulfit.rst", "hoc/analysis/guitools/runfit.rst", "hoc/analysis/programmatic.rst", "hoc/analysis/programmatic/impedance.rst", "hoc/analysis/programmatic/misc.rst", "hoc/analysis/programmatic/optimization.rst", "hoc/compilationoptions.rst", "hoc/index.rst", "hoc/modelspec/guitools.rst", "hoc/modelspec/guitools/cellbuilder.rst", "hoc/modelspec/guitools/inserter.rst", "hoc/modelspec/guitools/pointman.rst", "hoc/modelspec/guitools/showmech.rst", "hoc/modelspec/programmatic.rst", "hoc/modelspec/programmatic/electrod.rst", "hoc/modelspec/programmatic/hocmech.rst", "hoc/modelspec/programmatic/ions.rst", "hoc/modelspec/programmatic/kschan.rst", "hoc/modelspec/programmatic/linmod.rst", "hoc/modelspec/programmatic/mechanisms.rst", "hoc/modelspec/programmatic/mechanisms/mech.rst", "hoc/modelspec/programmatic/mechanisms/nmodl.rst", "hoc/modelspec/programmatic/mechanisms/nmodl2.rst", "hoc/modelspec/programmatic/mechtype.rst", "hoc/modelspec/programmatic/network.rst", "hoc/modelspec/programmatic/network/lyttonmpi.rst", "hoc/modelspec/programmatic/network/netcon.rst", "hoc/modelspec/programmatic/network/parcon.rst", "hoc/modelspec/programmatic/network/parnet.rst", "hoc/modelspec/programmatic/obsoletestimuli.rst", "hoc/modelspec/programmatic/rxd.rst", "hoc/modelspec/programmatic/ste.rst", "hoc/modelspec/programmatic/topology.rst", "hoc/modelspec/programmatic/topology/geometry.rst", "hoc/modelspec/programmatic/topology/seclist.rst", "hoc/modelspec/programmatic/topology/secref.rst", "hoc/modelspec/programmatic/topology/secspec.rst", "hoc/programming/dynamiccode.rst", "hoc/programming/errors.rst", "hoc/programming/gui/dialog.rst", "hoc/programming/gui/layout.rst", "hoc/programming/gui/list.rst", "hoc/programming/gui/misc.rst", "hoc/programming/gui/nfunc.rst", "hoc/programming/gui/pwman.rst", "hoc/programming/gui/secbrows.rst", "hoc/programming/gui/symchooser.rst", "hoc/programming/gui/texteditor.rst", "hoc/programming/gui/textmenus.rst", "hoc/programming/gui/vfe.rst", "hoc/programming/gui/widgets.rst", "hoc/programming/guidesign.rst", "hoc/programming/hoc.rst", "hoc/programming/hocsyntax.rst", "hoc/programming/internals.rst", "hoc/programming/io.rst", "hoc/programming/io/file.rst", "hoc/programming/io/plotters.rst", "hoc/programming/io/printf.rst", "hoc/programming/io/read.rst", "hoc/programming/io/ropen.rst", "hoc/programming/math/constants.rst", "hoc/programming/math/eqnsolve.rst", "hoc/programming/math/functions.rst", "hoc/programming/math/guimath.rst", "hoc/programming/math/matrix.rst", "hoc/programming/math/mcran4.rst", "hoc/programming/math/misc.rst", "hoc/programming/math/random.rst", "hoc/programming/math/vector.rst", "hoc/programming/mathematics.rst", "hoc/programming/mechstan.rst", "hoc/programming/neuronpython.rst", "hoc/programming/ockeywor.rst", "hoc/programming/oop.rst", "hoc/programming/pointers/misc.rst", "hoc/programming/pointers/pointer.rst", "hoc/programming/pointers/ptrvector.rst", "hoc/programming/predec.rst", "hoc/programming/projectmanagement.rst", "hoc/programming/python.rst", "hoc/programming/references.rst", "hoc/programming/sscanf.rst", "hoc/programming/strfun.rst", "hoc/programming/strings.rst", "hoc/programming/system.rst", "hoc/programming/timer.rst", "hoc/simctrl/batch.rst", "hoc/simctrl/bbsavestate.rst", "hoc/simctrl/cvode.rst", "hoc/simctrl/family.rst", "hoc/simctrl/interpretermanagement.rst", "hoc/simctrl/programmatic.rst", "hoc/simctrl/runctrl.rst", "hoc/simctrl/savstate.rst", "hoc/simctrl/sessionsave.rst", "hoc/simctrl/stdrun.rst", "hoc/visualization/glyph.rst", "hoc/visualization/graph.rst", "hoc/visualization/grapher.rst", "hoc/visualization/gui.rst", "hoc/visualization/notify.rst", "hoc/visualization/oldgrph.rst", "hoc/visualization/plotshape.rst", "hoc/visualization/plotshapeclass.rst", "hoc/visualization/rvarplt.rst", "hoc/visualization/shape.rst", "hoc/visualization/shapebox.rst", "how_to_develop_and_debug_code.rst", "index.rst", "install/code_coverage.md", "install/debug.md", "install/developer.rst", "install/install.rst", "install/install_instructions.md", "install/mac_pkg.md", "install/python_wheels.md", "install/windows.md", "nmodl/verbatim.rst", "otherscripting.rst", "publications.rst", "publications-using-neuron.rst", "python/analysis/guitools.rst", "python/analysis/guitools/funfit.rst", "python/analysis/guitools/impedancetools.rst", "python/analysis/guitools/impedanx.rst", "python/analysis/guitools/impratio.rst", "python/analysis/guitools/mulfit.rst", "python/analysis/guitools/runfit.rst", "python/analysis/programmatic.rst", "python/analysis/programmatic/impedance.rst", "python/analysis/programmatic/misc.rst", "python/analysis/programmatic/optimization.rst", "python/compilationoptions.rst", "python/envvariables.rst", "python/index.rst", "python/modelspec/guitools.rst", "python/modelspec/guitools/cellbuilder.rst", "python/modelspec/guitools/inserter.rst", "python/modelspec/guitools/pointman.rst", "python/modelspec/guitools/showmech.rst", "python/modelspec/programmatic.rst", "python/modelspec/programmatic/electrod.rst", "python/modelspec/programmatic/hocmech.rst", "python/modelspec/programmatic/ions.rst", "python/modelspec/programmatic/kschan.rst", "python/modelspec/programmatic/linmod.rst", "python/modelspec/programmatic/mechanisms.rst", "python/modelspec/programmatic/mechanisms/mech.rst", "python/modelspec/programmatic/mechanisms/nmodl.rst", "python/modelspec/programmatic/mechanisms/nmodl2.rst", "python/modelspec/programmatic/mechtype.rst", "python/modelspec/programmatic/network.rst", "python/modelspec/programmatic/network/lyttonmpi.rst", "python/modelspec/programmatic/network/netcon.rst", "python/modelspec/programmatic/network/parcon.rst", "python/modelspec/programmatic/network/parnet.rst", "python/modelspec/programmatic/obsoletestimuli.rst", "python/modelspec/programmatic/rxd.rst", "python/modelspec/programmatic/rxdmath.rst", "python/modelspec/programmatic/ste.rst", "python/modelspec/programmatic/topology.rst", "python/modelspec/programmatic/topology/geometry.rst", "python/modelspec/programmatic/topology/seclist.rst", "python/modelspec/programmatic/topology/secref.rst", "python/modelspec/programmatic/topology/secspec.rst", "python/programming/dynamiccode.rst", "python/programming/errors.rst", "python/programming/gui/dialog.rst", "python/programming/gui/layout.rst", "python/programming/gui/list.rst", "python/programming/gui/misc.rst", "python/programming/gui/nfunc.rst", "python/programming/gui/pwman.rst", "python/programming/gui/secbrows.rst", "python/programming/gui/symchooser.rst", "python/programming/gui/texteditor.rst", "python/programming/gui/textmenus.rst", "python/programming/gui/vfe.rst", "python/programming/gui/widgets.rst", "python/programming/guidesign.rst", "python/programming/hoc.rst", "python/programming/hocsyntax.rst", "python/programming/internals.rst", "python/programming/io.rst", "python/programming/io/file.rst", "python/programming/io/plotters.rst", "python/programming/io/printf.rst", "python/programming/io/read.rst", "python/programming/io/ropen.rst", "python/programming/math/constants.rst", "python/programming/math/eqnsolve.rst", "python/programming/math/functions.rst", "python/programming/math/guimath.rst", "python/programming/math/matrix.rst", "python/programming/math/mcran4.rst", "python/programming/math/misc.rst", "python/programming/math/random.rst", "python/programming/math/vector.rst", "python/programming/mathematics.rst", "python/programming/mechstan.rst", "python/programming/neuronpython.rst", "python/programming/ockeywor.rst", "python/programming/oop.rst", "python/programming/pointers/misc.rst", "python/programming/pointers/pointer.rst", "python/programming/pointers/ptrvector.rst", "python/programming/predec.rst", "python/programming/projectmanagement.rst", "python/programming/python.rst", "python/programming/references.rst", "python/programming/sscanf.rst", "python/programming/strfun.rst", "python/programming/strings.rst", "python/programming/system.rst", "python/programming/timer.rst", "python/simctrl/batch.rst", "python/simctrl/bbsavestate.rst", "python/simctrl/cvode.rst", "python/simctrl/family.rst", "python/simctrl/interpretermanagement.rst", "python/simctrl/programmatic.rst", "python/simctrl/runctrl.rst", "python/simctrl/savstate.rst", "python/simctrl/sessionsave.rst", "python/simctrl/stdrun.rst", "python/visualization/glyph.rst", "python/visualization/graph.rst", "python/visualization/grapher.rst", "python/visualization/gui.rst", "python/visualization/notify.rst", "python/visualization/oldgrph.rst", "python/visualization/plotshape.rst", "python/visualization/plotshapeclass.rst", "python/visualization/rvarplt.rst", "python/visualization/shape.rst", "python/visualization/shapebox.rst", "removed_features.rst", "rst_substitutions.txt", "rxd-tutorials/Changing initial conditions and parameters.ipynb", "rxd-tutorials/Reaction-Diffusion tutorial.ipynb", "rxd-tutorials/Restricting reactions to certain sections.ipynb", "rxd-tutorials/basic-initialization.ipynb", "rxd-tutorials/calcium waves.ipynb", "rxd-tutorials/circadian.ipynb", "rxd-tutorials/combining currents from mod files with rxd.ipynb", "rxd-tutorials/degradable_buffer.ipynb", "rxd-tutorials/extracellular.ipynb", "rxd-tutorials/index.rst", "rxd-tutorials/ip3-demo.ipynb", "rxd-tutorials/thresholds.ipynb", "scm/guide/SCMGuide.md", "scm/guidelines/SCMGuidelines.md", "scm/index.rst", "tutorials/ball-and-stick-1.ipynb", "tutorials/ball-and-stick-2.ipynb", "tutorials/ball-and-stick-3.ipynb", "tutorials/ball-and-stick-4.ipynb", "tutorials/index.rst", "tutorials/pythontutorial.ipynb", "tutorials/scripting-neuron-basics.ipynb", "videos/cns-tutorial-2021.rst", "videos/incfcns-tutorial-2022.rst", "videos/index.rst", "videos/netpyne-course-2021.rst", "videos/neuron-course-2021.rst"], "titles": ["NEURON Documentation", "NEURON 8.2", "CMake Build Options", "Introduction", "CoreNEURON Compatibility", "Examples", "CoreNEURON", "Getting CoreNEURON", "Running a simulation", "Artificial Cells in NEURON", "Batch runs with bulletin board parallelization", "Batch runs with bulletin board parallelization", "Building and labeling a two electrode voltage clamp with the Linear Circuit Builder", "Bulletin board code walkthroughs", "CellBuilder Overview and Hints", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Custom Initialization", "Electrotonic Analysis with NEURON", "NEURON Course Exercises", "Overview of the Tasks", "HOC Exercises", "Hopfield Brody synchronization (sync) model", "Interactive Modeling", "Introduction to the GUI", "Introduction to the Network Builder", "Introduction to the Linear Circuit Builder", "Managing Models on the Fly", "Parallel Computing with MPI", "Multithreaded paralellization", "Network ready cells from the CellBuilder", "NEURON scripting exercises", "Numerical Methods Exercises", "Quality Issues with Morphometric Data", "Reaction-Diffusion Exercises", "Saving Windows", "Inhomogeneous Channel Distribution", "State and parameter discontinuities", "Using the CellBuilder", "Using ModelDB with NEURON", "Working with Morphometric Data", "Using NMODL files", "Using the Neuroscience Gateway (NSG) portal", "Working with Shape Plots", "Dealing with Simulations that Generate a lot of Data", "HOC Interpreter", "Testing GPU functionality", "How-Do-I Guide", "NEURON Development topics", "bokeh 3 seems to break docs notebooks", "C/C++ API", "Example of Generating a Movie", "Biology Modeling FAQ", "Using the Cell Builder GUI", "Creating a stylized (\u201cstick-figure\u201d) model cell", "Managing a model cell with complex anatomy", "Specifying parameterized variation of biophysical properties", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Differences between idraw and CorelDraw", "Example of a Hybrid Network", "Example of a Simple Network", "Frequently asked questions (FAQ)", "FIinitializeHandler", "Fixing funny axes", "How to delete v(.5) from the graph", "How to plot variables that belong to biophysical cell models in a network", "Hoc", "How to get started with NEURON", "How to get started with NEURON", "How to move the labels", "How to translate the view", "Using the Import3D GUI", "Guides", "Introduction to Network Construction", "ModelView: Compact display of parameters for NEURON models", "Network Builder tutorials", "NMODL\u2019s built-in functions", "How to change the background color used in shape plots and other graphs", "Using NEURON\u2019s Optimization Tools", "Tutorial 1 : Fitting a function to data", "Implementational Details of the Synaptic Mechanism", "Tutorial 2 : Fitting a model to data", "&lt;no title&gt;", "Adapting MOD files for C++ with NEURON 9.0[.dev]", "The Print &amp; File Manager", "Randomness in NEURON models", "Run a simulation and plot the input and output spike trains", "Run a simulation and plot the input and output spike trains", "Using Session Files for Saving and Retrieving Windows", "Step 1. Set up a SubsetDomainIterator", "Step 3. Specify and verify the functions that govern the parameters", "Step 2. Specify the model parameter(s) to be varied", "Step 1. Define the types of cells", "Step 1. Define the types of cells", "2. Specifying what kinds of synapses can be attached to an M cell", "3. Placing synapses on the M cell", "Step 2. Create each cell in the network", "Step 2. Create each cell in the network", "Step 3. Connect the cells", "Step 3. Connect the cells", "Step 3. Connect the cells", "Step 3. Connect the cells", "Tutorial 2 : Making Hybrid Nets", "Tutorial 1: Making Networks of Artificial Neurons", "Units used in NEURON", "UNITS Tutorial", "Step 4. Use the model specification", "Using NEURON on the Mac", "Using \u201cPlot what?\u201d to Specify a Variable to be plotted", "Using Session Files for Saving and Retrieving Windows", "Using the d_lambda Rule", "What is NEURON", "Working with PostScript and idraw figures", "GUI Analysis Tools", "FunctionFitter", "Impedance Tools", "Impx", "ImpedanceRatio", "MulRunFitter", "RunFitter", "Programmatic Analysis Tools", "Impedance", "Miscellaneous", "Optimization", "Rarely Used Compilation Options", "NEURON HOC documentation", "Model Specification GUI Tools", "CellBuilder", "Inserter", "Managers", "ShowMechanism", "Programmatic Model Specification", "Electrode", "HOC-based Mechanisms", "Ions", "KSChan", "LinearMechanism", "Dynamics (Channels, etc\u2026)", "Point Processes and Artificial Cells", "NMODL", "NEURON Extension to NMODL", "MechanismType", "Networks", "&lt;no title&gt;", "NetCon", "ParallelContext", "ParallelNetManager", "Obsolete Stimuli", "Basic Reaction-Diffusion", "StateTransitionEvent", "Topology", "Conceptual Overview of Sections", "SectionList", "SectionRef", "Section and Segment Selection", "Dynamic Code Loading and Execution", "Error Handling", "Dialog Boxes", "Layout", "List", "Style Settings", "Miscellaneous Menus", "PWManager", "SectionBrowser", "SymChooser", "TextEditor", "Obsolete Text Menus", "ValueFieldEditor", "Widgets", "GUI Design", "HOC Language", "HOC Syntax", "Debugging and Internals Access", "Input and Output", "File Access (Recommended Way)", "Plotter Control (obsolete)", "Printf (Formatted Output)", "Read from Terminal and Files", "Open and Write to Files (Obsolete)", "Constants", "Solving Nonlinear Systems", "Common Math Functions (HOC)", "GUIMath", "Matrix", "mcell_ran4", "Miscellaneous", "Pseudo-Random Number Generation", "Vector", "Mathematics", "MechanismStandard (Parameter Control)", "neuron", "HOC Keywords", "Object Oriented Programming", "Obsolete Pointer Functions", "Pointer Class", "PtrVector", "Predeclared Variables", "Project Management", "Python Language", "Pointers", "String Parsing (sscanf)", "StringFunctions (String Manipulation Class)", "Strings", "System Calls", "Timer", "Running and Saving Batch Jobs", "BBSaveState", "CVode", "Family", "Interpreter Management", "Programmatic Simulation Control", "RunControl", "SaveState", "Session Printing and Saving", "Standard Run Tools", "Glyph", "Graph", "Grapher", "GUI Look And Feel", "Notification", "Obsolete Plotting", "PlotShape Window", "PlotShape", "RangeVarPlot", "Shape", "MenuExplore", "How to develop and debug your own code", "The NEURON Simulator", "Code Coverage", "Diagnosis and Debugging", "Developer Builds", "Installation", "Installing Binary Distribution", "Mac Binary Package (Apple M1 and Mac x86_64)", "Building Python Wheels", "Windows build", "Verbatim", "Other scripting languages", "Publications about NEURON", "Publications using NEURON", "GUI Analysis Tools", "FunctionFitter", "Impedance Tools", "Impx", "ImpedanceRatio", "MulRunFitter", "RunFitter", "Programmatic Analysis Tools", "Impedance", "Miscellaneous", "Optimization", "Rarely Used Compilation Options", "Environment Variables", "NEURON Python documentation", "Model Specification GUI Tools", "CellBuilder", "Inserter", "Managers", "ShowMechanism", "Programmatic Model Specification", "Electrode", "HOC-based Mechanisms", "Ions", "KSChan", "LinearMechanism", "Dynamics (Channels, etc\u2026)", "Point Processes and Artificial Cells", "NMODL", "NEURON Extension to NMODL", "MechanismType", "Networks", "&lt;no title&gt;", "NetCon", "ParallelContext", "ParallelNetManager", "Obsolete Stimuli", "Basic Reaction-Diffusion", "Mathematical functions for rate expressions", "StateTransitionEvent", "Topology", "Conceptual Overview of Sections", "SectionList", "SectionRef", "Section and Segment Selection", "Dynamic Code Loading and Execution", "Error Handling", "Dialog Boxes", "Layout", "List", "Style Settings", "Miscellaneous Menus", "PWManager", "SectionBrowser", "SymChooser", "TextEditor", "Obsolete Text Menus", "ValueFieldEditor", "GUI Widgets", "GUI Design", "HOC Language", "HOC Syntax", "Debugging and Internals Access", "Input and Output", "File Access (objected-oriented via NEURON)", "Plotter Control (obsolete)", "Printf (Formatted Output)", "Read from Terminal and Files", "Open and Write to Files (Obsolete)", "Constants", "Solving Nonlinear Systems", "Common Math Functions (HOC)", "GUIMath", "Matrix", "mcell_ran4", "Miscellaneous", "Pseudo-Random Number Generation", "Vector", "Mathematics", "MechanismStandard (Parameter Control)", "neuron", "HOC Keywords", "Object Oriented Programming in HOC", "Obsolete Pointer Functions", "Pointer Class", "PtrVector", "Predeclared Variables", "Project Management", "Python Language", "Pointers", "String Parsing (sscanf)", "StringFunctions (String Manipulation Class)", "Strings", "System Calls", "Timer", "Running and Saving Batch Jobs", "BBSaveState", "CVode", "Family", "Interpreter Management", "Programmatic Simulation Control", "RunControl", "SaveState", "Session Printing and Saving", "Standard Run Tools", "Glyph", "Graph", "Grapher", "GUI Look And Feel", "Notification", "Obsolete Plotting", "PlotShape Window", "PlotShape", "RangeVarPlot", "Shape", "MenuExplore", "Removed Features", "&lt;no title&gt;", "Varying initial concentrations and parameters", "Reaction-diffusion introduction", "Restricting reactions to a part of a region", "Initialization Strategies", "Example: Calcium waves", "Example: Circadian rhythm", "Example: combining MOD file ion channels with rxd", "Example: Degradable buffer", "Extracellular reaction-diffusion tutorial", "Python RXD tutorials", "IP3 demo", "Reaction-diffusion thresholds", "NEURON Source and Release Management Guide", "NEURON Versioning and Release Guidelines", "NEURON SCM and Release", "Ball and stick 1: Basic cell", "Ball and stick 2: Build a ring network of ball-and-stick cells", "Ball and stick 3: Extensible network of cells", "Ball and stick 4: Parallel vs serial mode", "Python tutorials", "Introduction to Python", "Scripting NEURON basics", "CNS 2021 Online Tutorial", "INCF/CNS 2022 Online Tutorial", "Training videos", "NetPyNE 2021 Online Course", "NEURON 2021 Online Course"], "terms": {"latest": [0, 1, 7, 11, 76, 77, 121, 242, 243, 244, 245, 379, 380], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 53, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 389, 391, 393], "avail": [0, 1, 3, 7, 29, 39, 40, 46, 51, 52, 54, 59, 71, 76, 77, 82, 83, 84, 88, 89, 93, 95, 96, 120, 122, 128, 131, 137, 146, 148, 149, 151, 155, 156, 158, 159, 165, 168, 176, 182, 185, 196, 197, 200, 202, 208, 211, 213, 217, 222, 224, 230, 234, 239, 242, 244, 249, 255, 258, 265, 274, 276, 277, 279, 283, 284, 286, 287, 288, 289, 292, 293, 294, 297, 305, 311, 314, 318, 325, 326, 329, 330, 331, 337, 340, 341, 342, 346, 351, 353, 355, 359, 363, 368, 370, 373, 379, 380, 387, 388], "http": [0, 1, 3, 4, 7, 10, 25, 38, 46, 49, 52, 58, 65, 84, 88, 91, 93, 95, 121, 122, 146, 153, 155, 159, 193, 196, 200, 238, 239, 242, 243, 244, 245, 249, 274, 281, 283, 288, 322, 325, 329, 337, 357, 367, 369, 370, 372, 373, 375, 378, 379, 380, 393], "nrn": [0, 1, 7, 10, 11, 52, 71, 77, 78, 87, 117, 148, 149, 153, 155, 156, 161, 170, 178, 193, 197, 201, 208, 213, 214, 216, 217, 220, 226, 228, 237, 238, 239, 242, 243, 244, 245, 262, 276, 277, 278, 281, 283, 284, 286, 290, 299, 307, 322, 326, 330, 337, 342, 343, 345, 346, 349, 355, 357, 375, 388], "io": [0, 1, 49, 244, 313, 315, 382, 387, 388], "en": [0, 52, 128, 242, 249, 255, 379, 384], "githubpag": 0, "neuronsimul": [0, 1, 3, 4, 7, 10, 77, 237, 238, 242, 244, 283, 357, 370, 375], "github": [0, 1, 3, 4, 7, 10, 49, 77, 91, 93, 237, 238, 239, 242, 243, 245, 283, 357, 368, 380, 381], "content": [0, 3, 24, 42, 45, 46, 49, 61, 71, 76, 88, 89, 98, 119, 122, 135, 149, 155, 168, 169, 184, 188, 197, 201, 207, 242, 277, 279, 283, 297, 313, 317, 320, 326, 330, 336, 371, 379, 387, 388, 392], "user": [0, 1, 3, 4, 9, 10, 11, 19, 25, 27, 31, 42, 45, 47, 51, 52, 54, 61, 66, 71, 73, 76, 78, 82, 94, 95, 98, 102, 114, 115, 119, 122, 124, 125, 128, 129, 134, 139, 142, 148, 149, 150, 155, 159, 160, 164, 167, 168, 175, 176, 178, 181, 182, 184, 187, 188, 193, 197, 200, 201, 206, 207, 213, 216, 217, 220, 221, 222, 224, 226, 228, 230, 234, 242, 243, 244, 249, 251, 252, 255, 256, 261, 267, 270, 276, 277, 278, 283, 288, 289, 294, 296, 297, 304, 305, 307, 310, 311, 313, 316, 317, 322, 326, 329, 330, 335, 336, 337, 342, 345, 346, 349, 351, 353, 355, 357, 359, 363, 371, 372, 379, 380, 385], "hoc": [0, 1, 4, 5, 8, 10, 14, 15, 16, 17, 18, 19, 20, 26, 31, 33, 35, 36, 38, 42, 45, 46, 47, 53, 54, 55, 58, 59, 60, 63, 64, 66, 67, 72, 74, 77, 78, 81, 82, 83, 85, 89, 91, 95, 98, 114, 116, 117, 118, 119, 120, 121, 124, 129, 132, 133, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 165, 168, 172, 178, 182, 184, 187, 193, 197, 198, 199, 200, 202, 203, 207, 211, 213, 214, 216, 217, 218, 220, 222, 224, 226, 227, 228, 230, 234, 237, 239, 242, 247, 249, 251, 256, 260, 262, 263, 269, 270, 275, 276, 277, 278, 279, 281, 282, 283, 284, 286, 288, 289, 290, 292, 294, 296, 297, 298, 299, 301, 303, 307, 311, 313, 315, 316, 318, 321, 322, 324, 326, 327, 328, 329, 332, 333, 336, 340, 342, 343, 345, 346, 347, 349, 350, 351, 353, 355, 356, 357, 359, 363, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 382, 383, 384, 388, 391], "python": [0, 1, 2, 4, 5, 7, 8, 10, 13, 14, 26, 30, 31, 36, 38, 39, 44, 45, 47, 48, 53, 54, 59, 61, 71, 77, 81, 86, 89, 95, 117, 121, 133, 135, 146, 148, 149, 150, 155, 158, 159, 160, 178, 181, 182, 193, 197, 200, 205, 213, 226, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 256, 260, 262, 267, 271, 274, 276, 277, 278, 279, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 302, 303, 307, 310, 311, 313, 315, 316, 318, 320, 321, 322, 324, 326, 328, 329, 330, 331, 332, 333, 336, 339, 341, 342, 343, 346, 353, 355, 359, 362, 363, 368, 371, 372, 373, 375, 379, 380, 382, 385, 391], "tutori": [0, 1, 47, 49, 59, 61, 62, 63, 71, 77, 78, 81, 82, 90, 118, 120, 121, 158, 239, 249, 263, 283, 286, 287, 337, 367, 368, 370, 371, 382, 383, 384, 385, 387, 388, 391], "rxd": [0, 1, 4, 41, 59, 141, 155, 158, 200, 242, 269, 271, 283, 286, 287, 329, 351, 367, 368, 370, 371, 372, 374, 375, 377, 378, 388, 391, 393], "develop": [0, 1, 3, 41, 45, 52, 61, 71, 76, 82, 83, 84, 93, 149, 155, 158, 161, 207, 216, 230, 242, 243, 248, 249, 277, 283, 286, 290, 336, 345, 359, 365, 372, 375, 379, 380, 386], "scm": [0, 245, 379, 380], "technic": [0, 4, 52, 249, 379, 383, 393], "topic": [0, 4, 61, 71, 74, 88, 89, 91, 249, 368, 379, 380, 392, 393], "doxygen": [0, 3, 57], "It": [0, 3, 5, 7, 12, 13, 14, 25, 27, 29, 32, 36, 37, 42, 44, 45, 47, 52, 53, 59, 60, 61, 62, 71, 76, 77, 78, 81, 83, 84, 89, 91, 93, 94, 98, 100, 102, 114, 115, 118, 119, 121, 128, 131, 139, 145, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 165, 170, 172, 181, 185, 193, 194, 196, 197, 199, 201, 206, 207, 208, 211, 216, 217, 220, 221, 222, 224, 226, 227, 228, 230, 231, 234, 239, 242, 255, 258, 267, 273, 274, 276, 277, 278, 282, 283, 284, 286, 288, 289, 290, 292, 293, 294, 299, 301, 307, 310, 314, 322, 323, 325, 326, 328, 330, 335, 336, 337, 340, 345, 346, 349, 350, 351, 353, 355, 356, 357, 359, 360, 363, 371, 379, 380, 382, 385, 387, 388], "recommend": [0, 7, 44, 54, 76, 88, 114, 115, 164, 180, 183, 197, 200, 207, 208, 224, 228, 237, 238, 239, 242, 282, 286, 289, 326, 329, 336, 353, 357, 362, 387], "us": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 50, 51, 52, 53, 54, 59, 63, 65, 66, 69, 73, 74, 76, 79, 82, 83, 84, 93, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 115, 121, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 181, 182, 184, 186, 187, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 246, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 307, 310, 311, 313, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 389, 391, 392, 393], "virtual": [0, 33, 42, 43, 45, 61, 91, 94, 155, 242, 249, 283, 383, 388, 391], "environ": [0, 1, 3, 7, 52, 71, 76, 77, 78, 94, 121, 149, 153, 155, 165, 200, 207, 208, 213, 228, 239, 240, 242, 243, 244, 247, 248, 249, 263, 277, 281, 283, 294, 329, 336, 342, 357, 365, 371, 379, 387, 388, 391], "exampl": [0, 3, 4, 6, 7, 8, 10, 11, 13, 14, 25, 31, 33, 36, 39, 42, 47, 51, 53, 54, 55, 59, 61, 63, 64, 65, 73, 76, 77, 78, 81, 82, 83, 85, 87, 88, 89, 91, 93, 94, 95, 98, 107, 109, 112, 113, 114, 115, 118, 119, 121, 128, 131, 133, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 169, 170, 173, 174, 178, 181, 184, 185, 186, 187, 188, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 205, 208, 210, 211, 213, 214, 215, 216, 217, 220, 225, 226, 227, 228, 230, 232, 233, 234, 239, 242, 243, 244, 249, 255, 258, 260, 262, 271, 272, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 298, 299, 301, 302, 303, 307, 310, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 349, 351, 353, 354, 355, 356, 357, 359, 361, 362, 363, 367, 369, 370, 375, 378, 379, 380, 382, 384, 386, 387, 388], "pip3": [0, 237, 242, 243], "instal": [0, 1, 6, 10, 11, 35, 52, 53, 72, 76, 78, 82, 88, 138, 139, 143, 153, 155, 156, 213, 220, 226, 228, 238, 239, 240, 243, 244, 247, 262, 266, 267, 271, 281, 283, 284, 337, 342, 349, 355, 357, 379, 380, 385, 387, 388, 389], "virtualenv": [0, 7], "python3": [0, 1, 3, 238, 242, 243, 244], "m": [0, 3, 4, 9, 13, 16, 17, 18, 24, 29, 31, 32, 33, 36, 37, 38, 40, 41, 44, 46, 47, 53, 58, 59, 61, 62, 64, 67, 69, 75, 82, 83, 84, 88, 90, 91, 95, 96, 97, 100, 102, 106, 109, 111, 112, 114, 115, 120, 121, 122, 131, 142, 146, 148, 149, 154, 156, 158, 159, 178, 193, 196, 197, 199, 200, 214, 217, 220, 221, 225, 226, 227, 230, 234, 242, 243, 247, 248, 249, 258, 270, 274, 276, 277, 282, 284, 286, 287, 307, 322, 325, 326, 328, 329, 343, 346, 349, 350, 351, 354, 355, 356, 359, 363, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 382, 383, 384, 385, 388], "venv": 0, "sourc": [0, 1, 3, 6, 9, 11, 25, 32, 33, 35, 40, 41, 46, 49, 53, 55, 58, 66, 69, 71, 76, 83, 88, 103, 110, 111, 121, 148, 149, 151, 154, 155, 156, 159, 193, 197, 199, 216, 217, 224, 237, 238, 239, 241, 243, 244, 249, 276, 277, 279, 282, 283, 284, 288, 322, 326, 328, 345, 346, 353, 368, 373, 375, 380, 381, 383, 384, 385, 388], "bin": [0, 7, 53, 117, 153, 155, 196, 197, 207, 213, 216, 217, 238, 239, 242, 243, 245, 281, 283, 325, 326, 336, 342, 345, 346], "activ": [0, 12, 14, 20, 24, 25, 29, 43, 46, 51, 52, 61, 65, 71, 75, 82, 84, 90, 91, 104, 121, 128, 148, 149, 154, 155, 159, 191, 217, 221, 224, 228, 243, 249, 255, 276, 277, 280, 282, 283, 286, 288, 293, 320, 346, 350, 353, 357, 368, 371, 372, 373, 374, 379, 380, 385, 388], "In": [0, 1, 3, 4, 7, 8, 9, 10, 11, 13, 24, 25, 27, 28, 31, 32, 33, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 54, 59, 61, 62, 65, 68, 71, 75, 76, 81, 84, 86, 88, 89, 91, 93, 94, 95, 98, 103, 114, 115, 118, 119, 121, 125, 126, 128, 129, 131, 139, 142, 143, 144, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 178, 181, 182, 185, 191, 193, 196, 197, 199, 200, 201, 207, 208, 211, 217, 220, 222, 226, 227, 228, 231, 234, 235, 238, 239, 242, 243, 244, 248, 249, 252, 253, 255, 256, 258, 267, 270, 271, 272, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 293, 298, 310, 311, 314, 315, 316, 320, 322, 325, 326, 328, 329, 330, 333, 334, 336, 337, 340, 346, 349, 351, 353, 355, 356, 357, 360, 361, 362, 363, 364, 368, 369, 370, 371, 375, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389], "order": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 16, 29, 32, 33, 37, 42, 46, 52, 60, 61, 62, 65, 72, 75, 76, 83, 89, 91, 93, 95, 98, 116, 119, 121, 126, 128, 129, 134, 139, 148, 149, 150, 151, 154, 155, 156, 159, 161, 162, 164, 165, 168, 181, 184, 193, 197, 201, 205, 215, 217, 220, 222, 224, 226, 228, 231, 234, 238, 239, 242, 244, 245, 249, 253, 255, 256, 261, 267, 276, 277, 278, 279, 282, 283, 284, 286, 288, 290, 291, 294, 297, 305, 310, 313, 322, 326, 328, 330, 334, 344, 346, 349, 351, 353, 355, 357, 360, 363, 368, 371, 372, 379, 385, 387], "you": [0, 1, 3, 4, 5, 7, 8, 10, 11, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51, 53, 54, 59, 61, 62, 65, 68, 71, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 118, 119, 120, 122, 128, 129, 139, 144, 146, 148, 149, 150, 153, 154, 155, 156, 158, 160, 161, 164, 168, 169, 170, 174, 178, 181, 182, 184, 193, 194, 197, 200, 201, 203, 207, 208, 211, 217, 219, 220, 222, 224, 226, 227, 228, 231, 233, 234, 235, 237, 238, 239, 242, 243, 244, 245, 247, 249, 255, 256, 267, 272, 274, 276, 277, 278, 281, 282, 283, 284, 286, 289, 290, 293, 296, 297, 298, 299, 303, 307, 310, 311, 313, 322, 323, 326, 329, 330, 332, 336, 337, 340, 346, 348, 349, 351, 353, 355, 356, 357, 360, 361, 362, 363, 364, 368, 369, 371, 372, 373, 375, 379, 382, 383, 385, 387, 388], "need": [0, 1, 3, 4, 7, 8, 10, 11, 14, 16, 24, 25, 28, 29, 30, 31, 35, 36, 40, 47, 51, 52, 53, 61, 62, 66, 73, 75, 76, 77, 82, 83, 85, 93, 94, 95, 97, 99, 100, 104, 112, 118, 121, 122, 128, 131, 134, 144, 148, 149, 150, 155, 156, 158, 159, 161, 163, 164, 168, 182, 184, 193, 197, 200, 206, 207, 208, 211, 216, 217, 220, 222, 226, 227, 228, 233, 238, 239, 242, 243, 244, 245, 247, 249, 255, 258, 261, 272, 276, 277, 278, 282, 283, 284, 286, 288, 290, 293, 297, 311, 313, 322, 323, 326, 329, 335, 336, 337, 340, 345, 346, 349, 350, 351, 353, 355, 356, 357, 362, 368, 369, 371, 372, 373, 374, 375, 379, 382, 383, 384, 385, 387, 388], "pip": [0, 1, 3, 6, 58, 77, 88, 237, 242, 243, 247, 387], "docs_requir": 0, "txt": [0, 3, 7, 46, 71, 122, 153, 242, 243, 281, 379], "r": [0, 3, 28, 38, 40, 47, 50, 53, 58, 69, 71, 75, 76, 83, 88, 91, 95, 105, 106, 114, 115, 121, 148, 149, 155, 158, 170, 181, 184, 186, 188, 189, 193, 196, 197, 217, 225, 232, 239, 242, 248, 249, 262, 276, 277, 283, 286, 299, 310, 313, 315, 318, 322, 325, 326, 346, 349, 351, 354, 361, 362, 368, 372, 375, 379, 382, 383, 384, 385, 388], "doc": [0, 1, 3, 155, 176, 200, 242, 243, 283, 305, 329, 337, 375, 379, 380, 387], "upgrad": [0, 58, 93, 242, 243, 286], "also": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 25, 27, 28, 29, 33, 35, 36, 37, 40, 45, 46, 47, 49, 50, 52, 53, 54, 59, 61, 62, 63, 65, 71, 75, 77, 78, 81, 84, 88, 89, 91, 93, 94, 95, 99, 100, 102, 103, 105, 114, 115, 118, 121, 122, 124, 125, 126, 128, 129, 131, 133, 139, 142, 146, 148, 149, 150, 154, 155, 156, 158, 159, 161, 163, 165, 168, 170, 178, 181, 182, 184, 193, 194, 196, 197, 200, 201, 204, 208, 210, 211, 217, 220, 222, 224, 226, 228, 229, 230, 231, 236, 237, 239, 242, 243, 244, 245, 249, 251, 252, 253, 255, 256, 258, 260, 262, 267, 270, 274, 276, 277, 278, 282, 283, 284, 286, 288, 289, 290, 294, 297, 299, 307, 310, 311, 313, 322, 323, 325, 326, 328, 329, 330, 337, 339, 340, 346, 347, 349, 351, 353, 355, 357, 358, 359, 360, 361, 362, 365, 368, 370, 372, 373, 374, 375, 379, 380, 382, 383, 384, 385, 387, 388, 390, 392, 393], "make": [0, 1, 3, 4, 5, 7, 8, 10, 11, 14, 24, 25, 27, 28, 31, 32, 36, 37, 38, 40, 42, 43, 46, 47, 48, 49, 52, 58, 61, 62, 65, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 114, 115, 119, 120, 121, 122, 129, 131, 134, 139, 142, 148, 149, 150, 151, 153, 155, 156, 161, 163, 164, 168, 169, 170, 171, 172, 173, 178, 181, 185, 193, 194, 197, 201, 202, 207, 208, 210, 217, 220, 221, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 242, 243, 244, 245, 246, 249, 256, 258, 261, 267, 269, 270, 276, 277, 278, 279, 281, 283, 284, 290, 297, 298, 299, 300, 301, 302, 307, 310, 314, 322, 323, 326, 330, 331, 336, 337, 339, 346, 349, 350, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 367, 369, 370, 371, 372, 373, 378, 379, 380, 382, 383, 385, 386, 388], "sure": [0, 3, 4, 5, 7, 8, 10, 11, 14, 28, 29, 31, 38, 42, 46, 47, 50, 51, 59, 61, 62, 71, 81, 85, 87, 89, 91, 93, 94, 95, 97, 98, 100, 101, 105, 119, 120, 121, 122, 129, 142, 148, 149, 150, 153, 155, 185, 197, 201, 208, 210, 217, 220, 224, 226, 228, 235, 236, 242, 243, 256, 270, 277, 278, 281, 283, 298, 314, 326, 330, 337, 339, 346, 349, 353, 355, 357, 364, 379, 382, 385], "have": [0, 1, 3, 6, 8, 9, 10, 11, 13, 14, 16, 24, 25, 27, 29, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 51, 52, 53, 54, 59, 60, 61, 62, 63, 65, 66, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 98, 99, 100, 103, 104, 105, 106, 107, 109, 114, 115, 117, 119, 121, 122, 128, 129, 131, 134, 140, 144, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 176, 178, 181, 182, 193, 195, 197, 201, 205, 208, 215, 216, 217, 221, 224, 226, 228, 230, 231, 233, 238, 239, 242, 243, 244, 249, 255, 256, 258, 261, 268, 271, 272, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 305, 307, 310, 311, 322, 324, 325, 326, 330, 334, 336, 337, 339, 345, 346, 350, 353, 355, 357, 359, 360, 362, 365, 367, 368, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391], "pandoc": 0, "depend": [0, 3, 4, 7, 9, 10, 11, 13, 24, 25, 27, 29, 40, 42, 47, 52, 53, 54, 63, 71, 76, 81, 89, 95, 98, 118, 119, 121, 128, 131, 146, 148, 149, 150, 151, 155, 159, 161, 168, 190, 192, 193, 197, 200, 201, 204, 207, 212, 214, 217, 220, 222, 226, 227, 228, 232, 239, 240, 241, 244, 246, 249, 255, 258, 274, 276, 277, 278, 279, 283, 286, 288, 290, 297, 305, 319, 321, 322, 326, 329, 330, 333, 336, 341, 343, 346, 349, 351, 355, 356, 357, 361, 362, 368, 370, 373, 379, 380, 383, 387, 388], "list": [0, 1, 3, 13, 14, 21, 22, 27, 29, 32, 36, 37, 38, 52, 59, 61, 67, 75, 76, 77, 78, 82, 84, 89, 91, 93, 98, 101, 102, 104, 106, 107, 109, 114, 119, 121, 124, 128, 129, 133, 135, 139, 143, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 162, 164, 165, 168, 170, 172, 173, 174, 176, 178, 179, 181, 182, 187, 193, 196, 197, 200, 201, 202, 205, 207, 208, 211, 213, 215, 216, 217, 224, 226, 228, 230, 232, 233, 234, 239, 242, 243, 247, 249, 251, 255, 256, 260, 262, 263, 267, 271, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 291, 294, 297, 299, 301, 302, 303, 305, 307, 308, 310, 311, 316, 322, 325, 326, 328, 329, 330, 331, 334, 336, 337, 340, 342, 344, 345, 346, 353, 355, 357, 359, 361, 362, 363, 368, 371, 382, 383, 384, 385, 388, 393], "conda": [0, 242], "_": [0, 1, 15, 16, 17, 18, 19, 20, 21, 22, 52, 56, 58, 64, 66, 67, 76, 95, 165, 208, 217, 238, 239, 240, 242, 243, 244, 276, 294, 337, 346, 357, 366, 379], "yml": [0, 244], "note": [0, 1, 3, 4, 5, 8, 25, 31, 32, 36, 37, 38, 39, 41, 44, 50, 52, 54, 59, 61, 62, 75, 76, 79, 89, 93, 94, 95, 102, 103, 105, 106, 114, 115, 122, 125, 131, 134, 138, 139, 141, 144, 146, 148, 149, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 177, 178, 182, 184, 185, 186, 193, 194, 196, 197, 199, 200, 202, 204, 207, 208, 210, 211, 213, 216, 217, 220, 222, 224, 226, 228, 234, 238, 239, 242, 244, 249, 252, 258, 261, 262, 266, 267, 269, 272, 274, 276, 277, 278, 279, 280, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 301, 304, 306, 307, 313, 314, 315, 322, 323, 325, 326, 328, 329, 331, 333, 336, 337, 339, 340, 342, 345, 346, 349, 351, 353, 355, 357, 359, 362, 363, 365, 368, 369, 379, 380, 382, 383, 385, 387, 388, 393], "thi": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 139, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 265, 267, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393], "tailor": [0, 3, 121, 242], "all": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 14, 16, 22, 24, 27, 28, 29, 32, 35, 36, 38, 39, 40, 41, 45, 46, 47, 48, 51, 52, 54, 59, 60, 61, 62, 63, 65, 68, 71, 72, 73, 75, 76, 81, 82, 84, 86, 88, 89, 90, 91, 94, 95, 99, 101, 103, 105, 109, 111, 114, 115, 118, 120, 121, 122, 124, 128, 129, 131, 134, 139, 140, 143, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 178, 182, 185, 193, 195, 196, 197, 199, 200, 201, 202, 204, 205, 207, 208, 211, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 242, 243, 244, 245, 249, 251, 255, 256, 258, 261, 262, 267, 268, 271, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 291, 293, 294, 297, 298, 299, 300, 301, 302, 303, 311, 314, 322, 324, 325, 326, 328, 329, 330, 331, 334, 336, 337, 340, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 370, 371, 372, 374, 375, 379, 380, 382, 383, 384, 385, 387, 388, 389], "desir": [0, 3, 7, 12, 14, 42, 48, 61, 62, 65, 71, 73, 94, 98, 100, 119, 129, 146, 148, 149, 154, 158, 164, 168, 193, 197, 200, 217, 218, 221, 225, 226, 228, 235, 238, 242, 244, 256, 274, 277, 282, 286, 293, 297, 322, 326, 329, 346, 347, 350, 354, 355, 357, 364, 379, 380, 382, 388], "requir": [0, 3, 4, 7, 8, 9, 10, 11, 13, 14, 25, 29, 32, 35, 39, 42, 45, 47, 53, 61, 65, 76, 81, 82, 83, 84, 89, 93, 114, 115, 128, 131, 134, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 168, 181, 182, 187, 193, 197, 207, 208, 217, 221, 226, 228, 239, 242, 243, 244, 245, 247, 249, 255, 256, 258, 261, 276, 277, 278, 281, 282, 283, 284, 286, 287, 288, 289, 290, 297, 310, 316, 326, 336, 337, 346, 347, 349, 350, 355, 357, 368, 371, 373, 380, 381, 383, 385, 387, 389], "With": [0, 6, 7, 8, 12, 29, 32, 36, 45, 52, 61, 63, 76, 83, 86, 90, 91, 93, 98, 99, 114, 115, 119, 121, 131, 148, 149, 154, 155, 159, 161, 164, 182, 184, 186, 187, 188, 197, 199, 201, 207, 208, 211, 217, 220, 222, 226, 230, 232, 234, 239, 244, 249, 262, 276, 277, 282, 283, 288, 290, 311, 313, 315, 316, 317, 326, 328, 330, 336, 337, 340, 346, 349, 351, 355, 359, 361, 363, 379, 380, 387], "configur": [0, 3, 7, 31, 35, 45, 53, 60, 71, 88, 100, 103, 116, 153, 155, 156, 208, 213, 239, 242, 243, 245, 249, 281, 283, 284, 305, 342, 379, 384, 385, 388], "project": [0, 1, 7, 27, 29, 42, 53, 69, 75, 84, 98, 99, 108, 110, 119, 121, 135, 155, 159, 200, 224, 239, 242, 244, 248, 249, 263, 283, 288, 329, 353, 365, 379, 383, 384, 385, 388, 392, 393], "cmake": [0, 1, 3, 7, 53, 149, 238, 239, 241, 243, 245, 262, 277, 379], "describ": [0, 1, 4, 7, 8, 37, 39, 41, 43, 47, 59, 65, 71, 76, 77, 78, 81, 83, 84, 88, 90, 91, 93, 95, 102, 104, 121, 125, 137, 143, 148, 149, 150, 155, 156, 158, 159, 160, 161, 164, 196, 208, 228, 239, 242, 243, 244, 247, 249, 252, 265, 271, 276, 277, 278, 283, 284, 286, 288, 289, 290, 325, 333, 337, 357, 367, 368, 375, 379, 380, 382, 387, 388, 392], "option": [0, 1, 4, 7, 10, 11, 13, 16, 17, 28, 29, 35, 45, 46, 47, 52, 53, 59, 65, 72, 76, 77, 81, 89, 94, 99, 135, 141, 146, 148, 149, 150, 154, 155, 156, 159, 160, 173, 178, 181, 184, 186, 188, 193, 197, 199, 200, 202, 204, 208, 217, 220, 224, 226, 228, 230, 232, 234, 238, 239, 242, 243, 244, 262, 263, 269, 274, 277, 278, 282, 283, 284, 288, 289, 302, 307, 310, 313, 315, 317, 322, 326, 328, 329, 331, 333, 334, 337, 346, 349, 353, 355, 357, 359, 361, 362, 363, 368, 371, 372, 375, 376, 379, 380, 382, 387, 388], "e": [0, 3, 4, 6, 8, 10, 11, 13, 14, 22, 25, 28, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 52, 54, 59, 60, 61, 62, 63, 65, 66, 73, 75, 76, 77, 78, 81, 82, 83, 84, 86, 89, 90, 91, 92, 94, 98, 99, 102, 104, 105, 108, 109, 114, 115, 119, 121, 122, 128, 131, 133, 142, 146, 148, 149, 150, 151, 154, 155, 158, 160, 161, 162, 164, 168, 172, 175, 181, 185, 186, 189, 191, 193, 196, 197, 200, 207, 208, 213, 216, 217, 220, 222, 224, 226, 228, 230, 234, 238, 239, 242, 243, 244, 247, 248, 249, 255, 258, 260, 262, 270, 274, 276, 277, 278, 279, 282, 283, 286, 287, 289, 290, 291, 293, 297, 298, 299, 301, 304, 310, 313, 314, 315, 318, 320, 322, 325, 326, 328, 329, 336, 337, 340, 341, 342, 345, 346, 349, 350, 351, 353, 355, 357, 359, 362, 363, 368, 369, 370, 371, 373, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 393], "g": [0, 3, 4, 6, 7, 8, 14, 16, 17, 18, 22, 25, 28, 29, 31, 32, 37, 38, 40, 42, 45, 46, 47, 54, 59, 61, 63, 64, 65, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 88, 89, 90, 91, 98, 102, 108, 114, 115, 119, 121, 122, 128, 131, 133, 146, 148, 149, 150, 151, 155, 156, 158, 160, 164, 168, 178, 186, 188, 193, 196, 197, 200, 202, 207, 208, 213, 216, 217, 220, 222, 224, 225, 226, 228, 230, 233, 234, 238, 239, 242, 243, 244, 245, 247, 248, 249, 255, 258, 260, 262, 271, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 291, 293, 297, 298, 307, 313, 315, 317, 320, 322, 324, 325, 326, 328, 329, 331, 334, 336, 337, 339, 340, 342, 345, 346, 349, 350, 351, 353, 354, 355, 357, 359, 362, 363, 368, 369, 370, 371, 373, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 393], "your": [0, 1, 3, 4, 5, 7, 8, 10, 11, 24, 27, 29, 30, 31, 35, 36, 38, 39, 42, 45, 47, 51, 53, 59, 60, 65, 71, 78, 85, 87, 91, 93, 94, 95, 98, 117, 118, 119, 120, 122, 150, 153, 155, 156, 158, 161, 168, 174, 181, 200, 201, 208, 217, 222, 228, 237, 238, 239, 242, 243, 244, 249, 278, 281, 283, 284, 286, 290, 297, 303, 310, 313, 329, 330, 346, 351, 357, 368, 369, 372, 375, 382, 385, 387, 388, 393], "folder": [0, 3, 45, 48, 52, 54, 71, 89, 117, 213, 216, 238, 242, 243, 244, 245, 342, 345, 379], "dnrn_enable_doc": 0, "ON": [0, 7, 14, 24, 48, 53, 61, 62, 75, 91, 96, 97, 106, 238, 239, 242, 243, 245, 249], "jupyt": [0, 1, 3, 56, 237, 361, 382, 383, 384, 387, 388, 392, 393], "work": [0, 1, 3, 4, 10, 11, 13, 16, 24, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 48, 49, 51, 53, 55, 61, 63, 65, 68, 71, 76, 77, 78, 81, 82, 83, 85, 89, 91, 93, 98, 102, 104, 106, 107, 114, 115, 119, 120, 128, 129, 131, 134, 139, 143, 145, 146, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 168, 172, 175, 182, 185, 193, 197, 201, 207, 208, 213, 216, 217, 218, 222, 223, 224, 225, 226, 228, 234, 239, 242, 243, 244, 246, 247, 249, 255, 256, 261, 267, 271, 273, 274, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 288, 289, 290, 294, 295, 297, 299, 301, 304, 305, 307, 311, 314, 315, 320, 322, 326, 330, 333, 336, 337, 340, 342, 343, 345, 346, 347, 351, 352, 353, 354, 355, 357, 361, 363, 368, 370, 375, 379, 380, 382, 383, 384, 385, 386, 387, 388, 393], "so": [0, 3, 4, 7, 8, 10, 11, 12, 13, 14, 16, 24, 25, 28, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 50, 52, 53, 54, 61, 62, 63, 65, 66, 71, 73, 75, 76, 79, 81, 83, 84, 85, 88, 89, 91, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 118, 119, 120, 121, 125, 128, 129, 131, 133, 142, 144, 145, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 169, 178, 181, 182, 184, 191, 193, 194, 196, 197, 199, 204, 205, 207, 208, 211, 217, 218, 220, 221, 224, 225, 226, 228, 229, 230, 234, 235, 238, 239, 242, 243, 244, 246, 247, 252, 255, 256, 258, 260, 270, 272, 273, 274, 276, 277, 278, 282, 283, 284, 286, 288, 289, 290, 291, 293, 294, 297, 298, 307, 310, 311, 313, 320, 322, 323, 325, 326, 328, 334, 336, 337, 340, 346, 347, 349, 350, 353, 354, 355, 357, 358, 359, 363, 364, 368, 369, 371, 372, 373, 375, 379, 380, 382, 383, 384, 385, 387, 388, 393], "modul": [0, 1, 3, 4, 5, 7, 8, 38, 41, 59, 76, 158, 200, 208, 243, 244, 249, 262, 271, 283, 286, 287, 289, 307, 318, 329, 337, 339, 342, 343, 368, 371, 375], "can": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 59, 61, 62, 63, 65, 68, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 99, 105, 109, 112, 114, 115, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 139, 142, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 166, 168, 170, 172, 174, 176, 177, 178, 181, 182, 184, 185, 186, 187, 191, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 211, 213, 214, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 255, 256, 258, 262, 267, 270, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 293, 294, 295, 297, 299, 301, 303, 305, 306, 307, 310, 311, 313, 314, 315, 316, 318, 320, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 342, 343, 345, 346, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389], "import": [0, 1, 3, 4, 7, 8, 12, 13, 14, 24, 25, 28, 30, 31, 36, 38, 41, 43, 45, 46, 48, 52, 58, 59, 61, 62, 65, 71, 81, 84, 91, 95, 103, 114, 115, 121, 122, 133, 146, 148, 149, 150, 155, 156, 158, 159, 162, 164, 170, 197, 205, 208, 213, 222, 234, 239, 242, 243, 247, 249, 260, 262, 271, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 301, 302, 303, 307, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 334, 337, 339, 340, 341, 342, 343, 344, 346, 347, 349, 351, 353, 354, 355, 357, 359, 361, 362, 363, 367, 368, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 391], "For": [0, 1, 3, 4, 7, 8, 10, 11, 14, 25, 28, 31, 32, 37, 39, 41, 42, 47, 48, 49, 51, 53, 54, 59, 61, 62, 63, 65, 71, 75, 76, 77, 78, 81, 83, 84, 87, 89, 91, 93, 94, 95, 98, 102, 103, 105, 106, 109, 111, 114, 115, 119, 121, 128, 131, 143, 144, 148, 149, 150, 151, 154, 155, 156, 160, 161, 165, 166, 168, 169, 175, 178, 181, 184, 190, 193, 194, 196, 197, 199, 200, 208, 213, 216, 217, 218, 220, 222, 224, 225, 226, 227, 233, 237, 239, 242, 243, 244, 245, 255, 258, 271, 272, 276, 277, 278, 279, 282, 283, 284, 287, 289, 290, 291, 293, 294, 295, 297, 298, 304, 307, 310, 313, 315, 319, 322, 323, 325, 326, 328, 329, 337, 342, 345, 346, 347, 349, 351, 353, 354, 355, 356, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 388, 390, 392, 393], "from": [0, 1, 3, 4, 6, 8, 10, 11, 13, 14, 16, 17, 18, 19, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 63, 64, 65, 68, 69, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 89, 90, 91, 93, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 114, 115, 118, 119, 122, 124, 126, 127, 128, 129, 131, 132, 133, 139, 141, 142, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 162, 164, 165, 168, 169, 174, 178, 180, 182, 183, 184, 186, 190, 193, 194, 196, 197, 199, 200, 201, 202, 205, 207, 208, 211, 213, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 234, 235, 237, 239, 242, 243, 244, 245, 247, 248, 249, 251, 253, 254, 255, 256, 258, 259, 260, 262, 267, 269, 270, 271, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 334, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 391, 393], "first": [0, 1, 3, 4, 5, 7, 8, 13, 16, 17, 18, 25, 28, 32, 33, 35, 36, 37, 41, 42, 46, 47, 50, 51, 52, 54, 58, 61, 62, 65, 68, 71, 73, 75, 76, 77, 78, 81, 83, 84, 89, 91, 93, 94, 98, 99, 100, 102, 103, 104, 105, 114, 115, 119, 121, 122, 124, 126, 127, 128, 129, 131, 133, 144, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 168, 172, 176, 178, 181, 182, 184, 185, 187, 193, 196, 197, 199, 201, 202, 203, 204, 207, 208, 211, 216, 217, 220, 224, 225, 226, 228, 230, 231, 232, 233, 234, 239, 243, 244, 247, 249, 251, 253, 254, 255, 256, 258, 260, 262, 272, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 293, 294, 297, 301, 305, 307, 310, 311, 313, 314, 316, 322, 325, 326, 328, 330, 331, 332, 334, 336, 337, 340, 345, 346, 349, 353, 354, 355, 357, 359, 360, 361, 362, 363, 367, 368, 369, 371, 372, 375, 379, 382, 384, 385, 386, 387, 388, 392, 393], "could": [0, 4, 10, 11, 13, 14, 29, 30, 31, 40, 42, 45, 46, 47, 54, 61, 71, 76, 89, 91, 98, 114, 115, 119, 128, 131, 155, 158, 169, 197, 231, 239, 242, 249, 255, 258, 283, 286, 293, 298, 326, 337, 360, 368, 369, 370, 372, 373, 379, 382, 384, 385, 388], "do": [0, 1, 3, 4, 7, 13, 14, 16, 25, 27, 29, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 55, 60, 61, 62, 63, 66, 68, 73, 74, 75, 76, 78, 81, 82, 83, 89, 93, 94, 95, 97, 98, 100, 103, 105, 106, 114, 115, 118, 119, 122, 128, 129, 131, 133, 142, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 176, 178, 181, 182, 184, 193, 196, 197, 200, 216, 217, 218, 220, 222, 224, 226, 227, 228, 231, 236, 239, 242, 244, 247, 249, 255, 256, 258, 260, 262, 270, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 293, 294, 296, 297, 305, 307, 310, 311, 313, 320, 322, 325, 326, 328, 329, 337, 345, 346, 347, 349, 351, 353, 355, 356, 357, 360, 363, 367, 368, 370, 371, 372, 378, 379, 380, 382, 383, 385, 387, 388], "case": [0, 1, 3, 4, 8, 33, 36, 37, 39, 42, 53, 54, 61, 63, 76, 77, 93, 95, 98, 99, 114, 115, 119, 128, 129, 131, 143, 146, 148, 149, 150, 153, 154, 155, 156, 159, 161, 164, 165, 166, 178, 181, 191, 193, 196, 197, 201, 207, 208, 216, 217, 222, 226, 228, 233, 239, 242, 243, 244, 249, 255, 256, 258, 271, 274, 276, 277, 278, 281, 282, 283, 284, 286, 288, 290, 294, 295, 307, 310, 320, 322, 325, 326, 328, 330, 334, 336, 337, 345, 346, 351, 355, 357, 362, 368, 370, 379, 380, 382, 383, 387], "don": [0, 3, 4, 7, 8, 14, 16, 17, 18, 25, 32, 33, 35, 36, 42, 46, 50, 61, 62, 65, 71, 75, 76, 78, 89, 90, 91, 94, 95, 98, 99, 102, 103, 104, 105, 110, 114, 115, 118, 119, 120, 122, 134, 149, 155, 156, 160, 161, 178, 196, 207, 224, 226, 228, 239, 261, 277, 283, 284, 289, 290, 307, 325, 336, 353, 355, 357, 372, 379, 385, 388], "t": [0, 3, 4, 7, 8, 10, 11, 14, 16, 17, 18, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 59, 61, 62, 65, 66, 67, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 114, 115, 118, 119, 120, 121, 122, 129, 134, 142, 143, 146, 148, 149, 154, 155, 156, 159, 160, 161, 168, 178, 186, 187, 191, 193, 195, 196, 197, 207, 208, 211, 213, 214, 215, 216, 217, 220, 222, 224, 226, 227, 228, 230, 239, 242, 244, 247, 248, 249, 256, 261, 270, 271, 274, 276, 277, 278, 280, 282, 283, 284, 286, 288, 289, 290, 291, 297, 298, 299, 307, 315, 316, 320, 322, 324, 325, 326, 333, 336, 337, 340, 342, 344, 345, 346, 349, 351, 353, 355, 356, 357, 359, 367, 368, 369, 372, 373, 374, 377, 378, 379, 380, 382, 383, 384, 385, 388], "want": [0, 1, 3, 7, 10, 11, 14, 27, 28, 31, 40, 42, 46, 47, 53, 54, 59, 61, 62, 63, 65, 73, 74, 75, 77, 81, 82, 85, 87, 88, 91, 94, 95, 98, 99, 100, 101, 105, 109, 117, 118, 119, 122, 150, 153, 156, 158, 160, 161, 169, 174, 208, 226, 228, 233, 238, 239, 242, 244, 278, 281, 284, 286, 289, 298, 303, 326, 336, 337, 355, 357, 362, 367, 370, 371, 372, 375, 379, 380, 382, 383, 387, 388], "compil": [0, 1, 3, 4, 5, 6, 8, 10, 11, 46, 49, 53, 76, 82, 93, 121, 133, 135, 143, 148, 149, 150, 153, 155, 191, 204, 224, 239, 242, 243, 244, 246, 260, 263, 271, 277, 278, 281, 283, 320, 333, 353, 375, 379, 380, 385], "full": [0, 1, 3, 10, 11, 35, 61, 63, 93, 131, 149, 155, 158, 193, 197, 213, 238, 239, 242, 243, 244, 249, 258, 277, 283, 286, 287, 322, 326, 342, 368, 370, 379, 388], "sphinx": [0, 1, 3, 56], "That": [0, 9, 32, 36, 42, 47, 54, 61, 81, 89, 91, 98, 99, 100, 102, 103, 119, 131, 148, 149, 150, 154, 155, 156, 158, 159, 178, 197, 216, 222, 243, 247, 276, 277, 278, 282, 283, 284, 288, 294, 307, 326, 345, 351, 367, 368, 370, 371, 382, 384, 387, 388], "everyth": [0, 3, 13, 14, 19, 24, 45, 51, 52, 61, 64, 65, 72, 89, 91, 95, 117, 118, 121, 158, 167, 208, 217, 220, 222, 226, 232, 234, 244, 296, 346, 349, 351, 355, 361, 363, 370, 379, 380, 383, 384, 385, 387], "_build": 0, "where": [0, 1, 4, 5, 9, 10, 11, 13, 14, 25, 27, 28, 35, 37, 38, 39, 41, 43, 46, 47, 52, 53, 54, 59, 61, 63, 65, 68, 73, 76, 82, 87, 88, 89, 90, 91, 93, 94, 100, 114, 115, 121, 126, 131, 140, 148, 149, 150, 155, 156, 158, 161, 165, 168, 170, 181, 184, 193, 197, 200, 201, 203, 207, 208, 213, 217, 218, 220, 221, 224, 226, 228, 231, 233, 234, 239, 242, 243, 244, 249, 253, 258, 262, 268, 276, 277, 278, 282, 283, 284, 286, 287, 290, 292, 294, 297, 299, 307, 310, 313, 318, 322, 326, 327, 329, 330, 332, 336, 337, 342, 346, 347, 349, 350, 353, 355, 357, 360, 362, 363, 369, 370, 371, 374, 375, 379, 380, 382, 383, 384, 385, 388], "open": [0, 8, 14, 16, 17, 18, 31, 38, 46, 47, 50, 58, 65, 71, 76, 81, 84, 88, 89, 90, 98, 102, 119, 121, 128, 151, 168, 177, 180, 183, 184, 185, 186, 187, 193, 196, 197, 200, 201, 219, 222, 225, 226, 228, 230, 242, 243, 244, 247, 249, 255, 276, 279, 297, 306, 307, 309, 312, 313, 314, 315, 316, 322, 325, 326, 329, 330, 347, 348, 351, 354, 355, 357, 359, 367, 369, 370, 372, 373, 375, 378, 379, 380, 387, 388], "index": [0, 10, 11, 13, 16, 32, 37, 52, 62, 74, 75, 118, 133, 135, 144, 145, 146, 149, 151, 154, 155, 156, 158, 159, 160, 168, 169, 172, 181, 182, 187, 193, 194, 196, 197, 199, 200, 201, 202, 203, 208, 211, 217, 220, 226, 228, 232, 233, 234, 237, 238, 247, 260, 263, 272, 273, 274, 275, 277, 279, 282, 283, 284, 286, 288, 289, 297, 298, 301, 308, 310, 311, 316, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 337, 340, 346, 349, 355, 357, 361, 362, 363, 375, 379, 380, 387], "html": [0, 3, 58, 65, 71, 85, 122, 146, 155, 193, 200, 238, 239, 274, 283, 322, 329, 337, 375, 379, 380], "just": [0, 3, 10, 11, 14, 25, 28, 32, 36, 42, 45, 47, 51, 52, 61, 62, 64, 65, 72, 75, 81, 82, 83, 84, 89, 90, 91, 94, 95, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 119, 120, 122, 129, 142, 144, 146, 148, 149, 150, 155, 156, 158, 163, 165, 168, 184, 187, 194, 197, 202, 204, 207, 216, 217, 218, 220, 222, 226, 227, 230, 231, 242, 243, 249, 256, 270, 272, 274, 276, 277, 278, 283, 284, 286, 294, 297, 298, 307, 313, 323, 326, 331, 333, 336, 345, 346, 347, 349, 351, 355, 356, 359, 360, 368, 372, 373, 379, 383, 384, 387, 388], "perform": [0, 1, 3, 4, 7, 10, 11, 13, 24, 25, 29, 33, 36, 37, 45, 52, 65, 76, 88, 95, 121, 128, 131, 146, 155, 156, 158, 193, 197, 217, 224, 226, 228, 231, 240, 242, 244, 245, 247, 248, 249, 255, 258, 274, 283, 284, 286, 321, 322, 326, 346, 353, 355, 357, 360, 368, 379, 387, 388], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 59, 60, 61, 62, 63, 65, 66, 68, 69, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 106, 107, 110, 114, 115, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 134, 138, 139, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 176, 178, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 242, 243, 244, 246, 247, 249, 251, 253, 254, 255, 256, 258, 259, 261, 262, 266, 267, 270, 271, 272, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 305, 307, 310, 311, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 344, 345, 346, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 370, 371, 372, 373, 374, 375, 379, 380, 382, 383, 384, 385, 387, 388, 389, 392, 393], "when": [0, 1, 3, 4, 7, 9, 12, 13, 14, 25, 28, 29, 31, 32, 33, 36, 37, 39, 40, 44, 45, 46, 51, 52, 59, 61, 62, 65, 68, 75, 76, 79, 82, 83, 84, 87, 89, 91, 93, 94, 95, 100, 102, 103, 104, 105, 106, 108, 110, 111, 114, 118, 122, 124, 125, 126, 128, 129, 131, 133, 138, 139, 140, 142, 143, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 177, 178, 184, 187, 191, 193, 194, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 213, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 234, 238, 239, 242, 244, 247, 249, 251, 252, 253, 255, 256, 258, 260, 262, 266, 267, 268, 270, 271, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 306, 307, 313, 316, 320, 322, 323, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 340, 342, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 363, 368, 369, 371, 374, 378, 379, 380, 382, 383, 385, 387, 388], "what": [0, 10, 11, 13, 24, 28, 30, 31, 32, 36, 38, 39, 40, 41, 44, 45, 49, 52, 61, 62, 73, 76, 82, 85, 87, 89, 94, 95, 96, 97, 99, 100, 103, 105, 108, 110, 111, 112, 114, 115, 122, 139, 149, 150, 153, 155, 156, 158, 181, 197, 201, 208, 217, 218, 221, 222, 226, 227, 228, 236, 238, 239, 242, 243, 249, 267, 277, 278, 281, 283, 284, 286, 310, 326, 330, 337, 346, 347, 350, 351, 355, 356, 357, 368, 370, 371, 374, 378, 379, 382, 383, 385, 387], "awar": [0, 52, 155, 161, 239, 283, 290], "follow": [0, 1, 3, 4, 8, 10, 11, 13, 14, 25, 28, 29, 32, 34, 36, 37, 39, 44, 46, 52, 59, 60, 61, 63, 65, 68, 71, 72, 75, 76, 83, 87, 89, 91, 93, 95, 98, 100, 102, 106, 114, 115, 119, 124, 129, 134, 143, 144, 146, 148, 149, 150, 153, 154, 155, 156, 160, 161, 165, 168, 169, 176, 178, 181, 184, 185, 187, 189, 193, 197, 199, 200, 201, 202, 204, 207, 208, 210, 211, 213, 216, 217, 222, 226, 228, 230, 231, 234, 239, 242, 243, 244, 245, 246, 247, 249, 251, 256, 261, 271, 272, 274, 276, 277, 278, 281, 282, 283, 284, 286, 287, 289, 290, 293, 294, 297, 298, 305, 310, 313, 314, 316, 318, 322, 326, 328, 329, 330, 331, 336, 337, 339, 340, 342, 344, 345, 346, 350, 351, 353, 355, 357, 359, 360, 363, 365, 368, 371, 375, 378, 379, 380, 383, 385, 387, 388, 389, 393], "target": [0, 1, 3, 7, 9, 22, 32, 52, 110, 111, 121, 145, 148, 150, 151, 154, 155, 156, 199, 217, 238, 239, 242, 243, 244, 249, 273, 275, 276, 278, 279, 282, 283, 284, 328, 346, 371, 379, 380, 383, 384, 385], "speed": [0, 6, 10, 11, 26, 41, 47, 81, 89, 114, 115, 134, 149, 156, 161, 221, 232, 242, 249, 261, 277, 284, 290, 350, 361, 368, 391], "up": [0, 1, 7, 9, 10, 11, 12, 14, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 42, 45, 46, 47, 48, 49, 51, 52, 60, 63, 65, 71, 74, 75, 76, 79, 81, 83, 87, 88, 90, 94, 96, 97, 100, 102, 103, 105, 106, 107, 109, 114, 115, 118, 121, 124, 128, 129, 131, 133, 134, 139, 142, 146, 149, 150, 155, 156, 159, 165, 167, 168, 171, 172, 174, 178, 184, 187, 196, 197, 201, 207, 211, 213, 217, 218, 220, 221, 224, 226, 227, 228, 231, 232, 235, 243, 246, 249, 251, 255, 256, 258, 260, 261, 267, 270, 274, 277, 278, 283, 284, 287, 288, 294, 296, 297, 300, 301, 303, 307, 313, 316, 325, 326, 330, 336, 340, 342, 346, 347, 349, 350, 353, 355, 356, 357, 360, 361, 364, 367, 368, 371, 374, 375, 381, 382, 387, 391], "process": [0, 1, 3, 4, 5, 9, 10, 11, 13, 14, 22, 25, 30, 31, 32, 37, 39, 42, 52, 53, 66, 71, 72, 76, 84, 98, 102, 114, 119, 122, 128, 129, 135, 139, 141, 142, 147, 149, 150, 151, 154, 155, 156, 157, 160, 161, 168, 169, 171, 197, 199, 201, 202, 208, 216, 217, 220, 222, 224, 227, 228, 234, 235, 239, 244, 248, 249, 255, 256, 263, 267, 269, 270, 271, 275, 277, 278, 279, 282, 283, 284, 285, 286, 289, 290, 293, 297, 298, 300, 326, 328, 330, 331, 337, 340, 345, 346, 349, 351, 353, 356, 357, 363, 364, 368, 371, 379, 380, 384, 385, 388], "api": [0, 1, 4, 5, 8, 53, 54, 93, 216, 239, 247, 345, 365, 379], "onli": [0, 3, 6, 9, 13, 14, 16, 17, 18, 22, 25, 27, 28, 29, 32, 33, 36, 40, 41, 45, 51, 54, 58, 61, 62, 65, 69, 71, 75, 76, 84, 85, 89, 91, 93, 98, 100, 103, 114, 115, 118, 119, 121, 124, 128, 129, 131, 134, 139, 142, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 161, 164, 165, 168, 169, 170, 171, 172, 173, 175, 178, 181, 182, 184, 186, 187, 192, 193, 196, 197, 201, 202, 207, 208, 210, 213, 216, 217, 218, 220, 224, 226, 228, 230, 231, 234, 239, 242, 243, 244, 246, 247, 249, 251, 255, 256, 258, 261, 262, 267, 270, 276, 277, 278, 279, 281, 282, 283, 284, 286, 288, 290, 293, 294, 297, 298, 299, 300, 301, 302, 304, 307, 310, 313, 315, 316, 318, 321, 322, 325, 326, 330, 331, 333, 334, 336, 337, 339, 342, 345, 346, 347, 349, 350, 353, 355, 357, 359, 360, 361, 363, 368, 369, 370, 371, 373, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388], "end": [0, 1, 4, 8, 9, 10, 11, 12, 13, 16, 17, 18, 25, 27, 28, 30, 31, 33, 43, 47, 51, 52, 53, 61, 62, 65, 67, 71, 73, 75, 76, 81, 89, 91, 99, 102, 103, 108, 114, 115, 118, 121, 122, 124, 125, 126, 129, 133, 134, 146, 148, 149, 150, 154, 155, 156, 159, 160, 161, 163, 164, 168, 184, 185, 186, 193, 197, 201, 211, 214, 218, 220, 221, 224, 227, 228, 231, 233, 239, 243, 244, 246, 249, 251, 252, 253, 256, 260, 261, 274, 276, 277, 278, 283, 284, 288, 289, 290, 297, 313, 314, 315, 322, 326, 330, 340, 343, 346, 347, 349, 350, 353, 356, 357, 360, 362, 363, 365, 368, 379, 382, 385, 387, 388, 393], "gener": [0, 1, 2, 6, 8, 9, 10, 11, 13, 17, 19, 25, 28, 29, 33, 36, 38, 40, 41, 42, 46, 47, 49, 52, 59, 61, 62, 63, 65, 73, 75, 76, 81, 82, 84, 85, 88, 93, 94, 98, 114, 115, 116, 119, 123, 125, 129, 131, 133, 139, 141, 142, 146, 147, 150, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 168, 174, 182, 185, 194, 197, 198, 199, 207, 208, 211, 217, 218, 220, 222, 224, 226, 228, 230, 238, 239, 240, 242, 243, 244, 246, 249, 250, 252, 256, 258, 260, 267, 269, 270, 274, 275, 278, 282, 283, 284, 286, 287, 288, 289, 290, 292, 294, 297, 303, 311, 314, 315, 318, 323, 326, 327, 328, 336, 337, 340, 346, 347, 349, 351, 353, 355, 357, 359, 368, 371, 373, 379, 380, 382, 386, 387, 391, 393], "emb": [0, 249], "output": [0, 3, 4, 9, 32, 33, 35, 37, 42, 46, 49, 52, 53, 69, 70, 81, 84, 102, 112, 113, 128, 129, 135, 148, 149, 154, 155, 156, 180, 184, 185, 188, 193, 197, 207, 216, 238, 239, 249, 255, 256, 262, 263, 276, 277, 282, 283, 284, 290, 309, 313, 314, 316, 317, 321, 322, 325, 326, 336, 344, 345, 355, 371, 383, 385, 387, 388], "place": [0, 12, 13, 32, 33, 35, 36, 37, 39, 42, 44, 50, 61, 64, 65, 67, 72, 74, 76, 84, 91, 94, 103, 106, 112, 114, 115, 122, 129, 144, 146, 149, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 170, 172, 174, 184, 186, 187, 193, 197, 201, 202, 204, 215, 217, 218, 220, 222, 224, 226, 228, 230, 233, 239, 243, 249, 256, 272, 274, 277, 282, 283, 284, 286, 288, 289, 290, 293, 294, 297, 299, 301, 303, 313, 315, 316, 318, 322, 326, 330, 331, 333, 344, 346, 347, 349, 351, 353, 355, 357, 359, 362, 368, 369, 375, 379, 383, 385], "see": [0, 1, 3, 5, 7, 8, 10, 11, 13, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 50, 52, 53, 54, 59, 61, 63, 65, 72, 73, 74, 75, 77, 78, 82, 83, 84, 88, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 109, 111, 114, 115, 119, 120, 121, 122, 124, 125, 128, 129, 131, 133, 139, 142, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 168, 174, 176, 178, 190, 191, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 212, 213, 216, 217, 219, 220, 222, 224, 226, 227, 228, 230, 232, 233, 234, 236, 237, 238, 239, 242, 243, 244, 245, 251, 252, 255, 256, 258, 260, 262, 267, 270, 271, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 294, 297, 303, 305, 307, 318, 319, 320, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 341, 342, 344, 345, 346, 348, 349, 351, 353, 355, 356, 357, 359, 361, 362, 363, 367, 368, 372, 373, 375, 379, 382, 383, 385, 387, 388], "sh": [0, 3, 153, 155, 213, 216, 242, 243, 244, 245, 281, 342, 345], "clean": [0, 3, 40, 52, 62, 90, 155, 283, 372, 379], "clear": [0, 3, 8, 14, 27, 29, 31, 65, 76, 114, 115, 155, 211, 215, 216, 217, 220, 222, 231, 283, 340, 344, 345, 346, 349, 351, 360, 372, 374, 379, 380, 388], "rememb": [0, 27, 28, 34, 39, 40, 54, 61, 62, 89, 91, 93, 103, 131, 155, 159, 161, 165, 197, 258, 283, 288, 290, 294, 326, 369, 373, 384, 387], "add": [0, 1, 3, 7, 24, 28, 36, 38, 39, 41, 53, 65, 71, 76, 82, 89, 90, 91, 93, 95, 98, 119, 128, 134, 139, 146, 148, 149, 150, 159, 161, 169, 178, 193, 197, 201, 207, 208, 215, 217, 226, 228, 230, 231, 238, 239, 243, 244, 247, 255, 261, 267, 274, 276, 277, 278, 286, 288, 290, 298, 305, 307, 322, 326, 327, 330, 336, 337, 344, 346, 355, 357, 359, 360, 368, 379, 380, 383, 384, 387, 388, 391], "we": [0, 1, 3, 4, 5, 7, 9, 10, 11, 14, 16, 24, 27, 29, 30, 31, 32, 36, 37, 38, 39, 42, 44, 46, 47, 51, 52, 59, 60, 61, 62, 63, 69, 70, 71, 75, 76, 84, 88, 90, 95, 98, 99, 100, 101, 104, 112, 114, 115, 119, 120, 121, 131, 148, 149, 150, 153, 155, 156, 158, 187, 208, 217, 226, 239, 242, 243, 244, 247, 249, 258, 276, 277, 278, 281, 283, 284, 286, 298, 316, 337, 346, 351, 355, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393], "those": [0, 1, 3, 4, 10, 11, 12, 16, 17, 18, 32, 36, 41, 42, 43, 45, 47, 49, 51, 54, 59, 61, 76, 81, 88, 89, 98, 114, 115, 119, 121, 122, 128, 131, 138, 139, 148, 149, 150, 154, 155, 156, 159, 160, 161, 165, 173, 182, 193, 197, 208, 217, 220, 223, 224, 226, 231, 242, 243, 255, 258, 266, 267, 276, 277, 278, 282, 283, 284, 286, 288, 289, 290, 294, 302, 307, 311, 322, 326, 337, 346, 349, 352, 353, 355, 360, 367, 368, 370, 372, 373, 379, 383, 387, 388, 390, 392, 393], "commit": [0, 1, 3, 53, 93, 365, 380, 381], "repo": [0, 379], "call": [0, 1, 4, 8, 9, 10, 14, 24, 25, 27, 28, 29, 36, 37, 42, 45, 47, 52, 53, 54, 59, 61, 62, 63, 64, 65, 71, 72, 74, 76, 81, 82, 83, 84, 85, 86, 89, 91, 93, 95, 98, 99, 102, 105, 118, 119, 120, 121, 124, 128, 129, 131, 133, 135, 143, 144, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 164, 166, 168, 169, 172, 174, 176, 178, 181, 182, 184, 185, 191, 193, 194, 196, 197, 200, 202, 205, 206, 207, 208, 214, 216, 217, 220, 221, 222, 223, 224, 226, 228, 230, 231, 232, 234, 239, 242, 247, 251, 255, 256, 258, 260, 262, 263, 271, 272, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 290, 292, 293, 294, 295, 297, 298, 301, 303, 305, 307, 310, 311, 313, 314, 320, 322, 323, 325, 326, 329, 331, 334, 335, 336, 337, 343, 345, 346, 347, 349, 350, 351, 352, 353, 355, 357, 359, 360, 361, 362, 363, 368, 373, 378, 379, 382, 383, 384, 385, 387, 388], "one": [0, 1, 3, 8, 9, 10, 11, 12, 13, 18, 24, 25, 27, 28, 29, 31, 32, 33, 36, 38, 39, 41, 42, 47, 49, 51, 52, 54, 61, 62, 63, 65, 66, 68, 71, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 98, 99, 100, 105, 107, 109, 114, 115, 118, 119, 121, 122, 124, 125, 126, 128, 129, 131, 139, 142, 143, 144, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 178, 181, 182, 184, 186, 187, 188, 190, 193, 194, 196, 197, 201, 202, 204, 207, 208, 216, 217, 218, 220, 221, 224, 226, 228, 230, 231, 233, 236, 239, 242, 243, 244, 247, 249, 251, 252, 253, 255, 256, 258, 262, 267, 270, 271, 272, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 307, 310, 311, 313, 315, 316, 317, 319, 322, 323, 325, 326, 330, 331, 333, 336, 337, 340, 345, 346, 347, 349, 350, 353, 355, 357, 359, 360, 362, 367, 368, 369, 370, 373, 375, 379, 380, 382, 383, 384, 385, 387, 388, 393], "assembl": [0, 36, 51, 76, 283], "top": [0, 1, 3, 4, 14, 25, 29, 37, 46, 47, 52, 61, 62, 65, 71, 72, 74, 76, 81, 84, 93, 105, 107, 108, 109, 122, 124, 125, 128, 129, 137, 139, 140, 148, 160, 164, 165, 168, 169, 170, 172, 178, 182, 184, 192, 193, 197, 200, 202, 208, 211, 217, 220, 225, 226, 228, 231, 234, 238, 251, 252, 255, 256, 262, 265, 267, 268, 289, 293, 294, 297, 298, 299, 301, 307, 311, 313, 321, 322, 326, 329, 331, 337, 340, 346, 354, 355, 357, 360, 363, 370, 372, 379, 382], "directori": [0, 1, 3, 7, 8, 14, 24, 30, 31, 34, 35, 36, 45, 46, 47, 48, 53, 71, 76, 81, 89, 91, 117, 122, 149, 155, 161, 165, 184, 200, 207, 208, 213, 224, 238, 239, 242, 244, 277, 283, 290, 294, 313, 329, 336, 342, 353, 375, 385], "sinc": [0, 3, 4, 14, 25, 28, 29, 32, 36, 37, 39, 42, 46, 47, 61, 76, 83, 89, 91, 98, 107, 114, 115, 119, 121, 122, 128, 129, 131, 144, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 163, 164, 168, 178, 182, 193, 196, 197, 201, 207, 208, 210, 213, 216, 217, 218, 222, 226, 228, 229, 231, 233, 234, 242, 243, 244, 255, 256, 258, 272, 274, 276, 277, 278, 282, 283, 284, 288, 289, 290, 292, 293, 297, 307, 311, 322, 325, 326, 330, 336, 337, 339, 342, 345, 346, 347, 351, 355, 357, 358, 360, 362, 363, 368, 369, 372, 373, 379, 382, 384, 385, 387, 388], "therein": 0, "To": [0, 3, 7, 9, 13, 14, 25, 29, 31, 34, 39, 42, 43, 44, 45, 46, 47, 53, 59, 61, 62, 63, 65, 69, 70, 71, 74, 75, 80, 81, 89, 91, 94, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 114, 115, 119, 120, 122, 128, 129, 149, 153, 154, 155, 158, 159, 160, 161, 164, 176, 181, 193, 196, 197, 207, 208, 216, 217, 224, 226, 227, 228, 231, 233, 239, 242, 243, 244, 245, 247, 249, 255, 256, 276, 277, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 294, 305, 310, 311, 322, 325, 326, 336, 337, 345, 346, 353, 355, 356, 357, 360, 362, 365, 368, 371, 372, 374, 375, 379, 382, 383, 387, 388, 392], "abl": [0, 3, 4, 7, 36, 38, 45, 71, 81, 84, 89, 91, 93, 156, 161, 207, 216, 223, 242, 243, 284, 286, 336, 345, 352, 372, 373, 379, 380, 383, 388], "packag": [0, 1, 3, 7, 165, 217, 240, 242, 244, 247, 294, 346, 371, 375, 379, 387], "like": [0, 1, 3, 4, 7, 8, 9, 14, 25, 31, 32, 33, 34, 36, 37, 40, 42, 43, 45, 46, 51, 52, 54, 59, 61, 62, 63, 65, 73, 75, 76, 77, 82, 87, 89, 91, 93, 95, 99, 102, 103, 104, 105, 106, 109, 110, 114, 115, 117, 118, 121, 122, 131, 148, 149, 150, 154, 155, 156, 158, 160, 163, 167, 168, 178, 196, 197, 200, 208, 217, 220, 226, 228, 230, 231, 239, 242, 244, 247, 249, 258, 276, 277, 278, 282, 283, 284, 286, 287, 289, 292, 296, 297, 299, 307, 325, 326, 329, 336, 337, 346, 349, 355, 357, 359, 360, 368, 369, 371, 373, 379, 380, 382, 383, 387, 388], "under": [0, 1, 3, 8, 10, 11, 14, 35, 39, 40, 46, 47, 52, 71, 76, 77, 78, 81, 84, 87, 88, 89, 91, 93, 94, 98, 100, 119, 121, 122, 134, 148, 149, 151, 155, 158, 161, 165, 166, 168, 172, 177, 178, 186, 197, 213, 217, 221, 224, 228, 239, 242, 244, 249, 261, 276, 277, 279, 283, 290, 294, 295, 297, 301, 306, 307, 315, 326, 342, 346, 350, 353, 357, 365, 368, 371, 379], "The": [0, 3, 4, 7, 9, 12, 13, 14, 24, 26, 27, 29, 30, 31, 33, 35, 36, 40, 41, 45, 46, 47, 51, 52, 53, 54, 58, 59, 61, 62, 63, 65, 66, 68, 71, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 86, 87, 89, 93, 96, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 120, 124, 125, 126, 127, 128, 129, 131, 133, 134, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172, 176, 178, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 239, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 301, 305, 307, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 368, 370, 371, 374, 375, 376, 379, 380, 383, 384, 385, 387, 392, 393], "wai": [0, 4, 5, 7, 10, 11, 14, 25, 28, 38, 39, 42, 45, 46, 47, 52, 54, 59, 61, 75, 76, 81, 82, 89, 91, 94, 95, 98, 99, 100, 105, 109, 114, 115, 117, 119, 121, 122, 131, 142, 143, 149, 150, 151, 154, 155, 159, 161, 164, 168, 176, 178, 180, 181, 183, 188, 197, 200, 207, 208, 216, 217, 220, 223, 224, 239, 242, 244, 247, 258, 270, 271, 277, 278, 279, 282, 283, 286, 288, 290, 293, 297, 305, 307, 310, 315, 317, 326, 329, 334, 336, 337, 345, 346, 347, 349, 351, 352, 353, 362, 367, 368, 371, 375, 379, 382, 383, 385, 387, 388], "gather": [0, 10, 11, 25, 35, 81, 121, 155, 205, 217, 283, 334, 346, 347, 386], "extra": [0, 33, 46, 52, 53, 71, 76, 93, 123, 125, 131, 134, 149, 154, 155, 161, 197, 216, 217, 222, 228, 230, 239, 240, 242, 243, 249, 250, 252, 258, 261, 277, 282, 283, 290, 326, 345, 346, 351, 357, 359, 361, 379], "look": [0, 10, 11, 14, 28, 32, 33, 34, 36, 37, 40, 46, 49, 51, 52, 61, 62, 65, 71, 75, 76, 84, 87, 89, 91, 99, 102, 104, 105, 106, 110, 135, 148, 149, 151, 155, 156, 176, 182, 196, 200, 201, 217, 239, 244, 249, 263, 276, 277, 279, 280, 283, 284, 290, 305, 311, 325, 329, 330, 346, 371, 379, 380, 382, 384, 385, 388], "o": [0, 1, 11, 29, 71, 76, 108, 121, 148, 158, 161, 169, 186, 197, 208, 210, 213, 224, 226, 238, 241, 248, 249, 262, 276, 286, 290, 298, 308, 314, 315, 326, 337, 339, 342, 353, 355, 368, 370, 375], "get": [0, 3, 6, 10, 11, 13, 14, 16, 17, 18, 19, 28, 29, 31, 36, 37, 39, 41, 46, 49, 51, 52, 53, 59, 60, 61, 65, 81, 82, 85, 89, 90, 91, 94, 95, 107, 118, 120, 122, 124, 128, 131, 148, 149, 150, 155, 156, 158, 160, 161, 164, 168, 171, 178, 184, 196, 197, 199, 202, 208, 211, 217, 222, 224, 226, 228, 235, 238, 239, 242, 243, 244, 247, 249, 251, 255, 258, 276, 277, 278, 283, 284, 286, 289, 290, 291, 292, 293, 297, 300, 307, 312, 313, 325, 326, 327, 328, 331, 337, 340, 346, 351, 353, 355, 357, 361, 364, 368, 370, 371, 373, 376, 379, 380, 382, 383, 385, 387, 393], "block": [0, 1, 3, 4, 9, 36, 52, 54, 64, 66, 71, 72, 75, 76, 77, 83, 84, 93, 131, 143, 148, 149, 150, 151, 154, 155, 167, 217, 220, 222, 224, 239, 246, 248, 249, 258, 271, 276, 277, 278, 279, 282, 283, 296, 311, 346, 349, 351, 353, 379, 387, 388], "how": [0, 1, 3, 4, 7, 8, 10, 11, 13, 24, 25, 27, 28, 32, 33, 34, 36, 37, 38, 39, 40, 41, 45, 47, 49, 51, 52, 53, 55, 58, 60, 61, 62, 63, 66, 73, 76, 81, 82, 84, 85, 88, 89, 90, 91, 92, 97, 99, 100, 102, 104, 114, 115, 121, 122, 134, 142, 144, 148, 149, 150, 155, 156, 158, 160, 161, 168, 197, 201, 207, 212, 216, 217, 227, 228, 237, 239, 240, 242, 243, 244, 247, 249, 261, 270, 272, 276, 277, 278, 283, 284, 289, 290, 297, 326, 330, 336, 337, 341, 343, 345, 346, 356, 357, 367, 369, 370, 371, 372, 379, 380, 382, 383, 385, 386, 387, 388, 393], "aforement": [0, 1, 379, 380], "nightli": [0, 1, 7, 240, 375, 379, 380], "master": [0, 3, 4, 7, 10, 11, 13, 16, 58, 77, 129, 155, 156, 244, 249, 256, 283, 284, 357, 365, 379, 380], "x": [0, 4, 10, 11, 13, 16, 17, 18, 21, 22, 28, 29, 30, 31, 32, 39, 40, 41, 43, 50, 61, 62, 63, 65, 71, 73, 76, 78, 81, 86, 89, 93, 94, 114, 115, 117, 120, 121, 122, 124, 126, 128, 129, 131, 132, 133, 143, 146, 148, 149, 151, 154, 155, 156, 158, 160, 161, 164, 166, 168, 171, 172, 178, 181, 184, 186, 188, 191, 192, 193, 194, 196, 197, 199, 200, 201, 203, 204, 205, 206, 208, 210, 212, 213, 214, 217, 218, 220, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 242, 244, 248, 249, 251, 253, 255, 256, 258, 259, 260, 271, 274, 276, 277, 278, 279, 280, 282, 283, 286, 287, 289, 290, 293, 295, 297, 300, 301, 307, 310, 313, 315, 316, 317, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 339, 341, 342, 346, 347, 349, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 368, 369, 370, 373, 375, 377, 378, 379, 380, 382, 383, 384, 387, 388], "y": [0, 21, 22, 24, 25, 28, 29, 32, 36, 38, 39, 40, 41, 50, 58, 73, 76, 81, 86, 89, 94, 100, 114, 115, 122, 124, 129, 131, 133, 146, 148, 149, 160, 161, 168, 178, 187, 188, 191, 197, 201, 206, 208, 210, 217, 218, 224, 225, 226, 227, 228, 230, 231, 232, 234, 242, 244, 249, 251, 256, 258, 260, 274, 277, 286, 287, 289, 290, 307, 316, 317, 320, 326, 330, 334, 335, 337, 339, 346, 347, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 367, 368, 369, 373, 375, 377, 378, 379, 382, 383, 384, 387, 388], "z": [0, 21, 22, 32, 40, 50, 76, 81, 122, 132, 160, 161, 191, 201, 228, 231, 234, 242, 244, 249, 259, 286, 289, 290, 320, 330, 357, 360, 363, 375, 379, 382, 383, 384], "publish": [0, 121, 122, 156, 240, 249, 284, 379, 380, 388], "next": [0, 1, 10, 11, 13, 27, 28, 35, 39, 42, 43, 51, 52, 61, 62, 71, 76, 79, 83, 89, 91, 94, 96, 99, 100, 101, 104, 106, 107, 108, 110, 114, 124, 148, 149, 151, 155, 158, 159, 168, 170, 181, 184, 186, 187, 194, 197, 201, 217, 218, 222, 226, 228, 230, 236, 239, 242, 243, 251, 276, 277, 279, 283, 286, 288, 289, 297, 299, 310, 313, 315, 316, 323, 326, 330, 346, 347, 351, 355, 357, 359, 371, 379, 380, 383, 384, 387, 393], "section": [0, 1, 3, 4, 6, 7, 8, 9, 14, 25, 27, 28, 30, 31, 32, 33, 35, 38, 41, 42, 43, 45, 46, 47, 50, 52, 53, 59, 60, 61, 62, 63, 71, 74, 76, 81, 83, 84, 91, 93, 98, 99, 100, 103, 105, 119, 120, 121, 122, 125, 126, 129, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 162, 163, 168, 171, 173, 174, 182, 197, 199, 200, 201, 203, 208, 216, 217, 220, 222, 224, 226, 227, 228, 232, 233, 234, 235, 239, 243, 244, 246, 247, 249, 252, 253, 256, 258, 259, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 291, 292, 297, 300, 302, 303, 311, 326, 328, 329, 330, 332, 337, 340, 344, 345, 346, 349, 351, 353, 356, 357, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 383, 384, 387, 393], "achiev": [0, 5, 7, 62, 63, 73, 100, 121, 375], "pars": [0, 40, 52, 76, 149, 165, 178, 193, 201, 212, 217, 230, 277, 294, 322, 330, 341, 359], "variabl": [0, 1, 3, 6, 8, 9, 25, 28, 29, 31, 32, 33, 36, 37, 38, 39, 42, 44, 47, 51, 52, 54, 58, 59, 62, 64, 71, 72, 83, 84, 88, 89, 91, 94, 96, 98, 102, 114, 115, 119, 121, 124, 126, 128, 129, 132, 133, 135, 139, 140, 143, 144, 146, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 171, 174, 176, 178, 180, 181, 182, 184, 185, 187, 190, 191, 196, 197, 199, 200, 201, 202, 204, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 222, 226, 227, 228, 230, 231, 232, 233, 234, 239, 242, 243, 244, 248, 249, 251, 253, 255, 256, 259, 260, 263, 267, 268, 271, 272, 274, 276, 277, 278, 281, 282, 283, 284, 286, 288, 289, 290, 294, 295, 297, 299, 300, 303, 305, 307, 309, 310, 311, 313, 314, 315, 316, 319, 320, 325, 326, 328, 329, 330, 331, 333, 334, 336, 337, 340, 342, 344, 346, 347, 349, 350, 351, 355, 356, 357, 359, 360, 361, 362, 363, 368, 369, 370, 372, 382, 384, 385, 393], "readthedocs_vers": 0, "step": [0, 4, 6, 8, 9, 10, 11, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 44, 45, 47, 52, 59, 60, 63, 64, 67, 72, 75, 82, 83, 88, 112, 113, 121, 122, 123, 125, 128, 129, 142, 143, 146, 148, 149, 150, 154, 155, 156, 158, 159, 191, 197, 214, 215, 217, 218, 220, 221, 226, 228, 230, 236, 242, 244, 248, 249, 250, 252, 255, 256, 270, 271, 274, 276, 277, 278, 282, 283, 284, 286, 288, 320, 325, 326, 344, 346, 347, 349, 350, 355, 357, 359, 368, 372, 379, 383, 385, 387, 393], "creat": [0, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 24, 27, 30, 31, 32, 33, 34, 37, 38, 42, 44, 45, 46, 47, 48, 52, 59, 60, 64, 65, 69, 70, 72, 74, 76, 81, 82, 83, 84, 88, 89, 95, 96, 97, 98, 99, 102, 103, 105, 112, 113, 118, 119, 121, 122, 125, 128, 137, 139, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 172, 173, 176, 177, 178, 181, 182, 184, 193, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 213, 215, 217, 220, 222, 224, 226, 227, 228, 231, 232, 235, 238, 240, 242, 243, 244, 245, 247, 249, 252, 255, 265, 267, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 297, 298, 300, 301, 303, 305, 306, 307, 310, 311, 313, 316, 317, 322, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 341, 342, 344, 345, 346, 351, 353, 355, 356, 357, 360, 361, 364, 368, 375, 380, 381, 383, 384, 385, 387], "gha": 0, "manual": [0, 3, 36, 52, 55, 61, 71, 76, 78, 89, 91, 109, 121, 149, 157, 202, 207, 239, 243, 244, 249, 277, 285, 297, 331, 336, 379], "workflow": [0, 3, 8, 240, 249, 379], "go": [0, 1, 29, 31, 36, 37, 38, 47, 51, 52, 61, 62, 71, 79, 81, 82, 89, 90, 91, 95, 101, 110, 118, 128, 154, 155, 156, 158, 165, 168, 181, 197, 201, 217, 226, 228, 236, 237, 239, 243, 249, 255, 276, 282, 283, 284, 286, 294, 297, 310, 326, 330, 346, 351, 355, 357, 369, 371, 373, 379, 382, 383, 384, 385], "version": [0, 1, 3, 7, 11, 31, 43, 48, 53, 61, 65, 76, 77, 82, 84, 87, 93, 117, 121, 122, 129, 131, 133, 148, 149, 150, 151, 155, 156, 159, 160, 172, 176, 184, 194, 196, 197, 200, 207, 208, 211, 213, 216, 220, 222, 228, 239, 242, 243, 244, 245, 246, 247, 256, 258, 260, 276, 277, 278, 279, 283, 284, 286, 288, 289, 292, 293, 299, 301, 305, 313, 318, 322, 323, 325, 326, 329, 330, 336, 340, 342, 345, 349, 351, 357, 361, 365, 367, 369, 370, 372, 373, 374, 375, 378, 381, 384, 385, 387, 388], "page": [0, 14, 27, 40, 46, 47, 50, 61, 62, 65, 68, 71, 77, 78, 81, 91, 99, 101, 122, 228, 237, 239, 242, 243, 249, 271, 287, 330, 337, 357, 359, 365, 382, 383, 384, 385, 387], "tag": [0, 134, 243, 244, 261, 375, 380, 381], "re": [0, 7, 25, 31, 32, 36, 37, 42, 47, 49, 59, 61, 62, 75, 76, 79, 81, 82, 89, 91, 94, 95, 98, 99, 100, 103, 104, 105, 106, 109, 119, 122, 125, 138, 139, 145, 148, 149, 155, 158, 160, 163, 182, 185, 188, 193, 197, 205, 217, 220, 226, 228, 236, 239, 242, 249, 252, 266, 267, 273, 276, 277, 283, 286, 289, 292, 314, 317, 322, 326, 334, 339, 346, 349, 355, 357, 372, 379, 382, 383, 384, 387, 388], "launch": [0, 3, 8, 10, 11, 13, 30, 31, 35, 36, 42, 46, 48, 52, 53, 71, 81, 87, 91, 98, 117, 119, 155, 158, 208, 213, 239, 240, 242, 245, 262, 283, 337, 342, 343, 363, 379], "mani": [0, 3, 4, 14, 28, 29, 36, 40, 41, 42, 45, 47, 51, 53, 54, 61, 71, 76, 77, 78, 81, 83, 84, 88, 89, 91, 94, 95, 114, 115, 121, 122, 128, 129, 131, 146, 149, 154, 155, 156, 170, 174, 191, 193, 194, 197, 208, 216, 217, 218, 220, 225, 226, 228, 232, 237, 239, 247, 248, 249, 255, 256, 258, 274, 277, 282, 283, 284, 286, 290, 293, 299, 303, 320, 322, 323, 326, 337, 345, 346, 347, 349, 354, 355, 357, 361, 368, 372, 379, 382, 385, 387, 388, 393], "time": [0, 1, 3, 4, 9, 10, 11, 13, 14, 16, 17, 18, 24, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 41, 44, 45, 46, 49, 52, 53, 58, 59, 61, 62, 67, 73, 75, 76, 82, 83, 84, 89, 90, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 110, 114, 115, 118, 119, 121, 122, 128, 129, 131, 134, 142, 143, 145, 146, 148, 149, 150, 154, 155, 156, 158, 159, 163, 164, 168, 169, 170, 172, 175, 178, 184, 185, 187, 188, 193, 194, 196, 197, 200, 201, 207, 208, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 239, 242, 243, 244, 248, 249, 255, 256, 258, 261, 262, 270, 271, 273, 274, 276, 277, 278, 280, 282, 283, 284, 286, 288, 290, 293, 297, 298, 299, 301, 304, 313, 314, 316, 317, 322, 323, 325, 326, 328, 329, 330, 334, 336, 337, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 365, 367, 368, 370, 372, 375, 379, 380, 382, 383, 384, 385, 387, 388], "releas": [1, 3, 7, 13, 16, 37, 46, 47, 61, 74, 75, 76, 79, 80, 81, 89, 90, 91, 95, 104, 105, 106, 107, 108, 110, 121, 149, 150, 151, 155, 169, 178, 200, 208, 217, 218, 226, 228, 234, 242, 243, 244, 245, 249, 277, 278, 279, 283, 298, 307, 329, 346, 347, 355, 357, 363, 371, 375], "date": [1, 47, 61, 76, 134, 149, 243, 261, 277, 337, 381], "12": [1, 11, 22, 28, 36, 53, 63, 67, 95, 100, 114, 115, 149, 154, 155, 197, 208, 210, 213, 217, 226, 228, 239, 242, 243, 248, 249, 276, 277, 282, 283, 286, 316, 317, 320, 326, 337, 339, 342, 344, 346, 355, 357, 369, 370, 372, 373, 375, 379, 380, 382, 383, 384, 387, 388], "08": [1, 15, 153, 200, 249, 276, 281, 329, 391], "2022": [1, 242, 243, 248, 249, 370, 391], "mcomplex": 1, "dat": [1, 10, 11, 16, 17, 28, 49, 71, 89, 91, 184, 188, 283, 313, 316, 317, 344], "normal": [1, 8, 25, 27, 36, 43, 52, 61, 63, 65, 76, 92, 99, 114, 115, 121, 125, 126, 128, 129, 132, 143, 146, 148, 149, 150, 151, 154, 155, 156, 159, 162, 163, 165, 166, 168, 169, 170, 172, 178, 181, 184, 185, 191, 193, 196, 197, 208, 213, 217, 220, 224, 226, 227, 228, 230, 234, 239, 243, 249, 252, 253, 255, 256, 259, 271, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 292, 294, 295, 297, 298, 299, 301, 307, 310, 313, 314, 320, 322, 325, 326, 337, 342, 346, 349, 353, 355, 356, 357, 359, 362, 363, 368, 371, 379, 380, 382], "hh": [1, 4, 11, 14, 15, 22, 25, 28, 30, 33, 36, 37, 43, 44, 45, 46, 48, 58, 61, 62, 63, 64, 67, 72, 75, 76, 77, 78, 83, 99, 103, 105, 121, 122, 131, 143, 145, 146, 148, 149, 150, 151, 154, 160, 174, 199, 201, 207, 208, 217, 220, 239, 247, 258, 271, 273, 274, 276, 277, 278, 279, 282, 283, 287, 289, 303, 328, 330, 336, 337, 344, 346, 349, 351, 373, 382, 383, 384, 388], "5": [1, 4, 10, 11, 13, 14, 16, 17, 18, 21, 22, 24, 28, 31, 36, 37, 41, 44, 45, 47, 49, 52, 53, 58, 59, 60, 63, 65, 67, 73, 75, 76, 82, 83, 88, 90, 100, 103, 105, 114, 115, 120, 121, 122, 124, 128, 129, 131, 132, 133, 143, 146, 148, 149, 151, 153, 154, 155, 156, 158, 159, 161, 164, 175, 178, 181, 182, 187, 193, 194, 196, 197, 201, 203, 205, 207, 208, 210, 213, 215, 217, 224, 226, 227, 230, 232, 239, 243, 244, 247, 248, 249, 251, 255, 256, 258, 259, 260, 271, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 293, 302, 304, 307, 310, 311, 313, 320, 321, 322, 323, 325, 326, 328, 330, 333, 334, 336, 337, 339, 340, 342, 344, 346, 351, 353, 355, 356, 359, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 382, 383, 384, 385, 387], "1895": 1, "support": [1, 3, 4, 6, 7, 8, 32, 41, 52, 53, 54, 59, 76, 82, 84, 93, 95, 150, 155, 158, 181, 186, 192, 208, 228, 238, 239, 246, 247, 249, 278, 279, 283, 286, 287, 290, 291, 299, 302, 310, 313, 315, 316, 321, 322, 326, 328, 337, 346, 347, 355, 357, 361, 365, 368, 371, 375, 378, 379, 380, 382, 385, 388], "modelview": [1, 46, 82, 100, 121, 248, 249], "1907": [1, 249], "nrnivmodl": [1, 3, 4, 5, 8, 48, 71, 76, 93, 117, 149, 151, 200, 242, 277, 279, 329, 375], "core": [1, 3, 10, 11, 13, 36, 53, 155, 158, 220, 239, 242, 244, 249, 283, 349, 379, 380, 387], "makefil": [1, 208, 245], "sdkroot": 1, "1942": 1, "declar": [1, 3, 4, 37, 41, 42, 76, 91, 95, 98, 114, 115, 119, 131, 145, 149, 150, 154, 155, 156, 158, 159, 160, 164, 168, 178, 181, 182, 184, 197, 201, 202, 211, 216, 217, 226, 239, 243, 249, 258, 271, 273, 277, 278, 282, 283, 284, 286, 288, 297, 307, 310, 311, 326, 330, 331, 340, 345, 346, 355, 373, 379, 380, 383], "templat": [1, 21, 22, 32, 52, 76, 85, 143, 154, 155, 164, 169, 174, 202, 208, 217, 224, 249, 271, 282, 283, 298, 303, 331, 337, 346, 353], "must": [1, 3, 4, 5, 6, 7, 8, 16, 28, 29, 31, 39, 44, 51, 54, 59, 61, 62, 65, 68, 69, 70, 74, 75, 76, 77, 78, 86, 89, 90, 91, 98, 100, 104, 114, 115, 119, 122, 129, 131, 133, 134, 139, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 168, 170, 174, 177, 178, 181, 184, 186, 187, 193, 194, 196, 197, 200, 201, 202, 205, 208, 211, 213, 214, 215, 216, 217, 224, 226, 228, 230, 232, 233, 239, 242, 243, 244, 249, 256, 258, 260, 261, 267, 271, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 288, 290, 293, 297, 299, 303, 306, 307, 310, 313, 315, 316, 322, 323, 325, 326, 329, 330, 331, 334, 337, 339, 340, 342, 343, 345, 346, 353, 355, 357, 359, 361, 362, 368, 370, 371, 373, 375, 379, 380, 382, 384, 385, 388], "command": [1, 3, 4, 7, 8, 10, 11, 13, 14, 28, 29, 30, 31, 35, 45, 52, 61, 65, 71, 76, 91, 94, 114, 115, 149, 150, 151, 153, 155, 160, 161, 164, 165, 166, 168, 169, 173, 174, 176, 178, 181, 184, 185, 186, 187, 188, 197, 200, 201, 207, 208, 215, 218, 219, 225, 226, 228, 230, 234, 239, 242, 243, 244, 249, 262, 277, 278, 281, 283, 290, 293, 294, 295, 297, 298, 303, 305, 307, 310, 313, 314, 315, 316, 317, 326, 329, 330, 336, 337, 344, 347, 348, 354, 355, 357, 359, 363, 375, 379, 385, 387], "level": [1, 3, 10, 11, 32, 35, 37, 52, 62, 71, 72, 76, 84, 93, 102, 114, 115, 121, 124, 128, 137, 142, 146, 148, 149, 150, 158, 160, 164, 165, 168, 178, 182, 184, 186, 191, 196, 197, 200, 201, 202, 207, 208, 211, 217, 220, 221, 228, 230, 244, 249, 251, 255, 262, 265, 270, 274, 276, 277, 278, 286, 289, 294, 297, 307, 311, 313, 315, 320, 325, 326, 329, 330, 331, 336, 337, 340, 346, 350, 357, 359, 370, 371, 379, 382, 388], "1914": 1, "setup": [1, 3, 35, 45, 52, 59, 76, 95, 148, 155, 156, 208, 220, 222, 230, 239, 242, 244, 245, 247, 249, 276, 283, 284, 326, 346, 349, 351, 359, 376, 385], "ex": [1, 76, 122, 193, 213, 239, 242, 244, 245, 322, 342], "distribut": [1, 3, 4, 7, 25, 26, 27, 30, 36, 41, 46, 48, 71, 84, 95, 102, 114, 121, 122, 148, 150, 151, 155, 156, 158, 174, 194, 196, 197, 216, 240, 241, 243, 248, 249, 276, 278, 279, 283, 284, 286, 303, 323, 325, 326, 345, 371, 373, 379, 387, 388], "env": [1, 52, 216, 239, 242, 247, 345], "com": [1, 3, 4, 7, 10, 52, 58, 65, 77, 91, 93, 237, 238, 242, 243, 245, 248, 283, 357, 367, 369, 370, 372, 373, 375, 378, 379, 380, 387], "pull": [1, 3, 28, 29, 45, 61, 65, 95, 244, 368, 380, 381], "1941": 1, "document": [1, 3, 4, 28, 35, 51, 53, 76, 77, 78, 82, 95, 104, 122, 137, 148, 149, 158, 160, 197, 200, 208, 237, 239, 240, 265, 276, 277, 286, 289, 326, 329, 330, 337, 367, 380, 381, 382], "ad": [1, 12, 32, 39, 59, 65, 71, 76, 98, 119, 121, 124, 128, 144, 146, 149, 150, 155, 156, 158, 169, 172, 178, 193, 196, 197, 201, 207, 211, 217, 226, 228, 230, 239, 243, 251, 255, 272, 274, 277, 278, 279, 283, 284, 286, 290, 298, 301, 302, 305, 307, 322, 325, 326, 328, 330, 336, 337, 340, 346, 355, 357, 359, 361, 367, 370, 379, 380, 382, 387, 388, 391], "incf": [1, 391], "cn": [1, 249, 372, 391, 393], "onlin": [1, 121, 243, 249, 283, 367, 369, 370, 372, 373, 378, 379, 380, 388, 391], "materi": [1, 71, 85, 149, 239, 249, 277, 368], "1932": [1, 249], "updat": [1, 6, 18, 29, 32, 61, 71, 76, 77, 93, 103, 128, 145, 148, 149, 150, 155, 158, 159, 161, 178, 199, 217, 221, 228, 229, 231, 239, 242, 244, 255, 273, 276, 277, 278, 283, 288, 290, 307, 325, 328, 336, 346, 350, 357, 358, 360, 373, 379, 380, 385, 388], "deal": [1, 36, 42, 47, 61, 62, 71, 76, 89, 91, 98, 119, 121, 131, 148, 149, 150, 161, 184, 193, 207, 210, 223, 229, 258, 276, 277, 278, 290, 313, 336, 339, 352, 358, 371, 379, 385], "sim": [1, 4, 28, 29, 36, 58, 217, 344, 346], "movi": [1, 30, 221, 231, 350, 360], "more": [1, 3, 4, 7, 8, 9, 10, 11, 14, 16, 17, 18, 24, 25, 28, 31, 32, 33, 36, 38, 40, 41, 42, 46, 47, 51, 53, 54, 59, 61, 63, 66, 68, 71, 72, 74, 75, 76, 77, 78, 81, 84, 85, 88, 89, 91, 93, 94, 95, 98, 105, 109, 114, 115, 119, 121, 122, 128, 129, 131, 133, 139, 143, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 187, 188, 194, 196, 197, 200, 201, 204, 207, 208, 216, 217, 220, 221, 222, 224, 226, 228, 231, 232, 234, 236, 237, 239, 242, 243, 246, 249, 255, 256, 258, 260, 267, 271, 273, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 291, 293, 298, 307, 315, 316, 317, 323, 325, 326, 329, 330, 333, 336, 337, 342, 345, 346, 349, 350, 351, 353, 355, 357, 360, 361, 363, 365, 367, 368, 372, 374, 379, 380, 382, 383, 384, 387], "1925": [1, 249], "transfer": [1, 4, 8, 25, 65, 76, 89, 121, 125, 127, 131, 141, 152, 158, 161, 197, 201, 233, 239, 249, 252, 254, 257, 258, 269, 280, 286, 290, 326, 330, 362, 388], "yale": [1, 38, 76, 84, 95, 121, 155, 159, 200, 239, 243, 249, 283, 288, 329, 337, 393], "websit": [1, 40, 379, 380, 385, 387], "1867": 1, "nrnmpi": [1, 213], "load": [1, 3, 7, 8, 13, 14, 16, 17, 18, 19, 20, 30, 31, 36, 37, 38, 42, 45, 46, 52, 64, 67, 71, 76, 88, 95, 98, 103, 119, 122, 135, 146, 149, 155, 156, 158, 161, 197, 200, 207, 208, 211, 213, 220, 224, 226, 238, 239, 242, 244, 249, 263, 274, 277, 283, 284, 286, 290, 326, 329, 336, 340, 342, 347, 349, 353, 355, 368, 370, 371, 374, 383, 385, 386, 387, 393], "drop": [1, 52, 71, 365, 379], "printf": [1, 8, 11, 16, 17, 23, 28, 29, 54, 55, 64, 72, 76, 114, 115, 133, 135, 146, 151, 155, 160, 164, 169, 173, 180, 183, 184, 188, 192, 193, 197, 205, 208, 210, 212, 216, 220, 234, 263, 309, 312, 313, 317, 320, 322, 326, 327, 334, 337, 341, 345, 388], "alreadi": [1, 7, 11, 14, 35, 37, 46, 47, 51, 52, 54, 61, 62, 76, 77, 78, 84, 85, 89, 91, 93, 108, 110, 128, 144, 154, 155, 156, 161, 165, 170, 182, 188, 197, 224, 226, 233, 237, 239, 243, 255, 272, 282, 283, 284, 290, 294, 299, 317, 326, 353, 355, 362, 379, 385, 388], "lib": [1, 3, 7, 10, 11, 76, 87, 149, 153, 155, 156, 165, 170, 178, 197, 201, 207, 208, 213, 214, 224, 226, 228, 238, 239, 242, 245, 262, 277, 281, 283, 284, 294, 299, 307, 326, 330, 336, 342, 343, 353, 355, 357, 375], "1938": 1, "complet": [1, 10, 11, 12, 13, 14, 16, 33, 43, 45, 49, 51, 61, 62, 75, 79, 89, 90, 91, 96, 100, 103, 104, 108, 110, 114, 115, 118, 128, 129, 131, 134, 149, 155, 173, 176, 193, 197, 213, 217, 218, 219, 220, 221, 224, 226, 228, 239, 245, 249, 255, 256, 258, 261, 277, 283, 302, 305, 322, 326, 342, 346, 347, 348, 349, 353, 355, 357, 379, 380], "issu": [1, 4, 7, 8, 29, 47, 61, 65, 77, 93, 95, 121, 149, 155, 156, 161, 184, 213, 217, 239, 242, 243, 249, 277, 283, 284, 287, 290, 313, 342, 346, 371, 379, 380, 387], "1944": [1, 249], "01": [1, 16, 22, 31, 53, 73, 75, 91, 97, 111, 148, 161, 168, 178, 196, 197, 213, 217, 232, 242, 243, 244, 248, 249, 276, 283, 286, 290, 297, 307, 326, 334, 342, 346, 355, 361, 370, 372, 373, 375, 384, 385, 387], "07": [1, 155, 159, 249, 276, 288, 373, 391], "allow": [1, 3, 12, 13, 16, 17, 18, 24, 25, 27, 33, 38, 39, 42, 45, 47, 52, 54, 59, 62, 65, 71, 72, 75, 76, 81, 89, 90, 91, 94, 98, 109, 111, 114, 115, 119, 121, 125, 128, 129, 131, 133, 140, 142, 145, 146, 149, 150, 151, 154, 155, 156, 158, 159, 161, 163, 164, 165, 168, 169, 172, 174, 175, 176, 181, 184, 186, 193, 195, 196, 197, 200, 201, 202, 208, 211, 213, 216, 217, 220, 224, 226, 227, 228, 230, 239, 242, 243, 249, 252, 255, 256, 258, 260, 262, 268, 270, 273, 274, 277, 278, 279, 282, 283, 284, 286, 288, 290, 291, 293, 294, 297, 298, 301, 303, 304, 305, 307, 310, 311, 313, 315, 322, 324, 325, 326, 329, 330, 331, 337, 340, 342, 345, 346, 349, 353, 355, 356, 357, 359, 361, 367, 368, 371, 372, 373, 379, 380, 382, 383, 384, 385, 387, 388], "multipl": [1, 4, 10, 11, 33, 36, 42, 54, 59, 75, 76, 82, 84, 95, 98, 119, 121, 128, 129, 131, 148, 150, 154, 155, 156, 158, 159, 161, 168, 181, 193, 194, 196, 197, 208, 216, 217, 220, 221, 226, 230, 239, 244, 249, 255, 256, 258, 262, 276, 278, 282, 283, 284, 286, 288, 290, 297, 307, 310, 322, 323, 325, 326, 334, 337, 345, 346, 349, 350, 359, 368, 371, 379, 382, 384, 387, 388], "befor": [1, 3, 4, 7, 8, 10, 11, 14, 28, 29, 36, 40, 42, 43, 47, 48, 51, 52, 54, 61, 63, 64, 65, 71, 72, 76, 81, 85, 87, 88, 89, 91, 93, 95, 97, 98, 102, 103, 107, 119, 120, 128, 129, 131, 133, 144, 146, 147, 148, 153, 154, 155, 156, 158, 164, 165, 168, 169, 172, 173, 178, 185, 196, 197, 199, 200, 207, 217, 218, 219, 220, 222, 226, 227, 230, 234, 239, 243, 244, 255, 256, 258, 260, 272, 274, 275, 276, 281, 282, 283, 284, 286, 287, 294, 297, 298, 301, 302, 307, 314, 322, 325, 326, 328, 329, 336, 337, 346, 347, 348, 349, 351, 355, 356, 359, 363, 368, 371, 374, 379, 382, 383, 384, 385, 387, 388], "after": [1, 3, 8, 10, 11, 13, 24, 29, 31, 32, 37, 38, 40, 42, 45, 47, 51, 52, 61, 64, 65, 71, 72, 75, 76, 81, 84, 88, 91, 96, 98, 100, 102, 109, 114, 115, 119, 120, 121, 125, 128, 129, 131, 133, 139, 143, 145, 146, 147, 148, 149, 153, 154, 155, 156, 161, 164, 173, 181, 184, 185, 186, 187, 196, 197, 201, 207, 208, 216, 217, 220, 222, 224, 226, 227, 228, 230, 234, 239, 242, 243, 244, 249, 252, 255, 256, 258, 260, 262, 267, 271, 273, 274, 275, 276, 277, 281, 282, 283, 284, 287, 290, 293, 302, 310, 313, 314, 315, 316, 325, 326, 330, 336, 345, 346, 349, 350, 351, 353, 355, 356, 357, 359, 363, 371, 379, 380, 382, 383, 384, 385, 387], "same": [1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 24, 25, 28, 29, 30, 32, 33, 36, 37, 39, 41, 42, 43, 45, 46, 48, 52, 53, 54, 59, 60, 61, 62, 63, 65, 66, 71, 75, 76, 83, 84, 88, 89, 90, 91, 93, 95, 98, 102, 105, 106, 114, 115, 119, 122, 129, 131, 139, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 168, 171, 174, 177, 178, 181, 182, 185, 188, 193, 194, 196, 197, 199, 200, 201, 202, 205, 208, 211, 216, 217, 222, 226, 227, 228, 230, 232, 234, 239, 242, 243, 244, 256, 267, 271, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 288, 289, 290, 292, 293, 294, 297, 300, 303, 306, 307, 310, 314, 317, 322, 323, 325, 326, 328, 329, 330, 331, 334, 337, 340, 345, 346, 351, 355, 356, 357, 359, 361, 363, 367, 368, 370, 371, 375, 379, 380, 382, 384, 387, 388, 392], "type": [1, 3, 4, 9, 12, 14, 24, 31, 36, 37, 46, 48, 52, 59, 60, 62, 65, 69, 70, 72, 75, 76, 77, 81, 82, 83, 87, 89, 91, 94, 104, 105, 107, 112, 113, 117, 118, 121, 131, 139, 144, 145, 148, 149, 151, 153, 155, 156, 158, 159, 164, 174, 176, 178, 181, 182, 186, 187, 193, 197, 199, 200, 201, 202, 208, 211, 213, 217, 220, 224, 226, 228, 233, 234, 235, 242, 247, 249, 258, 267, 272, 273, 275, 276, 277, 279, 281, 283, 284, 286, 288, 296, 302, 303, 305, 307, 310, 311, 313, 315, 316, 320, 322, 326, 328, 329, 330, 331, 337, 340, 342, 343, 346, 349, 353, 355, 357, 362, 363, 364, 371, 379, 380, 383, 388, 393], "mod": [1, 3, 5, 6, 7, 10, 11, 36, 46, 48, 49, 53, 66, 76, 77, 78, 82, 114, 115, 131, 139, 148, 149, 150, 155, 166, 189, 201, 207, 217, 224, 242, 246, 249, 258, 267, 276, 277, 278, 279, 283, 286, 295, 318, 330, 336, 346, 353, 375, 376, 379, 388], "file": [1, 3, 5, 6, 7, 10, 11, 13, 16, 17, 18, 19, 20, 24, 26, 27, 30, 31, 32, 36, 37, 38, 40, 45, 46, 49, 51, 52, 53, 59, 60, 62, 64, 65, 67, 74, 76, 77, 78, 82, 84, 85, 87, 89, 91, 95, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 115, 116, 120, 124, 128, 129, 131, 135, 139, 142, 148, 149, 150, 155, 156, 165, 166, 168, 170, 172, 176, 178, 180, 183, 185, 186, 193, 197, 199, 200, 201, 207, 208, 211, 213, 215, 216, 217, 220, 222, 223, 225, 226, 227, 234, 238, 239, 242, 244, 246, 251, 255, 256, 258, 263, 267, 269, 270, 271, 276, 277, 278, 279, 283, 284, 286, 294, 295, 297, 299, 301, 305, 307, 309, 312, 314, 315, 322, 326, 328, 329, 330, 336, 337, 340, 342, 344, 345, 346, 349, 351, 352, 354, 355, 356, 361, 363, 368, 371, 376, 379, 383, 385, 387, 388, 393], "1722": [1, 249], "sever": [1, 10, 11, 24, 25, 36, 37, 39, 41, 42, 46, 47, 52, 59, 62, 71, 76, 88, 89, 91, 94, 95, 98, 102, 119, 121, 128, 129, 131, 142, 145, 148, 149, 150, 155, 158, 164, 168, 184, 194, 196, 197, 207, 218, 224, 226, 227, 230, 231, 232, 233, 234, 238, 255, 256, 258, 270, 273, 276, 277, 278, 283, 286, 297, 313, 323, 325, 326, 336, 347, 353, 355, 356, 359, 360, 361, 362, 363, 371, 379, 380, 382, 384, 385, 389], "includ": [1, 3, 4, 7, 42, 43, 46, 47, 52, 53, 54, 59, 62, 69, 70, 71, 74, 76, 77, 83, 84, 91, 93, 95, 98, 102, 103, 118, 119, 121, 122, 128, 143, 148, 150, 155, 158, 160, 162, 172, 184, 187, 191, 193, 195, 197, 201, 211, 218, 220, 222, 226, 232, 234, 239, 242, 243, 244, 249, 255, 271, 276, 278, 283, 286, 287, 289, 291, 301, 313, 316, 320, 322, 324, 326, 330, 337, 340, 346, 347, 349, 351, 355, 361, 362, 363, 368, 370, 371, 373, 374, 379, 380, 382, 387, 388, 389, 392, 393], "random": [1, 6, 29, 32, 76, 82, 89, 91, 102, 121, 133, 135, 148, 150, 169, 181, 193, 194, 197, 198, 216, 220, 222, 232, 246, 249, 260, 263, 276, 278, 310, 322, 323, 326, 327, 345, 349, 351, 361, 388], "model": [1, 3, 4, 5, 6, 8, 14, 16, 17, 18, 25, 26, 27, 35, 38, 40, 41, 42, 48, 49, 50, 51, 53, 60, 63, 64, 72, 76, 77, 78, 82, 83, 85, 88, 89, 93, 96, 97, 98, 99, 100, 103, 105, 110, 119, 120, 125, 129, 133, 143, 146, 147, 148, 150, 154, 155, 156, 158, 159, 161, 166, 170, 178, 191, 194, 196, 200, 215, 216, 217, 220, 222, 224, 226, 228, 231, 234, 236, 237, 239, 247, 248, 249, 252, 256, 260, 262, 271, 274, 275, 276, 278, 282, 283, 284, 286, 287, 288, 290, 295, 299, 307, 320, 323, 325, 329, 337, 344, 345, 346, 349, 351, 353, 355, 357, 360, 363, 365, 367, 368, 370, 371, 372, 375, 376, 378, 380, 381, 382, 383, 384, 386, 388, 389, 391, 393], "1727": 1, "cours": [1, 13, 20, 24, 31, 38, 45, 71, 75, 76, 77, 78, 81, 89, 90, 91, 95, 97, 121, 122, 149, 155, 156, 161, 168, 197, 208, 226, 228, 249, 277, 283, 284, 286, 290, 297, 326, 337, 355, 357, 368, 372, 382, 383, 391], "exercis": [1, 10, 11, 14, 34, 44, 46, 49, 59, 62, 71, 78, 81, 85, 91, 97, 100, 102, 105, 121, 286, 368, 383, 386, 391], "set": [1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 24, 25, 28, 31, 32, 33, 35, 36, 37, 38, 41, 42, 45, 46, 49, 50, 52, 54, 59, 60, 63, 64, 65, 67, 72, 73, 75, 76, 81, 82, 84, 87, 88, 89, 94, 95, 96, 97, 98, 103, 104, 106, 107, 109, 111, 114, 115, 118, 119, 120, 121, 122, 128, 129, 131, 133, 139, 140, 142, 143, 144, 146, 148, 149, 150, 153, 154, 155, 158, 159, 160, 161, 164, 165, 166, 168, 169, 178, 179, 184, 185, 187, 192, 193, 194, 196, 197, 199, 201, 204, 205, 207, 208, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 230, 232, 234, 238, 239, 242, 249, 255, 256, 258, 260, 262, 267, 268, 270, 271, 272, 274, 276, 277, 278, 281, 282, 283, 286, 288, 289, 290, 294, 295, 297, 298, 307, 308, 313, 314, 316, 321, 322, 323, 325, 326, 327, 328, 330, 333, 334, 336, 337, 344, 346, 349, 350, 351, 353, 354, 355, 356, 357, 359, 361, 362, 363, 367, 368, 370, 371, 373, 374, 375, 379, 380, 382, 383, 385, 393], "2018": [1, 26, 248, 249, 283, 368, 379], "1735": [1, 249], "public": [1, 21, 22, 32, 52, 71, 75, 76, 77, 78, 83, 84, 118, 121, 143, 155, 165, 173, 180, 182, 185, 211, 228, 244, 271, 283, 294, 309, 311, 314, 340, 357, 379, 388], "1819": 1, "1725": 1, "3": [1, 3, 10, 11, 13, 19, 21, 22, 25, 27, 28, 29, 32, 33, 35, 40, 43, 44, 45, 47, 52, 53, 59, 60, 63, 64, 66, 67, 72, 73, 76, 87, 88, 95, 104, 112, 113, 114, 115, 120, 131, 133, 134, 143, 144, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 164, 168, 171, 173, 178, 181, 182, 185, 186, 187, 189, 192, 193, 196, 197, 199, 200, 201, 202, 207, 208, 210, 213, 215, 217, 220, 225, 226, 227, 228, 230, 231, 232, 234, 236, 239, 242, 243, 244, 246, 248, 249, 258, 260, 261, 271, 272, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 293, 297, 298, 300, 307, 310, 311, 314, 315, 316, 317, 318, 320, 321, 322, 325, 326, 328, 329, 330, 331, 336, 337, 339, 340, 341, 342, 344, 346, 349, 351, 354, 355, 356, 357, 359, 360, 361, 362, 363, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 385, 386, 387, 393], "6": [1, 3, 10, 11, 22, 25, 28, 40, 41, 46, 52, 58, 59, 60, 67, 76, 88, 95, 114, 115, 122, 129, 151, 154, 155, 161, 178, 182, 187, 191, 193, 196, 197, 200, 201, 210, 213, 217, 220, 226, 227, 230, 238, 239, 242, 244, 248, 249, 256, 276, 279, 282, 283, 289, 290, 304, 307, 311, 318, 320, 322, 325, 326, 329, 330, 337, 339, 341, 342, 344, 346, 349, 351, 355, 356, 359, 362, 367, 369, 370, 371, 372, 373, 374, 375, 377, 379, 382, 383, 384, 387], "wa": [1, 3, 4, 7, 31, 32, 35, 36, 39, 40, 41, 47, 52, 61, 62, 65, 73, 75, 76, 81, 84, 89, 91, 94, 96, 107, 114, 115, 116, 118, 120, 121, 125, 131, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 168, 169, 171, 172, 178, 181, 182, 184, 187, 191, 193, 194, 196, 197, 200, 204, 207, 208, 213, 215, 216, 217, 218, 220, 226, 228, 230, 234, 239, 243, 244, 252, 258, 262, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 292, 294, 297, 300, 301, 302, 307, 310, 311, 313, 316, 320, 322, 323, 325, 326, 328, 329, 333, 336, 337, 342, 344, 345, 346, 347, 349, 355, 357, 359, 363, 365, 368, 375, 379, 382, 385, 387, 390, 393], "ha": [1, 3, 4, 9, 10, 11, 12, 13, 16, 19, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 51, 52, 53, 54, 59, 61, 62, 68, 71, 75, 76, 81, 84, 89, 90, 91, 93, 94, 95, 98, 100, 102, 105, 114, 115, 118, 119, 121, 122, 125, 128, 129, 131, 139, 144, 145, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 172, 176, 181, 184, 191, 193, 194, 197, 201, 202, 203, 207, 208, 213, 216, 217, 218, 224, 226, 228, 231, 234, 239, 240, 242, 249, 252, 255, 256, 258, 267, 272, 273, 276, 277, 278, 279, 282, 283, 284, 286, 289, 290, 291, 292, 294, 295, 297, 298, 301, 305, 310, 313, 320, 322, 323, 324, 326, 330, 331, 332, 334, 336, 337, 342, 345, 346, 347, 353, 355, 357, 360, 363, 368, 370, 371, 373, 374, 375, 379, 380, 382, 383, 384, 385, 387, 388], "reach": [1, 4, 13, 24, 29, 76, 89, 148, 154, 155, 159, 164, 197, 228, 231, 249, 276, 282, 283, 288, 326, 357, 360, 371, 379, 380, 385], "life": [1, 249, 380, 381], "1733": 1, "method": [1, 4, 24, 26, 32, 33, 35, 36, 38, 40, 44, 54, 59, 61, 62, 71, 75, 88, 89, 91, 93, 95, 114, 115, 118, 121, 128, 129, 131, 133, 134, 143, 145, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 164, 168, 191, 193, 195, 196, 197, 199, 201, 202, 205, 208, 216, 217, 220, 222, 224, 225, 226, 230, 234, 239, 242, 248, 249, 255, 256, 258, 260, 261, 271, 273, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 297, 304, 320, 322, 324, 325, 326, 328, 330, 331, 334, 336, 337, 341, 345, 346, 349, 351, 353, 354, 355, 359, 362, 363, 368, 373, 382, 383, 384, 385, 387, 391], "typic": [1, 4, 7, 8, 47, 53, 89, 93, 117, 131, 150, 155, 158, 197, 208, 218, 239, 245, 246, 249, 258, 278, 283, 286, 326, 337, 347, 355, 362, 371, 375, 379, 380, 383, 387, 388], "nrn_": 1, "hoc_": 1, "function": [1, 3, 4, 9, 10, 11, 13, 25, 27, 32, 36, 38, 39, 40, 41, 44, 45, 46, 52, 54, 55, 61, 63, 72, 79, 81, 82, 84, 88, 91, 95, 101, 103, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 141, 143, 144, 145, 146, 148, 150, 151, 154, 155, 156, 160, 161, 164, 165, 168, 170, 175, 176, 178, 181, 182, 184, 186, 187, 188, 192, 193, 194, 197, 198, 200, 201, 202, 206, 208, 209, 210, 211, 213, 216, 217, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 242, 243, 244, 247, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 269, 271, 272, 273, 274, 276, 278, 279, 282, 283, 284, 289, 290, 292, 294, 297, 298, 299, 302, 304, 305, 307, 310, 311, 313, 314, 315, 316, 317, 321, 322, 323, 326, 327, 328, 329, 330, 331, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 350, 351, 352, 355, 356, 357, 359, 360, 361, 362, 363, 365, 367, 368, 369, 371, 373, 375, 376, 378, 379, 380, 382, 383, 384, 393], "implicitli": [1, 93, 149, 217, 227, 277, 346, 356], "translat": [1, 4, 7, 8, 35, 36, 47, 50, 53, 59, 76, 77, 81, 82, 84, 93, 95, 107, 134, 148, 149, 150, 155, 161, 185, 208, 217, 226, 231, 242, 248, 249, 261, 276, 277, 278, 283, 290, 314, 337, 346, 355, 360, 375, 379, 384, 385], "caus": [1, 9, 33, 36, 42, 46, 50, 75, 76, 90, 91, 93, 98, 119, 128, 129, 133, 139, 148, 149, 150, 154, 155, 156, 158, 161, 166, 169, 186, 194, 197, 208, 217, 218, 226, 228, 229, 231, 239, 247, 249, 255, 256, 260, 262, 267, 276, 277, 278, 282, 283, 284, 286, 290, 295, 298, 315, 323, 326, 337, 346, 347, 355, 357, 358, 360, 368, 370, 372, 379, 382, 387], "error": [1, 3, 7, 8, 10, 11, 28, 36, 39, 40, 42, 46, 47, 52, 59, 60, 81, 82, 88, 89, 91, 93, 98, 114, 115, 119, 121, 124, 128, 129, 131, 132, 135, 141, 144, 145, 149, 150, 154, 155, 159, 160, 161, 163, 164, 165, 168, 178, 184, 187, 191, 192, 193, 197, 199, 200, 201, 204, 208, 210, 217, 220, 224, 239, 242, 243, 249, 251, 255, 256, 258, 259, 263, 269, 272, 273, 277, 278, 283, 287, 288, 289, 290, 292, 294, 297, 313, 315, 316, 318, 320, 321, 322, 326, 328, 329, 330, 333, 337, 339, 346, 349, 353, 372, 379, 382, 385, 387, 388], "incorrect": [1, 148, 155, 171, 224, 276, 283, 300, 353], "verbatim": [1, 4, 36, 77, 93, 147, 149, 155, 216, 275, 277, 283, 345, 372], "1755": [1, 249], "1811": 1, "1825": 1, "state": [1, 3, 4, 7, 8, 9, 12, 26, 29, 31, 32, 33, 36, 59, 64, 72, 84, 89, 104, 118, 121, 122, 125, 128, 131, 144, 145, 146, 148, 150, 154, 155, 158, 159, 160, 161, 168, 171, 178, 182, 184, 196, 197, 199, 200, 202, 216, 217, 220, 221, 222, 224, 226, 227, 228, 234, 239, 249, 252, 255, 258, 269, 272, 273, 274, 275, 276, 278, 282, 283, 287, 288, 289, 290, 297, 300, 307, 311, 313, 325, 326, 328, 329, 331, 345, 346, 349, 350, 351, 353, 355, 356, 357, 362, 363, 368, 373, 375, 376, 379], "global": [1, 3, 4, 36, 52, 76, 93, 121, 129, 131, 139, 143, 144, 147, 148, 149, 154, 155, 156, 159, 161, 171, 196, 197, 199, 200, 201, 208, 211, 217, 220, 221, 228, 232, 249, 256, 258, 267, 271, 272, 275, 276, 277, 282, 283, 284, 288, 290, 300, 311, 325, 326, 328, 329, 330, 337, 340, 346, 349, 350, 357, 361, 370, 372, 373, 379, 385], "now": [1, 3, 4, 7, 8, 9, 14, 16, 19, 24, 25, 27, 28, 31, 32, 36, 37, 38, 42, 45, 46, 49, 52, 58, 61, 62, 63, 65, 75, 76, 81, 82, 88, 89, 91, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 111, 114, 115, 118, 119, 120, 148, 150, 155, 156, 161, 168, 178, 187, 213, 217, 218, 224, 239, 242, 244, 276, 278, 283, 284, 290, 297, 298, 307, 326, 337, 342, 346, 347, 353, 355, 365, 367, 368, 369, 371, 372, 373, 382, 383, 384, 385, 387, 388], "disallow": 1, "1723": [1, 249], "being": [1, 3, 4, 10, 11, 13, 14, 25, 32, 36, 40, 42, 49, 53, 61, 71, 76, 91, 93, 95, 98, 119, 121, 143, 148, 149, 150, 151, 153, 154, 155, 156, 158, 161, 164, 168, 181, 187, 193, 195, 197, 217, 220, 228, 231, 242, 271, 276, 277, 278, 279, 281, 282, 283, 284, 286, 293, 297, 310, 316, 322, 324, 326, 328, 337, 346, 349, 357, 360, 362, 368, 379, 380, 383, 384, 385, 388], "fulli": [1, 3, 77, 158, 161, 213, 217, 220, 248, 249, 286, 290, 342, 346, 349, 372, 379], "migrat": [1, 93, 379, 380], "c": [1, 4, 7, 11, 21, 32, 36, 39, 41, 52, 53, 54, 76, 77, 78, 80, 82, 86, 87, 88, 91, 114, 115, 121, 129, 131, 133, 146, 148, 149, 150, 155, 156, 161, 163, 164, 166, 170, 181, 182, 184, 186, 193, 196, 197, 200, 201, 208, 210, 213, 216, 217, 226, 230, 239, 242, 243, 244, 245, 246, 248, 249, 256, 258, 260, 262, 274, 276, 277, 278, 283, 284, 290, 295, 299, 310, 311, 313, 315, 322, 325, 326, 327, 329, 330, 337, 339, 340, 342, 345, 346, 351, 355, 359, 365, 368, 372, 379, 383, 384, 387], "codebas": [1, 239, 365, 379, 380], "start": [1, 3, 7, 12, 13, 16, 22, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 59, 61, 62, 63, 65, 71, 81, 82, 84, 85, 87, 88, 89, 91, 93, 95, 98, 99, 102, 103, 110, 119, 121, 122, 124, 126, 128, 133, 139, 142, 148, 149, 155, 156, 160, 178, 184, 187, 193, 194, 197, 207, 214, 215, 217, 218, 224, 226, 228, 230, 233, 239, 242, 251, 253, 255, 260, 267, 270, 276, 277, 283, 284, 289, 305, 307, 313, 316, 322, 323, 326, 336, 343, 344, 346, 347, 353, 355, 357, 359, 361, 362, 367, 373, 376, 379, 380, 382, 383, 384, 385, 386, 388, 393], "major": [1, 3, 25, 39, 217, 239, 249, 346, 371, 374, 379, 380], "9": [1, 3, 11, 17, 18, 22, 28, 29, 47, 58, 67, 76, 77, 78, 81, 82, 89, 91, 94, 114, 115, 120, 131, 150, 154, 168, 187, 197, 200, 201, 210, 213, 216, 217, 220, 226, 239, 242, 243, 244, 246, 248, 249, 258, 278, 282, 297, 316, 317, 325, 326, 329, 330, 339, 342, 344, 345, 346, 349, 355, 366, 369, 370, 371, 372, 373, 375, 379, 382, 383, 384, 385, 387], "convert": [1, 3, 4, 16, 29, 54, 82, 91, 93, 114, 115, 121, 122, 158, 161, 186, 197, 217, 249, 286, 287, 290, 315, 326, 346, 368, 372], "instead": [1, 3, 8, 10, 11, 25, 29, 30, 31, 32, 39, 45, 47, 59, 61, 62, 65, 68, 71, 76, 77, 78, 81, 91, 93, 98, 99, 103, 110, 114, 115, 119, 121, 122, 124, 148, 149, 150, 154, 155, 156, 158, 160, 161, 171, 178, 182, 184, 193, 196, 197, 200, 207, 208, 217, 220, 226, 228, 235, 242, 247, 251, 276, 277, 278, 282, 283, 284, 286, 287, 288, 289, 290, 298, 300, 304, 307, 313, 320, 322, 325, 326, 329, 334, 336, 337, 339, 340, 346, 349, 353, 355, 357, 359, 361, 362, 364, 367, 368, 370, 371, 372, 374, 379, 382, 383, 384, 385, 387, 388], "compat": [1, 3, 6, 7, 8, 19, 46, 52, 76, 77, 93, 114, 115, 150, 155, 156, 184, 197, 217, 228, 230, 242, 243, 244, 246, 247, 278, 283, 284, 313, 326, 346, 357, 359, 362, 379, 380, 388], "some": [1, 3, 4, 5, 6, 7, 10, 11, 25, 28, 29, 32, 36, 38, 40, 46, 47, 52, 53, 59, 61, 63, 65, 69, 71, 75, 76, 77, 78, 81, 84, 85, 89, 93, 94, 95, 114, 115, 121, 122, 128, 131, 139, 146, 148, 149, 150, 151, 155, 156, 161, 164, 168, 169, 177, 178, 196, 197, 202, 208, 216, 217, 218, 220, 221, 226, 228, 239, 242, 243, 246, 249, 255, 258, 267, 274, 276, 277, 278, 279, 283, 284, 286, 290, 297, 298, 306, 325, 326, 331, 337, 345, 346, 347, 349, 350, 355, 357, 359, 368, 371, 374, 379, 380, 382, 383, 384, 385, 386, 387, 388], "legaci": [1, 3, 82, 84, 131, 149, 242, 262, 277, 292, 298, 316, 318, 333, 337, 349, 365], "contain": [1, 3, 8, 13, 14, 16, 19, 31, 32, 33, 35, 37, 42, 45, 46, 47, 48, 49, 52, 59, 61, 62, 65, 71, 75, 77, 78, 81, 84, 85, 87, 89, 91, 93, 94, 96, 98, 102, 109, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 128, 129, 133, 134, 139, 140, 148, 149, 150, 154, 155, 158, 160, 161, 164, 165, 168, 169, 171, 178, 181, 186, 192, 193, 197, 199, 201, 203, 204, 206, 207, 208, 211, 213, 216, 217, 222, 224, 225, 226, 228, 230, 231, 234, 239, 242, 244, 249, 251, 252, 255, 256, 260, 261, 267, 268, 276, 277, 278, 282, 283, 286, 289, 294, 297, 300, 307, 310, 315, 321, 322, 326, 327, 328, 330, 332, 333, 335, 336, 337, 340, 342, 345, 346, 351, 353, 354, 355, 357, 359, 360, 363, 368, 370, 371, 375, 379, 387, 388], "code": [1, 3, 4, 7, 14, 16, 31, 38, 39, 45, 47, 49, 51, 54, 55, 59, 60, 63, 64, 66, 76, 77, 78, 82, 83, 84, 85, 86, 91, 93, 120, 121, 135, 148, 149, 150, 155, 156, 166, 181, 186, 193, 197, 200, 202, 203, 216, 217, 221, 226, 237, 239, 240, 242, 243, 246, 247, 249, 262, 263, 269, 271, 276, 277, 278, 279, 282, 283, 284, 286, 290, 292, 293, 295, 296, 298, 310, 311, 313, 315, 316, 320, 322, 326, 328, 329, 331, 332, 333, 337, 339, 343, 344, 345, 346, 350, 353, 355, 359, 362, 365, 368, 369, 370, 371, 372, 373, 379, 382, 383, 384, 385, 388, 393], "mai": [1, 3, 7, 8, 10, 11, 14, 25, 29, 31, 33, 36, 37, 39, 40, 42, 47, 53, 54, 59, 61, 62, 65, 71, 75, 76, 77, 78, 81, 88, 89, 91, 93, 94, 95, 98, 102, 103, 105, 114, 115, 119, 121, 122, 124, 128, 129, 131, 133, 134, 139, 146, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 163, 168, 169, 170, 178, 181, 189, 193, 196, 197, 201, 202, 204, 205, 208, 211, 217, 218, 220, 222, 224, 226, 227, 228, 230, 231, 232, 234, 236, 239, 242, 243, 247, 249, 251, 255, 256, 258, 260, 261, 267, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 297, 298, 299, 305, 307, 310, 318, 322, 325, 326, 328, 330, 331, 333, 334, 337, 340, 346, 347, 349, 350, 351, 353, 355, 356, 357, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 378, 379, 380, 382, 383, 384, 385, 387, 388, 390, 392, 393], "given": [1, 8, 26, 28, 31, 37, 38, 40, 41, 42, 51, 52, 65, 89, 91, 98, 102, 114, 115, 119, 121, 122, 124, 131, 133, 139, 142, 149, 151, 155, 156, 158, 159, 160, 161, 164, 168, 172, 178, 181, 185, 186, 194, 196, 197, 200, 201, 207, 208, 215, 217, 221, 222, 223, 224, 226, 227, 228, 230, 232, 234, 239, 242, 251, 258, 267, 270, 277, 279, 283, 284, 286, 287, 288, 289, 290, 297, 301, 307, 310, 314, 315, 323, 325, 326, 328, 329, 330, 336, 337, 344, 346, 350, 351, 352, 353, 355, 356, 357, 359, 361, 363, 368, 369, 370, 371, 373, 375, 379, 380, 382, 387, 388], "valid": [1, 54, 93, 124, 129, 145, 149, 150, 154, 156, 159, 187, 217, 243, 249, 251, 256, 262, 273, 277, 278, 280, 282, 284, 286, 288, 316, 340, 346, 368, 379, 380, 387, 388], "A": [1, 3, 4, 10, 11, 13, 14, 24, 26, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 46, 50, 53, 54, 61, 63, 65, 66, 71, 73, 76, 77, 78, 82, 83, 87, 88, 89, 94, 95, 98, 114, 115, 119, 122, 124, 126, 127, 128, 129, 131, 132, 134, 137, 142, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 168, 169, 172, 176, 181, 182, 184, 187, 188, 193, 194, 197, 199, 200, 201, 202, 206, 207, 208, 210, 214, 215, 216, 217, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 238, 239, 242, 243, 244, 248, 249, 251, 253, 254, 255, 256, 258, 261, 265, 270, 273, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 297, 298, 301, 302, 305, 310, 311, 313, 316, 317, 322, 323, 326, 328, 329, 330, 331, 335, 336, 337, 339, 342, 343, 345, 346, 349, 350, 353, 354, 355, 356, 357, 359, 360, 361, 362, 367, 368, 369, 370, 372, 373, 375, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390], "guid": [1, 10, 11, 55, 88, 121, 122, 242, 249, 380, 381], "post": [1, 10, 11, 13, 16, 29, 32, 38, 71, 77, 78, 121, 150, 154, 155, 156, 169, 197, 226, 228, 234, 249, 278, 280, 282, 283, 284, 298, 326, 355, 357, 363, 379], "random123": [1, 6, 95, 194, 196, 239, 323, 325], "default": [1, 3, 4, 7, 8, 12, 24, 25, 27, 31, 33, 36, 38, 42, 43, 52, 53, 59, 61, 62, 65, 71, 72, 74, 75, 76, 77, 78, 87, 89, 91, 94, 95, 99, 100, 102, 103, 109, 114, 115, 121, 124, 125, 127, 128, 129, 131, 132, 138, 139, 141, 146, 148, 149, 150, 153, 154, 155, 158, 159, 160, 161, 168, 170, 171, 175, 177, 178, 185, 187, 192, 193, 194, 195, 196, 197, 199, 200, 208, 217, 218, 220, 221, 224, 226, 227, 230, 231, 232, 233, 234, 235, 239, 242, 243, 244, 247, 251, 252, 254, 255, 256, 258, 259, 262, 266, 267, 269, 274, 276, 277, 278, 281, 282, 283, 286, 288, 289, 290, 292, 296, 297, 299, 300, 304, 306, 307, 308, 314, 316, 318, 321, 322, 323, 324, 325, 326, 328, 329, 334, 337, 346, 347, 349, 350, 353, 355, 356, 359, 360, 361, 362, 363, 364, 368, 371, 372, 375, 376, 377, 379, 380, 382, 387, 388, 393], "number": [1, 3, 6, 8, 9, 10, 11, 13, 16, 22, 29, 31, 32, 36, 37, 38, 39, 40, 42, 45, 46, 49, 52, 53, 59, 61, 65, 76, 83, 84, 86, 87, 89, 91, 93, 95, 102, 103, 114, 115, 117, 121, 124, 128, 129, 131, 133, 139, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 176, 178, 181, 182, 184, 186, 187, 188, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 210, 211, 213, 216, 217, 218, 221, 222, 224, 226, 227, 228, 230, 231, 233, 234, 239, 242, 243, 246, 249, 251, 255, 256, 258, 260, 267, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 300, 301, 305, 307, 310, 311, 313, 315, 316, 317, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 339, 340, 342, 345, 346, 347, 350, 351, 353, 355, 356, 357, 359, 360, 362, 363, 365, 368, 370, 371, 372, 373, 379, 380, 382, 383, 384, 385, 388], "most": [1, 3, 4, 7, 8, 10, 11, 13, 14, 24, 25, 27, 29, 35, 39, 40, 42, 43, 47, 52, 61, 63, 71, 76, 81, 88, 89, 91, 93, 94, 95, 98, 99, 102, 114, 115, 119, 120, 121, 122, 128, 134, 138, 148, 149, 155, 156, 158, 159, 161, 164, 166, 169, 170, 178, 186, 192, 193, 195, 196, 197, 208, 215, 222, 224, 226, 228, 230, 239, 243, 244, 255, 261, 266, 276, 277, 283, 284, 286, 288, 290, 293, 295, 298, 299, 307, 315, 321, 322, 324, 325, 326, 337, 342, 344, 351, 353, 355, 357, 359, 379, 388, 393], "implement": [1, 4, 13, 16, 17, 27, 32, 35, 36, 39, 43, 52, 53, 54, 61, 69, 70, 74, 76, 82, 83, 84, 85, 89, 95, 100, 121, 122, 124, 131, 134, 139, 141, 142, 145, 146, 148, 149, 150, 151, 152, 154, 156, 158, 164, 168, 172, 174, 178, 182, 184, 193, 197, 204, 214, 217, 219, 220, 222, 224, 225, 226, 236, 239, 246, 249, 251, 258, 261, 267, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 282, 284, 286, 293, 297, 301, 303, 307, 311, 313, 322, 326, 343, 346, 348, 349, 351, 353, 354, 355, 365, 368, 372, 379, 380, 382, 385, 388, 393], "replac": [1, 4, 7, 8, 14, 29, 32, 44, 62, 65, 76, 93, 114, 115, 139, 149, 155, 164, 175, 182, 197, 204, 215, 216, 217, 224, 227, 228, 234, 249, 267, 277, 283, 287, 296, 304, 311, 315, 326, 333, 344, 345, 346, 353, 356, 357, 363, 366, 373, 387], "standard": [1, 10, 11, 16, 17, 18, 33, 34, 37, 46, 50, 53, 71, 76, 84, 91, 93, 95, 114, 115, 121, 122, 134, 135, 143, 146, 148, 149, 150, 155, 156, 158, 160, 165, 180, 183, 184, 187, 188, 193, 196, 197, 199, 201, 207, 208, 217, 223, 227, 228, 230, 242, 249, 261, 263, 271, 274, 277, 278, 283, 284, 286, 287, 289, 294, 309, 312, 313, 316, 317, 322, 325, 326, 328, 330, 336, 337, 339, 346, 352, 356, 357, 359, 368, 369, 372, 373, 379, 380, 382, 383, 387], "librari": [1, 3, 4, 7, 8, 10, 11, 14, 16, 17, 18, 39, 52, 71, 76, 82, 86, 93, 95, 133, 150, 155, 165, 186, 191, 193, 196, 197, 200, 213, 239, 242, 243, 244, 245, 246, 247, 260, 278, 283, 287, 294, 315, 320, 322, 325, 326, 329, 339, 342, 347, 361, 368, 371, 375, 376, 382, 383, 386, 387, 388, 393], "while": [1, 13, 16, 24, 28, 38, 39, 40, 47, 50, 52, 61, 62, 65, 66, 71, 74, 75, 76, 80, 81, 84, 91, 104, 105, 106, 107, 108, 110, 121, 122, 124, 129, 147, 148, 150, 155, 168, 182, 187, 193, 197, 201, 207, 215, 218, 224, 226, 228, 231, 239, 242, 243, 244, 247, 251, 256, 274, 275, 276, 278, 279, 283, 297, 311, 313, 316, 326, 330, 336, 344, 347, 353, 355, 357, 360, 368, 377, 379, 380, 385, 387, 388], "few": [1, 3, 10, 11, 13, 14, 31, 32, 36, 61, 71, 91, 98, 119, 155, 156, 170, 208, 226, 243, 244, 262, 283, 284, 299, 337, 367, 368, 379, 385, 388], "discontinu": [1, 26, 143, 148, 197, 217, 271, 276, 287, 326, 346], "1330": [1, 249], "question": [1, 6, 25, 41, 46, 58, 75, 77, 81, 82, 84, 97, 98, 119, 121, 156, 158, 207, 222, 228, 249, 284, 286, 336, 351, 357, 368, 388], "335": [1, 249], "return": [1, 3, 4, 8, 10, 11, 13, 16, 17, 21, 22, 28, 29, 31, 32, 33, 36, 37, 45, 52, 54, 58, 61, 63, 64, 71, 72, 74, 75, 76, 86, 89, 91, 93, 99, 120, 124, 128, 129, 131, 132, 133, 134, 144, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 181, 182, 184, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 216, 217, 218, 220, 222, 226, 228, 230, 231, 233, 234, 247, 251, 255, 256, 258, 259, 260, 261, 262, 272, 276, 277, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 307, 310, 311, 313, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 345, 346, 347, 349, 351, 355, 357, 359, 360, 362, 363, 368, 369, 370, 373, 375, 377, 382, 383, 384, 387, 388], "proper": [1, 12, 71, 76, 81, 94, 98, 119, 148, 149, 150, 151, 154, 155, 160, 164, 168, 199, 216, 217, 232, 234, 238, 239, 243, 249, 276, 277, 278, 279, 283, 289, 293, 297, 345, 346, 361, 363], "exit": [1, 10, 11, 13, 14, 24, 31, 42, 45, 46, 61, 62, 76, 80, 82, 91, 98, 119, 128, 133, 148, 149, 150, 155, 159, 176, 193, 197, 200, 201, 207, 213, 219, 220, 224, 228, 230, 239, 242, 255, 260, 276, 277, 278, 283, 288, 305, 307, 322, 326, 329, 330, 336, 342, 348, 349, 353, 357, 359, 385], "execut": [1, 3, 5, 6, 7, 8, 10, 11, 13, 16, 17, 18, 24, 28, 29, 30, 32, 36, 37, 45, 46, 49, 51, 53, 54, 55, 65, 71, 72, 76, 77, 78, 83, 91, 93, 95, 120, 121, 122, 124, 128, 129, 133, 135, 143, 149, 150, 151, 154, 155, 156, 159, 160, 161, 163, 164, 168, 169, 173, 174, 176, 178, 181, 184, 187, 188, 197, 199, 200, 201, 202, 204, 205, 207, 208, 214, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 230, 233, 234, 239, 242, 243, 244, 247, 251, 255, 256, 260, 263, 271, 277, 278, 279, 282, 283, 284, 288, 289, 290, 292, 297, 298, 302, 303, 305, 307, 310, 311, 313, 316, 317, 318, 326, 328, 329, 330, 331, 333, 334, 336, 337, 343, 346, 347, 348, 349, 350, 351, 353, 355, 356, 357, 359, 362, 363, 375, 379, 388], "1633": 1, "build": [1, 3, 4, 5, 6, 7, 14, 31, 32, 35, 36, 37, 45, 48, 52, 53, 61, 65, 71, 76, 84, 93, 102, 103, 107, 121, 122, 148, 155, 158, 170, 178, 197, 208, 228, 237, 238, 239, 241, 243, 249, 276, 283, 286, 299, 307, 326, 357, 379, 380, 382, 384, 385, 386, 387, 388, 391], "ubuntu21": 1, "10": [1, 3, 10, 11, 13, 14, 15, 16, 17, 18, 24, 25, 28, 31, 32, 33, 37, 38, 39, 40, 41, 45, 46, 47, 50, 52, 53, 59, 61, 62, 64, 72, 73, 76, 77, 78, 86, 88, 89, 90, 94, 95, 102, 103, 104, 105, 114, 115, 142, 146, 150, 154, 155, 158, 161, 163, 164, 168, 178, 181, 187, 191, 193, 195, 196, 197, 200, 201, 205, 208, 210, 214, 216, 217, 220, 224, 226, 228, 230, 231, 239, 242, 243, 244, 246, 247, 248, 249, 270, 274, 276, 278, 282, 283, 286, 287, 290, 297, 307, 310, 313, 320, 322, 324, 325, 326, 329, 330, 334, 337, 339, 343, 344, 345, 346, 349, 351, 353, 355, 357, 359, 360, 362, 365, 367, 368, 369, 370, 371, 372, 373, 375, 378, 379, 382, 383, 384, 385, 387, 388], "wsl": [1, 237, 241], "escap": [1, 208, 217, 228, 249, 337, 346, 357], "special": [1, 5, 8, 25, 28, 53, 63, 76, 77, 81, 85, 88, 114, 115, 121, 122, 149, 150, 151, 155, 158, 163, 168, 178, 181, 186, 189, 197, 207, 208, 217, 225, 228, 239, 240, 242, 243, 244, 249, 262, 277, 278, 279, 286, 297, 310, 315, 318, 326, 336, 337, 346, 354, 357, 375, 379, 380, 387, 388], "charact": [1, 65, 71, 76, 89, 114, 115, 150, 160, 172, 176, 184, 186, 187, 197, 210, 211, 213, 217, 224, 226, 228, 230, 278, 289, 301, 305, 313, 315, 316, 326, 339, 340, 342, 346, 353, 355, 357, 359, 388], "1862": 1, "mallinfo2": 1, "1805": 1, "domain": [1, 27, 39, 41, 76, 89, 91, 99, 101, 121, 128, 141, 178, 179, 185, 191, 197, 200, 249, 255, 269, 308, 314, 320, 326, 329, 368], "If": [1, 3, 4, 7, 8, 9, 10, 11, 13, 14, 25, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 45, 46, 47, 51, 53, 54, 59, 61, 62, 63, 65, 71, 74, 75, 76, 77, 78, 81, 84, 87, 89, 91, 93, 94, 95, 98, 105, 107, 109, 114, 115, 117, 118, 119, 120, 122, 128, 129, 131, 133, 138, 139, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 181, 182, 184, 187, 188, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 236, 239, 242, 243, 244, 255, 256, 258, 260, 262, 266, 267, 271, 272, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 310, 311, 313, 316, 317, 318, 320, 321, 322, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 360, 361, 362, 363, 364, 368, 370, 371, 379, 380, 382, 383, 385, 387, 388], "refer": [1, 4, 5, 25, 32, 37, 45, 51, 62, 63, 68, 71, 74, 76, 77, 78, 82, 93, 95, 99, 114, 115, 118, 126, 142, 145, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 168, 172, 174, 181, 182, 184, 192, 193, 194, 197, 200, 202, 204, 208, 211, 217, 226, 228, 232, 234, 236, 237, 239, 242, 243, 244, 247, 249, 253, 270, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 297, 301, 303, 307, 310, 311, 313, 321, 322, 323, 325, 326, 329, 331, 333, 337, 340, 341, 346, 355, 357, 361, 362, 363, 368, 371, 381, 383, 385, 387, 388, 393], "minor": [1, 149, 226, 239, 277, 355, 379, 380, 388], "prepar": [1, 3, 45, 61, 71, 93, 197, 216, 226, 228, 243, 249, 283, 326, 345, 355, 357, 379], "upcom": [1, 244], "remain": [1, 32, 33, 38, 46, 50, 68, 75, 91, 94, 128, 139, 149, 150, 154, 155, 160, 164, 167, 169, 185, 193, 197, 230, 236, 255, 267, 277, 278, 282, 283, 286, 289, 293, 296, 298, 314, 322, 326, 359, 372, 384], "older": [1, 71, 77, 93, 197, 242, 286, 293, 322, 326, 342, 361, 371, 387, 388], "straightforward": [1, 7, 81, 283, 379], "featur": [1, 6, 25, 42, 61, 68, 81, 85, 91, 93, 94, 114, 115, 121, 148, 149, 150, 155, 177, 224, 228, 242, 244, 245, 246, 249, 276, 277, 278, 283, 286, 306, 353, 357, 368, 379, 380, 393], "1879": [1, 249], "25": [1, 10, 11, 13, 15, 16, 17, 18, 28, 41, 58, 67, 76, 122, 160, 181, 187, 192, 197, 208, 210, 217, 239, 248, 249, 289, 290, 293, 310, 316, 321, 326, 337, 339, 342, 344, 346, 368, 369, 375, 378, 382, 383, 387, 388, 393], "03": [1, 10, 11, 53, 76, 155, 248, 249, 391], "wheel": [1, 3, 7, 53, 237, 240, 241, 379, 380], "arm": [1, 249], "aarch64": [1, 244], "platform": [1, 3, 84, 121, 122, 200, 242, 244, 249, 329, 342, 370, 379, 380, 387], "via": [1, 4, 5, 8, 13, 22, 31, 32, 37, 44, 52, 59, 65, 66, 76, 81, 83, 88, 93, 95, 98, 119, 121, 127, 131, 134, 143, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 200, 207, 208, 211, 213, 226, 228, 237, 238, 239, 240, 242, 245, 247, 248, 249, 254, 258, 261, 271, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 293, 307, 309, 311, 312, 326, 328, 329, 331, 336, 337, 340, 342, 343, 346, 347, 350, 355, 357, 362, 363, 367, 368, 369, 370, 371, 372, 373, 378, 379, 380, 382, 385, 386, 387, 388, 392], "circleci": [1, 240], "1676": [1, 249], "appl": [1, 52, 240, 244], "m1": [1, 75, 97, 110, 111, 193, 240, 244, 249, 322], "1649": [1, 249], "nvidia": [1, 7, 53, 239, 242, 244], "gpu": [1, 3, 5, 6, 7, 8, 55, 240, 244, 249], "enabl": [1, 3, 6, 7, 25, 53, 75, 91, 95, 98, 119, 121, 155, 197, 201, 228, 238, 239, 242, 243, 248, 249, 283, 326, 330, 357, 361, 372, 373, 374, 375, 379, 382, 385, 387], "iter": [1, 3, 13, 16, 17, 29, 51, 52, 59, 63, 76, 89, 91, 99, 101, 131, 149, 151, 158, 162, 164, 180, 190, 193, 197, 199, 201, 202, 208, 217, 226, 227, 258, 277, 279, 286, 291, 293, 309, 319, 322, 326, 330, 331, 337, 346, 355, 356, 368, 371, 379, 380, 382, 388], "separ": [1, 3, 13, 16, 17, 18, 28, 39, 42, 45, 52, 54, 61, 65, 71, 76, 78, 82, 89, 91, 94, 98, 105, 119, 124, 128, 129, 143, 149, 150, 154, 155, 156, 158, 161, 164, 165, 169, 193, 194, 196, 197, 201, 202, 213, 217, 224, 226, 227, 228, 231, 239, 242, 243, 249, 251, 255, 256, 271, 277, 278, 282, 283, 284, 286, 290, 293, 294, 298, 311, 322, 323, 325, 326, 330, 331, 342, 344, 346, 353, 355, 356, 357, 360, 371, 379, 382, 383, 387, 388], "nvhpc": [1, 3, 7, 244], "21": [1, 41, 52, 58, 121, 155, 197, 216, 239, 244, 248, 249, 283, 326, 345, 382, 383, 387, 388], "sdk": [1, 3, 7, 242], "1657": [1, 249], "coreneuron": [1, 2, 5, 53, 150, 239, 244, 249, 278, 283, 373], "1705": [1, 249], "vendor": [1, 242], "intel": [1, 3, 7, 194, 197, 242, 244, 249, 323, 326], "crai": [1, 3, 7, 121, 134, 215, 242, 261, 344], "better": [1, 7, 12, 24, 28, 35, 39, 71, 73, 76, 91, 95, 120, 149, 155, 156, 164, 191, 193, 197, 208, 217, 231, 242, 249, 277, 283, 284, 286, 293, 320, 326, 343, 346, 360, 379, 382, 388], "hpe": [1, 244], "mpt": [1, 3, 244], "mpi": [1, 2, 5, 7, 8, 10, 11, 26, 77, 95, 131, 141, 152, 153, 156, 240, 242, 243, 245, 258, 269, 280, 281, 284, 294, 386], "1498": 1, "linux": [1, 3, 10, 11, 47, 48, 62, 71, 77, 78, 81, 87, 94, 121, 122, 155, 166, 213, 214, 237, 240, 241, 247, 283, 295, 342, 343, 365, 375, 379, 391], "manylinux2014": [1, 244], "1365": 1, "maco": [1, 10, 48, 62, 71, 77, 78, 224, 237, 240, 242, 243, 247, 353, 365], "universal2": [1, 242, 243, 244], "tight": [1, 149, 150, 249, 277, 278], "integr": [1, 6, 7, 9, 25, 29, 32, 36, 39, 44, 53, 70, 71, 83, 85, 86, 91, 137, 143, 146, 148, 149, 150, 155, 156, 158, 159, 161, 191, 197, 217, 220, 221, 222, 224, 248, 249, 265, 271, 274, 276, 277, 278, 283, 284, 286, 288, 290, 320, 326, 327, 346, 349, 350, 351, 353, 368, 371, 379, 380, 391], "both": [1, 3, 6, 7, 9, 25, 29, 30, 37, 38, 39, 41, 47, 48, 51, 53, 59, 65, 66, 68, 71, 75, 76, 83, 85, 91, 93, 95, 100, 103, 111, 121, 126, 148, 149, 150, 151, 155, 156, 160, 181, 191, 197, 208, 217, 226, 239, 242, 243, 244, 249, 253, 276, 277, 278, 279, 282, 283, 284, 286, 287, 289, 310, 315, 320, 321, 326, 346, 355, 361, 362, 368, 369, 370, 371, 379, 384, 393], "memori": [1, 3, 6, 8, 51, 52, 53, 71, 76, 93, 131, 134, 149, 150, 156, 159, 160, 166, 193, 197, 204, 205, 213, 217, 222, 226, 239, 249, 258, 261, 276, 277, 278, 283, 284, 286, 288, 289, 295, 322, 326, 328, 333, 334, 342, 346, 351, 355, 368, 387], "well": [1, 28, 29, 36, 37, 40, 41, 47, 52, 53, 59, 65, 71, 75, 76, 81, 84, 89, 91, 95, 114, 115, 118, 121, 128, 131, 137, 138, 139, 148, 149, 154, 155, 169, 181, 185, 197, 201, 202, 207, 208, 217, 224, 226, 228, 234, 235, 243, 244, 247, 249, 255, 265, 266, 267, 277, 282, 283, 286, 298, 310, 314, 320, 326, 330, 331, 336, 346, 353, 355, 357, 363, 364, 368, 369, 371, 372, 379, 380, 382, 383, 384, 387], "mode": [1, 42, 45, 61, 65, 71, 74, 75, 76, 79, 80, 89, 91, 94, 118, 126, 139, 142, 161, 168, 172, 175, 184, 185, 192, 217, 223, 226, 228, 230, 231, 234, 244, 249, 253, 267, 270, 276, 283, 290, 297, 301, 304, 313, 314, 321, 346, 352, 355, 357, 359, 360, 363, 367, 369, 370, 372, 373, 378, 386, 388], "extend": [1, 29, 65, 82, 118, 129, 131, 149, 155, 158, 224, 242, 249, 256, 258, 277, 283, 286, 353, 368, 382, 383], "pointer": [1, 6, 28, 29, 38, 52, 54, 76, 133, 135, 147, 154, 155, 159, 160, 163, 168, 178, 181, 182, 184, 193, 197, 199, 200, 201, 202, 205, 208, 215, 216, 217, 226, 228, 233, 260, 263, 275, 279, 282, 283, 286, 288, 289, 292, 297, 299, 307, 310, 311, 313, 322, 326, 328, 329, 330, 331, 334, 337, 339, 344, 345, 346, 355, 357, 362, 374, 388], "ani": [1, 3, 4, 8, 12, 13, 14, 25, 28, 29, 32, 34, 36, 40, 43, 45, 46, 47, 53, 54, 61, 62, 63, 64, 65, 66, 72, 73, 76, 77, 78, 81, 82, 88, 89, 91, 93, 95, 98, 99, 102, 103, 104, 109, 114, 115, 118, 119, 121, 122, 124, 128, 129, 131, 139, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 164, 170, 172, 178, 181, 182, 184, 191, 193, 194, 196, 197, 199, 201, 202, 206, 207, 208, 215, 216, 217, 220, 222, 224, 226, 227, 228, 229, 230, 231, 235, 238, 242, 244, 247, 251, 255, 256, 258, 262, 267, 270, 271, 272, 273, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 293, 294, 299, 301, 307, 310, 311, 313, 320, 322, 323, 325, 326, 328, 330, 331, 335, 336, 337, 344, 345, 346, 349, 351, 353, 355, 356, 357, 358, 359, 360, 362, 364, 367, 368, 371, 372, 373, 374, 379, 382, 383, 385, 387, 388], "rang": [1, 4, 13, 16, 17, 24, 25, 27, 29, 36, 38, 47, 58, 71, 73, 76, 84, 86, 89, 91, 95, 99, 102, 121, 122, 124, 128, 129, 131, 140, 143, 147, 148, 149, 154, 155, 156, 159, 160, 161, 164, 166, 168, 171, 174, 178, 181, 187, 191, 193, 194, 196, 197, 199, 201, 205, 208, 213, 215, 217, 218, 224, 226, 227, 228, 230, 231, 232, 233, 239, 246, 249, 251, 255, 256, 258, 268, 271, 275, 276, 277, 279, 282, 283, 284, 288, 289, 290, 293, 295, 297, 300, 303, 307, 310, 316, 317, 320, 321, 322, 323, 325, 326, 328, 330, 334, 337, 339, 342, 344, 346, 347, 353, 355, 356, 357, 359, 360, 361, 362, 367, 368, 369, 373, 375, 382, 383, 384, 385, 387], "thread": [1, 3, 6, 8, 36, 52, 90, 121, 148, 150, 155, 158, 159, 196, 197, 217, 239, 249, 276, 278, 280, 283, 286, 288, 325, 326, 328, 343, 346, 353, 373, 375], "1622": 1, "construct": [1, 4, 9, 26, 32, 33, 34, 37, 38, 42, 45, 52, 59, 60, 61, 62, 66, 82, 85, 91, 93, 95, 98, 103, 118, 119, 121, 139, 149, 150, 154, 155, 156, 158, 160, 161, 164, 165, 176, 178, 181, 193, 197, 201, 204, 208, 218, 221, 224, 226, 228, 231, 242, 246, 267, 277, 278, 282, 283, 284, 286, 289, 290, 294, 305, 307, 310, 322, 326, 330, 333, 337, 347, 350, 353, 355, 357, 360, 384, 385, 386, 388, 392], "1581": 1, "savest": [1, 135, 200, 216, 220, 263, 286, 329, 345, 349, 388], "1586": 1, "dynam": [1, 3, 8, 38, 41, 76, 83, 121, 135, 141, 155, 156, 158, 169, 178, 224, 226, 228, 242, 248, 249, 263, 269, 284, 286, 298, 307, 353, 355, 357, 365, 367, 368, 373, 375, 382, 383, 388, 393], "extracellular": [1, 4, 33, 131, 134, 141, 146, 148, 150, 151, 155, 200, 217, 248, 249, 258, 261, 269, 274, 276, 278, 279, 283, 329, 346, 368, 370, 373, 376, 388, 393], "tortuos": [1, 286, 370, 375], "volum": [1, 81, 149, 158, 249, 277, 286, 368, 371, 375, 382], "fraction": [1, 25, 61, 63, 71, 95, 102, 148, 159, 226, 249, 276, 286, 288, 355, 371, 375], "1260": [1, 249], "3d": [1, 4, 5, 46, 50, 84, 99, 120, 141, 158, 160, 231, 234, 248, 249, 269, 283, 286, 289, 360, 363, 368, 371, 373, 382], "morphologi": [1, 37, 40, 43, 46, 47, 52, 81, 82, 84, 126, 129, 249, 253, 256, 286, 289, 290, 291, 361, 370, 373, 375, 376, 386, 388], "move": [1, 12, 24, 25, 37, 38, 42, 50, 52, 61, 65, 67, 75, 76, 80, 81, 85, 93, 94, 98, 99, 100, 102, 105, 107, 118, 119, 122, 128, 131, 139, 148, 154, 155, 158, 159, 168, 170, 172, 176, 178, 184, 197, 201, 208, 217, 226, 228, 230, 234, 239, 242, 249, 255, 258, 267, 276, 283, 286, 288, 289, 297, 299, 301, 305, 307, 313, 326, 330, 337, 346, 355, 357, 359, 363, 368, 373, 379, 387], "1147": [1, 249], "dedic": [1, 379], "ci": [1, 3, 132, 207, 239, 242, 244, 245, 259, 336, 379], "repositori": [1, 3, 7, 10, 53, 93, 238, 239, 242, 243, 244, 245, 379, 380], "check": [1, 3, 13, 25, 27, 28, 29, 31, 34, 35, 36, 38, 45, 46, 47, 52, 53, 61, 62, 71, 76, 81, 89, 91, 93, 114, 115, 122, 124, 128, 129, 149, 155, 156, 159, 170, 178, 181, 188, 193, 197, 200, 202, 207, 208, 210, 217, 218, 220, 221, 222, 228, 229, 239, 242, 243, 244, 251, 255, 256, 277, 283, 284, 288, 298, 307, 310, 311, 317, 322, 326, 329, 331, 336, 337, 339, 342, 346, 347, 349, 350, 351, 357, 358, 379, 382, 384, 387], "differ": [1, 3, 4, 5, 7, 10, 11, 13, 14, 24, 25, 28, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 52, 59, 61, 65, 66, 75, 76, 81, 82, 84, 87, 88, 89, 91, 94, 95, 96, 102, 114, 115, 121, 122, 128, 133, 139, 148, 149, 150, 151, 154, 155, 156, 158, 159, 161, 170, 178, 184, 189, 190, 193, 194, 196, 197, 201, 207, 208, 216, 217, 220, 222, 224, 226, 228, 231, 240, 242, 244, 249, 255, 260, 267, 276, 277, 278, 279, 282, 283, 284, 286, 288, 290, 299, 307, 313, 318, 319, 320, 322, 323, 325, 326, 328, 330, 336, 337, 339, 345, 346, 347, 349, 351, 353, 355, 357, 360, 368, 371, 375, 379, 382, 384, 385, 387, 388, 392], "variou": [1, 3, 4, 32, 40, 59, 76, 77, 85, 95, 125, 149, 154, 218, 220, 226, 231, 239, 242, 243, 252, 277, 282, 286, 347, 349, 355, 360, 379, 383, 384, 385, 387], "edu": [1, 38, 95, 121, 155, 159, 184, 194, 197, 200, 234, 239, 243, 249, 283, 288, 313, 323, 329, 337, 363, 393], "readthedoc": 1, "1674": 1, "train": [1, 9, 32, 36, 37, 66, 69, 70, 78, 95, 112, 113, 148, 154, 197, 249, 276, 282, 326], "video": [1, 58, 65, 71, 77, 78, 81, 283, 286, 375, 390, 392, 393], "usag": [1, 5, 6, 11, 12, 51, 53, 59, 71, 82, 88, 128, 131, 137, 139, 142, 150, 155, 158, 160, 162, 163, 169, 174, 197, 199, 201, 208, 217, 218, 226, 230, 235, 239, 244, 255, 258, 265, 267, 270, 278, 282, 283, 286, 289, 298, 303, 328, 330, 337, 346, 347, 349, 355, 359, 364, 368, 372, 379], "profil": [1, 25, 53, 240, 249], "benchmark": [1, 5, 53, 240, 249], "programm": [1, 4, 45, 51, 61, 71, 77, 78, 95, 121, 156, 158, 164, 178, 197, 236, 237, 247, 284, 307, 326, 393], "expand": [1, 46, 49, 65, 77, 78, 84, 197, 248, 249, 326, 375, 383, 384], "rewritten": [1, 379], "1680": [1, 249], "propos": [1, 71, 249, 379], "directli": [1, 35, 54, 59, 76, 94, 121, 124, 145, 149, 156, 158, 181, 182, 197, 208, 216, 217, 228, 239, 247, 249, 251, 260, 271, 273, 277, 283, 284, 286, 289, 290, 293, 310, 311, 326, 330, 333, 336, 337, 343, 345, 346, 357, 370, 371, 379, 380, 388], "click": [1, 12, 14, 24, 25, 27, 31, 32, 42, 45, 46, 47, 50, 61, 62, 65, 68, 71, 74, 75, 76, 79, 80, 81, 84, 89, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 119, 120, 121, 122, 126, 128, 129, 138, 139, 149, 168, 169, 173, 174, 226, 228, 231, 234, 235, 242, 243, 244, 253, 255, 256, 266, 267, 276, 277, 297, 298, 302, 303, 307, 355, 357, 360, 361, 363, 364, 379, 382], "edit": [1, 10, 11, 14, 25, 31, 36, 42, 47, 61, 65, 75, 81, 82, 87, 91, 98, 118, 119, 175, 200, 207, 219, 228, 230, 243, 249, 304, 329, 336, 348, 357, 359, 379], "_nrnthread": 1, "fail": [1, 3, 4, 7, 42, 54, 76, 93, 98, 119, 155, 228, 239, 242, 243, 244, 283, 357], "nrnthread": [1, 4, 52, 239], "1609": 1, "minimum": [1, 16, 17, 40, 53, 89, 91, 99, 128, 129, 133, 148, 155, 156, 164, 196, 197, 217, 242, 243, 255, 256, 260, 276, 283, 284, 325, 326, 334, 346], "15": [1, 13, 16, 17, 18, 19, 22, 30, 53, 58, 87, 95, 133, 153, 159, 160, 181, 196, 197, 226, 230, 242, 244, 248, 249, 260, 281, 288, 289, 290, 310, 325, 326, 355, 359, 365, 367, 368, 371, 373, 375, 379, 382, 383, 387, 388], "1408": [1, 249], "python2": [1, 242], "intern": [1, 3, 4, 5, 8, 12, 36, 39, 76, 93, 95, 121, 128, 129, 135, 144, 145, 146, 148, 149, 150, 151, 155, 158, 159, 160, 161, 168, 196, 200, 205, 216, 217, 220, 226, 243, 246, 248, 249, 255, 256, 263, 272, 273, 274, 276, 277, 278, 279, 283, 286, 288, 289, 290, 297, 325, 329, 334, 345, 346, 349, 355, 379], "readlin": [1, 3, 244, 247], "remov": [1, 3, 28, 36, 42, 59, 65, 93, 98, 119, 128, 129, 131, 138, 139, 142, 151, 154, 155, 160, 161, 162, 165, 168, 169, 178, 184, 188, 197, 200, 203, 211, 217, 224, 226, 227, 228, 234, 238, 249, 255, 256, 258, 266, 267, 269, 270, 279, 282, 283, 289, 290, 291, 294, 297, 298, 307, 308, 313, 317, 326, 327, 329, 332, 334, 340, 346, 353, 355, 356, 357, 363, 383, 387], "1371": [1, 249, 379], "begin": [1, 4, 13, 42, 45, 46, 52, 61, 67, 72, 76, 91, 121, 122, 124, 126, 129, 133, 134, 146, 148, 154, 155, 159, 160, 161, 165, 168, 169, 172, 181, 184, 185, 186, 187, 188, 193, 196, 197, 200, 201, 214, 215, 216, 217, 218, 220, 222, 223, 225, 226, 227, 228, 233, 239, 247, 251, 253, 256, 260, 261, 262, 274, 276, 283, 286, 288, 289, 290, 294, 297, 298, 301, 310, 313, 314, 315, 316, 317, 322, 325, 326, 329, 330, 344, 345, 346, 347, 349, 351, 352, 354, 355, 356, 357, 362, 368, 369, 372, 375, 379, 380, 382, 383, 384, 385, 387, 392, 393], "might": [1, 7, 8, 10, 11, 14, 29, 34, 39, 46, 47, 49, 53, 61, 63, 71, 73, 75, 81, 85, 87, 89, 91, 95, 105, 121, 122, 128, 149, 150, 155, 158, 174, 197, 217, 228, 239, 242, 255, 277, 278, 283, 303, 313, 325, 326, 346, 357, 367, 368, 370, 379, 380, 387], "1651": [1, 249], "parallelcontext": [1, 8, 16, 23, 35, 131, 135, 141, 152, 154, 156, 161, 197, 208, 217, 222, 239, 258, 263, 269, 276, 280, 282, 284, 290, 294, 326, 337, 346, 351, 365, 385, 388, 393], "mpiabort": 1, "sai": [1, 28, 36, 82, 89, 91, 149, 150, 154, 155, 158, 160, 227, 277, 278, 282, 283, 286, 289, 325, 355, 356, 362, 367, 382, 385, 387, 388], "abort": [1, 155, 166, 207, 283, 295, 336], "1567": 1, "openmpi": [1, 3, 7, 10, 242, 243, 244], "initialis": [1, 52], "crash": [1, 42, 45, 89, 98, 119, 150, 240, 278], "argv": [1, 52], "argc": [1, 52], "should": [1, 4, 7, 8, 10, 11, 13, 14, 24, 25, 28, 31, 32, 33, 36, 37, 38, 40, 43, 44, 45, 46, 47, 49, 53, 59, 61, 62, 76, 81, 82, 85, 88, 89, 91, 93, 94, 102, 103, 104, 105, 106, 110, 114, 115, 128, 129, 131, 133, 139, 142, 144, 146, 148, 149, 150, 153, 155, 156, 158, 159, 160, 161, 163, 164, 168, 171, 178, 181, 184, 185, 194, 196, 197, 200, 201, 203, 205, 206, 207, 208, 210, 213, 216, 217, 218, 220, 222, 223, 224, 226, 228, 230, 233, 239, 242, 243, 246, 249, 255, 256, 258, 260, 267, 270, 272, 274, 276, 277, 278, 281, 283, 284, 286, 288, 289, 290, 292, 293, 297, 300, 307, 310, 313, 314, 323, 325, 326, 329, 330, 332, 334, 335, 336, 337, 339, 342, 345, 346, 347, 349, 351, 352, 353, 355, 357, 359, 362, 368, 371, 378, 379, 380, 382, 383, 385, 387, 388], "null": [1, 52, 54, 213, 311, 342], "1682": [1, 249], "avoid": [1, 3, 4, 8, 37, 40, 51, 71, 74, 75, 76, 91, 93, 95, 102, 114, 115, 121, 122, 148, 149, 154, 155, 158, 159, 160, 161, 163, 164, 191, 193, 196, 197, 204, 208, 217, 224, 238, 239, 242, 243, 247, 249, 276, 277, 282, 283, 286, 287, 288, 289, 290, 292, 294, 318, 320, 325, 326, 337, 346, 355, 359, 361, 372, 375, 379, 383, 385], "segfault": [1, 3, 205, 240, 334], "dure": [1, 3, 4, 9, 14, 29, 32, 33, 42, 44, 51, 52, 61, 66, 71, 72, 76, 88, 89, 91, 93, 98, 119, 121, 124, 125, 128, 129, 131, 133, 143, 146, 148, 149, 150, 151, 154, 155, 159, 164, 165, 168, 172, 178, 182, 197, 200, 207, 208, 213, 217, 220, 221, 226, 227, 230, 231, 238, 239, 243, 249, 251, 252, 255, 256, 258, 260, 271, 274, 276, 277, 278, 279, 282, 283, 288, 294, 297, 301, 307, 311, 326, 329, 336, 337, 342, 346, 349, 350, 355, 356, 359, 360, 371, 375, 379, 382, 383, 385], "point": [1, 3, 4, 9, 12, 13, 14, 16, 17, 19, 22, 25, 27, 30, 31, 32, 37, 39, 40, 41, 42, 43, 45, 46, 47, 52, 54, 59, 61, 63, 65, 66, 67, 71, 72, 76, 77, 78, 81, 84, 86, 88, 89, 91, 94, 95, 96, 98, 99, 102, 110, 114, 115, 119, 120, 121, 124, 125, 126, 128, 129, 133, 135, 139, 141, 142, 147, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 168, 169, 171, 181, 182, 186, 187, 192, 194, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 210, 211, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 230, 231, 233, 234, 235, 239, 242, 243, 247, 249, 251, 252, 253, 255, 256, 260, 263, 267, 269, 270, 271, 275, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 293, 295, 297, 298, 300, 310, 311, 313, 315, 316, 317, 321, 323, 324, 325, 326, 328, 330, 331, 333, 334, 336, 337, 339, 340, 345, 346, 347, 349, 350, 351, 353, 354, 355, 357, 359, 360, 362, 363, 364, 365, 367, 371, 373, 379, 380, 382, 384, 385, 388], "1627": 1, "1d": [1, 158, 249, 286, 368], "voxel": [1, 286], "problem": [1, 3, 12, 36, 43, 44, 46, 47, 51, 63, 71, 72, 73, 76, 82, 84, 88, 93, 98, 119, 121, 122, 129, 131, 149, 150, 155, 156, 159, 207, 217, 220, 221, 224, 230, 236, 239, 249, 256, 258, 277, 278, 283, 284, 286, 288, 336, 346, 349, 350, 353, 359, 368, 371, 372, 379, 382], "frusta": 1, "outsid": [1, 3, 53, 54, 124, 128, 129, 150, 155, 158, 165, 197, 202, 230, 239, 244, 249, 251, 255, 256, 278, 283, 286, 294, 326, 331, 359, 368], "grid": [1, 12, 14, 30, 60, 61, 65, 68, 91, 249, 286, 375, 378], "1227": [1, 249], "two": [1, 3, 4, 14, 25, 26, 28, 29, 30, 33, 36, 37, 38, 39, 40, 42, 46, 47, 52, 54, 59, 61, 65, 71, 76, 79, 81, 83, 84, 89, 91, 93, 94, 95, 100, 104, 105, 108, 109, 114, 115, 121, 124, 128, 131, 132, 133, 139, 142, 148, 149, 150, 155, 156, 158, 161, 163, 164, 178, 181, 184, 185, 186, 191, 193, 195, 197, 201, 206, 208, 216, 217, 224, 226, 228, 231, 233, 239, 243, 247, 249, 251, 255, 258, 259, 260, 267, 270, 276, 277, 278, 279, 283, 284, 286, 289, 290, 297, 307, 310, 313, 314, 315, 320, 322, 324, 326, 330, 335, 337, 345, 346, 353, 355, 357, 360, 362, 367, 368, 371, 373, 375, 379, 380, 382, 383, 384, 385, 387, 388, 392, 393], "singl": [1, 3, 5, 10, 11, 13, 26, 28, 33, 36, 38, 42, 45, 47, 48, 49, 51, 61, 65, 66, 67, 71, 75, 76, 81, 84, 90, 91, 94, 95, 98, 102, 103, 104, 105, 114, 115, 119, 121, 122, 124, 128, 129, 133, 137, 138, 139, 142, 148, 149, 154, 155, 156, 158, 159, 160, 161, 164, 168, 169, 173, 174, 186, 187, 193, 194, 196, 197, 199, 200, 201, 207, 211, 217, 220, 221, 224, 226, 228, 230, 232, 242, 248, 249, 251, 255, 256, 260, 265, 266, 267, 270, 276, 277, 282, 283, 284, 286, 288, 289, 290, 293, 297, 298, 302, 303, 315, 316, 322, 323, 326, 328, 329, 330, 336, 340, 344, 346, 349, 350, 353, 355, 357, 359, 361, 362, 367, 368, 371, 373, 379, 384, 385, 386, 387, 388, 391], "swc": [1, 47, 59, 121, 370, 375], "soma": [1, 10, 11, 13, 14, 15, 16, 17, 18, 22, 24, 25, 27, 28, 31, 37, 38, 41, 43, 44, 45, 46, 47, 58, 59, 61, 62, 63, 67, 69, 75, 81, 83, 84, 89, 91, 99, 100, 103, 105, 110, 120, 121, 126, 128, 129, 143, 146, 154, 155, 158, 159, 160, 161, 163, 164, 173, 174, 199, 200, 207, 208, 215, 217, 220, 232, 234, 247, 249, 253, 255, 256, 271, 274, 276, 277, 278, 282, 283, 286, 288, 289, 290, 293, 302, 303, 311, 326, 328, 329, 333, 336, 337, 340, 344, 346, 349, 351, 355, 361, 362, 363, 367, 368, 370, 371, 373, 374, 378, 383, 384, 387, 388], "1144": [1, 249], "current": [1, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 25, 28, 29, 30, 31, 32, 33, 37, 38, 44, 45, 46, 47, 52, 54, 58, 61, 62, 65, 66, 74, 76, 82, 83, 84, 88, 89, 95, 98, 114, 115, 116, 118, 119, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 134, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 171, 173, 177, 178, 182, 184, 185, 186, 187, 193, 196, 197, 199, 201, 203, 207, 208, 213, 214, 217, 218, 220, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 242, 244, 247, 248, 249, 251, 252, 253, 255, 256, 258, 259, 260, 261, 267, 268, 270, 271, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 288, 289, 290, 292, 293, 294, 306, 307, 311, 313, 314, 315, 316, 322, 325, 326, 330, 332, 334, 336, 337, 342, 343, 344, 346, 347, 349, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 370, 373, 375, 379, 383, 384, 388], "respons": [1, 9, 10, 11, 13, 18, 25, 47, 62, 75, 79, 82, 116, 148, 149, 150, 155, 187, 224, 243, 249, 276, 277, 278, 283, 316, 353, 368, 370, 371, 379], "reaction": [1, 26, 89, 135, 141, 149, 155, 200, 208, 222, 248, 249, 263, 269, 277, 283, 287, 289, 329, 337, 351, 367, 370, 371, 373, 374, 388, 391], "diffus": [1, 26, 82, 121, 135, 141, 149, 155, 200, 208, 222, 248, 249, 263, 269, 277, 283, 289, 329, 337, 351, 370, 371, 373, 382, 388, 391, 392], "simul": [1, 4, 5, 6, 9, 10, 11, 12, 16, 17, 18, 24, 26, 29, 38, 40, 41, 42, 46, 49, 53, 61, 69, 70, 71, 76, 77, 78, 82, 83, 84, 88, 89, 91, 95, 98, 100, 112, 113, 118, 119, 122, 128, 129, 134, 137, 138, 143, 146, 148, 149, 154, 155, 156, 158, 159, 160, 161, 162, 192, 196, 197, 200, 207, 215, 216, 217, 221, 222, 224, 227, 228, 230, 239, 242, 247, 248, 249, 255, 256, 261, 265, 266, 271, 274, 276, 277, 282, 283, 284, 286, 288, 289, 290, 291, 321, 325, 326, 329, 330, 336, 344, 345, 346, 350, 351, 353, 356, 357, 359, 367, 368, 370, 371, 374, 375, 376, 379, 384, 385, 386, 391, 392], "1721": [1, 249], "rxdmath": [1, 158, 286, 287, 375, 378], "ab": [1, 76, 86, 145, 191, 193, 197, 249, 273, 275, 320, 322, 326, 327, 346, 388], "longer": [1, 3, 28, 29, 45, 46, 66, 75, 107, 114, 115, 120, 134, 142, 148, 150, 151, 155, 158, 178, 182, 184, 202, 208, 220, 261, 270, 276, 278, 279, 283, 286, 307, 311, 313, 331, 349, 368, 379, 383], "rais": [1, 41, 44, 86, 88, 91, 158, 166, 178, 193, 197, 208, 228, 249, 277, 282, 286, 287, 295, 313, 322, 326, 337, 339, 357, 368], "an": [1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 24, 25, 27, 29, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 61, 62, 64, 65, 66, 68, 70, 72, 75, 76, 77, 78, 82, 84, 88, 93, 95, 98, 100, 102, 103, 105, 109, 110, 112, 114, 115, 118, 119, 120, 121, 122, 124, 128, 129, 131, 133, 139, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 176, 177, 178, 181, 182, 184, 185, 187, 188, 190, 191, 193, 194, 196, 197, 199, 200, 201, 202, 204, 205, 207, 208, 211, 213, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 230, 231, 232, 233, 234, 237, 239, 242, 243, 244, 247, 249, 251, 255, 256, 258, 259, 260, 262, 267, 271, 272, 273, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 305, 306, 307, 310, 311, 313, 314, 315, 317, 319, 320, 322, 323, 325, 326, 328, 329, 330, 331, 333, 334, 336, 337, 340, 342, 344, 345, 346, 347, 349, 350, 351, 353, 355, 356, 357, 359, 360, 361, 362, 363, 367, 368, 369, 370, 371, 372, 373, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 393], "except": [1, 3, 39, 54, 61, 62, 76, 86, 91, 131, 148, 150, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 178, 181, 184, 191, 193, 197, 200, 207, 208, 213, 217, 220, 224, 231, 236, 239, 249, 258, 262, 276, 278, 282, 283, 284, 286, 289, 290, 292, 293, 294, 295, 307, 310, 311, 313, 320, 322, 326, 329, 336, 337, 339, 340, 342, 346, 349, 353, 360, 367, 369, 371, 379, 380, 387], "1545": [1, 249], "align": [1, 52, 65, 68, 122, 226, 249, 355, 387], "edg": [1, 47, 61, 65, 81, 91, 99, 104, 105, 107, 108, 109, 161, 196, 232, 283, 286, 290, 325, 346, 361, 369, 375], "1471": [1, 249], "bugfix": [1, 379], "bbp": [1, 379, 380], "1374": [1, 249], "undefinedbehavioursanit": 1, "1518": [1, 249], "import3d": [1, 14, 26, 40, 59, 82, 91, 121, 248, 370, 375], "gui": [1, 3, 4, 8, 14, 24, 26, 30, 32, 34, 36, 38, 43, 44, 45, 46, 48, 52, 59, 61, 66, 76, 77, 78, 82, 94, 103, 117, 118, 120, 121, 122, 128, 135, 145, 150, 155, 156, 172, 176, 197, 200, 217, 220, 242, 255, 262, 263, 271, 273, 274, 276, 278, 279, 282, 283, 289, 290, 296, 297, 298, 301, 302, 303, 305, 313, 314, 316, 317, 323, 325, 326, 328, 329, 334, 342, 346, 347, 349, 353, 354, 355, 359, 361, 362, 370, 371, 379, 382, 383, 384, 388, 389, 391], "class": [1, 4, 9, 13, 28, 33, 35, 38, 40, 45, 47, 52, 55, 59, 61, 63, 71, 72, 74, 76, 83, 91, 95, 104, 106, 107, 112, 118, 121, 126, 127, 131, 142, 143, 145, 146, 148, 151, 154, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 172, 173, 174, 175, 177, 181, 182, 184, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 205, 208, 209, 212, 214, 216, 217, 220, 222, 224, 225, 226, 232, 233, 234, 235, 237, 249, 253, 254, 258, 270, 271, 273, 274, 276, 279, 282, 283, 284, 286, 288, 289, 290, 291, 292, 297, 298, 301, 302, 303, 304, 306, 307, 310, 311, 313, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 334, 337, 338, 341, 343, 345, 346, 349, 351, 353, 354, 355, 361, 362, 363, 364, 367, 368, 370, 371, 375, 382, 385, 386, 388, 392, 393], "1159": [1, 249], "notebook": [1, 3, 361, 367, 369, 370, 372, 373, 375, 378, 382, 383, 387, 388, 392, 393], "nbsphinx": [1, 56, 368], "1684": [1, 249], "1650": 1, "manag": [1, 6, 7, 10, 11, 14, 25, 30, 31, 32, 37, 45, 46, 47, 60, 61, 76, 81, 82, 90, 93, 114, 121, 122, 129, 135, 136, 145, 150, 154, 155, 156, 162, 168, 170, 172, 181, 196, 201, 202, 217, 221, 223, 226, 234, 239, 242, 243, 249, 256, 263, 264, 273, 278, 282, 283, 284, 291, 297, 299, 301, 308, 310, 318, 325, 330, 331, 346, 350, 352, 355, 363, 381, 384], "docker": 1, "imag": [1, 40, 47, 50, 52, 65, 68, 71, 81, 84, 85, 225, 226, 228, 249, 354, 355, 357, 382], "1469": [1, 249], "short": [1, 29, 45, 52, 61, 71, 75, 76, 103, 128, 155, 197, 201, 226, 227, 228, 249, 255, 283, 326, 330, 355, 356, 357, 365], "interfac": [1, 3, 4, 21, 22, 31, 32, 33, 36, 37, 42, 45, 54, 61, 71, 76, 82, 91, 98, 119, 122, 148, 149, 150, 155, 156, 158, 170, 176, 184, 193, 196, 199, 200, 206, 208, 217, 224, 226, 228, 237, 239, 242, 246, 249, 276, 277, 278, 283, 284, 299, 305, 313, 322, 325, 328, 329, 335, 337, 346, 353, 355, 357, 362, 365, 372, 373, 375, 388, 391], "1453": [1, 249, 374], "1061": [1, 249], "1496": [1, 249], "1538": [1, 249], "test": [1, 3, 4, 5, 7, 10, 11, 13, 24, 28, 35, 36, 39, 41, 43, 45, 51, 55, 61, 62, 64, 66, 71, 72, 84, 95, 109, 111, 134, 149, 150, 153, 155, 178, 194, 196, 197, 200, 208, 210, 216, 217, 220, 234, 236, 238, 239, 240, 249, 261, 277, 278, 281, 283, 286, 289, 307, 311, 323, 325, 326, 329, 337, 339, 345, 346, 349, 355, 363, 379, 380, 383, 386, 387, 393], "coverag": [1, 3, 240, 249], "tqperf": 1, "1556": [1, 249], "olfactori": [1, 4, 5, 249, 282], "bulb": [1, 4, 5, 249, 282], "extern": [1, 21, 22, 29, 52, 53, 66, 76, 93, 147, 148, 149, 164, 180, 217, 222, 238, 246, 249, 262, 275, 276, 277, 309, 346, 351, 379, 383, 388], "1541": [1, 249], "reduc": [1, 6, 10, 11, 13, 25, 32, 37, 47, 50, 61, 62, 65, 75, 76, 91, 94, 102, 128, 155, 161, 184, 197, 217, 218, 221, 226, 228, 239, 249, 255, 283, 288, 290, 313, 326, 327, 346, 347, 350, 355, 357, 379, 382], "dentat": [1, 249], "1515": 1, "channel": [1, 4, 24, 26, 27, 29, 30, 31, 33, 37, 38, 45, 48, 60, 61, 63, 71, 77, 78, 82, 84, 89, 91, 95, 121, 131, 137, 141, 145, 148, 149, 150, 158, 220, 224, 248, 249, 258, 265, 269, 271, 273, 276, 277, 278, 286, 287, 344, 349, 353, 368, 370, 371, 376, 382, 391], "ctest": [1, 3, 53, 238, 239, 242], "suit": [1, 121, 217, 239, 242, 249, 346, 379], "1439": [1, 249], "nrntest": 1, "part": [1, 4, 10, 11, 12, 24, 25, 32, 35, 39, 52, 53, 54, 61, 65, 69, 75, 76, 84, 89, 91, 95, 121, 122, 140, 146, 149, 151, 155, 168, 184, 191, 197, 201, 208, 214, 222, 226, 230, 231, 234, 235, 249, 268, 274, 277, 279, 283, 286, 297, 313, 320, 326, 330, 337, 343, 346, 347, 351, 355, 359, 360, 363, 364, 367, 368, 370, 371, 373, 376, 379, 380, 382, 383, 384, 385, 387, 388], "1429": [1, 249], "refactor": [1, 382], "cpp": [1, 3, 52, 54, 216, 238, 239, 242, 345, 366, 375], "763": [1, 53], "relat": [1, 12, 25, 32, 52, 77, 84, 95, 108, 131, 139, 149, 155, 156, 207, 217, 249, 258, 267, 269, 277, 283, 284, 336, 346, 365, 379], "realtim": [1, 67], "daq": [1, 365], "1401": [1, 52, 249, 365], "hash": [1, 196, 243, 311, 325, 379, 387], "nrnhash": 1, "1403": [1, 52], "absolut": [1, 3, 51, 59, 62, 77, 78, 85, 86, 89, 90, 91, 121, 131, 148, 156, 161, 172, 191, 197, 213, 217, 222, 224, 230, 236, 258, 276, 284, 286, 287, 290, 301, 320, 326, 342, 346, 351, 353, 359, 368, 372, 373, 379, 382], "path": [1, 7, 27, 43, 47, 53, 63, 71, 89, 99, 100, 117, 121, 126, 128, 149, 153, 155, 161, 162, 165, 184, 200, 208, 225, 228, 231, 233, 238, 239, 242, 243, 244, 249, 253, 255, 277, 281, 283, 286, 290, 291, 294, 313, 329, 337, 354, 357, 360, 362, 370, 375, 379, 385], "ccach": 1, "1574": 1, "std": [1, 52, 93, 155, 249, 283], "unord": 1, "map": [1, 25, 52, 65, 67, 75, 76, 87, 103, 154, 155, 156, 168, 172, 175, 178, 197, 218, 224, 226, 234, 239, 249, 283, 284, 297, 301, 304, 307, 308, 326, 347, 353, 355, 363, 368], "gid2presyn": 1, "int2tarlist": 1, "1568": 1, "succe": [1, 42, 98, 119, 388], "1583": 1, "copi": [1, 10, 11, 28, 36, 37, 42, 43, 45, 46, 49, 62, 65, 82, 91, 94, 98, 103, 109, 119, 122, 128, 129, 139, 146, 149, 150, 155, 158, 172, 184, 185, 193, 197, 199, 205, 206, 213, 216, 217, 218, 223, 226, 228, 233, 239, 243, 247, 255, 256, 267, 274, 276, 277, 278, 283, 286, 301, 313, 314, 322, 326, 327, 328, 334, 335, 342, 345, 346, 347, 351, 352, 355, 357, 362, 367, 369, 370, 372, 373, 378, 382, 385, 387, 388], "1396": [1, 249], "multisend": [1, 248, 249], "specif": [1, 2, 4, 14, 16, 17, 18, 21, 22, 24, 25, 32, 33, 37, 42, 43, 45, 46, 59, 60, 63, 65, 66, 68, 71, 76, 81, 84, 95, 96, 98, 100, 103, 105, 114, 119, 122, 125, 126, 127, 129, 131, 143, 148, 149, 150, 155, 156, 158, 159, 160, 170, 174, 186, 190, 197, 213, 215, 217, 221, 222, 224, 225, 226, 227, 230, 239, 242, 243, 244, 249, 252, 253, 254, 256, 258, 271, 276, 277, 278, 283, 284, 286, 288, 289, 293, 299, 303, 315, 319, 326, 339, 342, 344, 346, 350, 351, 353, 354, 356, 359, 361, 362, 367, 368, 374, 379, 382, 383, 387, 388, 389, 392], "bluegen": [1, 365], "dma": 1, "1294": 1, "possibl": [1, 3, 7, 13, 32, 38, 40, 42, 47, 51, 54, 61, 63, 65, 77, 78, 81, 83, 84, 85, 88, 89, 93, 98, 119, 121, 128, 139, 142, 148, 149, 150, 155, 156, 158, 159, 161, 174, 193, 194, 197, 199, 201, 205, 207, 213, 216, 222, 224, 226, 228, 230, 239, 243, 249, 255, 267, 270, 271, 276, 277, 278, 283, 284, 286, 288, 290, 303, 313, 322, 323, 326, 328, 330, 334, 336, 342, 345, 351, 353, 355, 357, 359, 365, 368, 370, 379, 382], "prefer": [1, 28, 31, 49, 62, 71, 76, 93, 105, 149, 208, 210, 226, 249, 277, 296, 337, 339, 372, 379, 380, 382, 388, 390, 392, 393], "1659": 1, "provid": [1, 3, 4, 7, 8, 10, 11, 29, 32, 37, 46, 52, 53, 54, 59, 69, 71, 77, 78, 84, 86, 91, 93, 95, 121, 149, 150, 151, 155, 158, 164, 167, 168, 169, 196, 197, 199, 200, 201, 217, 224, 237, 238, 239, 242, 244, 246, 247, 249, 277, 278, 279, 283, 286, 287, 289, 290, 296, 297, 298, 313, 316, 325, 326, 328, 329, 330, 337, 339, 342, 346, 353, 361, 365, 368, 371, 375, 379, 380, 382, 387, 388], "1172": [1, 249], "1537": [1, 249], "modlunit": [1, 3, 46, 114, 115, 149, 178, 242, 277, 307], "charg": [1, 25, 31, 52, 59, 91, 121, 132, 144, 150, 197, 244, 249, 259, 272, 278, 286, 318, 326, 346, 368, 370, 371, 373, 374, 375, 378], "keyword": [1, 36, 46, 51, 52, 74, 89, 135, 145, 149, 150, 155, 158, 160, 169, 180, 202, 208, 263, 273, 276, 277, 278, 282, 283, 286, 289, 290, 293, 298, 309, 326, 328, 331, 337, 361, 362, 365, 368, 370, 371, 372, 382, 387], "valenc": [1, 132, 249, 259, 375], "1508": 1, "specifi": [1, 3, 4, 9, 10, 11, 12, 13, 14, 18, 25, 27, 30, 31, 32, 37, 42, 43, 45, 46, 47, 52, 54, 58, 59, 60, 64, 65, 66, 69, 70, 72, 73, 75, 76, 77, 78, 81, 82, 85, 88, 93, 94, 95, 96, 105, 106, 107, 108, 110, 112, 114, 115, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 139, 141, 143, 146, 148, 149, 150, 151, 154, 155, 156, 159, 161, 164, 168, 170, 178, 184, 186, 196, 197, 199, 200, 201, 205, 207, 208, 213, 214, 215, 216, 217, 218, 220, 223, 224, 226, 227, 228, 230, 232, 233, 234, 235, 242, 243, 247, 251, 252, 253, 254, 255, 256, 258, 260, 267, 269, 271, 274, 276, 277, 278, 279, 282, 283, 284, 288, 289, 290, 291, 293, 297, 299, 302, 305, 307, 313, 315, 325, 326, 328, 329, 330, 332, 334, 336, 337, 342, 343, 344, 345, 346, 347, 349, 352, 353, 355, 356, 357, 359, 361, 362, 363, 364, 367, 368, 370, 371, 372, 373, 375, 379, 380, 383, 385, 387, 388], "dialog": [1, 12, 37, 65, 89, 91, 98, 119, 124, 129, 168, 174, 179, 184, 207, 224, 227, 228, 231, 235, 251, 256, 297, 303, 307, 308, 313, 336, 347, 353, 356, 357, 360, 364], "popup": [1, 91, 94, 142, 199, 226, 235, 270, 328, 355, 364], "locat": [1, 3, 9, 12, 13, 25, 27, 28, 32, 33, 37, 38, 39, 40, 42, 46, 48, 52, 59, 61, 63, 65, 71, 76, 79, 80, 89, 91, 94, 99, 100, 103, 105, 106, 107, 118, 121, 122, 125, 126, 127, 131, 132, 134, 139, 142, 143, 146, 148, 149, 150, 151, 154, 155, 158, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 197, 199, 203, 208, 213, 217, 220, 222, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 239, 242, 243, 249, 252, 253, 254, 258, 259, 261, 267, 269, 270, 271, 274, 276, 277, 278, 279, 282, 283, 286, 289, 290, 293, 294, 295, 297, 298, 299, 300, 301, 326, 328, 332, 337, 342, 346, 349, 351, 353, 354, 355, 356, 357, 359, 360, 362, 363, 364, 368, 370, 375, 382, 384, 387, 388], "1487": [1, 249], "disconnect": [1, 76, 148, 160, 196, 218, 269, 276, 289, 325, 347, 388], "1451": [1, 249], "bbsavest": [1, 3, 52, 135, 220, 222, 263, 388], "cell": [1, 5, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 38, 40, 41, 43, 47, 50, 59, 63, 69, 70, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 95, 98, 99, 112, 113, 119, 121, 125, 126, 131, 135, 137, 139, 140, 141, 143, 147, 150, 151, 154, 155, 156, 159, 160, 161, 162, 168, 169, 173, 196, 197, 201, 202, 208, 216, 217, 222, 224, 231, 233, 234, 247, 248, 249, 252, 253, 258, 263, 265, 267, 268, 269, 271, 275, 278, 279, 280, 282, 283, 284, 286, 288, 289, 290, 291, 297, 298, 325, 326, 330, 331, 337, 345, 346, 351, 353, 360, 362, 363, 368, 369, 370, 371, 372, 373, 374, 375, 385, 386, 387, 391], "1355": 1, "usr": [1, 78, 87, 216, 239, 242, 243, 342, 345, 375], "x11": [1, 3, 230, 242, 243, 262, 359], "prefix": [1, 3, 45, 76, 114, 115, 129, 148, 149, 150, 153, 155, 160, 165, 194, 208, 213, 239, 242, 256, 276, 277, 278, 281, 283, 289, 294, 299, 323, 337, 342, 371, 379, 380, 382], "1565": 1, "nmodl": [1, 3, 4, 7, 26, 36, 52, 53, 66, 82, 93, 121, 133, 135, 141, 143, 147, 148, 158, 200, 201, 208, 216, 217, 238, 239, 242, 246, 248, 260, 263, 269, 271, 275, 276, 279, 286, 298, 328, 329, 330, 337, 345, 346, 368, 371, 375, 376, 388, 391], "cxx": [1, 7], "flag": [1, 3, 7, 8, 52, 71, 81, 128, 133, 149, 153, 154, 166, 186, 217, 220, 238, 239, 242, 255, 260, 277, 281, 282, 283, 286, 295, 315, 346, 349, 361, 365, 385, 388], "facilit": [1, 25, 59, 109, 121, 249, 392], "cross": [1, 122, 148, 149, 154, 159, 197, 228, 242, 249, 276, 277, 282, 283, 286, 288, 326, 357, 368, 371, 377], "1174": 1, "faster": [1, 3, 9, 36, 77, 78, 83, 89, 90, 121, 124, 129, 148, 149, 154, 164, 194, 197, 204, 217, 229, 230, 232, 251, 256, 271, 276, 277, 282, 283, 323, 326, 333, 346, 358, 359, 361, 368, 379, 380], "converg": [1, 29, 39, 47, 81, 89, 91, 121, 131, 249, 258], "rate": [1, 4, 9, 36, 39, 41, 75, 89, 90, 111, 114, 115, 141, 148, 149, 156, 191, 197, 215, 217, 220, 221, 226, 228, 230, 249, 269, 276, 277, 284, 320, 326, 344, 346, 349, 350, 351, 355, 357, 359, 367, 369, 371, 372, 373, 374, 375, 378], "surfac": [1, 15, 31, 46, 48, 63, 81, 122, 149, 249, 277, 286, 368, 371, 375, 382], "partial": [1, 75, 128, 149, 248, 249, 255, 277, 286, 368], "estim": [1, 39, 91, 249, 379], "1555": 1, "save": [1, 3, 10, 11, 13, 16, 17, 24, 25, 26, 27, 30, 31, 32, 36, 37, 46, 47, 48, 51, 60, 62, 65, 67, 76, 77, 78, 81, 82, 89, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 116, 120, 122, 124, 128, 129, 138, 139, 142, 148, 149, 151, 155, 156, 168, 169, 170, 172, 178, 181, 182, 185, 197, 199, 200, 207, 216, 219, 220, 222, 226, 227, 228, 230, 234, 242, 249, 251, 255, 256, 266, 267, 269, 270, 276, 277, 279, 282, 283, 284, 297, 299, 301, 307, 308, 310, 311, 314, 326, 328, 329, 336, 345, 348, 349, 351, 355, 356, 357, 359, 363, 370, 379, 385, 387, 393], "restor": [1, 24, 50, 79, 89, 91, 118, 124, 138, 139, 200, 208, 216, 222, 226, 228, 249, 251, 266, 267, 269, 329, 337, 345, 351, 355, 357, 387], "1476": 1, "prevent": [1, 16, 42, 52, 75, 91, 98, 119, 139, 149, 150, 155, 178, 205, 207, 211, 214, 218, 226, 231, 234, 239, 243, 249, 267, 277, 278, 283, 288, 307, 334, 336, 340, 343, 347, 355, 360, 363, 379], "keep": [1, 4, 12, 13, 17, 42, 45, 46, 51, 59, 60, 61, 71, 76, 80, 89, 91, 95, 98, 119, 138, 143, 146, 148, 149, 155, 156, 159, 163, 164, 174, 178, 185, 197, 217, 222, 226, 228, 239, 249, 266, 271, 274, 276, 277, 283, 284, 288, 292, 303, 307, 314, 326, 346, 351, 355, 357, 379, 380, 384], "object": [1, 4, 8, 9, 20, 21, 22, 29, 31, 32, 38, 42, 52, 55, 59, 67, 68, 71, 72, 75, 76, 89, 91, 95, 98, 102, 118, 119, 121, 125, 129, 142, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 163, 164, 165, 168, 169, 171, 172, 173, 174, 177, 178, 180, 181, 184, 186, 192, 193, 196, 197, 199, 200, 201, 205, 208, 211, 217, 218, 220, 222, 226, 228, 233, 234, 239, 247, 249, 252, 256, 270, 273, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 294, 297, 298, 300, 301, 302, 303, 306, 307, 308, 309, 310, 312, 315, 321, 322, 325, 326, 328, 329, 330, 332, 334, 337, 339, 340, 341, 346, 347, 349, 350, 351, 355, 357, 361, 362, 363, 368, 370, 379, 382, 383, 384, 385, 388, 393], "aliv": 1, "1270": 1, "1103": [1, 249], "1072": [1, 249], "assign": [1, 3, 4, 10, 11, 13, 14, 27, 28, 32, 36, 38, 46, 52, 59, 60, 61, 62, 71, 76, 100, 103, 114, 115, 121, 129, 139, 143, 144, 148, 150, 151, 155, 156, 160, 161, 163, 166, 171, 181, 189, 193, 197, 199, 201, 204, 208, 210, 217, 220, 222, 224, 226, 249, 256, 267, 271, 272, 276, 278, 279, 283, 284, 286, 289, 290, 295, 300, 310, 311, 315, 318, 322, 326, 328, 330, 333, 337, 339, 346, 349, 351, 353, 355, 368, 370, 371, 373, 375, 383, 385, 387], "segment": [1, 25, 38, 45, 46, 51, 59, 61, 65, 84, 120, 126, 131, 134, 141, 143, 146, 148, 149, 150, 155, 156, 160, 161, 171, 192, 197, 199, 200, 201, 203, 217, 222, 226, 242, 249, 253, 258, 261, 269, 271, 274, 276, 277, 278, 282, 283, 284, 289, 290, 292, 300, 321, 326, 328, 329, 330, 332, 346, 351, 355, 361, 362, 370, 371, 377, 379, 382], "1149": [1, 249], "system": [1, 3, 7, 8, 13, 25, 39, 40, 47, 53, 62, 65, 71, 76, 82, 90, 91, 95, 129, 131, 135, 146, 149, 150, 154, 155, 156, 158, 159, 161, 170, 174, 176, 185, 193, 196, 197, 198, 201, 207, 214, 217, 220, 221, 222, 226, 228, 231, 239, 242, 243, 244, 247, 248, 249, 256, 258, 263, 274, 277, 278, 282, 283, 284, 286, 288, 290, 299, 303, 305, 314, 322, 325, 326, 327, 330, 336, 343, 346, 349, 350, 351, 355, 357, 359, 360, 368, 369, 370, 371, 372, 373, 379, 382, 385, 388], "7": [1, 3, 7, 10, 11, 16, 25, 28, 41, 48, 49, 53, 61, 67, 71, 84, 87, 91, 93, 95, 120, 121, 153, 155, 158, 159, 170, 178, 181, 182, 187, 193, 196, 197, 201, 208, 210, 213, 217, 226, 230, 239, 242, 244, 248, 249, 262, 271, 276, 279, 281, 283, 286, 288, 289, 290, 299, 302, 304, 307, 310, 311, 316, 317, 322, 325, 326, 328, 330, 337, 339, 342, 344, 346, 355, 359, 361, 362, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 382, 383, 384, 387], "1719": [1, 249], "02": [1, 16, 17, 53, 213, 228, 243, 249, 342, 355, 357], "window": [1, 10, 11, 14, 25, 31, 32, 35, 36, 37, 45, 46, 47, 48, 50, 61, 62, 65, 67, 74, 75, 76, 77, 81, 82, 84, 87, 89, 91, 102, 103, 104, 105, 109, 117, 118, 124, 128, 129, 135, 142, 167, 168, 169, 170, 171, 172, 174, 178, 197, 207, 213, 218, 223, 226, 230, 232, 234, 235, 237, 240, 241, 249, 251, 255, 256, 263, 270, 296, 297, 298, 299, 300, 301, 303, 307, 323, 326, 334, 336, 342, 347, 352, 355, 359, 361, 363, 364, 365, 375, 382, 388], "detail": [1, 3, 5, 8, 10, 11, 14, 28, 29, 32, 43, 45, 46, 51, 52, 53, 62, 71, 72, 75, 77, 78, 81, 84, 89, 91, 95, 97, 98, 119, 121, 122, 139, 148, 149, 150, 155, 160, 197, 207, 220, 224, 237, 239, 242, 246, 249, 267, 276, 277, 278, 283, 289, 326, 336, 349, 353, 379, 380, 388, 392, 393], "pr": [1, 145, 161, 181, 244, 273, 275, 276, 283, 290, 310, 365, 379, 380], "1614": 1, "28": [1, 197, 248, 249, 290, 326, 355, 362, 382, 383, 387, 388, 390], "1603": 1, "introduc": [1, 4, 54, 81, 85, 95, 146, 149, 150, 151, 155, 158, 181, 186, 201, 213, 246, 248, 249, 274, 277, 278, 279, 283, 286, 310, 315, 318, 330, 342, 367, 379, 380, 382, 383, 387, 389, 392], "30": [1, 10, 16, 17, 25, 28, 36, 62, 153, 155, 161, 175, 187, 193, 196, 197, 202, 210, 225, 232, 239, 249, 276, 281, 290, 304, 322, 325, 326, 331, 339, 351, 354, 361, 382, 383, 387, 388], "04": [1, 15, 67, 73, 84, 249, 283, 383, 384, 385], "2021": [1, 81, 121, 239, 249, 283, 286, 391], "select": [1, 6, 10, 11, 12, 14, 19, 25, 27, 29, 30, 31, 32, 45, 46, 47, 48, 50, 51, 61, 62, 65, 67, 68, 74, 75, 79, 81, 82, 84, 87, 91, 93, 94, 95, 99, 100, 101, 103, 107, 110, 118, 121, 122, 124, 125, 126, 127, 128, 129, 139, 140, 141, 142, 149, 151, 154, 155, 158, 160, 161, 169, 172, 173, 174, 176, 178, 181, 184, 193, 196, 197, 199, 213, 215, 217, 218, 223, 224, 225, 226, 227, 228, 230, 231, 234, 235, 239, 242, 243, 249, 251, 252, 253, 254, 255, 256, 267, 268, 269, 270, 277, 279, 283, 286, 289, 290, 298, 301, 302, 303, 305, 307, 308, 310, 313, 322, 325, 326, 328, 342, 344, 346, 347, 352, 353, 354, 355, 356, 357, 359, 360, 363, 364, 382], "v": [1, 3, 6, 7, 13, 15, 16, 17, 18, 19, 22, 24, 28, 30, 31, 37, 38, 39, 41, 43, 44, 45, 49, 52, 58, 60, 64, 67, 72, 75, 76, 89, 91, 100, 114, 115, 121, 122, 125, 127, 128, 129, 131, 132, 133, 134, 141, 143, 145, 146, 148, 149, 150, 153, 154, 155, 158, 161, 164, 171, 174, 181, 193, 197, 200, 201, 207, 208, 215, 217, 220, 224, 226, 231, 232, 233, 239, 242, 244, 245, 247, 249, 252, 254, 255, 256, 258, 259, 260, 261, 269, 271, 273, 274, 276, 277, 281, 282, 283, 286, 290, 293, 300, 303, 310, 311, 320, 322, 326, 329, 330, 333, 336, 337, 340, 346, 349, 351, 353, 355, 360, 361, 362, 373, 381, 382, 386, 387, 388, 393], "modern": [1, 3, 4, 6, 7, 52, 149, 239, 242, 248, 262, 277, 305, 318, 336, 337, 349, 359], "unit": [1, 3, 25, 29, 41, 58, 59, 65, 82, 95, 120, 125, 131, 132, 150, 155, 158, 178, 189, 197, 200, 217, 230, 242, 249, 252, 258, 259, 262, 276, 278, 283, 286, 307, 308, 318, 326, 329, 346, 349, 351, 359, 367, 368, 369, 370, 373, 378, 379, 382, 383, 384, 385, 388], "initi": [1, 4, 8, 26, 29, 31, 37, 38, 39, 41, 46, 55, 64, 71, 72, 76, 82, 87, 89, 91, 109, 110, 129, 133, 142, 143, 144, 146, 148, 150, 151, 154, 155, 156, 158, 159, 161, 164, 181, 185, 196, 197, 200, 201, 207, 208, 213, 217, 220, 221, 226, 227, 230, 232, 235, 238, 239, 242, 249, 256, 260, 270, 271, 272, 274, 276, 278, 279, 282, 283, 284, 286, 288, 290, 293, 296, 298, 310, 314, 325, 326, 329, 330, 336, 337, 340, 342, 344, 346, 349, 350, 351, 353, 355, 356, 359, 361, 364, 368, 369, 371, 372, 374, 376, 377, 378, 379, 380, 382, 385, 387, 388, 391], "binari": [1, 3, 7, 8, 28, 35, 53, 82, 159, 184, 197, 222, 239, 240, 241, 244, 249, 283, 286, 288, 313, 326, 351, 379, 380, 388], "primari": [1, 25, 61, 65, 74, 75, 79, 81, 114, 115, 118, 145, 155, 188, 200, 207, 226, 228, 234, 242, 247, 249, 273, 283, 317, 329, 336, 355, 357, 363, 368], "interview": [1, 2, 155, 228, 242, 262, 283, 357, 361, 362, 388], "h": [1, 3, 4, 7, 8, 13, 14, 24, 25, 29, 30, 31, 36, 38, 44, 45, 46, 47, 48, 52, 54, 58, 59, 61, 71, 76, 88, 89, 93, 95, 114, 121, 131, 133, 134, 146, 148, 149, 155, 158, 159, 182, 197, 200, 205, 208, 213, 216, 220, 228, 239, 242, 247, 248, 249, 258, 259, 260, 261, 262, 267, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 382, 383, 384, 385], "interpret": [1, 3, 4, 32, 34, 47, 55, 61, 62, 71, 72, 81, 82, 84, 95, 133, 135, 143, 149, 150, 154, 155, 159, 160, 165, 166, 168, 170, 174, 178, 182, 184, 187, 189, 191, 193, 195, 196, 197, 200, 201, 204, 206, 207, 208, 215, 217, 220, 224, 226, 228, 233, 242, 246, 247, 249, 260, 263, 271, 277, 278, 282, 283, 288, 289, 294, 295, 297, 299, 303, 311, 313, 316, 318, 320, 322, 324, 325, 326, 329, 330, 335, 336, 337, 344, 346, 349, 353, 355, 357, 362, 371, 372, 387], "posit": [1, 12, 18, 21, 22, 25, 32, 39, 40, 41, 42, 46, 54, 61, 63, 65, 76, 84, 86, 89, 91, 98, 107, 114, 115, 119, 121, 125, 126, 128, 131, 132, 134, 139, 142, 143, 146, 148, 149, 150, 151, 154, 155, 158, 160, 161, 162, 170, 171, 172, 178, 181, 184, 188, 193, 197, 201, 203, 208, 212, 217, 220, 224, 226, 228, 230, 231, 233, 234, 235, 249, 252, 253, 255, 258, 259, 261, 267, 270, 271, 274, 276, 277, 278, 279, 282, 283, 286, 287, 289, 290, 291, 293, 299, 300, 301, 307, 310, 313, 317, 322, 326, 328, 330, 332, 341, 346, 353, 355, 357, 359, 360, 362, 363, 364, 368, 369, 376, 382, 386], "argument": [1, 3, 13, 28, 29, 32, 39, 45, 52, 55, 59, 76, 86, 93, 124, 128, 129, 131, 133, 143, 146, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 172, 174, 175, 178, 180, 182, 184, 185, 186, 187, 188, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 205, 208, 211, 213, 214, 215, 216, 217, 220, 223, 225, 226, 230, 232, 233, 234, 239, 242, 243, 244, 251, 255, 256, 258, 260, 262, 271, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 292, 293, 295, 297, 299, 301, 303, 304, 307, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 339, 340, 342, 343, 344, 345, 346, 349, 352, 354, 355, 359, 361, 362, 363, 367, 368, 370, 371, 372, 375, 379, 382, 383, 387, 388], "name": [1, 3, 7, 8, 10, 11, 12, 14, 27, 28, 29, 30, 31, 37, 38, 42, 45, 46, 47, 52, 53, 58, 59, 61, 62, 65, 67, 71, 81, 93, 94, 98, 99, 100, 103, 104, 114, 115, 118, 119, 122, 124, 128, 129, 132, 133, 139, 140, 143, 144, 145, 148, 149, 150, 151, 155, 158, 160, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 178, 181, 182, 184, 185, 186, 188, 197, 199, 201, 202, 204, 207, 208, 211, 213, 215, 217, 218, 223, 224, 226, 227, 228, 230, 234, 235, 239, 242, 243, 244, 251, 255, 256, 259, 260, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 286, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 310, 311, 313, 314, 315, 317, 326, 328, 330, 331, 333, 336, 337, 340, 342, 344, 346, 347, 349, 351, 352, 353, 355, 356, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 387, 388], "previous": [1, 14, 37, 76, 114, 115, 133, 144, 149, 155, 160, 165, 184, 188, 197, 224, 242, 244, 260, 272, 277, 283, 294, 313, 317, 326, 353, 379, 385], "were": [1, 12, 14, 25, 27, 29, 39, 40, 42, 45, 47, 49, 63, 65, 69, 71, 75, 76, 77, 78, 81, 84, 88, 91, 93, 98, 111, 116, 119, 122, 133, 148, 149, 151, 155, 156, 160, 162, 191, 196, 197, 213, 217, 226, 231, 238, 260, 276, 277, 279, 283, 284, 289, 291, 292, 320, 325, 326, 342, 346, 351, 360, 379, 380, 382, 388], "unchang": [1, 32, 54, 91, 94, 102, 160, 161, 167, 184, 193, 197, 207, 220, 226, 228, 289, 290, 296, 313, 322, 326, 334, 336, 349, 355, 357, 382, 388], "algorithm": [1, 14, 29, 39, 71, 73, 76, 85, 88, 121, 128, 161, 196, 197, 228, 236, 249, 255, 290, 325, 326, 357, 371, 379], "been": [1, 3, 4, 10, 11, 13, 16, 19, 29, 37, 40, 42, 46, 47, 51, 52, 54, 61, 62, 65, 71, 75, 76, 81, 84, 93, 95, 98, 100, 105, 114, 119, 121, 129, 131, 134, 144, 148, 149, 150, 154, 155, 156, 159, 160, 163, 164, 165, 166, 170, 176, 182, 184, 193, 194, 196, 197, 202, 203, 213, 217, 221, 224, 226, 228, 239, 243, 249, 256, 258, 261, 272, 276, 277, 278, 282, 283, 284, 286, 288, 289, 292, 294, 295, 299, 305, 311, 313, 322, 323, 325, 326, 331, 332, 334, 336, 342, 346, 350, 353, 355, 357, 371, 373, 379, 380, 382, 388], "adjust": [1, 7, 14, 30, 46, 61, 88, 121, 124, 129, 161, 168, 197, 200, 220, 228, 249, 251, 256, 286, 290, 297, 308, 326, 329, 349, 357, 379, 380, 386, 388], "especi": [1, 42, 43, 47, 61, 91, 94, 98, 119, 121, 161, 164, 174, 224, 239, 290, 303, 353, 368, 371, 375, 379, 387, 388], "around": [1, 28, 29, 40, 44, 50, 65, 91, 128, 148, 155, 168, 197, 214, 228, 234, 242, 247, 249, 255, 276, 283, 297, 315, 326, 333, 343, 357, 363, 378, 379, 380, 383, 393], "indic": [1, 3, 10, 11, 12, 13, 16, 17, 25, 29, 32, 37, 40, 53, 54, 59, 63, 65, 68, 71, 76, 84, 114, 115, 124, 127, 128, 139, 143, 144, 148, 149, 155, 156, 158, 160, 164, 170, 175, 178, 182, 193, 195, 197, 201, 208, 213, 217, 224, 225, 226, 228, 231, 234, 242, 243, 249, 251, 254, 255, 262, 267, 271, 272, 276, 277, 283, 284, 286, 289, 299, 304, 311, 322, 324, 326, 328, 330, 334, 337, 339, 342, 346, 353, 354, 355, 357, 360, 363, 367, 368, 369, 371, 382, 383, 385, 387, 388], "sometim": [1, 53, 71, 73, 84, 114, 115, 121, 149, 158, 197, 206, 208, 216, 217, 224, 228, 231, 239, 242, 247, 277, 286, 292, 293, 322, 326, 335, 337, 345, 346, 353, 357, 360, 368, 370, 379, 387], "count": [1, 13, 16, 17, 18, 21, 22, 28, 29, 36, 54, 58, 89, 148, 151, 156, 161, 168, 169, 172, 181, 182, 184, 197, 199, 201, 202, 208, 217, 224, 269, 276, 279, 284, 286, 289, 290, 298, 301, 308, 310, 311, 313, 326, 328, 330, 331, 337, 339, 346, 353, 385, 387], "previou": [1, 3, 28, 37, 38, 42, 46, 52, 71, 76, 84, 93, 95, 98, 114, 115, 119, 122, 129, 131, 144, 148, 149, 154, 155, 158, 159, 160, 161, 166, 190, 194, 196, 197, 201, 207, 208, 216, 217, 218, 221, 226, 228, 229, 230, 239, 256, 258, 272, 276, 277, 282, 283, 288, 289, 290, 295, 305, 319, 323, 325, 326, 330, 336, 337, 345, 346, 347, 350, 355, 357, 358, 359, 368, 370, 375, 379, 380, 382, 383, 384, 385, 387], "five": [1, 3, 46, 121, 178, 201, 215, 307, 313, 330, 344, 379], "init": [1, 21, 22, 24, 28, 31, 32, 37, 42, 45, 46, 52, 61, 64, 67, 71, 72, 76, 83, 91, 96, 97, 98, 116, 119, 155, 169, 196, 197, 200, 202, 207, 208, 211, 220, 224, 227, 309, 326, 329, 331, 336, 337, 349, 353, 356, 375, 379, 387], "run": [1, 3, 5, 6, 7, 9, 13, 16, 17, 18, 20, 24, 28, 30, 31, 32, 33, 35, 36, 37, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 61, 62, 67, 69, 70, 73, 76, 78, 81, 82, 83, 84, 95, 112, 113, 118, 121, 122, 123, 128, 135, 143, 146, 153, 154, 155, 156, 158, 159, 160, 165, 166, 174, 187, 196, 197, 200, 201, 207, 208, 216, 217, 218, 220, 221, 226, 227, 228, 230, 237, 238, 240, 243, 244, 245, 249, 250, 255, 263, 271, 274, 276, 281, 282, 283, 284, 286, 288, 289, 294, 295, 303, 308, 316, 326, 328, 329, 330, 334, 336, 337, 343, 345, 346, 347, 349, 350, 355, 356, 357, 359, 367, 368, 370, 371, 375, 376, 378, 379, 384, 385, 386, 387, 393], "psection": [1, 45, 46, 52, 61, 160, 163, 186, 201, 208, 269, 289, 315, 328, 330, 337, 382], "xopen": [1, 52, 76, 120, 161, 165, 184, 188, 200, 207, 208, 222, 290, 294, 309, 312, 313, 317, 329, 336, 337, 351, 388], "quit": [1, 3, 13, 16, 17, 19, 23, 31, 32, 65, 71, 73, 75, 76, 89, 91, 95, 129, 131, 148, 150, 155, 156, 159, 200, 208, 217, 219, 220, 242, 256, 258, 276, 278, 283, 284, 288, 329, 337, 346, 348, 349, 379, 380, 385, 388], "autotool": [1, 3], "here": [1, 3, 4, 5, 8, 10, 11, 13, 14, 16, 25, 28, 29, 36, 37, 38, 41, 43, 44, 45, 46, 47, 51, 52, 54, 59, 61, 62, 71, 75, 76, 77, 81, 84, 87, 89, 90, 91, 93, 95, 97, 99, 102, 103, 104, 105, 107, 108, 110, 114, 115, 116, 121, 122, 128, 148, 149, 150, 155, 156, 158, 165, 181, 197, 201, 207, 208, 221, 228, 237, 239, 242, 244, 247, 255, 276, 277, 278, 283, 284, 286, 287, 294, 299, 310, 326, 330, 336, 337, 340, 350, 353, 357, 367, 368, 369, 370, 371, 372, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388], "action": [1, 14, 25, 30, 32, 38, 41, 44, 46, 48, 52, 68, 74, 75, 121, 122, 128, 148, 151, 158, 161, 168, 169, 178, 199, 200, 207, 217, 218, 219, 220, 224, 226, 228, 231, 234, 239, 242, 243, 247, 249, 255, 269, 276, 279, 286, 290, 297, 298, 307, 318, 328, 329, 336, 344, 346, 347, 348, 349, 353, 355, 357, 360, 363, 368, 371, 372, 373, 379, 382, 383], "azur": [1, 240, 379], "travi": [1, 249], "tarbal": [1, 242], "infrastructur": [1, 53, 88, 249, 373], "ubuntu": [1, 3, 239, 242, 244, 262], "18": [1, 15, 18, 28, 114, 115, 197, 248, 249, 326, 373, 375, 382, 383, 387, 388], "20": [1, 3, 22, 24, 28, 36, 37, 43, 44, 45, 58, 61, 63, 65, 95, 99, 133, 155, 156, 158, 161, 181, 186, 187, 193, 194, 196, 197, 201, 202, 208, 210, 216, 226, 227, 228, 231, 239, 249, 260, 276, 283, 284, 290, 310, 315, 322, 323, 325, 326, 328, 330, 331, 337, 339, 344, 345, 355, 356, 357, 360, 370, 373, 375, 382, 383, 387, 388], "fedora": [1, 242], "32": [1, 18, 53, 67, 144, 154, 194, 196, 197, 242, 249, 272, 276, 290, 323, 325, 326, 382, 387, 388], "33": [1, 197, 248, 249, 344, 382, 387, 388], "centos7": 1, "centos8": 1, "debian": [1, 3, 242], "buster": 1, "recent": [1, 35, 40, 71, 77, 94, 121, 178, 211, 228, 239, 242, 248, 249, 283, 292, 293, 307, 340, 357, 375, 379, 388], "numpi": [1, 56, 59, 197, 200, 242, 243, 245, 247, 286, 290, 297, 320, 326, 329, 355, 368, 378, 387], "hpc": [1, 3, 7, 237, 242], "consolid": [1, 249], "spack": 1, "easybuild": 1, "deadlock": [1, 283], "avx": 1, "512": [1, 52, 239, 249], "backward": [1, 77, 93, 149, 184, 197, 217, 220, 228, 249, 277, 286, 313, 326, 346, 349, 357, 359, 368, 379, 380, 387, 393], "backtrac": [1, 3, 239], "pass": [1, 7, 10, 11, 13, 27, 34, 52, 53, 76, 93, 94, 95, 129, 143, 149, 150, 154, 155, 158, 159, 163, 164, 181, 184, 197, 201, 202, 208, 213, 217, 239, 242, 244, 249, 256, 262, 271, 276, 277, 278, 282, 283, 286, 287, 288, 289, 307, 310, 313, 326, 330, 331, 337, 342, 346, 361, 362, 368, 370, 371, 375, 379, 382, 385, 387, 388], "nrniv": [1, 3, 5, 8, 11, 35, 52, 67, 76, 77, 78, 148, 150, 153, 155, 158, 159, 160, 161, 197, 200, 207, 208, 213, 216, 227, 228, 238, 239, 242, 244, 262, 277, 278, 281, 283, 288, 326, 329, 336, 337, 342, 343, 345, 356, 357], "exist": [1, 3, 4, 8, 12, 14, 16, 28, 32, 42, 45, 46, 58, 61, 62, 65, 71, 74, 76, 87, 91, 93, 98, 102, 103, 105, 110, 114, 115, 118, 119, 121, 122, 128, 129, 132, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 154, 155, 156, 160, 161, 163, 165, 166, 168, 169, 171, 172, 174, 175, 178, 181, 182, 184, 188, 193, 197, 200, 201, 202, 205, 208, 211, 213, 215, 216, 217, 222, 223, 224, 226, 227, 228, 231, 232, 233, 239, 243, 244, 249, 255, 256, 259, 267, 268, 270, 271, 272, 273, 274, 276, 277, 278, 282, 283, 284, 289, 290, 292, 294, 295, 297, 298, 300, 301, 303, 304, 307, 310, 311, 313, 317, 322, 326, 329, 330, 331, 334, 337, 340, 342, 344, 345, 346, 351, 352, 353, 355, 356, 357, 360, 361, 362, 368, 370, 371, 380, 381, 382, 383, 384, 385, 387, 388, 393], "without": [1, 3, 10, 11, 14, 29, 32, 37, 38, 40, 44, 53, 54, 61, 63, 71, 76, 84, 88, 94, 121, 129, 145, 148, 149, 150, 153, 155, 158, 165, 166, 184, 186, 193, 194, 197, 201, 211, 216, 217, 218, 220, 221, 226, 227, 228, 230, 239, 242, 249, 256, 273, 276, 277, 278, 281, 282, 283, 294, 295, 313, 315, 322, 323, 326, 330, 340, 345, 346, 347, 349, 350, 355, 356, 357, 359, 361, 367, 370, 373, 379, 382, 385, 388], "mac": [1, 3, 10, 11, 13, 71, 122, 155, 184, 213, 223, 224, 239, 240, 241, 283, 313, 342, 352, 353, 375, 391], "alwai": [1, 3, 25, 37, 47, 51, 54, 60, 65, 71, 76, 81, 89, 91, 128, 145, 148, 149, 151, 154, 155, 156, 158, 160, 161, 164, 166, 168, 181, 184, 196, 197, 201, 207, 210, 211, 222, 224, 226, 228, 247, 255, 273, 276, 277, 279, 282, 283, 284, 286, 289, 290, 293, 295, 297, 310, 313, 318, 325, 326, 330, 334, 336, 339, 340, 351, 353, 355, 357, 368, 369, 372, 373, 382, 388], "good": [1, 3, 14, 29, 32, 33, 35, 36, 45, 47, 59, 64, 66, 72, 75, 76, 81, 82, 83, 88, 89, 91, 100, 102, 103, 106, 108, 110, 122, 128, 148, 149, 155, 156, 161, 197, 199, 201, 218, 220, 221, 228, 239, 242, 249, 255, 276, 277, 283, 284, 290, 326, 328, 330, 347, 349, 357, 379, 382, 383, 384, 388], "idea": [1, 32, 36, 42, 47, 76, 81, 83, 88, 89, 98, 100, 106, 119, 128, 148, 149, 150, 197, 199, 207, 242, 255, 276, 277, 278, 326, 328, 336, 385, 387], "over": [1, 16, 17, 25, 38, 41, 42, 46, 47, 59, 61, 63, 65, 76, 81, 82, 89, 91, 95, 98, 105, 107, 119, 128, 131, 144, 149, 150, 151, 155, 156, 162, 164, 171, 174, 181, 193, 196, 197, 201, 208, 217, 220, 224, 226, 227, 228, 237, 244, 249, 255, 258, 262, 272, 277, 278, 279, 283, 284, 286, 290, 291, 293, 300, 303, 310, 322, 325, 326, 330, 337, 346, 349, 353, 355, 356, 357, 362, 368, 370, 372, 375, 379, 380, 382, 387], "scratch": [1, 10, 11, 14, 89, 121, 149, 277], "delet": [1, 3, 4, 7, 14, 61, 65, 71, 75, 76, 93, 128, 142, 151, 160, 163, 168, 197, 201, 202, 222, 224, 249, 255, 270, 279, 289, 292, 297, 330, 331, 351, 353, 379, 383, 388], "x86_64": [1, 3, 5, 8, 53, 117, 153, 200, 208, 213, 239, 244, 281, 329, 342, 375], "veri": [1, 3, 9, 25, 29, 30, 40, 46, 47, 53, 61, 62, 63, 71, 75, 76, 81, 83, 89, 91, 94, 95, 97, 105, 109, 114, 115, 118, 121, 122, 128, 129, 131, 143, 149, 150, 155, 156, 159, 161, 164, 165, 166, 182, 193, 196, 197, 206, 207, 217, 220, 221, 224, 225, 226, 233, 239, 243, 246, 249, 255, 256, 258, 271, 277, 278, 283, 284, 288, 290, 294, 295, 311, 322, 325, 326, 334, 335, 336, 346, 349, 350, 353, 354, 355, 362, 374, 379, 380, 382, 383, 384, 385], "rare": [1, 2, 76, 135, 155, 234, 249, 263, 282, 283, 286, 346, 363], "numer": [1, 13, 14, 26, 38, 46, 61, 76, 82, 83, 89, 91, 93, 94, 109, 114, 115, 121, 131, 141, 148, 149, 150, 155, 161, 181, 197, 200, 208, 217, 220, 249, 258, 269, 276, 277, 278, 283, 287, 290, 310, 326, 329, 337, 346, 349, 387, 391], "respect": [1, 3, 4, 13, 32, 47, 52, 54, 71, 75, 76, 81, 92, 96, 114, 115, 122, 124, 125, 127, 144, 148, 150, 154, 155, 158, 159, 161, 168, 171, 181, 184, 192, 193, 197, 199, 200, 202, 208, 217, 220, 226, 228, 230, 234, 239, 244, 251, 252, 254, 272, 276, 278, 282, 283, 286, 288, 290, 297, 300, 310, 313, 321, 322, 326, 328, 329, 331, 337, 346, 349, 355, 357, 359, 363, 368, 379, 380, 388], "graph": [1, 10, 11, 12, 13, 14, 17, 18, 19, 24, 25, 27, 30, 31, 32, 37, 39, 42, 45, 46, 47, 49, 50, 61, 67, 73, 75, 76, 79, 80, 81, 82, 84, 91, 94, 95, 96, 98, 100, 107, 118, 119, 121, 124, 126, 128, 129, 135, 142, 146, 154, 158, 168, 172, 174, 176, 181, 185, 193, 194, 196, 197, 202, 206, 207, 217, 221, 225, 227, 230, 231, 232, 233, 234, 249, 251, 253, 255, 256, 263, 270, 274, 282, 283, 297, 301, 303, 310, 314, 322, 323, 325, 326, 331, 334, 335, 336, 346, 350, 354, 356, 359, 360, 361, 362, 363, 368, 378, 383, 385, 388], "bluebrain": [1, 3, 155, 159, 200, 216, 239, 283, 288, 329, 345, 379, 393], "softwar": [1, 3, 7, 71, 76, 84, 88, 121, 155, 242, 243, 244, 248, 249, 283, 379, 380, 382, 389], "report": [1, 3, 10, 11, 16, 17, 18, 47, 84, 91, 121, 238, 239, 249, 307, 368, 379], "choos": [1, 14, 24, 38, 39, 49, 61, 71, 73, 76, 93, 95, 99, 101, 114, 115, 121, 122, 139, 146, 150, 161, 174, 207, 217, 242, 243, 249, 267, 274, 276, 278, 290, 303, 336, 346, 371], "scientif": [1, 28, 40, 114, 115, 121, 217, 239, 249, 346], "forum": [1, 71, 78, 82, 121, 237, 242], "www": [1, 65, 71, 77, 78, 84, 95, 121, 122, 146, 153, 155, 159, 193, 196, 200, 248, 274, 281, 283, 288, 322, 325, 329, 372, 379], "phpbb": 1, "particip": [1, 131, 155, 258, 283], "contribut": [1, 3, 88, 89, 91, 128, 131, 135, 148, 150, 158, 187, 217, 230, 234, 249, 255, 258, 276, 278, 286, 316, 346, 359, 363, 381], "join": [1, 71, 77, 78, 217, 279, 346, 382, 388], "monthli": 1, "meet": [1, 9, 25, 121, 128, 217, 255, 346, 379, 393], "wiki": [1, 52, 379], "introduct": [2, 26, 85, 88, 121, 147, 197, 275, 326, 337, 376, 380, 381, 386, 391], "occasion": [2, 129, 150, 159, 197, 207, 218, 243, 256, 278, 286, 288, 326, 336, 347, 355], "advanc": [2, 4, 25, 51, 83, 88, 121, 146, 200, 201, 217, 221, 222, 224, 227, 248, 249, 274, 311, 329, 330, 346, 350, 351, 353, 356, 369, 379, 386, 388], "miscellan": [2, 46, 47, 55, 76, 81, 130, 179, 197, 198, 207, 257, 308, 326, 327, 336, 347], "neuron": [2, 5, 6, 7, 8, 10, 11, 12, 13, 14, 24, 28, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 48, 49, 52, 60, 61, 62, 63, 68, 69, 74, 75, 76, 82, 83, 85, 87, 89, 91, 94, 96, 98, 100, 102, 103, 105, 107, 110, 118, 119, 120, 125, 126, 127, 131, 133, 134, 137, 139, 141, 142, 146, 147, 148, 149, 153, 155, 156, 157, 158, 159, 160, 164, 170, 178, 181, 182, 197, 201, 205, 207, 208, 213, 214, 215, 217, 220, 221, 222, 227, 228, 231, 235, 236, 239, 240, 241, 243, 246, 252, 253, 254, 258, 260, 261, 262, 265, 267, 269, 270, 271, 273, 274, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 307, 309, 310, 311, 312, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 328, 330, 333, 334, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 374, 375, 376, 377, 378, 383, 384, 386, 387, 389, 391], "8": [3, 7, 11, 18, 22, 28, 29, 37, 49, 52, 53, 65, 67, 68, 76, 93, 95, 114, 115, 144, 149, 150, 153, 154, 155, 156, 159, 160, 161, 178, 181, 182, 187, 189, 193, 196, 197, 201, 210, 213, 217, 222, 226, 234, 239, 242, 243, 244, 246, 249, 272, 276, 277, 278, 281, 282, 283, 284, 286, 288, 289, 290, 307, 310, 311, 318, 322, 325, 326, 330, 339, 342, 344, 346, 349, 351, 355, 361, 362, 363, 367, 369, 370, 371, 372, 373, 375, 379, 380, 382, 383, 384, 387], "circa": [3, 318, 365], "nov": 3, "2019": [3, 149, 248, 249, 277, 283], "git": [3, 7, 238, 242, 243, 244, 245, 336, 380, 381], "clone": [3, 7, 139, 148, 197, 226, 238, 242, 244, 245, 267, 276, 326, 355, 379], "cd": [3, 7, 31, 45, 46, 153, 155, 238, 239, 242, 244, 281, 283], "mkdir": [3, 7, 238, 239, 242], "j": [3, 25, 35, 41, 46, 76, 83, 88, 90, 95, 121, 155, 181, 193, 196, 197, 199, 201, 226, 228, 232, 238, 243, 248, 249, 283, 310, 322, 325, 326, 328, 330, 355, 357, 361, 372, 373], "sudo": [3, 238, 242], "invok": [3, 32, 37, 54, 65, 76, 122, 129, 131, 149, 150, 151, 155, 163, 168, 169, 170, 201, 217, 226, 228, 231, 243, 247, 256, 258, 277, 278, 279, 283, 292, 297, 299, 330, 346, 355, 357, 360, 387], "parallel": [3, 4, 7, 13, 16, 25, 26, 29, 36, 61, 76, 77, 95, 121, 131, 141, 148, 149, 152, 153, 156, 166, 196, 217, 222, 239, 242, 248, 249, 258, 269, 276, 277, 280, 281, 284, 295, 325, 346, 351, 365, 369, 375, 379, 380, 382, 383, 384, 386, 388], "often": [3, 4, 7, 28, 32, 36, 42, 52, 59, 71, 73, 76, 77, 78, 88, 89, 93, 98, 114, 118, 119, 121, 128, 129, 144, 149, 155, 156, 158, 161, 164, 165, 169, 178, 185, 191, 193, 197, 208, 217, 220, 221, 222, 224, 239, 242, 255, 256, 272, 277, 283, 284, 286, 290, 294, 298, 307, 311, 314, 320, 322, 326, 337, 346, 349, 350, 351, 353, 367, 368, 369, 371, 379, 387, 388], "much": [3, 13, 25, 28, 33, 36, 37, 40, 42, 43, 53, 59, 60, 61, 62, 65, 71, 75, 76, 77, 78, 83, 85, 88, 89, 90, 91, 94, 98, 105, 114, 115, 119, 122, 124, 128, 129, 134, 139, 143, 148, 149, 154, 155, 156, 161, 164, 175, 197, 217, 224, 226, 228, 233, 249, 251, 255, 256, 261, 267, 271, 276, 277, 282, 283, 284, 290, 292, 304, 326, 346, 353, 355, 357, 362, 379, 383, 387, 388], "than": [3, 4, 7, 9, 14, 16, 17, 18, 29, 32, 33, 35, 36, 38, 39, 40, 41, 46, 47, 59, 61, 65, 66, 68, 73, 75, 76, 77, 78, 82, 83, 84, 86, 88, 90, 91, 93, 94, 95, 98, 104, 105, 114, 115, 118, 119, 120, 121, 122, 128, 129, 131, 139, 143, 146, 148, 149, 150, 155, 156, 158, 159, 161, 162, 164, 168, 178, 181, 187, 188, 189, 194, 196, 197, 201, 204, 205, 211, 213, 216, 217, 222, 226, 228, 229, 230, 231, 239, 242, 246, 249, 255, 256, 258, 267, 271, 274, 276, 277, 278, 282, 283, 284, 286, 287, 288, 289, 290, 291, 293, 297, 307, 310, 316, 317, 318, 323, 325, 326, 330, 333, 334, 337, 340, 342, 345, 346, 351, 355, 357, 358, 359, 360, 368, 372, 375, 379, 380, 382, 383, 384, 387, 388], "One": [3, 4, 65, 76, 81, 85, 91, 95, 114, 115, 121, 131, 142, 150, 155, 159, 170, 196, 197, 217, 224, 228, 242, 258, 270, 278, 283, 288, 299, 325, 326, 337, 346, 353, 357, 375, 378, 379], "maximum": [3, 53, 61, 65, 99, 128, 133, 143, 148, 154, 155, 156, 196, 197, 201, 217, 255, 258, 260, 271, 276, 282, 283, 284, 325, 326, 330, 346, 388], "out": [3, 4, 10, 11, 13, 25, 28, 29, 40, 47, 49, 50, 52, 54, 61, 65, 71, 75, 76, 88, 89, 91, 95, 99, 105, 107, 114, 115, 122, 124, 131, 134, 142, 148, 149, 154, 155, 156, 166, 168, 178, 180, 183, 188, 191, 193, 194, 197, 199, 200, 201, 207, 216, 217, 220, 224, 226, 228, 230, 231, 236, 243, 244, 249, 251, 258, 261, 270, 276, 277, 282, 283, 284, 286, 295, 297, 307, 309, 312, 317, 320, 322, 323, 326, 328, 329, 330, 336, 337, 345, 346, 349, 353, 355, 357, 359, 360, 362, 370, 371, 379, 380, 382, 383, 385, 388, 393], "lh": [3, 368], "which": [3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 25, 29, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 59, 61, 63, 65, 66, 68, 69, 75, 76, 78, 81, 82, 83, 84, 86, 87, 89, 90, 91, 93, 94, 95, 98, 99, 102, 103, 104, 106, 107, 114, 115, 119, 120, 121, 122, 125, 126, 128, 129, 131, 133, 134, 139, 142, 143, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 168, 170, 171, 173, 174, 176, 177, 178, 181, 182, 184, 185, 186, 188, 191, 192, 193, 196, 197, 200, 201, 202, 203, 207, 208, 211, 215, 216, 217, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 235, 238, 239, 242, 243, 244, 247, 249, 252, 253, 255, 256, 258, 260, 261, 262, 267, 270, 271, 272, 273, 274, 276, 277, 278, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 300, 302, 303, 305, 306, 307, 310, 311, 313, 314, 315, 317, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 362, 364, 368, 371, 372, 373, 374, 375, 379, 380, 382, 383, 384, 385, 387, 388, 389], "abov": [3, 4, 5, 7, 8, 25, 29, 32, 35, 36, 37, 42, 43, 50, 52, 53, 59, 61, 63, 65, 75, 76, 84, 93, 94, 95, 99, 105, 114, 115, 120, 121, 131, 142, 144, 148, 149, 154, 155, 158, 161, 172, 176, 178, 185, 208, 217, 224, 226, 239, 242, 243, 244, 258, 270, 272, 276, 277, 279, 282, 283, 286, 290, 301, 305, 307, 314, 326, 337, 346, 353, 355, 361, 367, 369, 370, 371, 372, 373, 375, 378, 379, 382, 383, 384, 385, 387, 388], "cach": [3, 6, 7, 8, 36, 156, 165, 205, 230, 249, 284, 294, 334, 359], "along": [3, 25, 31, 32, 33, 41, 48, 61, 63, 65, 72, 76, 84, 89, 91, 100, 104, 105, 107, 121, 125, 126, 129, 134, 148, 149, 150, 154, 155, 161, 164, 166, 171, 178, 182, 207, 210, 217, 220, 224, 226, 228, 230, 233, 235, 249, 252, 253, 256, 261, 276, 277, 278, 282, 283, 290, 293, 295, 300, 307, 311, 336, 339, 346, 349, 353, 355, 357, 359, 362, 364, 370, 371, 383, 388, 389], "help": [3, 4, 7, 10, 11, 25, 32, 42, 44, 45, 46, 51, 52, 53, 60, 61, 62, 63, 72, 73, 74, 76, 78, 81, 82, 84, 89, 94, 98, 102, 104, 106, 107, 119, 121, 122, 139, 149, 155, 156, 158, 166, 169, 197, 200, 201, 207, 220, 230, 239, 243, 249, 267, 277, 283, 284, 286, 295, 298, 326, 329, 330, 336, 349, 359, 372, 379, 382, 387, 393], "mark": [3, 27, 28, 29, 31, 40, 46, 47, 61, 81, 89, 99, 108, 122, 125, 139, 142, 155, 156, 197, 216, 226, 228, 230, 232, 234, 252, 267, 270, 283, 284, 326, 327, 345, 355, 357, 359, 361, 363, 371, 379, 380, 388], "altern": [3, 8, 13, 29, 30, 31, 46, 47, 61, 71, 75, 76, 81, 84, 100, 109, 121, 155, 156, 158, 160, 168, 194, 197, 208, 217, 228, 237, 242, 249, 283, 284, 286, 289, 297, 323, 326, 334, 337, 342, 346, 357, 362, 367, 368, 373, 375, 381, 383], "ccmake": 3, "interact": [3, 26, 29, 45, 71, 76, 81, 121, 128, 131, 149, 155, 158, 181, 244, 247, 248, 249, 255, 258, 276, 277, 283, 286, 310, 326, 333, 347, 359, 361, 368, 370, 371, 372, 379, 382, 388, 392, 393], "inspect": [3, 52, 239, 383], "miss": [3, 32, 46, 71, 76, 114, 115, 196, 207, 217, 218, 242, 249, 325, 336, 346, 347, 370], "cmakecach": [3, 7], "leav": [3, 14, 24, 25, 61, 65, 89, 90, 91, 102, 103, 104, 109, 111, 149, 159, 161, 197, 207, 220, 228, 244, 277, 288, 290, 326, 336, 346, 349, 357], "compon": [3, 12, 13, 25, 33, 39, 65, 71, 121, 168, 197, 217, 249, 297, 326, 346, 371, 382, 388], "dcmake_install_prefix": [3, 7, 238, 242, 243, 245], "dcmake_build_typ": [3, 7, 239, 242], "dnrn_enable_interview": [3, 7, 242, 245], "dnrn_enable_mpi": [3, 242, 245], "dnrn_enable_python": [3, 245], "dnrn_enable_coreneuron": [3, 7, 243], "valu": [3, 4, 10, 11, 12, 13, 16, 17, 25, 28, 29, 31, 32, 33, 36, 37, 39, 40, 41, 42, 46, 47, 52, 61, 62, 64, 65, 72, 76, 82, 84, 86, 87, 88, 90, 94, 95, 98, 99, 100, 102, 109, 111, 114, 115, 119, 120, 121, 122, 124, 126, 128, 129, 131, 132, 133, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 164, 166, 168, 170, 171, 172, 176, 177, 178, 181, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 220, 221, 222, 224, 226, 227, 229, 230, 231, 232, 233, 234, 240, 244, 247, 251, 253, 255, 256, 258, 259, 260, 262, 267, 268, 270, 271, 272, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 293, 295, 296, 297, 299, 300, 301, 305, 306, 307, 310, 311, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 333, 334, 335, 336, 337, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 353, 355, 356, 358, 359, 360, 361, 362, 363, 367, 368, 369, 370, 372, 375, 382, 383, 384, 387, 388], "persist": [3, 53, 75, 91, 149, 197, 226, 249, 277, 326, 355], "subsequ": [3, 32, 76, 129, 133, 144, 149, 155, 163, 165, 181, 184, 185, 188, 193, 197, 217, 228, 230, 234, 256, 260, 272, 277, 283, 292, 294, 310, 313, 314, 317, 322, 326, 328, 346, 357, 359, 363, 368, 371, 379, 388], "invoc": [3, 76, 164, 193, 293], "unless": [3, 12, 32, 36, 59, 76, 89, 91, 148, 149, 150, 151, 154, 155, 156, 159, 184, 185, 193, 197, 216, 217, 222, 226, 233, 276, 277, 278, 279, 282, 283, 284, 286, 288, 313, 314, 322, 326, 345, 346, 351, 355, 362, 388], "explicitli": [3, 4, 59, 93, 114, 148, 149, 150, 154, 155, 156, 158, 160, 165, 178, 184, 197, 207, 208, 217, 224, 239, 242, 243, 246, 247, 276, 277, 278, 282, 283, 284, 294, 307, 313, 326, 336, 337, 346, 353, 367, 368, 372, 382, 383, 387, 388], "chang": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 44, 46, 50, 53, 61, 64, 65, 67, 72, 75, 76, 77, 82, 90, 93, 94, 95, 97, 98, 99, 100, 102, 104, 108, 109, 110, 111, 114, 115, 119, 121, 122, 124, 125, 126, 128, 129, 131, 139, 140, 142, 145, 146, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 169, 170, 171, 175, 176, 177, 178, 181, 184, 185, 189, 190, 192, 193, 197, 199, 207, 208, 213, 215, 217, 220, 221, 222, 224, 226, 228, 231, 232, 233, 234, 237, 239, 243, 246, 247, 249, 251, 252, 253, 255, 256, 258, 267, 268, 270, 273, 274, 276, 277, 278, 282, 283, 284, 286, 288, 289, 290, 294, 297, 298, 299, 300, 304, 305, 306, 307, 310, 313, 314, 318, 319, 321, 322, 326, 328, 334, 336, 337, 342, 344, 346, 349, 350, 351, 353, 355, 357, 359, 360, 361, 362, 363, 367, 371, 372, 374, 380, 381, 382, 383, 385, 387, 388], "modifi": [3, 7, 28, 29, 38, 39, 42, 43, 54, 59, 65, 71, 76, 77, 93, 98, 119, 121, 128, 134, 143, 145, 146, 149, 150, 155, 158, 160, 161, 193, 194, 197, 201, 207, 213, 217, 220, 249, 255, 261, 271, 273, 274, 277, 278, 282, 283, 286, 289, 290, 307, 322, 323, 326, 330, 336, 342, 346, 349, 355, 369, 370, 372, 373, 379, 380, 382, 384, 387, 388], "them": [3, 4, 5, 10, 11, 25, 28, 36, 40, 42, 46, 47, 51, 52, 53, 54, 61, 62, 65, 66, 76, 81, 82, 91, 93, 99, 100, 103, 106, 107, 121, 122, 144, 148, 149, 150, 155, 160, 161, 163, 170, 178, 181, 182, 194, 195, 197, 200, 207, 208, 216, 217, 219, 224, 228, 231, 242, 243, 244, 247, 249, 272, 276, 277, 278, 283, 289, 290, 299, 307, 310, 311, 323, 324, 326, 329, 336, 337, 345, 346, 348, 353, 357, 360, 368, 371, 372, 375, 378, 379, 382, 383, 387, 388], "intend": [3, 29, 61, 89, 109, 114, 115, 155, 158, 170, 193, 225, 226, 283, 286, 299, 322, 354, 355, 368, 379, 388], "taken": [3, 4, 13, 76, 91, 131, 132, 149, 155, 159, 171, 178, 197, 217, 258, 259, 277, 283, 288, 300, 326, 346, 371, 375, 385], "account": [3, 4, 29, 52, 53, 75, 122, 131, 148, 149, 155, 161, 217, 249, 258, 276, 277, 283, 290, 346, 371], "necessari": [3, 7, 8, 10, 11, 13, 14, 24, 32, 42, 47, 61, 62, 81, 85, 91, 93, 118, 121, 122, 128, 129, 148, 149, 150, 155, 156, 158, 161, 164, 178, 185, 186, 193, 197, 207, 208, 216, 217, 243, 246, 247, 249, 255, 256, 277, 278, 283, 284, 286, 290, 292, 293, 294, 307, 314, 315, 322, 326, 334, 336, 345, 346, 368, 379, 380, 385, 388], "fresh": [3, 30, 91], "empti": [3, 14, 37, 48, 71, 89, 102, 128, 155, 159, 161, 164, 168, 169, 178, 184, 197, 201, 207, 217, 224, 225, 226, 228, 230, 244, 255, 282, 283, 288, 290, 297, 298, 307, 313, 326, 330, 334, 336, 345, 346, 353, 354, 355, 357, 359, 379], "howev": [3, 4, 12, 14, 25, 29, 32, 35, 36, 37, 39, 45, 54, 59, 60, 61, 65, 68, 75, 76, 83, 84, 88, 89, 91, 93, 96, 99, 100, 104, 121, 122, 129, 133, 143, 146, 148, 149, 150, 154, 155, 158, 159, 160, 161, 178, 181, 197, 201, 207, 208, 217, 220, 222, 224, 226, 228, 231, 243, 256, 260, 271, 274, 276, 277, 278, 282, 283, 286, 287, 288, 289, 290, 292, 307, 310, 318, 326, 328, 330, 336, 337, 346, 349, 351, 353, 357, 360, 368, 370, 372, 378, 379, 380, 382, 385, 387, 388, 392], "unknown": [3, 149, 213, 239, 277, 307, 342, 370, 382, 385], "bug": [3, 121, 148, 155, 156, 159, 195, 231, 249, 276, 283, 284, 288, 324, 360, 368, 379, 380], "suffici": [3, 38, 75, 93, 121, 161, 197, 242, 249, 276, 290, 326, 379, 382], "again": [3, 14, 29, 31, 36, 42, 44, 45, 46, 47, 61, 71, 73, 75, 76, 81, 89, 93, 98, 102, 109, 119, 128, 154, 155, 156, 165, 174, 185, 187, 196, 207, 217, 220, 228, 255, 282, 283, 284, 294, 297, 303, 314, 316, 325, 336, 346, 349, 357, 369, 379, 382, 383, 385, 387, 388], "arg": [3, 28, 29, 52, 72, 76, 123, 131, 133, 134, 144, 149, 150, 151, 154, 155, 159, 160, 161, 163, 165, 166, 168, 169, 171, 172, 173, 175, 177, 178, 181, 182, 184, 186, 187, 193, 196, 197, 199, 200, 201, 202, 204, 208, 210, 211, 212, 213, 217, 220, 222, 223, 226, 230, 232, 233, 234, 239, 244, 250, 258, 260, 261, 262, 272, 277, 278, 279, 282, 283, 288, 289, 290, 294, 295, 297, 298, 300, 301, 302, 304, 306, 307, 310, 311, 313, 315, 316, 322, 325, 326, 328, 329, 330, 331, 333, 334, 337, 339, 340, 341, 342, 346, 349, 351, 352, 355, 361, 362, 363], "rel": [3, 25, 29, 42, 58, 75, 76, 83, 94, 99, 122, 142, 146, 148, 149, 150, 154, 155, 156, 158, 161, 164, 165, 172, 197, 217, 226, 228, 230, 233, 249, 270, 274, 276, 277, 278, 282, 283, 284, 290, 294, 301, 326, 346, 355, 357, 359, 362, 368, 377, 379, 380, 382], "common": [3, 24, 36, 42, 47, 52, 65, 76, 81, 89, 95, 98, 119, 121, 128, 135, 142, 149, 155, 192, 198, 208, 224, 226, 228, 242, 249, 255, 270, 277, 283, 286, 321, 327, 337, 353, 355, 357, 379, 380, 388], "prepend": [3, 169, 171, 181, 239, 298, 300, 308, 310], "onto": [3, 27, 29, 32, 36, 45, 46, 52, 54, 69, 71, 75, 99, 117, 148, 154, 155, 175, 178, 197, 217, 228, 234, 249, 276, 282, 283, 293, 304, 307, 326, 346, 357, 363, 379, 382, 383, 384, 385, 388], "export": [3, 7, 38, 60, 78, 84, 94, 122, 153, 155, 208, 238, 239, 242, 244, 262, 269, 281, 283, 329], "pythonpath": [3, 7, 208, 238, 242], "each": [3, 5, 9, 10, 11, 12, 13, 25, 27, 28, 29, 32, 33, 36, 37, 38, 39, 42, 43, 46, 47, 49, 51, 52, 54, 59, 61, 65, 68, 69, 70, 71, 73, 75, 76, 79, 81, 83, 88, 90, 91, 94, 95, 98, 100, 102, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 133, 134, 137, 139, 142, 143, 144, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 165, 168, 169, 171, 172, 176, 184, 186, 187, 190, 194, 196, 197, 201, 202, 214, 215, 216, 217, 220, 221, 222, 224, 226, 227, 228, 230, 231, 233, 234, 240, 245, 249, 251, 252, 253, 255, 256, 260, 261, 265, 267, 270, 271, 272, 277, 278, 282, 283, 284, 286, 287, 288, 289, 290, 294, 297, 298, 300, 301, 305, 313, 315, 316, 319, 323, 325, 326, 328, 330, 331, 336, 341, 343, 344, 345, 346, 349, 350, 351, 353, 355, 356, 357, 359, 360, 362, 363, 370, 373, 375, 379, 382, 383, 384, 385, 387, 388], "custom": [3, 7, 19, 26, 31, 45, 61, 65, 89, 91, 95, 98, 119, 121, 158, 242], "debug": [3, 45, 52, 76, 135, 155, 158, 201, 217, 220, 240, 263, 283, 286, 330, 346, 349, 382, 388], "fast": [3, 9, 32, 36, 58, 104, 155, 161, 164, 194, 197, 205, 217, 226, 230, 233, 249, 283, 290, 323, 326, 334, 346, 355, 359, 362, 381], "mean": [3, 9, 25, 28, 34, 39, 47, 52, 53, 54, 71, 76, 81, 89, 90, 91, 93, 95, 99, 102, 114, 115, 121, 126, 128, 129, 146, 148, 149, 150, 151, 155, 156, 160, 164, 168, 171, 178, 184, 194, 196, 197, 204, 212, 217, 226, 228, 234, 242, 249, 253, 255, 256, 274, 276, 277, 278, 279, 283, 284, 289, 297, 300, 307, 313, 323, 325, 326, 327, 328, 341, 346, 355, 357, 363, 368, 375, 379, 380, 382, 383], "o2": [3, 21, 22, 28, 163, 181, 197, 202, 217, 310, 331], "optim": [3, 7, 29, 42, 71, 82, 90, 98, 119, 121, 128, 129, 130, 149, 155, 197, 224, 239, 248, 249, 255, 256, 257, 277, 283, 326, 353, 391], "o0": [3, 238, 239, 242], "gdb": [3, 166, 240, 295], "otherwis": [3, 7, 54, 76, 103, 128, 129, 144, 148, 155, 156, 159, 160, 163, 168, 178, 181, 182, 186, 192, 193, 194, 197, 199, 201, 204, 207, 211, 213, 217, 223, 228, 232, 236, 255, 256, 272, 276, 277, 282, 283, 284, 286, 288, 289, 292, 296, 297, 307, 310, 311, 315, 321, 322, 323, 326, 328, 330, 333, 336, 340, 342, 346, 352, 357, 361, 369, 370, 371, 372, 379, 380, 382], "awai": [3, 25, 37, 61, 75, 76, 91, 105, 106, 128, 131, 149, 160, 185, 190, 207, 224, 228, 255, 258, 277, 289, 314, 319, 336, 353, 357, 379], "dndebug": [3, 242], "latter": [3, 33, 54, 59, 91, 98, 119, 122, 149, 154, 155, 156, 193, 207, 208, 210, 217, 224, 277, 282, 283, 284, 286, 290, 322, 336, 339, 346, 353, 368], "elimin": [3, 29, 33, 60, 74, 121, 122, 146, 149, 150, 155, 197, 215, 217, 239, 249, 274, 277, 278, 283, 326, 344, 346], "assert": [3, 4, 155, 222, 262, 283, 346, 351], "statement": [3, 4, 10, 11, 13, 28, 37, 42, 45, 46, 47, 52, 61, 71, 72, 78, 85, 91, 98, 114, 115, 119, 120, 121, 122, 128, 129, 133, 144, 145, 147, 148, 150, 151, 154, 155, 156, 159, 160, 162, 163, 164, 165, 166, 176, 180, 187, 189, 190, 193, 197, 199, 201, 202, 204, 205, 208, 217, 220, 221, 222, 227, 230, 239, 255, 256, 260, 272, 273, 275, 276, 278, 279, 282, 283, 284, 288, 293, 294, 295, 305, 309, 315, 316, 318, 319, 322, 326, 330, 331, 333, 334, 337, 346, 349, 351, 356, 359, 370, 379, 380], "cmake_c_flag": 3, "cmake_cxx_flag": 3, "releasedebugautoflag": 3, "super": 3, "comput": [3, 6, 7, 9, 13, 25, 33, 36, 39, 40, 42, 47, 52, 53, 61, 71, 76, 81, 82, 83, 84, 86, 88, 89, 90, 91, 94, 95, 96, 114, 115, 120, 122, 124, 129, 131, 144, 146, 148, 149, 150, 155, 156, 159, 160, 161, 164, 169, 185, 191, 194, 196, 197, 203, 215, 217, 220, 221, 222, 226, 227, 228, 229, 233, 239, 242, 248, 249, 251, 256, 257, 258, 272, 274, 276, 277, 278, 283, 284, 288, 289, 290, 298, 314, 320, 323, 325, 326, 332, 344, 346, 349, 350, 351, 355, 356, 357, 358, 362, 365, 373, 379, 383, 385], "machin": [3, 7, 31, 35, 36, 39, 47, 55, 61, 76, 95, 131, 153, 155, 156, 159, 166, 176, 191, 197, 201, 208, 220, 224, 228, 237, 243, 244, 249, 258, 281, 283, 284, 288, 295, 305, 320, 326, 330, 349, 357, 382, 383, 384, 385], "rough": 3, "powerbook": 3, "arm64": [3, 242, 243, 244], "39": [3, 153, 200, 242, 243, 244, 249, 276, 281, 329, 344, 373, 375, 377, 382, 387, 388], "35": [3, 33, 41, 161, 197, 239, 249, 276, 290, 326, 344, 373, 382, 387, 388], "touch": [3, 249], "src": [3, 32, 37, 52, 54, 58, 76, 77, 78, 80, 107, 108, 110, 134, 145, 146, 148, 149, 150, 153, 155, 159, 170, 193, 197, 208, 216, 217, 220, 230, 238, 239, 242, 243, 261, 262, 273, 274, 275, 276, 277, 278, 281, 283, 288, 299, 322, 326, 345, 346, 349, 359, 379], "nrnoc": [3, 52, 77, 78, 134, 146, 148, 149, 150, 217, 220, 239, 242, 261, 262, 274, 276, 277, 278, 346, 349], "4": [3, 10, 11, 21, 22, 27, 28, 35, 36, 49, 52, 53, 60, 63, 67, 76, 88, 95, 103, 114, 115, 120, 121, 128, 129, 133, 144, 148, 149, 154, 155, 156, 158, 159, 161, 164, 168, 169, 172, 178, 181, 182, 187, 192, 193, 196, 197, 201, 208, 210, 213, 217, 220, 225, 226, 227, 230, 232, 239, 244, 247, 248, 249, 255, 256, 260, 272, 276, 277, 279, 283, 284, 286, 288, 289, 290, 293, 297, 298, 301, 307, 310, 311, 320, 321, 322, 325, 326, 328, 330, 337, 339, 342, 344, 346, 349, 354, 355, 356, 359, 361, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 393], "On": [3, 7, 10, 11, 13, 27, 36, 41, 46, 48, 53, 65, 76, 77, 87, 101, 133, 154, 155, 159, 166, 169, 193, 197, 207, 217, 222, 224, 228, 237, 239, 242, 243, 244, 249, 260, 282, 283, 288, 295, 322, 326, 336, 346, 351, 353, 355, 357, 359, 375, 379, 385], "brew": [3, 36, 242, 243], "print": [3, 10, 13, 16, 17, 18, 19, 28, 29, 36, 44, 45, 46, 47, 52, 53, 54, 61, 64, 65, 72, 76, 81, 82, 91, 95, 98, 114, 115, 119, 122, 124, 129, 132, 133, 143, 144, 145, 148, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 178, 181, 182, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 224, 226, 227, 230, 232, 234, 239, 243, 247, 249, 251, 256, 259, 260, 262, 271, 272, 273, 274, 276, 279, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 307, 310, 311, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 353, 355, 356, 359, 361, 363, 368, 370, 373, 377, 382, 383, 385, 387, 388], "built": [3, 4, 9, 10, 11, 48, 52, 54, 61, 76, 82, 85, 103, 120, 128, 139, 148, 149, 150, 153, 155, 156, 158, 178, 189, 208, 211, 224, 236, 239, 242, 243, 244, 249, 255, 267, 276, 277, 278, 281, 283, 284, 286, 307, 320, 337, 340, 353, 368, 373, 382, 383, 384, 388], "individu": [3, 14, 29, 40, 45, 47, 60, 61, 75, 81, 89, 121, 128, 139, 143, 149, 153, 155, 158, 161, 176, 193, 196, 197, 226, 248, 249, 255, 267, 271, 277, 281, 283, 286, 290, 305, 322, 325, 355, 368, 379, 380, 387, 388], "1": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32, 35, 37, 42, 43, 44, 45, 47, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 67, 71, 72, 76, 81, 84, 85, 86, 88, 90, 94, 95, 98, 100, 104, 105, 109, 111, 112, 114, 115, 119, 120, 121, 122, 124, 125, 127, 128, 129, 131, 133, 134, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 178, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 239, 242, 244, 246, 247, 248, 249, 251, 252, 254, 255, 256, 258, 260, 261, 262, 271, 272, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 307, 310, 311, 313, 314, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387], "doe": [3, 7, 8, 9, 10, 11, 13, 25, 28, 29, 32, 33, 36, 38, 39, 40, 41, 42, 45, 46, 47, 49, 52, 54, 65, 74, 76, 81, 82, 89, 91, 93, 95, 98, 119, 122, 128, 129, 131, 132, 140, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 163, 165, 166, 168, 171, 178, 181, 182, 184, 187, 190, 193, 197, 200, 201, 207, 208, 213, 217, 218, 221, 222, 226, 228, 229, 231, 233, 234, 239, 243, 249, 255, 256, 258, 259, 268, 274, 276, 277, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 292, 294, 295, 297, 299, 300, 307, 310, 311, 313, 315, 319, 322, 326, 329, 330, 336, 337, 339, 340, 342, 346, 347, 350, 351, 353, 355, 357, 358, 359, 360, 362, 363, 368, 369, 371, 372, 375, 379, 380, 382, 385, 387, 388], "non": [3, 4, 7, 32, 36, 52, 53, 65, 76, 82, 90, 94, 128, 131, 146, 148, 149, 154, 155, 156, 161, 170, 184, 187, 190, 193, 201, 208, 217, 231, 243, 248, 249, 255, 258, 274, 276, 277, 282, 283, 284, 286, 290, 299, 313, 316, 319, 322, 330, 337, 339, 346, 360, 368, 379, 380, 382, 387, 388], "show": [3, 10, 11, 13, 17, 24, 25, 27, 28, 31, 32, 33, 36, 37, 38, 39, 41, 46, 47, 53, 59, 60, 61, 62, 65, 71, 75, 76, 81, 84, 85, 88, 89, 91, 94, 95, 96, 99, 100, 102, 103, 109, 110, 114, 115, 118, 125, 126, 128, 129, 139, 140, 142, 144, 148, 149, 161, 168, 169, 171, 172, 178, 184, 197, 213, 216, 224, 226, 228, 229, 231, 232, 234, 235, 239, 249, 252, 253, 255, 256, 267, 268, 270, 272, 276, 277, 290, 297, 300, 301, 307, 313, 326, 328, 342, 345, 353, 357, 358, 360, 361, 362, 363, 364, 367, 368, 369, 370, 372, 373, 374, 378, 382, 383, 384, 385, 387, 388], "automat": [3, 4, 7, 14, 31, 46, 47, 52, 61, 62, 74, 76, 81, 91, 121, 122, 124, 144, 146, 148, 149, 150, 155, 158, 161, 164, 168, 178, 184, 197, 207, 208, 217, 220, 226, 228, 230, 234, 239, 242, 243, 244, 249, 251, 272, 274, 276, 277, 278, 283, 286, 289, 290, 297, 307, 313, 326, 336, 337, 346, 347, 349, 355, 357, 359, 363, 373, 379, 380, 382, 388], "subproject": 3, "iv": [3, 153, 155, 249, 281, 283, 342], "actual": [3, 14, 16, 25, 31, 32, 41, 42, 45, 46, 52, 54, 61, 65, 71, 75, 76, 77, 78, 89, 91, 95, 96, 98, 100, 103, 108, 118, 119, 121, 129, 131, 146, 148, 149, 150, 154, 155, 156, 159, 161, 168, 193, 197, 199, 202, 207, 210, 217, 226, 227, 228, 231, 239, 249, 256, 258, 274, 276, 277, 278, 283, 284, 288, 290, 297, 322, 326, 328, 331, 336, 337, 339, 346, 355, 356, 357, 360, 371, 372, 379, 382, 384, 388], "purpos": [3, 5, 10, 11, 40, 52, 71, 74, 76, 82, 84, 91, 95, 139, 150, 154, 155, 161, 164, 197, 200, 201, 217, 226, 228, 244, 249, 262, 267, 278, 282, 283, 290, 326, 329, 330, 346, 355, 357, 365, 371, 379, 380], "wish": [3, 29, 88, 128, 149, 153, 154, 155, 159, 161, 168, 193, 197, 200, 201, 203, 217, 219, 226, 242, 255, 277, 281, 282, 283, 288, 290, 297, 326, 329, 330, 332, 346, 348, 355, 368, 378, 383, 388], "independ": [3, 9, 25, 36, 65, 68, 82, 84, 89, 114, 115, 124, 126, 129, 148, 155, 168, 194, 196, 197, 199, 224, 228, 248, 249, 251, 253, 256, 276, 283, 297, 307, 323, 325, 326, 328, 353, 357, 379, 382, 388], "div_dir": 3, "ivcmak": 3, "share": [3, 4, 10, 11, 14, 49, 53, 54, 60, 77, 78, 84, 87, 95, 121, 148, 149, 150, 154, 155, 156, 164, 193, 202, 208, 213, 226, 239, 242, 249, 262, 276, 277, 278, 282, 283, 284, 293, 322, 328, 331, 337, 342, 346, 355, 357, 375, 379], "static": [3, 4, 8, 52, 148, 149, 150, 155, 200, 244, 249, 262, 276, 277, 278, 329, 337], "incorpor": [3, 52, 71, 76, 84, 121, 158, 160, 249, 286, 289, 379, 382], "libnrniv": [3, 52, 239, 242], "dlopen": [3, 242], "xquartz": [3, 242, 243], "": [3, 4, 5, 7, 10, 11, 13, 14, 16, 17, 19, 21, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 45, 49, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 66, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 89, 91, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 114, 115, 118, 121, 129, 131, 132, 139, 144, 146, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 163, 164, 165, 168, 169, 173, 181, 184, 186, 194, 197, 199, 200, 202, 204, 206, 208, 210, 211, 216, 217, 218, 220, 221, 224, 225, 226, 228, 231, 232, 234, 236, 237, 239, 242, 243, 244, 247, 248, 249, 256, 258, 259, 267, 272, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 307, 310, 311, 313, 315, 316, 320, 323, 326, 328, 329, 331, 333, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 353, 354, 355, 357, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 385, 387, 389, 391, 393], "graphic": [3, 14, 29, 32, 33, 39, 45, 60, 61, 65, 71, 76, 81, 87, 91, 94, 98, 107, 119, 122, 142, 149, 150, 176, 185, 192, 199, 206, 217, 224, 226, 230, 237, 239, 247, 249, 270, 277, 278, 305, 314, 321, 328, 335, 346, 353, 355, 359, 361, 368, 369, 372, 373, 375, 382, 383, 384, 385, 387, 388], "suddenli": [3, 61, 371], "remak": 3, "script": [3, 4, 26, 36, 48, 61, 71, 76, 81, 82, 155, 196, 213, 216, 226, 228, 234, 239, 243, 244, 245, 249, 283, 342, 345, 355, 357, 363, 382, 383, 384, 385, 386, 391], "brittl": 3, "stabl": [3, 13, 24, 33, 36, 38, 149, 220, 249, 277, 349, 367, 368, 371, 379, 380], "ever": [3, 39, 150, 197, 249, 278, 379], "push": [3, 20, 29, 52, 54, 67, 75, 148, 154, 164, 173, 208, 234, 276, 282, 290, 293, 302, 337, 363, 379, 388], "respositori": 3, "mpich": [3, 10, 11, 153, 155, 244, 281, 283], "mpi4pi": [3, 5, 283], "cannot": [3, 4, 8, 36, 39, 54, 76, 93, 95, 114, 115, 131, 145, 149, 155, 156, 160, 164, 172, 178, 181, 182, 193, 197, 201, 208, 216, 217, 218, 220, 226, 228, 239, 242, 249, 258, 260, 273, 276, 277, 278, 279, 283, 284, 289, 301, 307, 310, 311, 318, 322, 326, 330, 337, 345, 346, 347, 349, 355, 357, 379, 380, 387], "mix": [3, 42, 71, 93, 98, 119, 184, 217, 249, 283, 313, 346, 371], "mostli": [3, 161, 243, 249, 290, 298, 379, 387, 392], "distibut": 3, "semicolon": 3, "against": [3, 10, 11, 25, 28, 89, 226, 239, 243, 249, 311, 355, 369, 379, 380], "found": [3, 13, 35, 39, 46, 47, 52, 76, 93, 114, 115, 128, 129, 133, 134, 149, 156, 197, 201, 208, 211, 217, 224, 228, 242, 243, 255, 256, 260, 261, 277, 284, 326, 330, 340, 346, 353, 357, 373, 379], "know": [3, 27, 29, 35, 39, 41, 46, 47, 52, 54, 75, 76, 81, 84, 85, 89, 90, 91, 114, 115, 118, 121, 149, 150, 155, 156, 159, 201, 208, 226, 228, 236, 243, 247, 249, 277, 278, 283, 284, 288, 326, 330, 355, 357, 367, 372, 373, 379, 382, 384, 385, 387, 388], "about": [3, 4, 10, 11, 13, 25, 36, 40, 41, 43, 46, 47, 49, 52, 53, 54, 58, 59, 61, 62, 65, 71, 72, 74, 76, 77, 81, 84, 89, 92, 95, 99, 100, 110, 114, 115, 121, 122, 128, 131, 133, 137, 139, 148, 149, 150, 155, 156, 157, 160, 163, 165, 168, 197, 207, 217, 220, 222, 224, 226, 230, 231, 234, 236, 238, 239, 249, 255, 258, 260, 265, 267, 276, 277, 278, 283, 284, 285, 286, 289, 290, 294, 297, 326, 330, 336, 346, 349, 351, 353, 355, 359, 360, 363, 368, 379, 382, 383, 384, 387, 388, 392, 393], "msmpi": [3, 245], "loader": 3, "tri": [3, 7, 71, 89, 150, 155, 239, 242, 278, 283], "libmpi": [3, 242], "libmpich": [3, 242], "symbol": [3, 52, 75, 76, 128, 129, 169, 174, 178, 182, 208, 211, 220, 226, 228, 239, 255, 256, 298, 303, 311, 337, 340, 349, 357, 388], "determin": [3, 4, 13, 28, 36, 42, 43, 49, 54, 61, 90, 91, 94, 114, 115, 126, 139, 144, 149, 150, 154, 155, 156, 161, 172, 178, 192, 193, 197, 202, 207, 217, 226, 228, 230, 248, 249, 253, 267, 272, 277, 278, 282, 283, 284, 286, 290, 301, 307, 321, 322, 326, 331, 336, 346, 355, 357, 359, 387, 393], "whether": [3, 10, 11, 27, 33, 37, 39, 49, 51, 53, 65, 71, 76, 83, 89, 91, 93, 95, 114, 115, 118, 121, 125, 126, 127, 128, 129, 149, 150, 155, 161, 178, 197, 201, 207, 217, 226, 249, 252, 253, 254, 255, 256, 277, 278, 283, 290, 307, 326, 330, 336, 346, 355, 371, 379, 387], "libnrnmp_xxx": 3, "dnrn_mpi_dynam": 3, "hine": [3, 35, 71, 76, 83, 84, 95, 120, 121, 153, 155, 197, 200, 208, 213, 239, 242, 243, 248, 249, 281, 283, 326, 329, 379, 385], "soft": [3, 242, 249], "ignor": [3, 9, 13, 16, 17, 18, 25, 36, 66, 91, 129, 144, 146, 148, 149, 150, 168, 193, 197, 216, 217, 218, 226, 243, 256, 272, 274, 276, 277, 278, 286, 297, 318, 322, 326, 345, 346, 347, 355, 368, 372, 382, 383, 388], "fallback": 3, "below": [3, 4, 8, 13, 19, 25, 28, 29, 37, 42, 44, 54, 63, 65, 76, 81, 84, 91, 93, 94, 98, 99, 105, 119, 121, 125, 128, 139, 148, 150, 155, 158, 161, 164, 168, 181, 197, 224, 226, 238, 239, 242, 243, 244, 252, 255, 267, 276, 278, 283, 286, 287, 289, 290, 294, 297, 307, 310, 326, 344, 353, 355, 368, 372, 378, 382, 383, 384, 387, 388], "els": [3, 10, 11, 17, 21, 22, 24, 28, 29, 44, 47, 52, 54, 58, 61, 65, 72, 76, 77, 78, 91, 122, 131, 147, 148, 150, 154, 155, 164, 181, 187, 193, 194, 197, 201, 203, 207, 208, 216, 217, 220, 221, 222, 226, 228, 231, 246, 258, 275, 276, 278, 282, 283, 286, 290, 293, 296, 310, 316, 322, 323, 326, 330, 336, 337, 345, 346, 350, 351, 353, 355, 357, 360, 362, 368, 369, 373, 375, 377, 382, 385, 388], "eg": [3, 28, 76, 114, 115, 129, 131, 133, 144, 148, 149, 151, 153, 155, 156, 161, 164, 171, 181, 182, 184, 193, 195, 197, 201, 207, 208, 211, 215, 217, 220, 224, 226, 227, 228, 233, 242, 256, 258, 260, 272, 276, 277, 279, 281, 283, 284, 293, 300, 310, 311, 313, 322, 324, 326, 330, 336, 337, 340, 346, 349, 353, 355, 356, 357, 362, 379, 380], "my": [3, 36, 78, 87, 155, 194, 208, 217, 242, 243, 283, 323, 344, 346, 387], "bldnrnmacpkgcmak": [3, 243], "dnrn_python_dynam": [3, 243, 245], "dpython_execut": [3, 7, 238, 242, 243, 245], "By": [3, 7, 52, 59, 61, 71, 85, 89, 95, 99, 149, 153, 155, 156, 168, 193, 200, 230, 233, 247, 276, 277, 281, 283, 284, 289, 297, 322, 329, 359, 362, 371, 375, 387, 388], "py": [3, 5, 8, 11, 24, 44, 45, 61, 95, 117, 146, 155, 159, 200, 208, 239, 242, 243, 244, 274, 277, 283, 288, 326, 329, 337, 385, 393], "site": [3, 25, 37, 46, 71, 77, 88, 125, 126, 127, 155, 224, 249, 252, 253, 254, 283, 342, 353, 374], "dnrn_module_install_opt": 3, "rx3d": [3, 242], "No": [3, 24, 54, 76, 91, 94, 110, 155, 161, 182, 187, 197, 200, 208, 213, 217, 220, 228, 242, 243, 249, 283, 290, 311, 316, 326, 329, 337, 342, 346, 349, 357, 382, 387], "reason": [3, 4, 31, 36, 41, 42, 52, 73, 76, 81, 83, 89, 91, 95, 106, 114, 115, 120, 121, 122, 131, 148, 149, 150, 155, 156, 161, 170, 181, 196, 197, 217, 224, 239, 242, 244, 258, 276, 277, 278, 283, 284, 290, 299, 310, 325, 326, 346, 353, 371, 379, 380, 382, 383, 387], "turn": [3, 14, 24, 25, 27, 28, 32, 36, 40, 45, 47, 61, 62, 69, 71, 75, 76, 85, 88, 89, 91, 96, 110, 114, 115, 122, 128, 129, 142, 149, 154, 155, 165, 166, 177, 178, 191, 197, 217, 221, 226, 249, 255, 256, 270, 276, 277, 282, 283, 291, 294, 295, 306, 307, 320, 326, 346, 350, 355, 368, 370, 379, 388, 393], "significantli": [3, 155, 249, 283, 382], "increas": [3, 10, 11, 13, 16, 25, 31, 33, 41, 47, 52, 54, 89, 90, 91, 121, 122, 131, 149, 155, 160, 161, 178, 197, 217, 221, 228, 239, 249, 258, 277, 283, 286, 289, 290, 307, 326, 346, 350, 357, 368, 370, 371, 375, 379, 382, 384], "due": [3, 4, 29, 39, 41, 42, 59, 76, 98, 114, 115, 119, 148, 149, 155, 156, 158, 161, 195, 197, 217, 218, 226, 239, 242, 243, 244, 247, 249, 276, 277, 283, 284, 286, 288, 290, 318, 324, 326, 328, 339, 346, 347, 355, 368, 370, 375, 379, 380, 384, 393], "cython": [3, 242, 243], "zero": [3, 28, 29, 35, 47, 76, 93, 128, 134, 146, 148, 149, 154, 155, 156, 166, 184, 186, 193, 197, 201, 255, 261, 274, 276, 277, 282, 283, 284, 286, 295, 313, 315, 322, 326, 327, 330, 339, 375, 379, 387], "slowli": [3, 9, 148, 217, 249, 276, 346], "me": [3, 87, 156, 168, 193, 243, 284, 297, 307, 322], "less": [3, 25, 33, 36, 39, 73, 76, 86, 114, 115, 131, 149, 155, 156, 181, 197, 201, 208, 213, 217, 226, 228, 231, 249, 258, 277, 283, 284, 310, 326, 330, 337, 342, 346, 355, 357, 360, 379, 380, 382], "dnrn_rx3d_opt_level": [3, 243, 245], "2": [3, 4, 10, 11, 15, 18, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 35, 37, 43, 44, 45, 47, 49, 52, 53, 54, 58, 59, 60, 63, 64, 66, 67, 72, 73, 76, 82, 85, 88, 90, 93, 94, 95, 103, 105, 109, 113, 114, 115, 120, 121, 122, 131, 133, 134, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 166, 168, 169, 171, 172, 173, 178, 181, 182, 184, 185, 187, 189, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 208, 210, 213, 214, 215, 216, 217, 218, 220, 224, 225, 226, 227, 228, 230, 232, 234, 239, 242, 243, 244, 245, 246, 247, 248, 249, 258, 260, 261, 262, 272, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 293, 295, 297, 300, 301, 305, 307, 310, 311, 313, 314, 315, 316, 318, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 337, 339, 341, 342, 344, 345, 346, 347, 349, 353, 354, 355, 356, 357, 359, 361, 362, 363, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387], "submodul": [3, 7, 158, 242, 286, 382, 388], "its": [3, 4, 6, 9, 10, 11, 13, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 61, 65, 68, 69, 74, 75, 76, 81, 82, 84, 86, 88, 89, 91, 93, 94, 95, 98, 102, 103, 104, 105, 107, 108, 109, 114, 115, 118, 119, 120, 121, 122, 124, 128, 129, 133, 143, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 165, 168, 170, 178, 181, 182, 184, 186, 187, 191, 193, 196, 197, 201, 202, 204, 207, 208, 211, 217, 218, 222, 224, 226, 228, 231, 234, 239, 242, 243, 244, 246, 247, 249, 251, 255, 256, 260, 262, 271, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 294, 297, 307, 310, 311, 313, 315, 316, 320, 325, 326, 330, 331, 333, 334, 336, 337, 340, 346, 347, 351, 353, 355, 357, 360, 363, 368, 370, 371, 372, 373, 374, 376, 379, 382, 383, 384, 385, 387, 388], "threadsaf": [3, 4, 36, 147, 148, 155, 275, 276, 283, 373], "promot": [3, 84, 144, 150, 249, 272, 278, 368], "appear": [3, 14, 25, 27, 31, 37, 40, 42, 46, 47, 50, 52, 61, 65, 74, 75, 76, 81, 84, 87, 89, 91, 93, 94, 98, 99, 103, 104, 105, 108, 109, 110, 114, 115, 118, 119, 121, 122, 124, 128, 129, 144, 148, 149, 150, 161, 162, 168, 174, 178, 181, 182, 193, 197, 202, 207, 208, 224, 225, 226, 227, 228, 231, 234, 243, 249, 251, 255, 256, 262, 272, 276, 277, 278, 283, 290, 291, 297, 298, 303, 307, 310, 311, 322, 326, 331, 336, 337, 353, 354, 355, 356, 357, 359, 360, 363, 382, 383, 384, 385, 388], "right": [3, 14, 25, 27, 28, 32, 33, 37, 42, 47, 50, 52, 61, 65, 71, 73, 74, 75, 76, 80, 81, 89, 91, 94, 95, 98, 99, 100, 101, 102, 105, 107, 109, 114, 115, 118, 119, 126, 129, 139, 142, 149, 150, 155, 158, 161, 164, 170, 181, 186, 190, 191, 192, 197, 201, 211, 218, 220, 226, 228, 230, 233, 242, 243, 253, 256, 267, 270, 277, 278, 283, 286, 290, 299, 310, 315, 319, 320, 321, 326, 330, 340, 341, 347, 349, 355, 357, 359, 362, 369, 371, 375, 379, 382, 383, 387, 388], "hand": [3, 27, 37, 42, 47, 71, 99, 121, 148, 149, 150, 174, 181, 185, 190, 193, 197, 201, 204, 207, 220, 243, 249, 276, 277, 278, 286, 303, 310, 314, 319, 322, 330, 333, 336, 349, 368, 374, 382, 387, 388, 391], "side": [3, 25, 42, 61, 65, 91, 95, 99, 105, 122, 126, 148, 149, 150, 155, 164, 181, 190, 193, 197, 201, 204, 207, 217, 220, 237, 239, 247, 249, 253, 276, 277, 278, 283, 286, 310, 319, 322, 326, 330, 333, 336, 346, 349, 365, 368, 379, 387, 388], "becom": [3, 9, 27, 36, 37, 45, 47, 59, 75, 76, 81, 91, 102, 108, 110, 121, 125, 131, 148, 149, 150, 151, 155, 159, 160, 161, 163, 164, 166, 174, 177, 178, 187, 197, 208, 211, 217, 218, 222, 226, 228, 234, 239, 252, 258, 276, 277, 278, 279, 283, 288, 289, 290, 293, 295, 303, 306, 307, 316, 326, 337, 340, 346, 347, 351, 355, 357, 363, 379, 380, 387], "There": [3, 10, 11, 13, 14, 25, 28, 29, 40, 47, 61, 71, 76, 84, 93, 95, 98, 114, 115, 119, 121, 128, 131, 149, 154, 155, 156, 158, 161, 164, 187, 188, 191, 197, 216, 218, 220, 224, 228, 239, 244, 255, 258, 277, 282, 283, 284, 286, 290, 298, 316, 317, 320, 326, 334, 337, 341, 345, 347, 349, 353, 357, 370, 379, 382, 385, 387, 388, 393], "blob": [3, 10, 47, 81, 357], "cmakelist": [3, 242, 243, 379], "ones": [3, 41, 42, 71, 286, 375, 379, 384], "particular": [3, 7, 24, 25, 28, 32, 39, 40, 42, 43, 47, 50, 54, 61, 71, 81, 84, 88, 89, 91, 95, 98, 114, 115, 119, 121, 126, 128, 131, 139, 148, 149, 150, 151, 154, 155, 156, 158, 168, 172, 197, 199, 200, 208, 217, 224, 228, 239, 249, 253, 255, 258, 267, 271, 276, 277, 278, 279, 282, 283, 284, 286, 297, 301, 326, 328, 329, 337, 346, 353, 357, 367, 368, 371, 382, 383, 384, 387, 388], "interest": [3, 4, 25, 29, 32, 34, 35, 46, 47, 52, 77, 78, 81, 88, 89, 95, 121, 122, 217, 239, 286, 346, 368, 372, 379, 382, 388], "line": [3, 14, 25, 27, 28, 29, 31, 32, 37, 45, 47, 52, 61, 65, 74, 76, 79, 81, 84, 87, 88, 89, 91, 93, 94, 96, 99, 102, 104, 108, 110, 114, 115, 121, 122, 126, 128, 129, 146, 148, 149, 155, 156, 164, 181, 184, 185, 186, 187, 192, 193, 194, 196, 197, 201, 202, 206, 207, 208, 213, 216, 217, 224, 225, 226, 228, 230, 231, 232, 233, 234, 238, 242, 243, 245, 249, 253, 255, 256, 262, 274, 277, 283, 284, 297, 298, 310, 313, 314, 315, 316, 321, 322, 323, 325, 326, 327, 330, 331, 334, 335, 336, 337, 342, 345, 346, 353, 354, 355, 357, 359, 360, 361, 362, 363, 368, 375, 379, 382, 383, 385, 387, 388], "corenrn_enable_nmodl": 3, "corenrn_enable_gpu": 3, "request": [3, 37, 77, 78, 129, 155, 156, 166, 168, 182, 193, 197, 207, 218, 224, 227, 228, 243, 256, 283, 284, 295, 297, 311, 322, 326, 336, 347, 353, 356, 357, 368, 370, 375, 380, 381], "involv": [3, 10, 11, 13, 27, 32, 76, 83, 88, 91, 95, 103, 110, 114, 115, 121, 124, 128, 129, 131, 146, 149, 155, 158, 159, 161, 162, 168, 197, 208, 217, 228, 233, 236, 243, 249, 251, 255, 256, 258, 274, 277, 283, 286, 288, 290, 297, 337, 346, 357, 368, 385], "associ": [3, 12, 54, 71, 74, 75, 76, 90, 102, 121, 131, 144, 149, 150, 154, 155, 156, 158, 161, 172, 178, 181, 194, 197, 199, 200, 202, 208, 216, 217, 220, 224, 226, 228, 235, 238, 249, 258, 272, 276, 277, 278, 282, 283, 284, 286, 290, 301, 307, 310, 323, 326, 328, 329, 331, 337, 345, 346, 349, 353, 355, 357, 364, 371, 379, 385, 388, 393], "format": [3, 12, 13, 28, 47, 52, 59, 65, 71, 76, 81, 89, 94, 114, 115, 121, 122, 124, 135, 145, 155, 156, 160, 180, 182, 183, 184, 185, 193, 197, 210, 212, 213, 216, 222, 224, 228, 242, 249, 251, 263, 273, 283, 284, 288, 289, 290, 302, 309, 312, 313, 314, 322, 325, 326, 328, 339, 341, 342, 345, 350, 351, 353, 355, 357, 368, 377, 379, 382, 383, 384, 385, 387, 388, 393], "properli": [3, 10, 11, 12, 31, 44, 45, 61, 89, 121, 148, 149, 155, 159, 168, 185, 201, 202, 217, 220, 226, 228, 276, 277, 283, 288, 297, 314, 330, 331, 346, 349, 355, 357], "corenrn_clang_format": 3, "dcorenrn_clang_format": 3, "clang": [3, 7, 239, 242, 243], "thei": [3, 4, 9, 12, 14, 25, 28, 29, 34, 39, 40, 41, 42, 46, 47, 52, 53, 54, 59, 61, 62, 65, 66, 71, 72, 76, 77, 78, 79, 81, 83, 84, 89, 91, 93, 94, 98, 99, 100, 105, 114, 115, 119, 121, 122, 134, 143, 148, 149, 150, 154, 155, 156, 158, 159, 161, 164, 168, 169, 178, 182, 187, 195, 197, 201, 207, 208, 212, 215, 216, 217, 220, 226, 228, 230, 239, 242, 243, 244, 249, 261, 271, 276, 277, 278, 282, 283, 284, 286, 288, 290, 297, 298, 311, 316, 324, 326, 330, 336, 337, 341, 344, 345, 346, 349, 355, 357, 359, 362, 368, 369, 371, 372, 373, 379, 380, 382, 383, 385, 387, 388], "definit": [3, 25, 52, 61, 65, 76, 81, 87, 89, 91, 102, 104, 128, 131, 134, 149, 150, 165, 178, 181, 193, 220, 230, 239, 249, 255, 258, 261, 277, 278, 294, 310, 337, 349, 359, 369, 371, 373, 380, 381, 382, 383, 387, 388], "incomplet": [3, 36, 40, 71, 148, 239, 242, 249, 276, 371], "prior": [3, 13, 16, 17, 18, 28, 31, 61, 76, 129, 131, 133, 148, 149, 150, 151, 154, 155, 158, 160, 161, 170, 178, 184, 193, 197, 206, 207, 217, 222, 226, 249, 256, 258, 260, 276, 277, 278, 279, 282, 283, 289, 290, 299, 304, 313, 322, 326, 335, 336, 345, 346, 349, 351, 355, 368, 379, 387], "sdk_root": 3, "xcrun": [3, 243], "macosx": [3, 242, 243], "got": [3, 14, 47, 49, 81, 155, 283, 383], "habit": 3, "dcmake_c_compil": [3, 7, 243], "dcmake_cxx_compil": [3, 7, 243], "gcc": [3, 7, 52, 76, 239, 242], "find": [3, 4, 7, 10, 11, 13, 25, 26, 28, 35, 39, 40, 46, 47, 52, 76, 77, 78, 81, 82, 84, 89, 91, 94, 95, 121, 128, 155, 164, 166, 197, 200, 228, 239, 242, 243, 244, 255, 283, 286, 293, 295, 326, 329, 357, 362, 372, 382, 387], "stdio": [3, 210, 339], "inithoc": 3, "plu": [3, 9, 10, 11, 14, 31, 46, 52, 71, 76, 91, 102, 131, 148, 161, 190, 249, 258, 276, 290, 319, 387], "hard": [3, 42, 82, 84, 94, 98, 119, 122, 239, 365, 379, 384], "anyth": [3, 4, 7, 10, 11, 34, 43, 46, 61, 76, 82, 87, 91, 155, 164, 168, 194, 197, 208, 226, 228, 236, 276, 283, 297, 323, 326, 337, 355, 357, 362, 382, 388], "result": [3, 4, 5, 10, 11, 16, 17, 18, 24, 25, 27, 29, 31, 40, 42, 46, 47, 49, 51, 71, 76, 81, 86, 88, 89, 91, 94, 95, 96, 97, 98, 110, 114, 115, 119, 121, 122, 125, 126, 128, 129, 131, 148, 149, 150, 155, 156, 158, 159, 160, 161, 166, 186, 191, 193, 196, 197, 201, 204, 211, 215, 217, 222, 226, 240, 242, 243, 244, 249, 252, 253, 255, 256, 258, 262, 276, 277, 278, 283, 284, 286, 287, 288, 289, 290, 295, 303, 315, 320, 322, 325, 326, 330, 333, 340, 344, 346, 351, 355, 371, 379, 383, 386, 393], "These": [3, 4, 7, 8, 10, 11, 25, 26, 29, 40, 52, 54, 60, 61, 66, 76, 84, 86, 88, 93, 95, 100, 101, 102, 109, 111, 121, 122, 125, 129, 146, 149, 150, 158, 164, 165, 169, 181, 186, 191, 197, 207, 208, 216, 217, 220, 224, 226, 227, 228, 242, 243, 244, 252, 256, 274, 277, 278, 283, 286, 287, 294, 298, 310, 315, 316, 320, 326, 328, 336, 337, 345, 346, 349, 353, 356, 357, 359, 368, 371, 374, 378, 379, 385, 388, 393], "situ": [3, 193, 249, 322], "tree": [3, 4, 10, 11, 27, 29, 33, 43, 47, 52, 61, 63, 77, 81, 84, 89, 91, 99, 100, 121, 146, 151, 155, 161, 217, 220, 239, 249, 274, 279, 283, 289, 290, 337, 346, 349], "accident": [3, 105, 139, 267], "logic": [3, 28, 76, 155, 159, 161, 181, 195, 207, 217, 222, 249, 283, 288, 290, 310, 324, 336, 346, 351, 378, 379, 385], "discard": [3, 52, 62, 148, 155, 160, 218, 228, 276, 283, 326, 347, 357, 379], "shorthand": 3, "sensibl": [3, 150, 278], "impli": [3, 12, 114, 115, 131, 155, 197, 217, 244, 249, 258, 283, 326, 346, 368], "too": [3, 29, 31, 37, 52, 54, 73, 76, 80, 82, 84, 91, 104, 114, 115, 120, 121, 122, 134, 155, 156, 161, 174, 182, 197, 207, 217, 218, 226, 228, 230, 232, 239, 261, 283, 284, 290, 303, 311, 326, 336, 346, 347, 355, 357, 359, 361, 383], "dnrn_enable_docs_with_external_instal": 3, "assum": [3, 4, 10, 11, 29, 33, 53, 59, 61, 69, 71, 76, 90, 91, 117, 122, 131, 144, 149, 150, 153, 154, 155, 156, 161, 168, 181, 184, 196, 197, 200, 204, 222, 226, 233, 235, 258, 272, 277, 278, 281, 282, 283, 284, 286, 290, 297, 310, 313, 325, 326, 329, 333, 334, 346, 351, 355, 362, 364, 368, 371, 383, 384, 388], "unlik": [3, 40, 75, 84, 89, 114, 115, 158, 286, 291, 379, 388, 393], "tune": [3, 121, 239, 249, 379], "thing": [3, 16, 25, 27, 28, 29, 32, 37, 38, 39, 41, 51, 52, 54, 60, 61, 62, 71, 75, 76, 78, 81, 89, 91, 93, 103, 110, 114, 115, 124, 131, 155, 156, 158, 164, 168, 178, 197, 201, 208, 211, 217, 220, 221, 228, 234, 251, 258, 283, 284, 286, 297, 299, 307, 326, 330, 337, 340, 346, 349, 350, 351, 357, 363, 379, 387], "warn": [3, 14, 36, 46, 53, 62, 71, 93, 144, 149, 150, 181, 191, 197, 217, 222, 228, 239, 242, 272, 276, 277, 278, 286, 310, 318, 320, 326, 346, 351, 357, 368, 379, 385, 387], "nocmodl": [3, 76, 149, 242, 277], "tool": [3, 9, 12, 14, 26, 29, 30, 31, 32, 36, 37, 38, 40, 44, 45, 46, 53, 59, 60, 65, 75, 77, 78, 82, 83, 84, 87, 95, 98, 100, 103, 106, 107, 109, 114, 118, 119, 120, 121, 124, 126, 127, 128, 129, 135, 137, 139, 145, 156, 169, 172, 206, 207, 214, 217, 218, 226, 227, 228, 231, 236, 239, 242, 243, 248, 249, 251, 253, 254, 255, 256, 263, 265, 267, 273, 284, 298, 301, 335, 336, 343, 346, 347, 355, 356, 357, 360, 371, 375, 379, 380, 382, 387, 388, 392], "cluster": [3, 7, 10, 11, 47, 53, 81, 121, 155, 156, 239, 242, 249, 283, 284], "architectur": [3, 6, 8, 14, 25, 29, 32, 40, 61, 62, 81, 95, 103, 106, 107, 112, 113, 121, 194, 242, 243, 249, 323, 379, 384], "login": [3, 53, 153, 155, 242, 244, 281, 283], "node": [3, 12, 33, 53, 61, 71, 84, 134, 141, 146, 148, 149, 151, 153, 155, 163, 200, 217, 220, 234, 242, 244, 249, 261, 269, 274, 276, 277, 279, 281, 283, 290, 292, 329, 346, 349, 351, 363, 369, 370, 372, 375, 377, 385], "append": [3, 13, 16, 17, 18, 21, 22, 28, 29, 58, 67, 122, 128, 129, 148, 150, 154, 155, 156, 158, 161, 162, 164, 169, 184, 186, 197, 208, 217, 220, 226, 233, 234, 255, 256, 276, 278, 282, 283, 284, 286, 289, 290, 291, 298, 308, 313, 315, 316, 317, 326, 327, 328, 337, 346, 349, 355, 362, 363, 379, 383, 384, 385, 387], "knl": [3, 242], "skylak": 3, "dcmake_cxx_flag": [3, 7, 238, 239, 242], "xmic": [3, 242], "avx512": [3, 242], "dnrn_nmodl_cxx_flag": [3, 242], "xhost": [3, 242], "give": [3, 12, 28, 29, 35, 36, 62, 65, 71, 74, 94, 95, 114, 115, 122, 148, 149, 155, 156, 159, 161, 164, 170, 172, 174, 191, 196, 197, 208, 217, 220, 222, 226, 228, 231, 239, 244, 249, 276, 277, 283, 284, 286, 288, 290, 299, 301, 303, 320, 325, 326, 337, 346, 349, 351, 355, 357, 360, 375, 379, 382, 387, 388], "hint": [3, 12, 25, 28, 29, 33, 38, 39, 41, 43, 45, 46, 59, 61, 62, 76, 108, 110, 122, 137, 149, 155, 159, 239, 265, 277, 283, 288, 382], "multi": [3, 200, 217, 249, 329, 346], "arch": [3, 242, 243, 342], "pgi": [3, 7], "newer": [3, 7, 150, 242, 244, 246, 278, 388], "dreadline_librari": 3, "gnu": [3, 76, 122, 196, 213, 239, 325, 342, 375], "libreadlin": [3, 375], "catch2": 3, "catchorg": 3, "pytest": 3, "ters": [3, 155, 283], "verbos": [3, 133, 260, 283], "seen": [3, 33, 50, 52, 54, 76, 91, 103, 121, 164, 249, 307, 382, 388], "vv": [3, 238, 239], "name_of_the_test": 3, "testfil": 3, "termin": [3, 13, 14, 16, 30, 31, 33, 35, 36, 43, 46, 47, 48, 54, 61, 63, 71, 76, 81, 117, 124, 154, 161, 176, 180, 183, 185, 197, 213, 228, 239, 242, 243, 249, 251, 290, 305, 309, 312, 314, 326, 342, 355, 357, 384, 385, 392, 393], "ensur": [3, 7, 24, 25, 38, 43, 61, 63, 91, 111, 148, 149, 161, 162, 185, 230, 238, 242, 249, 276, 277, 290, 291, 313, 314, 347, 359, 379, 380, 382, 388], "last": [3, 13, 16, 17, 18, 28, 29, 32, 36, 46, 47, 51, 52, 61, 65, 68, 76, 89, 91, 114, 115, 118, 122, 131, 148, 149, 154, 155, 156, 158, 160, 161, 163, 164, 168, 174, 178, 181, 182, 184, 185, 193, 196, 197, 201, 203, 206, 207, 208, 211, 213, 217, 218, 222, 224, 226, 228, 231, 234, 242, 243, 244, 249, 258, 276, 277, 282, 283, 284, 286, 289, 290, 293, 297, 303, 307, 310, 311, 313, 314, 322, 325, 326, 330, 332, 335, 336, 339, 340, 342, 346, 347, 351, 353, 355, 357, 360, 362, 363, 365, 369, 370, 374, 379, 382, 383, 384, 385, 387, 388, 393], "mention": [3, 4, 13, 36, 52, 63, 85, 99, 121, 242, 244, 371, 379, 380, 388], "dnrn_enable_python_dynam": [3, 243, 245], "dnrn_enable_test": [3, 53, 238, 239], "parallel_test": 3, "pynrn": 3, "test_curr": 3, "lcov": [3, 238], "apt": [3, 238, 242], "simplifi": [3, 14, 29, 43, 61, 71, 91, 103, 121, 154, 158, 217, 240, 249, 282, 286, 346, 379, 388, 392], "repeat": [3, 14, 31, 39, 45, 46, 47, 75, 79, 81, 89, 91, 95, 122, 155, 159, 178, 208, 217, 231, 236, 283, 288, 307, 337, 346, 360], "examin": [3, 10, 11, 14, 25, 40, 45, 47, 49, 50, 71, 77, 78, 81, 88, 89, 91, 104, 109, 114, 122, 139, 155, 156, 224, 236, 267, 283, 284, 353, 371, 393], "cover_begin": [3, 238], "eras": [3, 29, 146, 155, 185, 194, 196, 197, 225, 226, 230, 232, 234, 274, 283, 305, 314, 323, 325, 326, 354, 355, 359, 361, 363], "data": [3, 4, 10, 11, 13, 14, 16, 17, 18, 19, 26, 38, 49, 52, 53, 58, 62, 63, 73, 76, 82, 84, 88, 90, 94, 121, 122, 124, 128, 129, 133, 141, 148, 149, 150, 155, 156, 158, 160, 184, 197, 202, 217, 222, 224, 226, 228, 238, 239, 247, 248, 249, 251, 255, 256, 260, 269, 276, 277, 278, 283, 284, 286, 289, 313, 316, 317, 326, 331, 336, 346, 351, 353, 355, 357, 362, 371, 376, 379, 382, 383, 385, 387, 388, 391, 393], "gcda": 3, "baselin": [3, 10, 11, 91, 238, 373], "cmake_binary_dir": 3, "ran": [3, 10, 11, 249], "cover_html": [3, 238], "sum": [3, 9, 28, 89, 102, 128, 148, 149, 155, 158, 161, 168, 197, 201, 217, 249, 255, 276, 277, 283, 286, 290, 297, 326, 327, 330, 346, 368, 373], "url": [3, 201, 244, 330], "past": [3, 17, 36, 65, 89, 91, 145, 154, 155, 208, 227, 239, 243, 273, 282, 283, 356], "browser": [3, 10, 11, 12, 14, 42, 47, 71, 75, 81, 84, 91, 118, 124, 129, 139, 169, 173, 184, 224, 231, 235, 238, 251, 256, 267, 298, 302, 308, 313, 353, 360, 364, 375], "review": [3, 61, 83, 95, 131, 244, 248, 249, 258, 381], "combin": [3, 52, 54, 59, 71, 76, 84, 95, 103, 121, 148, 156, 166, 181, 196, 197, 199, 220, 224, 228, 238, 239, 242, 249, 276, 284, 286, 289, 295, 307, 310, 311, 325, 326, 328, 349, 353, 357, 376, 385, 387, 388], "explain": [3, 8, 25, 32, 42, 53, 71, 98, 119, 122, 243, 249, 379], "limit": [3, 4, 33, 39, 40, 41, 51, 71, 76, 89, 91, 124, 129, 131, 148, 150, 154, 155, 156, 158, 159, 170, 178, 184, 208, 213, 215, 217, 218, 220, 226, 227, 230, 246, 249, 251, 256, 258, 276, 278, 282, 283, 284, 287, 288, 292, 299, 313, 328, 337, 342, 344, 346, 347, 349, 355, 356, 359, 368, 372, 375, 388], "project_source_dir": 3, "dnrn_coverage_fil": [3, 238], "partran": [3, 238], "parsact": [3, 238], "nrnpython": [3, 8, 54, 158, 208, 213, 238, 337, 342, 350, 353, 388], "nrnpy_hoc": [3, 54, 238], "convent": [3, 114, 115, 131, 134, 158, 242, 247, 249, 258, 261, 328, 373, 380, 381, 387], "reformat": 3, "md": 3, "further": [3, 9, 29, 39, 76, 84, 89, 91, 98, 102, 107, 119, 121, 149, 154, 155, 197, 249, 277, 282, 283, 286, 287, 326, 334, 368, 379, 380, 383], "clang_format": 3, "increment": [3, 13, 16, 17, 47, 50, 52, 54, 71, 76, 102, 149, 155, 169, 181, 194, 196, 197, 201, 207, 220, 226, 228, 234, 277, 283, 290, 298, 310, 323, 325, 326, 330, 334, 336, 346, 349, 357, 363, 379, 380], "patch": [3, 44, 91, 122, 148, 249, 276, 381, 388], "done": [3, 7, 10, 11, 12, 13, 14, 16, 23, 25, 31, 35, 36, 37, 40, 47, 52, 54, 61, 75, 77, 78, 79, 82, 85, 91, 94, 104, 105, 106, 108, 110, 118, 121, 149, 150, 153, 155, 156, 164, 166, 170, 178, 181, 193, 196, 197, 208, 210, 213, 216, 217, 220, 222, 230, 236, 243, 244, 262, 277, 278, 280, 281, 283, 284, 286, 289, 293, 295, 299, 307, 310, 322, 325, 326, 337, 339, 342, 345, 346, 349, 351, 355, 359, 365, 375, 379, 380, 382, 385, 388, 389], "addit": [3, 4, 8, 10, 11, 41, 52, 59, 65, 71, 76, 84, 114, 115, 121, 145, 150, 154, 155, 156, 159, 161, 181, 196, 197, 199, 207, 217, 220, 238, 239, 244, 249, 273, 278, 282, 283, 284, 286, 288, 290, 310, 325, 326, 328, 336, 346, 349, 355, 362, 368, 372, 373, 375, 379, 382, 383, 388], "nrn_formatting_on": 3, "ref": [3, 28, 159, 168, 197, 208, 244, 279, 283, 288, 289, 296, 297, 303, 307, 308, 311, 313, 316, 322, 323, 325, 326, 328, 337, 339, 340, 341, 346, 379, 388], "nrn_formatting_cpp_changes_onli": 3, "style": [3, 12, 13, 25, 32, 37, 65, 71, 76, 93, 121, 122, 133, 139, 144, 145, 150, 154, 155, 156, 161, 164, 175, 178, 179, 181, 184, 185, 193, 197, 207, 208, 213, 217, 225, 226, 228, 231, 234, 242, 249, 260, 267, 272, 273, 278, 282, 283, 284, 286, 290, 303, 304, 307, 308, 310, 313, 314, 322, 326, 336, 337, 342, 346, 354, 355, 357, 360, 363, 379], "addresssanit": [3, 239], "leaksanit": [3, 239], "undefinedbehaviorsanit": [3, 239], "accept": [3, 31, 54, 61, 75, 78, 89, 91, 94, 98, 102, 103, 118, 119, 124, 129, 155, 167, 168, 169, 173, 174, 184, 187, 197, 207, 217, 228, 242, 243, 251, 256, 283, 286, 296, 297, 302, 303, 313, 316, 326, 336, 346, 357, 370, 379], "comma": [3, 28, 76, 201, 202, 330, 331, 387, 388], "address": [3, 4, 71, 121, 150, 155, 170, 178, 181, 182, 184, 193, 197, 201, 208, 217, 226, 239, 249, 278, 283, 310, 313, 330, 337, 346, 355, 368, 379, 380, 388], "leak": [3, 61, 197, 239, 249, 326, 368, 373, 382, 383, 384, 388], "undefin": [3, 65, 76, 164, 227, 239, 242, 244, 356], "diagnosi": [3, 240], "inform": [3, 4, 7, 10, 11, 12, 14, 25, 36, 39, 40, 42, 46, 49, 52, 53, 61, 62, 65, 71, 74, 76, 77, 81, 84, 91, 98, 103, 119, 121, 122, 128, 137, 149, 150, 151, 154, 155, 158, 160, 161, 165, 185, 196, 197, 202, 207, 208, 213, 217, 222, 224, 226, 228, 231, 238, 239, 242, 243, 249, 255, 265, 276, 277, 278, 279, 282, 283, 286, 287, 289, 290, 294, 296, 314, 325, 326, 328, 331, 336, 337, 342, 346, 351, 353, 355, 357, 360, 382, 387, 388], "observ": [3, 10, 11, 25, 29, 32, 39, 45, 91, 97, 201, 232, 234, 249, 330, 361, 363, 368], "subclass": [3, 158, 208, 286, 337, 387], "discreteev": 3, "space": [3, 14, 24, 25, 27, 28, 29, 30, 33, 36, 37, 45, 46, 47, 52, 61, 62, 63, 65, 74, 76, 99, 116, 121, 124, 128, 141, 143, 148, 161, 165, 168, 176, 187, 197, 207, 211, 213, 224, 226, 228, 231, 232, 233, 243, 249, 251, 255, 269, 271, 276, 290, 294, 297, 305, 316, 326, 336, 340, 342, 344, 353, 355, 357, 360, 361, 362, 365, 368, 370, 371, 375, 379, 380, 387, 388], "lot": [3, 14, 27, 46, 60, 61, 71, 91, 114, 115, 128, 149, 155, 156, 161, 255, 277, 284, 290, 379, 382], "destruct": [3, 42, 54, 98, 119, 197, 217, 326], "notifi": [3, 44, 81, 129, 146, 148, 154, 155, 169, 193, 197, 217, 226, 230, 256, 274, 276, 282, 283, 298, 326, 346, 355, 359, 372], "watch": [3, 24, 37, 40, 71, 77, 89, 143, 147, 154, 155, 220, 237, 239, 271, 275, 282, 283, 349], "piec": [3, 33, 35, 36, 41, 45, 61, 71, 76, 155, 156, 193, 228, 283, 284, 322, 357, 382, 385, 388], "faradai": [3, 28, 52, 76, 114, 115, 149, 189, 262, 277, 318, 349, 388], "etc": [3, 4, 8, 14, 16, 29, 32, 41, 42, 45, 46, 59, 60, 61, 76, 77, 78, 80, 82, 89, 91, 98, 107, 109, 114, 115, 119, 121, 129, 141, 144, 145, 149, 155, 159, 164, 178, 193, 194, 197, 200, 208, 211, 217, 220, 224, 226, 228, 230, 232, 233, 239, 242, 256, 269, 272, 273, 277, 283, 288, 293, 307, 322, 323, 326, 329, 337, 340, 346, 349, 353, 355, 357, 359, 361, 362, 368, 369, 370, 371, 373, 379, 380, 382, 383, 387, 388, 393], "nist": [3, 149, 277], "constant": [3, 9, 12, 24, 25, 31, 32, 37, 41, 52, 59, 61, 71, 76, 84, 90, 91, 95, 102, 104, 114, 115, 118, 120, 121, 124, 128, 129, 140, 148, 150, 155, 158, 159, 160, 171, 193, 197, 198, 220, 224, 226, 228, 235, 249, 251, 255, 256, 262, 268, 276, 278, 286, 288, 289, 300, 322, 326, 327, 328, 349, 353, 355, 357, 364, 367, 368, 370, 371, 373, 375, 383], "absenc": [3, 75, 114, 115, 155, 208, 226, 249, 283, 337, 355], "nrnunit_use_legaci": [3, 149, 277, 318, 349, 388], "0or1": [3, 160, 165, 168, 169, 178, 213, 217, 294, 297, 298, 342], "At": [3, 8, 9, 14, 25, 27, 31, 32, 33, 37, 40, 45, 46, 47, 52, 61, 71, 72, 81, 88, 89, 91, 95, 96, 102, 110, 114, 115, 118, 124, 142, 143, 148, 149, 150, 155, 156, 170, 175, 178, 193, 194, 196, 197, 205, 207, 208, 214, 220, 227, 231, 243, 251, 270, 271, 276, 277, 278, 283, 284, 304, 322, 323, 325, 326, 334, 336, 343, 349, 356, 360, 379, 380], "nrnmech": [3, 48, 76, 224, 353], "adapt": [3, 4, 8, 26, 58, 77, 82, 91, 121, 197, 230, 249, 286, 326, 359, 379, 380, 382, 391], "pthread": [3, 155, 283, 375], "float": [3, 28, 52, 54, 65, 76, 86, 166, 181, 192, 194, 195, 197, 210, 228, 239, 283, 286, 290, 292, 295, 310, 321, 322, 323, 324, 325, 326, 339, 357, 361, 387, 388], "bu": [3, 53, 166, 295], "view": [3, 10, 18, 24, 25, 27, 29, 31, 32, 41, 47, 50, 65, 67, 68, 71, 73, 81, 84, 100, 107, 118, 122, 128, 146, 154, 155, 161, 197, 224, 226, 227, 228, 231, 232, 234, 237, 238, 249, 255, 274, 283, 290, 353, 355, 356, 360, 361, 362, 363, 379], "nrn_feenableexcept": [3, 166, 295, 388], "transpar": [4, 6, 184, 193, 242, 313, 322], "handl": [4, 9, 13, 29, 52, 54, 65, 68, 71, 81, 131, 135, 141, 144, 148, 149, 154, 156, 159, 200, 207, 208, 217, 218, 226, 242, 247, 249, 258, 263, 269, 272, 276, 277, 282, 284, 288, 298, 307, 311, 326, 329, 336, 337, 346, 347, 355, 379, 383, 387, 388], "spike": [4, 5, 8, 9, 10, 11, 13, 16, 17, 18, 28, 32, 37, 51, 53, 61, 69, 70, 75, 77, 78, 82, 83, 90, 109, 111, 112, 113, 121, 148, 154, 155, 156, 196, 197, 216, 217, 239, 242, 248, 249, 276, 282, 283, 284, 325, 326, 345, 346, 373, 383, 384, 386, 391, 393], "network": [4, 5, 6, 9, 21, 22, 26, 35, 36, 40, 42, 45, 47, 51, 61, 71, 74, 78, 82, 94, 95, 96, 97, 102, 103, 105, 109, 111, 112, 137, 141, 151, 154, 156, 169, 196, 200, 222, 224, 237, 242, 248, 249, 265, 269, 276, 279, 282, 284, 298, 325, 329, 351, 353, 382, 385, 386, 388, 391], "gap": [4, 33, 38, 65, 121, 131, 155, 161, 239, 242, 249, 258, 283, 290], "junction": [4, 33, 38, 121, 131, 155, 161, 242, 249, 258, 283, 290], "coupl": [4, 11, 25, 46, 51, 61, 75, 87, 102, 103, 131, 146, 148, 149, 150, 155, 242, 249, 258, 274, 276, 277, 278, 283, 387], "fix": [4, 24, 32, 33, 36, 38, 39, 44, 46, 59, 65, 76, 82, 91, 93, 102, 103, 121, 126, 131, 148, 154, 155, 158, 159, 168, 178, 197, 205, 217, 220, 226, 228, 231, 239, 242, 245, 249, 253, 258, 276, 282, 283, 286, 288, 297, 307, 325, 326, 334, 346, 349, 355, 357, 360, 367, 371, 379, 380, 382, 393], "summaris": 4, "present": [4, 13, 27, 33, 41, 42, 47, 61, 76, 81, 84, 88, 89, 91, 93, 95, 98, 100, 101, 119, 121, 124, 129, 131, 132, 133, 139, 142, 146, 148, 150, 151, 154, 155, 156, 158, 160, 161, 162, 165, 169, 173, 184, 193, 194, 196, 197, 199, 208, 213, 217, 220, 224, 226, 228, 233, 242, 243, 249, 251, 256, 258, 259, 260, 267, 270, 274, 276, 278, 279, 282, 283, 284, 286, 287, 289, 290, 291, 294, 298, 302, 313, 322, 323, 325, 326, 328, 337, 342, 346, 349, 353, 355, 357, 362, 368, 369, 371, 379, 382, 392, 393], "remark": 4, "cvode": [4, 8, 20, 24, 29, 33, 36, 44, 46, 59, 91, 121, 131, 135, 143, 146, 148, 154, 155, 159, 191, 197, 205, 220, 221, 222, 224, 226, 239, 258, 263, 271, 274, 276, 282, 283, 288, 320, 326, 334, 349, 350, 351, 353, 355, 368, 371, 372, 388], "ida": [4, 121, 146, 155, 217, 274, 283, 346], "mechan": [4, 14, 25, 26, 29, 30, 36, 38, 43, 46, 47, 48, 52, 53, 59, 61, 66, 72, 75, 76, 82, 83, 84, 89, 91, 99, 103, 105, 114, 122, 131, 134, 138, 140, 141, 144, 146, 147, 149, 151, 155, 156, 160, 161, 171, 174, 178, 189, 199, 200, 201, 213, 216, 217, 220, 222, 242, 248, 249, 258, 261, 266, 268, 269, 272, 274, 275, 277, 279, 283, 284, 289, 290, 300, 303, 307, 318, 328, 329, 330, 342, 345, 346, 349, 351, 366, 368, 371, 372, 375, 382, 385, 391, 393], "i_membran": [4, 148, 217, 276, 346, 388], "sole": [4, 61, 74, 207, 336, 359, 379, 382], "switch": [4, 25, 38, 39, 45, 66, 89, 91, 94, 96, 121, 135, 142, 146, 155, 158, 184, 186, 196, 217, 249, 262, 263, 270, 274, 283, 286, 287, 307, 313, 315, 325, 346, 378, 383, 388], "use_fast_imem": [4, 148, 217, 276, 346], "i_membrane_": [4, 148, 217, 276, 346, 388], "linear": [4, 26, 27, 38, 39, 89, 91, 100, 121, 131, 146, 148, 155, 190, 193, 194, 196, 197, 217, 249, 258, 274, 276, 283, 319, 322, 323, 325, 326, 346, 379], "per": [4, 41, 53, 59, 66, 67, 76, 87, 89, 128, 129, 144, 149, 150, 154, 155, 158, 170, 187, 193, 194, 197, 216, 217, 221, 226, 244, 249, 255, 256, 272, 277, 278, 282, 283, 286, 299, 316, 322, 323, 326, 328, 345, 346, 350, 371, 372, 373, 375, 379, 380], "timestep": [4, 39, 148, 155, 197, 222, 239, 276, 283, 326, 351, 375], "calcul": [4, 13, 16, 17, 18, 25, 29, 30, 41, 52, 76, 81, 82, 84, 88, 89, 91, 125, 126, 127, 128, 129, 131, 132, 133, 134, 144, 149, 150, 154, 155, 161, 192, 197, 217, 224, 226, 249, 252, 253, 254, 255, 256, 258, 259, 260, 261, 272, 277, 278, 283, 286, 290, 321, 326, 346, 353, 355, 382, 387], "vector": [4, 8, 13, 16, 17, 18, 38, 51, 52, 54, 59, 67, 76, 82, 89, 91, 93, 95, 122, 129, 131, 133, 134, 135, 145, 146, 148, 149, 150, 154, 155, 156, 158, 184, 191, 193, 194, 195, 196, 198, 200, 201, 202, 205, 206, 208, 216, 217, 218, 220, 222, 226, 228, 230, 232, 233, 247, 256, 258, 260, 261, 263, 273, 274, 276, 277, 278, 282, 283, 284, 286, 290, 311, 313, 320, 322, 323, 324, 325, 327, 329, 330, 331, 334, 335, 337, 340, 344, 345, 346, 347, 349, 351, 355, 357, 359, 361, 362, 367, 368, 372, 373, 374, 375, 377, 378, 382, 383, 384, 385, 387, 388], "record": [4, 5, 8, 13, 16, 17, 18, 25, 29, 33, 38, 49, 51, 59, 64, 72, 77, 82, 88, 91, 95, 125, 128, 129, 131, 146, 148, 154, 155, 156, 158, 197, 208, 216, 217, 218, 220, 237, 239, 247, 249, 252, 255, 256, 258, 274, 276, 280, 282, 283, 284, 286, 326, 327, 337, 344, 345, 346, 347, 349, 367, 374, 377, 378, 384, 385, 393], "plai": [4, 28, 58, 59, 82, 129, 148, 149, 194, 196, 197, 207, 208, 216, 217, 218, 220, 222, 239, 249, 256, 276, 277, 323, 325, 326, 327, 336, 337, 345, 346, 347, 349, 351, 368, 371], "ok": [4, 61, 89, 91, 95, 155, 159, 243, 283, 288, 370, 379, 380], "displai": [4, 10, 11, 13, 14, 18, 25, 28, 38, 42, 54, 58, 62, 65, 71, 75, 81, 82, 89, 91, 94, 95, 100, 102, 114, 118, 125, 128, 129, 139, 140, 142, 149, 169, 174, 175, 176, 178, 197, 201, 207, 221, 226, 228, 232, 234, 235, 242, 247, 249, 252, 255, 256, 267, 268, 270, 277, 289, 298, 303, 304, 305, 307, 311, 326, 328, 330, 334, 336, 346, 347, 350, 355, 357, 361, 363, 364, 367, 372, 375, 382, 383, 385, 388, 393], "trajectori": [4, 8, 29, 39, 75, 89, 91, 156, 249, 283, 284, 367], "callback": [4, 146, 159, 205, 226, 274, 288, 328, 334, 346, 355], "improv": [4, 89, 91, 128, 149, 156, 197, 228, 242, 249, 255, 277, 284, 326, 357, 379, 380], "feel": [4, 135, 176, 242, 263, 305, 372], "free": [4, 52, 71, 76, 89, 93, 121, 122, 155, 197, 239, 242, 249, 276, 283, 286, 326, 371, 372, 374, 375, 390, 393], "feedback": [4, 121, 249, 379], "dir": [4, 148, 184, 200, 208, 242, 276, 311, 312, 313, 329, 337, 340, 382], "fine": [4, 30, 40, 47, 61, 62, 81, 91, 104, 197, 249, 326, 387], "incompat": [4, 8, 82, 122, 148, 150, 222, 246, 276, 278, 351, 379], "instanc": [4, 13, 16, 28, 32, 33, 36, 37, 38, 42, 53, 54, 61, 95, 98, 112, 114, 115, 118, 119, 123, 129, 131, 139, 143, 148, 149, 150, 154, 155, 159, 160, 161, 168, 169, 170, 178, 182, 196, 197, 199, 201, 202, 208, 216, 217, 218, 224, 226, 228, 232, 234, 250, 256, 258, 267, 271, 276, 277, 278, 282, 283, 286, 288, 289, 290, 297, 298, 299, 307, 311, 313, 325, 326, 328, 330, 331, 337, 345, 346, 347, 353, 355, 357, 361, 363, 368, 379, 380, 384, 387, 388], "synaps": [4, 22, 25, 29, 38, 70, 71, 75, 83, 90, 97, 103, 109, 110, 112, 121, 148, 149, 150, 151, 154, 155, 156, 169, 196, 201, 216, 224, 248, 249, 276, 277, 278, 279, 282, 283, 284, 286, 298, 325, 330, 345, 353, 373, 384, 385, 386, 391, 393], "simd": 4, "instruct": [4, 5, 6, 10, 11, 32, 37, 42, 52, 61, 75, 77, 98, 100, 106, 107, 119, 121, 129, 197, 220, 237, 239, 240, 242, 244, 249, 256, 326, 349, 385], "cpu": [4, 6, 7, 53, 153, 155, 156, 197, 208, 239, 244, 249, 276, 281, 283, 284, 326], "certain": [4, 6, 45, 59, 114, 158, 202, 223, 228, 233, 239, 242, 286, 287, 331, 352, 357, 362, 368, 370, 378, 379, 388], "mkthreadsaf": [4, 36], "breakpoint": [4, 38, 52, 64, 72, 114, 115, 131, 143, 148, 150, 155, 197, 217, 220, 258, 271, 276, 278, 283, 326, 346, 349, 373, 375], "deriv": [4, 28, 39, 76, 88, 102, 131, 146, 148, 158, 197, 213, 217, 249, 258, 274, 276, 286, 318, 326, 327, 342, 346, 368, 373], "writen": 4, "defin": [4, 7, 13, 14, 25, 27, 29, 33, 37, 39, 42, 52, 53, 54, 60, 61, 62, 65, 69, 70, 71, 76, 81, 83, 93, 98, 104, 105, 112, 113, 114, 115, 119, 121, 125, 129, 131, 134, 139, 141, 143, 145, 146, 148, 150, 154, 155, 156, 159, 160, 164, 165, 168, 169, 170, 171, 178, 181, 182, 188, 190, 192, 196, 197, 200, 201, 202, 207, 208, 214, 217, 222, 224, 226, 227, 228, 230, 234, 244, 246, 249, 252, 256, 258, 261, 267, 269, 271, 273, 274, 276, 278, 282, 283, 284, 287, 288, 289, 294, 297, 298, 299, 300, 307, 310, 311, 317, 319, 321, 325, 326, 329, 330, 331, 336, 337, 343, 344, 346, 347, 351, 353, 355, 356, 357, 359, 362, 363, 367, 368, 369, 370, 371, 373, 375, 379, 380, 386, 387, 388, 393], "As": [4, 7, 8, 28, 29, 51, 52, 59, 65, 76, 93, 95, 99, 100, 105, 121, 149, 150, 151, 155, 168, 184, 193, 196, 197, 224, 239, 242, 244, 245, 247, 249, 262, 277, 278, 279, 283, 290, 297, 307, 313, 318, 322, 325, 328, 341, 353, 368, 370, 371, 372, 373, 379, 380, 382, 383, 384, 388], "minf": [4, 131, 217, 258, 346, 373], "procedur": [4, 13, 32, 36, 46, 52, 81, 82, 91, 93, 95, 114, 115, 118, 121, 129, 143, 150, 154, 155, 156, 160, 163, 164, 168, 181, 185, 188, 197, 200, 201, 202, 208, 217, 220, 221, 224, 226, 227, 230, 246, 249, 256, 271, 278, 282, 283, 284, 297, 310, 314, 317, 324, 326, 329, 330, 331, 337, 346, 349, 350, 353, 355, 356, 359, 373], "suffix": [4, 36, 42, 76, 98, 114, 115, 119, 143, 147, 148, 149, 155, 199, 208, 216, 228, 271, 275, 276, 277, 283, 328, 337, 345, 357, 373, 375, 379, 380], "mv": [4, 10, 11, 16, 17, 18, 25, 31, 33, 37, 43, 44, 47, 58, 61, 62, 63, 71, 91, 95, 103, 104, 114, 115, 125, 131, 132, 146, 148, 149, 154, 200, 220, 252, 258, 259, 274, 276, 277, 282, 329, 349, 351, 367, 369, 370, 372, 373, 378, 382, 383, 384, 385, 388], "across": [4, 7, 14, 41, 61, 93, 121, 122, 148, 149, 156, 158, 161, 164, 249, 276, 277, 284, 286, 290, 293, 347, 368, 371, 385, 388], "race": [4, 150, 155, 159, 197, 239, 278, 283, 288, 326], "condit": [4, 6, 24, 31, 36, 39, 41, 59, 146, 148, 149, 150, 155, 159, 197, 201, 217, 249, 274, 276, 277, 278, 283, 286, 288, 326, 330, 346, 367, 368, 369, 370, 371, 372, 387], "simpli": [4, 7, 13, 39, 45, 53, 61, 65, 81, 91, 93, 161, 174, 181, 186, 201, 242, 286, 290, 303, 310, 315, 326, 330, 337, 368, 379, 382, 387, 388], "access": [4, 8, 15, 21, 22, 25, 28, 29, 54, 55, 59, 64, 72, 74, 76, 83, 84, 93, 95, 121, 125, 131, 132, 135, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 168, 171, 173, 174, 180, 183, 193, 196, 197, 199, 200, 201, 203, 207, 217, 220, 224, 226, 228, 232, 233, 234, 242, 244, 249, 252, 258, 263, 271, 276, 277, 278, 279, 281, 282, 283, 289, 290, 292, 293, 297, 303, 307, 309, 312, 325, 326, 328, 329, 330, 331, 332, 336, 342, 346, 353, 355, 357, 363, 368, 371, 375, 387, 390, 392, 393], "syntax": [4, 93, 114, 115, 121, 129, 131, 132, 133, 135, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 256, 258, 259, 260, 263, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 349, 351, 352, 354, 355, 357, 358, 359, 361, 362, 363, 382, 387, 388], "accordingli": [4, 52, 61, 197, 242, 326, 379, 380], "overcom": [4, 12, 84, 161, 249, 290, 292], "languag": [4, 26, 28, 52, 71, 76, 78, 86, 93, 114, 115, 121, 135, 141, 143, 147, 150, 181, 200, 246, 248, 249, 263, 269, 271, 275, 278, 310, 329, 371, 379, 387, 388], "treat": [4, 52, 54, 71, 76, 89, 91, 124, 128, 143, 144, 148, 149, 150, 155, 158, 161, 178, 181, 186, 189, 195, 208, 233, 249, 251, 255, 271, 272, 276, 277, 278, 283, 286, 290, 292, 307, 310, 315, 318, 324], "header": [4, 52, 93, 94, 172, 223, 228, 239, 244, 301, 352, 357, 370, 379, 388], "earli": [4, 77, 78, 98, 119, 121, 155, 239, 249, 283, 379, 380], "stdlib": [4, 10, 11, 59, 211, 224, 340, 353], "endverbatim": [4, 36, 93, 149, 150, 216, 246, 277, 278, 345], "0": [4, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 58, 59, 61, 62, 63, 64, 65, 67, 71, 72, 73, 75, 76, 77, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 109, 111, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 239, 242, 243, 244, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 270, 271, 272, 274, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 307, 310, 311, 313, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388], "But": [4, 10, 11, 13, 25, 27, 30, 33, 45, 46, 47, 61, 71, 75, 81, 89, 90, 91, 95, 99, 114, 115, 129, 131, 154, 155, 156, 159, 161, 193, 197, 238, 242, 256, 258, 282, 283, 284, 288, 290, 322, 326, 379], "henc": [4, 155, 194, 210, 233, 238, 283, 323, 339], "keywork": 4, "safer": [4, 195, 282, 324], "solv": [4, 36, 39, 76, 131, 143, 146, 148, 149, 150, 155, 156, 193, 197, 198, 201, 207, 217, 220, 222, 230, 249, 258, 271, 274, 276, 277, 278, 283, 284, 322, 326, 327, 330, 336, 346, 349, 351, 359, 371, 373, 379, 388, 393], "euler": [4, 36, 39, 76, 121, 149, 155, 161, 189, 197, 220, 249, 277, 283, 290, 318, 326, 349, 393], "best": [4, 7, 12, 25, 36, 37, 38, 47, 59, 61, 62, 72, 76, 81, 82, 98, 119, 121, 124, 129, 133, 142, 148, 155, 156, 161, 164, 197, 217, 218, 220, 224, 226, 230, 249, 251, 256, 260, 270, 276, 283, 284, 286, 290, 326, 334, 337, 346, 347, 349, 353, 355, 359, 370, 381, 382], "practic": [4, 32, 36, 40, 42, 59, 61, 98, 119, 122, 129, 149, 154, 159, 164, 230, 249, 256, 277, 282, 287, 288, 315, 325, 359, 370, 380, 381, 382, 383, 388], "cnexp": [4, 36, 148, 217, 276, 346, 373], "equat": [4, 12, 36, 39, 76, 89, 114, 115, 121, 131, 144, 146, 148, 149, 150, 155, 158, 190, 197, 201, 217, 220, 248, 249, 258, 272, 274, 276, 277, 278, 283, 286, 319, 326, 330, 346, 349, 368, 371], "derivimplicit": [4, 36, 149, 277], "other": [4, 14, 25, 27, 29, 33, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 53, 59, 61, 62, 63, 65, 68, 76, 77, 78, 79, 81, 82, 84, 89, 90, 91, 94, 95, 98, 104, 106, 107, 114, 115, 118, 119, 121, 122, 125, 131, 132, 142, 144, 148, 149, 150, 153, 155, 156, 158, 159, 160, 164, 166, 168, 170, 176, 178, 181, 184, 187, 191, 193, 197, 199, 201, 202, 206, 211, 213, 216, 217, 220, 222, 224, 225, 226, 231, 233, 234, 237, 239, 242, 243, 249, 252, 258, 259, 262, 270, 272, 276, 277, 278, 281, 282, 283, 284, 286, 288, 289, 295, 297, 299, 305, 307, 310, 313, 316, 320, 322, 326, 328, 330, 331, 335, 340, 342, 345, 346, 349, 351, 353, 354, 355, 360, 362, 363, 367, 368, 369, 370, 371, 372, 373, 375, 381, 382, 383, 385, 387, 388, 391, 393], "effici": [4, 6, 8, 9, 36, 54, 61, 71, 76, 83, 89, 128, 131, 146, 148, 149, 150, 154, 155, 159, 162, 164, 165, 178, 193, 194, 196, 197, 205, 208, 215, 216, 217, 224, 228, 232, 233, 234, 237, 248, 249, 255, 258, 274, 276, 277, 278, 282, 283, 286, 288, 290, 294, 307, 322, 323, 325, 326, 334, 337, 344, 345, 346, 353, 357, 361, 362, 363, 382, 385, 387, 388], "accuraci": [4, 61, 91, 121, 131, 149, 155, 156, 210, 217, 249, 258, 277, 283, 284, 339, 346, 391], "comment": [4, 28, 40, 42, 45, 61, 71, 76, 98, 119, 131, 148, 180, 194, 215, 236, 249, 276, 309, 323, 344, 373, 379], "oper": [4, 25, 33, 37, 42, 52, 65, 71, 76, 91, 98, 119, 122, 155, 158, 164, 181, 193, 195, 197, 211, 213, 224, 226, 228, 242, 243, 249, 283, 287, 289, 293, 310, 322, 324, 326, 340, 341, 342, 353, 357, 368, 381, 385, 387, 388], "mtau": [4, 131, 217, 258, 346, 373], "hinf": [4, 131, 258, 373], "htau": [4, 131, 258, 373], "ninf": [4, 36, 286, 373], "ntau": [4, 286, 373], "celsiu": [4, 36, 38, 76, 114, 115, 132, 149, 155, 220, 259, 277, 349, 373, 388], "100": [4, 9, 10, 11, 15, 22, 25, 30, 31, 32, 33, 37, 38, 39, 41, 43, 48, 61, 76, 90, 91, 114, 120, 122, 143, 149, 155, 156, 161, 168, 178, 187, 193, 196, 197, 200, 202, 207, 217, 225, 226, 227, 228, 230, 249, 271, 276, 277, 283, 284, 290, 297, 307, 322, 325, 326, 329, 331, 336, 346, 354, 355, 356, 357, 359, 370, 373, 377, 378, 382, 383, 384, 385, 387, 388], "TO": [4, 149, 239, 277, 373, 379, 380], "WITH": [4, 149, 277, 373, 381], "200": [4, 18, 22, 33, 37, 41, 43, 52, 58, 61, 63, 67, 87, 88, 91, 96, 149, 154, 161, 196, 197, 226, 228, 230, 232, 249, 262, 277, 290, 325, 326, 355, 357, 359, 361, 370, 373, 382, 383, 384], "aspect": [4, 76, 94, 149, 217, 220, 226, 228, 234, 240, 242, 249, 277, 346, 349, 355, 357, 363, 379], "progress": [4, 13, 16, 17, 129, 155, 226, 248, 249, 256, 283, 355], "read": [4, 14, 19, 28, 38, 40, 42, 46, 58, 59, 61, 75, 76, 77, 78, 82, 85, 87, 89, 91, 94, 95, 98, 107, 108, 110, 114, 115, 119, 128, 129, 141, 144, 148, 155, 156, 158, 160, 175, 180, 183, 184, 185, 188, 193, 197, 199, 201, 210, 216, 220, 222, 225, 227, 236, 237, 239, 255, 256, 269, 272, 276, 283, 284, 286, 289, 296, 303, 304, 307, 309, 312, 313, 314, 317, 322, 326, 328, 330, 337, 345, 349, 351, 354, 356, 362, 363, 373, 375, 376, 379, 382, 387, 388, 391], "input": [4, 7, 9, 12, 25, 29, 32, 33, 37, 38, 52, 53, 54, 59, 66, 69, 70, 71, 81, 95, 98, 105, 112, 113, 119, 121, 125, 127, 131, 148, 149, 155, 168, 180, 187, 193, 197, 201, 207, 217, 223, 239, 244, 249, 252, 254, 257, 258, 276, 277, 282, 283, 294, 297, 309, 316, 322, 326, 330, 336, 346, 352, 370, 375, 382, 384, 386, 387], "heavili": [4, 129, 155, 165, 256, 283, 294, 374], "structur": [4, 6, 25, 33, 46, 52, 65, 72, 76, 81, 84, 121, 122, 134, 160, 161, 196, 202, 207, 217, 220, 222, 239, 248, 249, 261, 289, 290, 325, 331, 336, 346, 349, 351, 382, 387, 388], "won": [4, 32, 37, 66, 73, 76, 77, 78, 178, 239, 244, 372, 379, 380], "usabl": [4, 32, 36, 158, 196, 325], "bar": [4, 25, 61, 75, 76, 99, 118, 125, 172, 175, 197, 208, 226, 228, 249, 252, 278, 301, 304, 326, 337, 355, 357], "exclud": [4, 379, 380, 387], "condition": 4, "macro": [4, 54, 93, 149, 150, 246, 249, 277, 278, 379], "nrnbbcore": 4, "ifndef": [4, 150, 246, 278], "endif": [4, 134, 148, 150, 246, 261, 276, 278], "hide": [4, 46, 47, 81, 93, 102, 103, 105, 172, 213, 224, 249, 301, 308, 342, 353, 379], "old": [4, 36, 42, 52, 61, 71, 88, 93, 98, 119, 121, 135, 145, 148, 149, 154, 155, 156, 157, 160, 161, 176, 192, 197, 205, 207, 222, 228, 230, 232, 242, 249, 262, 273, 276, 277, 282, 283, 284, 285, 289, 290, 305, 321, 326, 334, 336, 351, 357, 359, 361, 383, 387], "cai": [4, 144, 149, 150, 158, 222, 249, 272, 277, 278, 286, 351, 368, 371], "_ion_cai": [4, 149, 277], "implicit": [4, 12, 33, 39, 121, 149, 150, 160, 161, 217, 220, 227, 248, 277, 278, 289, 290, 346, 349, 356, 371], "transpil": 4, "pseudo": [4, 95, 198, 327], "varieti": [4, 81, 102, 172, 196, 222, 242, 301, 325, 351], "alloc": [4, 52, 53, 131, 149, 160, 161, 193, 197, 205, 239, 244, 249, 258, 277, 289, 290, 305, 322, 326, 334], "complex": [4, 10, 11, 14, 29, 36, 42, 46, 54, 60, 71, 76, 81, 82, 84, 89, 90, 95, 121, 128, 131, 155, 197, 207, 249, 255, 258, 283, 326, 336, 371, 382, 385], "nativ": [4, 5, 242, 249, 313, 365, 371], "anoth": [4, 5, 10, 11, 13, 24, 28, 32, 36, 37, 38, 42, 47, 49, 51, 52, 65, 71, 75, 76, 81, 85, 87, 89, 91, 94, 95, 96, 98, 101, 105, 114, 115, 119, 121, 122, 131, 139, 144, 149, 150, 151, 154, 155, 156, 158, 159, 161, 168, 169, 171, 178, 181, 184, 185, 187, 193, 197, 199, 201, 206, 217, 220, 226, 228, 230, 231, 239, 242, 258, 267, 272, 276, 277, 278, 279, 282, 283, 284, 286, 288, 290, 297, 298, 300, 307, 310, 313, 314, 316, 326, 328, 330, 335, 337, 340, 346, 349, 355, 357, 359, 360, 362, 379, 380, 383, 385, 387], "commonli": [4, 135, 155, 196, 197, 217, 239, 263, 283, 325, 326, 346], "hold": [4, 16, 47, 50, 52, 61, 65, 71, 74, 79, 81, 105, 106, 107, 108, 110, 131, 142, 156, 160, 163, 168, 193, 196, 197, 204, 206, 208, 226, 228, 258, 269, 270, 283, 284, 289, 325, 326, 333, 335, 337, 355, 357, 365, 379], "itself": [4, 37, 45, 65, 71, 76, 89, 91, 93, 95, 149, 150, 155, 182, 197, 201, 202, 207, 217, 221, 226, 247, 277, 278, 283, 311, 326, 330, 331, 336, 346, 350, 362, 368, 369, 379, 387, 388], "knowledg": [4, 155, 283, 365], "layout": [4, 6, 75, 80, 106, 107, 108, 110, 179, 308], "size": [4, 16, 17, 18, 19, 28, 29, 37, 42, 47, 52, 61, 65, 67, 68, 71, 73, 81, 89, 94, 98, 114, 115, 119, 121, 122, 131, 133, 146, 149, 154, 155, 156, 158, 168, 170, 172, 181, 186, 193, 194, 196, 197, 199, 201, 202, 205, 208, 216, 217, 223, 226, 228, 230, 232, 233, 234, 239, 249, 258, 262, 274, 277, 282, 283, 284, 286, 297, 299, 301, 308, 310, 315, 322, 323, 325, 326, 327, 328, 330, 331, 334, 337, 345, 346, 352, 355, 357, 359, 361, 362, 363, 371, 375, 383, 388], "furtheremor": 4, "between": [4, 5, 9, 10, 11, 16, 17, 25, 27, 28, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 54, 65, 66, 74, 75, 76, 82, 84, 88, 89, 91, 94, 95, 96, 105, 114, 115, 121, 122, 125, 128, 131, 133, 134, 138, 142, 148, 149, 150, 154, 155, 156, 158, 161, 168, 178, 181, 184, 186, 190, 191, 192, 194, 196, 197, 201, 202, 208, 217, 222, 224, 226, 228, 231, 232, 233, 242, 243, 249, 252, 255, 258, 260, 261, 262, 266, 270, 276, 277, 278, 282, 283, 284, 286, 290, 297, 307, 310, 313, 315, 319, 320, 321, 323, 325, 326, 328, 330, 331, 337, 346, 351, 353, 355, 357, 360, 361, 362, 368, 369, 371, 378, 379, 380, 383, 384, 385, 387, 388], "would": [4, 7, 10, 11, 13, 14, 25, 29, 37, 39, 40, 41, 42, 45, 46, 47, 54, 59, 60, 61, 62, 71, 73, 75, 76, 81, 84, 91, 93, 94, 98, 99, 102, 103, 114, 115, 119, 122, 128, 131, 144, 148, 149, 150, 154, 155, 156, 158, 159, 161, 168, 193, 197, 200, 201, 217, 226, 233, 239, 242, 245, 247, 255, 258, 272, 276, 277, 278, 282, 283, 284, 286, 288, 290, 297, 299, 322, 326, 329, 330, 337, 342, 346, 362, 368, 371, 372, 373, 374, 379, 380, 382, 387, 388], "promin": [4, 121, 131, 258], "stream": [4, 9, 37, 82, 121, 154, 188, 193, 194, 196, 197, 207, 213, 217, 282, 317, 322, 323, 325, 326, 336, 342, 346], "paramet": [4, 10, 11, 12, 14, 16, 17, 18, 24, 25, 26, 27, 28, 31, 32, 33, 36, 38, 41, 42, 43, 46, 52, 59, 61, 62, 63, 69, 70, 82, 88, 93, 95, 98, 99, 102, 104, 108, 110, 112, 113, 114, 118, 119, 121, 123, 124, 125, 129, 133, 138, 139, 140, 142, 143, 144, 150, 155, 158, 160, 161, 170, 171, 181, 197, 207, 208, 217, 218, 220, 222, 224, 230, 235, 244, 249, 250, 251, 252, 256, 260, 266, 267, 268, 269, 270, 271, 272, 278, 282, 283, 286, 287, 289, 290, 299, 300, 310, 326, 336, 337, 346, 347, 349, 351, 353, 359, 364, 368, 369, 370, 373, 375, 376, 382, 383, 386, 387, 388, 391, 393], "bbcorepoint": [4, 147, 275], "behav": [4, 247, 249, 287, 383], "exactli": [4, 39, 46, 61, 89, 91, 95, 143, 149, 150, 155, 156, 159, 161, 177, 197, 201, 208, 213, 217, 220, 224, 234, 246, 271, 277, 278, 283, 284, 288, 290, 306, 326, 330, 337, 342, 346, 349, 353, 363, 367, 368, 372], "addition": [4, 7, 29, 158, 239, 242, 244, 247, 286, 361, 379, 380], "write": [4, 13, 14, 24, 28, 29, 36, 38, 51, 59, 60, 61, 63, 71, 76, 77, 78, 83, 85, 91, 95, 114, 115, 121, 144, 148, 149, 155, 158, 168, 180, 183, 184, 186, 193, 197, 217, 220, 222, 230, 239, 242, 243, 247, 272, 276, 277, 283, 297, 309, 312, 313, 315, 316, 322, 326, 337, 346, 349, 351, 359, 372, 373, 375, 382, 383, 385, 387, 388], "inde": [4, 40, 53, 150, 278, 379], "serial": [4, 5, 10, 11, 13, 16, 17, 95, 155, 166, 185, 239, 249, 283, 295, 314, 384, 386], "deseri": 4, "void": [4, 52, 54, 239], "doubl": [4, 25, 28, 31, 33, 52, 54, 62, 71, 75, 76, 86, 89, 91, 93, 118, 128, 129, 133, 139, 149, 150, 155, 160, 168, 169, 173, 181, 182, 184, 185, 191, 192, 193, 197, 200, 201, 203, 208, 210, 216, 217, 226, 228, 235, 239, 242, 249, 255, 256, 260, 262, 267, 277, 278, 283, 289, 298, 302, 310, 311, 313, 314, 320, 321, 326, 329, 330, 332, 337, 345, 346, 357, 364, 379, 387, 388], "int": [4, 22, 52, 54, 76, 93, 120, 155, 159, 182, 191, 195, 196, 197, 200, 203, 208, 249, 276, 283, 288, 290, 292, 293, 311, 320, 322, 324, 325, 326, 327, 329, 339, 344, 355, 370, 375, 387, 388], "d": [4, 13, 16, 17, 23, 25, 32, 41, 46, 52, 53, 59, 60, 61, 75, 76, 81, 82, 83, 87, 91, 95, 120, 121, 131, 133, 146, 155, 156, 159, 160, 164, 168, 169, 178, 184, 186, 192, 193, 197, 199, 208, 210, 216, 217, 228, 231, 234, 239, 242, 248, 249, 258, 274, 276, 283, 284, 286, 288, 289, 297, 298, 307, 313, 315, 321, 322, 325, 326, 328, 337, 339, 341, 345, 346, 351, 355, 357, 360, 363, 368, 369, 371, 372, 375, 377, 379, 382, 383, 387], "d_offset": 4, "x_offset": 4, "_threadargsproto_": 4, "referenc": [4, 139, 142, 145, 149, 163, 168, 169, 182, 206, 228, 234, 267, 270, 273, 277, 292, 297, 298, 311, 335, 357, 363, 387], "through": [4, 9, 13, 14, 25, 27, 29, 33, 49, 52, 59, 65, 75, 77, 78, 81, 84, 85, 88, 91, 94, 103, 114, 115, 121, 148, 149, 150, 154, 155, 156, 158, 160, 161, 165, 168, 197, 208, 217, 224, 226, 234, 243, 247, 249, 276, 277, 278, 282, 283, 284, 286, 287, 289, 290, 292, 294, 297, 305, 307, 318, 326, 337, 346, 353, 355, 363, 368, 379, 382, 383, 386, 388, 389, 393], "twice": [4, 36, 121, 146, 149, 155, 160, 196, 200, 217, 220, 226, 248, 274, 277, 283, 289, 325, 326, 329, 346, 349, 355, 393], "sweep": [4, 65, 147, 221, 275, 350, 393], "arrai": [4, 6, 52, 54, 59, 61, 76, 122, 133, 149, 154, 168, 181, 182, 184, 193, 195, 197, 199, 200, 201, 205, 208, 216, 217, 247, 249, 260, 276, 277, 282, 286, 297, 310, 311, 313, 320, 322, 324, 326, 328, 329, 330, 334, 337, 345, 346, 368, 387], "second": [4, 8, 9, 16, 17, 25, 28, 31, 36, 38, 39, 41, 42, 46, 61, 65, 71, 75, 76, 83, 84, 85, 93, 98, 103, 114, 115, 119, 121, 131, 133, 134, 144, 149, 155, 156, 160, 161, 164, 165, 168, 169, 171, 174, 178, 181, 182, 187, 188, 193, 194, 197, 200, 201, 204, 208, 211, 213, 214, 217, 220, 221, 222, 226, 228, 231, 233, 234, 239, 244, 247, 249, 258, 260, 261, 272, 277, 283, 284, 286, 289, 290, 291, 294, 297, 298, 300, 303, 307, 310, 311, 316, 317, 322, 323, 326, 329, 330, 333, 337, 340, 342, 343, 346, 349, 350, 351, 355, 357, 360, 362, 363, 368, 374, 375, 379, 382, 383, 387, 392, 393], "fill": [4, 28, 40, 59, 65, 68, 71, 133, 155, 161, 193, 197, 205, 208, 217, 225, 226, 232, 234, 243, 260, 283, 290, 322, 326, 327, 334, 337, 346, 354, 355, 361, 363, 375, 379, 382, 387, 388], "descript": [4, 11, 61, 65, 76, 84, 102, 114, 115, 121, 131, 132, 133, 141, 143, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 229, 230, 232, 233, 234, 246, 249, 258, 259, 260, 269, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 349, 351, 352, 353, 354, 355, 358, 359, 361, 362, 363, 365, 373, 379], "real": [4, 32, 67, 75, 76, 82, 83, 84, 85, 86, 91, 93, 121, 122, 128, 150, 155, 156, 162, 193, 197, 207, 216, 249, 255, 278, 283, 284, 291, 322, 326, 336, 345, 365, 368, 371, 379], "nullptr": [4, 52, 93], "yet": [4, 7, 32, 42, 61, 71, 87, 94, 98, 102, 119, 122, 137, 156, 217, 239, 242, 265, 284, 346, 379, 380, 382, 388], "integ": [4, 28, 52, 54, 65, 76, 95, 114, 115, 149, 154, 155, 156, 160, 163, 168, 182, 185, 186, 191, 193, 194, 195, 196, 197, 200, 201, 205, 208, 217, 220, 226, 232, 262, 277, 282, 283, 284, 287, 289, 290, 297, 311, 314, 315, 320, 322, 323, 324, 325, 326, 329, 330, 334, 337, 346, 349, 355, 361, 368, 379, 385, 387], "offset": [4, 27, 47, 52, 81, 184, 249, 313], "expect": [4, 13, 25, 41, 45, 81, 86, 93, 122, 128, 131, 155, 156, 158, 197, 228, 239, 242, 243, 249, 255, 258, 283, 284, 286, 290, 326, 357, 371, 379], "placehold": [4, 387], "_iml": 4, "_cntml_pad": 4, "_p": 4, "datum": [4, 52], "_ppvar": 4, "threaddatum": 4, "_thread": 4, "_nt": 4, "_v": 4, "put": [4, 28, 29, 36, 42, 45, 52, 61, 71, 76, 78, 80, 89, 91, 94, 105, 155, 156, 168, 172, 174, 178, 193, 197, 211, 217, 222, 239, 242, 243, 249, 283, 284, 286, 297, 301, 303, 307, 322, 326, 340, 346, 351, 369, 373, 382], "togeth": [4, 28, 29, 32, 36, 45, 52, 65, 95, 117, 121, 122, 147, 155, 156, 160, 161, 197, 201, 217, 226, 239, 242, 249, 275, 283, 284, 289, 290, 326, 330, 346, 355, 368, 371, 379, 388], "minim": [4, 8, 13, 29, 46, 88, 89, 129, 133, 156, 197, 211, 221, 249, 256, 260, 284, 326, 340, 350], "titl": [4, 76, 89, 91, 98, 119, 168, 169, 172, 175, 178, 224, 226, 228, 297, 298, 301, 304, 307, 316, 317, 353, 355, 357, 373], "my_data": 4, "someth": [4, 28, 32, 36, 37, 45, 54, 61, 63, 73, 76, 82, 89, 91, 93, 95, 118, 122, 128, 149, 150, 155, 156, 158, 181, 197, 208, 217, 218, 239, 255, 277, 278, 283, 284, 286, 310, 311, 326, 346, 347, 355, 363, 370, 382, 388], "x_i": 4, "_p_my_data": 4, "reserv": [4, 76, 388], "buffer": [4, 14, 41, 60, 61, 76, 121, 155, 158, 200, 219, 228, 230, 249, 283, 329, 348, 357, 359, 371, 375, 376], "somehow": 4, "malloc": [4, 93, 239], "sizeof": [4, 93, 197, 326], "dilig": 4, "act": [4, 9, 27, 158, 169, 173, 193, 208, 224, 249, 286, 337, 353, 368], "reus": [4, 43, 45, 47, 77, 78, 193, 322, 328, 372, 382, 383, 393], "applic": [4, 32, 71, 76, 84, 95, 117, 121, 155, 239, 242, 243, 248, 249, 283, 330, 365, 373, 379, 380], "humanbrainproject": 4, "nrnhine": 4, "nrntraub": 4, "suni": 4, "downstat": 4, "medic": [4, 76, 248, 249], "center": [4, 12, 29, 38, 41, 47, 59, 65, 76, 81, 98, 106, 119, 122, 126, 148, 160, 161, 167, 184, 197, 201, 216, 217, 222, 226, 228, 232, 234, 249, 253, 276, 286, 289, 290, 296, 313, 326, 330, 337, 345, 346, 355, 357, 361, 363, 382, 383, 388, 393], "m1_neuron_pap": 4, "main": [4, 13, 25, 30, 31, 36, 39, 42, 46, 47, 52, 61, 74, 75, 76, 81, 82, 89, 90, 91, 94, 98, 100, 102, 103, 107, 118, 119, 122, 129, 148, 149, 155, 158, 160, 193, 197, 207, 213, 214, 217, 221, 227, 228, 234, 239, 249, 256, 276, 277, 283, 286, 289, 322, 326, 336, 342, 343, 346, 350, 356, 357, 363, 365, 368, 379, 380, 382, 385, 393], "testcorenrn": [4, 242], "reduced_dent": 4, "u": [4, 10, 11, 39, 46, 47, 52, 58, 60, 61, 62, 63, 75, 76, 81, 90, 91, 99, 100, 101, 102, 106, 107, 114, 178, 193, 228, 242, 247, 248, 249, 291, 307, 322, 357, 367, 368, 372, 374, 379, 382, 383, 384, 387, 388], "illustr": [5, 37, 38, 44, 51, 61, 62, 69, 71, 75, 76, 84, 116, 148, 161, 207, 216, 276, 290, 336, 345, 368, 385], "test_direct": 5, "simpl": [5, 7, 24, 25, 29, 32, 45, 51, 52, 61, 71, 76, 83, 89, 91, 93, 95, 98, 105, 109, 113, 119, 121, 142, 148, 149, 155, 156, 161, 197, 207, 217, 224, 230, 244, 249, 270, 276, 277, 283, 284, 290, 311, 326, 336, 346, 353, 359, 373, 375, 379, 380, 382, 384, 385, 388], "demonstr": [5, 24, 25, 28, 49, 52, 62, 76, 78, 84, 91, 121, 161, 197, 216, 247, 249, 286, 290, 326, 345, 379, 383, 387, 388, 389], "voltag": [5, 8, 9, 24, 25, 26, 28, 29, 30, 31, 33, 37, 44, 45, 61, 71, 74, 75, 77, 78, 91, 98, 114, 118, 119, 121, 122, 125, 126, 127, 128, 131, 139, 142, 146, 148, 149, 150, 154, 155, 161, 164, 191, 196, 197, 208, 217, 220, 222, 224, 227, 233, 249, 252, 253, 254, 255, 258, 267, 270, 274, 276, 277, 278, 283, 290, 320, 326, 337, 344, 346, 349, 351, 353, 356, 362, 373, 382, 388, 393], "membran": [5, 9, 10, 11, 24, 25, 31, 33, 37, 38, 43, 45, 52, 61, 63, 74, 76, 82, 83, 102, 118, 121, 122, 131, 134, 140, 141, 143, 146, 148, 149, 150, 151, 154, 155, 159, 160, 161, 178, 197, 199, 200, 201, 207, 213, 217, 222, 224, 249, 258, 261, 268, 269, 271, 274, 276, 277, 278, 279, 282, 283, 288, 289, 290, 307, 326, 328, 329, 330, 336, 342, 344, 346, 351, 353, 368, 371, 372, 373, 382, 383, 384, 385, 388], "Then": [5, 7, 10, 11, 13, 14, 25, 37, 38, 45, 46, 47, 61, 62, 69, 70, 71, 73, 76, 78, 79, 81, 89, 91, 94, 96, 97, 100, 107, 109, 111, 114, 115, 122, 126, 128, 144, 149, 150, 155, 161, 185, 187, 197, 200, 217, 218, 226, 227, 239, 243, 245, 253, 255, 272, 277, 278, 283, 290, 314, 316, 326, 329, 346, 347, 355, 356, 368, 379], "written": [5, 40, 42, 46, 47, 61, 76, 84, 98, 114, 115, 119, 121, 131, 146, 149, 181, 188, 197, 201, 207, 222, 239, 258, 274, 277, 283, 289, 310, 315, 317, 326, 330, 336, 337, 351, 368, 373, 375, 388], "test_spik": 5, "similar": [5, 25, 29, 33, 38, 39, 43, 46, 61, 63, 76, 84, 88, 91, 94, 95, 109, 128, 131, 139, 145, 149, 150, 154, 155, 161, 165, 181, 187, 188, 194, 196, 197, 201, 217, 226, 227, 239, 242, 244, 249, 255, 258, 267, 273, 277, 278, 282, 283, 290, 294, 310, 316, 317, 323, 325, 326, 330, 334, 341, 346, 355, 356, 370, 372, 379, 382, 387], "connect": [5, 9, 12, 15, 22, 33, 36, 38, 45, 46, 47, 61, 65, 69, 70, 76, 81, 83, 95, 103, 104, 105, 106, 107, 112, 113, 121, 147, 148, 149, 154, 155, 156, 160, 161, 162, 163, 168, 169, 185, 197, 201, 208, 216, 217, 218, 224, 230, 231, 249, 269, 275, 276, 277, 282, 283, 284, 289, 290, 291, 292, 297, 298, 314, 326, 330, 337, 345, 346, 347, 353, 359, 360, 362, 369, 370, 372, 384, 385, 386, 387, 388, 393], "rank": [5, 8, 53, 131, 146, 155, 193, 216, 239, 258, 274, 283, 322, 345], "compar": [5, 9, 10, 11, 25, 32, 39, 40, 44, 45, 47, 49, 54, 84, 89, 128, 148, 155, 159, 181, 197, 212, 217, 226, 249, 255, 276, 283, 288, 310, 326, 341, 346, 371, 372, 379, 380, 382, 384, 387], "mpiexec": [5, 8, 10, 11, 13, 35, 155, 283, 385, 393], "n": [5, 8, 10, 11, 13, 16, 17, 23, 25, 33, 35, 36, 39, 46, 52, 53, 54, 64, 72, 76, 84, 95, 120, 121, 133, 145, 146, 148, 149, 151, 154, 155, 156, 160, 162, 164, 169, 171, 172, 173, 178, 181, 184, 186, 187, 188, 192, 193, 196, 197, 199, 201, 208, 210, 211, 216, 217, 220, 226, 228, 230, 234, 239, 244, 248, 249, 260, 273, 276, 277, 279, 282, 283, 284, 290, 291, 297, 300, 301, 307, 310, 313, 315, 317, 322, 325, 326, 328, 330, 337, 339, 340, 345, 349, 355, 357, 359, 370, 372, 373, 379, 380, 383, 384, 385, 387, 388, 393], "num_process": [5, 8], "ring": [5, 35, 53, 156, 239, 249, 284, 382, 385, 386], "ball": [5, 10, 11, 14, 24, 26, 249], "stick": [5, 10, 11, 14, 24, 26, 60, 82], "scale": [5, 12, 41, 46, 47, 49, 58, 65, 68, 82, 85, 87, 91, 94, 121, 125, 128, 129, 131, 148, 149, 158, 161, 172, 197, 217, 224, 225, 226, 228, 230, 231, 232, 234, 248, 249, 252, 255, 256, 258, 276, 277, 286, 290, 301, 308, 326, 327, 346, 353, 354, 355, 357, 359, 360, 361, 363, 368, 370, 371, 378, 391], "arbitrarili": [5, 39, 76, 371, 378], "port": [5, 53, 94, 185, 216, 228, 314, 345, 357, 379, 380], "readm": [5, 46, 49, 71, 122], "miglior": [5, 36, 84, 121, 248, 249], "et": [5, 25, 35, 36, 41, 49, 83, 87, 121, 239, 368, 371, 372, 374], "al": [5, 25, 35, 36, 41, 49, 83, 87, 121, 239, 249, 340, 368, 371, 372, 374], "2014": [5, 155, 249, 283, 379], "engin": [6, 96, 121, 249, 382, 388], "optimis": [6, 7, 88, 242, 249], "kei": [6, 13, 29, 45, 50, 65, 71, 76, 102, 121, 155, 158, 176, 178, 187, 226, 228, 231, 234, 239, 249, 283, 286, 305, 307, 316, 355, 357, 360, 363, 368, 372, 382, 385, 387, 388], "goal": [6, 10, 11, 61, 81, 89, 121, 216, 249, 345, 379], "larg": [6, 10, 11, 32, 33, 35, 36, 53, 59, 61, 63, 76, 77, 78, 82, 84, 85, 94, 120, 122, 125, 128, 129, 134, 149, 150, 155, 156, 159, 161, 169, 170, 182, 191, 193, 196, 197, 217, 220, 228, 231, 239, 243, 248, 249, 252, 255, 256, 261, 277, 278, 283, 284, 286, 288, 290, 298, 299, 311, 320, 322, 325, 326, 346, 349, 357, 360, 371, 375, 379, 380, 385, 388], "specialis": [6, 7], "hardwar": [6, 35, 49, 95, 121, 155, 242, 248, 249, 283, 385], "vectoris": [6, 7], "Of": [6, 155, 156, 197, 208, 283, 284, 326, 337], "tightli": [6, 25, 148, 276, 371], "met": [6, 149, 277], "cover": [6, 45, 61, 238, 242, 249], "unsupport": [6, 307], "safe": [6, 36, 37, 45, 76, 91, 93, 105, 128, 143, 150, 155, 160, 201, 217, 220, 255, 271, 278, 283, 286, 289, 330, 346, 349, 375, 379], "tabl": [6, 28, 52, 61, 62, 105, 114, 144, 182, 201, 217, 220, 249, 272, 311, 330, 346, 349, 365, 373, 387], "explicit": [6, 28, 39, 71, 93, 114, 115, 121, 129, 133, 149, 150, 155, 161, 164, 197, 200, 210, 215, 217, 226, 228, 238, 256, 260, 277, 278, 283, 286, 290, 329, 339, 346, 357, 379, 380, 388], "ion": [6, 31, 60, 61, 71, 76, 77, 78, 82, 84, 121, 131, 141, 145, 148, 149, 150, 160, 200, 220, 222, 249, 258, 269, 273, 275, 276, 277, 278, 287, 289, 326, 329, 349, 351, 368, 370, 371, 374, 376, 382, 391], "mcellran4": [6, 133, 194, 196, 260, 323, 325], "safest": [7, 47, 81, 155, 283], "mod2c": [7, 53, 242], "dcorenrn_enable_nmodl": 7, "bison": [7, 52, 242, 243], "flex": [7, 242, 243], "reli": [7, 8, 52, 155, 239, 244, 283], "auto": [7, 52, 247], "formerli": [7, 65], "gain": [7, 33, 40, 71, 148, 149, 155, 165, 239, 249, 276, 277, 283, 294, 382, 393], "download": [7, 38, 46, 49, 78, 88, 95, 135, 153, 155, 237, 242, 243, 244, 245, 281, 283, 376, 379, 385, 388], "oneapi": 7, "toolkit": [7, 249, 365], "base": [7, 13, 14, 25, 29, 32, 39, 40, 45, 47, 52, 62, 76, 82, 84, 86, 87, 90, 93, 102, 104, 141, 144, 147, 149, 150, 155, 158, 161, 176, 186, 191, 197, 200, 208, 216, 217, 238, 239, 242, 244, 249, 269, 272, 275, 277, 278, 283, 286, 287, 289, 290, 291, 299, 305, 315, 320, 326, 329, 330, 337, 342, 345, 346, 365, 368, 370, 371, 372, 379, 380, 382, 383, 385, 388, 389, 393], "openacc": [7, 8, 53, 239], "backend": [7, 239], "nvc": [7, 244], "experiment": [7, 16, 17, 18, 25, 40, 41, 43, 61, 63, 66, 71, 84, 88, 95, 121, 222, 249, 351], "openmp": [7, 8, 53, 239], "offload": [7, 13], "dcorenrn_enable_openmp_offload": 7, "off": [7, 28, 32, 35, 36, 50, 52, 53, 61, 62, 65, 66, 68, 71, 75, 76, 88, 89, 91, 100, 103, 114, 115, 128, 129, 142, 148, 149, 154, 155, 158, 159, 164, 165, 166, 168, 177, 178, 184, 191, 192, 196, 197, 207, 213, 217, 218, 220, 221, 226, 228, 230, 239, 242, 243, 244, 249, 255, 256, 270, 276, 277, 282, 283, 286, 287, 288, 293, 294, 295, 297, 298, 306, 307, 313, 320, 321, 325, 326, 336, 342, 346, 347, 349, 350, 355, 357, 359, 370, 371, 375, 379], "simplest": [7, 28, 41, 42, 51, 76, 88, 98, 119, 155, 156, 283, 284, 368, 369, 379], "outlin": [7, 46, 53, 61, 65, 71, 94], "And": [7, 12, 47, 61, 62, 75, 81, 91, 95, 122, 135, 143, 149, 150, 154, 155, 160, 165, 176, 204, 207, 208, 217, 238, 243, 263, 271, 277, 278, 282, 283, 289, 294, 305, 336, 337, 346, 367, 383, 385, 387, 388], "cuda": [7, 8, 53, 239, 244], "standardis": 7, "almost": [7, 45, 61, 76, 89, 91, 109, 111, 121, 148, 155, 159, 164, 168, 197, 208, 224, 276, 283, 288, 297, 326, 337, 353, 379, 385], "certainli": [7, 32, 114, 115, 128, 156, 195, 217, 255, 284, 324, 346], "spider": 7, "discov": [7, 25, 47, 49, 91, 95, 118, 121, 193, 322], "bundl": [7, 249], "four": [7, 9, 25, 46, 65, 76, 121, 131, 168, 178, 197, 226, 232, 234, 249, 258, 297, 307, 326, 355, 361, 363, 368, 374, 385], "driver": [7, 53, 230, 359], "encount": [7, 242], "nvlink": 7, "fatal": 7, "snip": 7, "112": [7, 249], "110": [7, 121, 187, 226, 249, 355, 369, 370], "sm_60": 7, "onc": [7, 8, 42, 52, 61, 65, 76, 91, 98, 102, 119, 129, 139, 155, 156, 158, 162, 164, 184, 185, 196, 197, 201, 204, 217, 224, 235, 242, 244, 247, 256, 267, 283, 284, 286, 291, 313, 314, 318, 325, 326, 330, 333, 334, 346, 353, 364, 373, 379, 383, 385, 387], "readi": [7, 16, 26, 32, 45, 61, 62, 89, 91, 99, 103, 105, 106, 107, 109, 111, 155, 224, 238, 283, 353, 379], "forget": [7, 25, 71, 76, 78, 118, 228, 239, 357, 382], "dnrn_enable_rx3d": [7, 242, 245], "home": [7, 21, 22, 36, 46, 91, 153, 155, 208, 213, 230, 239, 242, 243, 281, 283, 359, 375], "icc": [7, 249], "icpc": 7, "dmpi_c_compil": 7, "dmpi_cxx_compil": 7, "dcorenrn_enable_gpu": [7, 239], "dcmake_cuda_compil": 7, "nvcc": 7, "lead": [7, 29, 40, 84, 93, 99, 242, 249, 379, 388], "fragil": [7, 150, 246, 249, 278], "surpris": [7, 40, 47, 61, 76, 81, 91, 161, 197, 217, 249, 290, 326, 346], "behaviour": [7, 150, 224, 228, 239, 249, 278, 353, 357], "therebi": [7, 29, 121, 326], "come": [7, 11, 13, 29, 33, 36, 42, 52, 61, 62, 63, 71, 77, 78, 83, 87, 89, 91, 94, 105, 106, 107, 114, 115, 134, 145, 146, 149, 155, 161, 184, 217, 224, 228, 231, 243, 261, 273, 274, 276, 277, 283, 290, 313, 346, 353, 357, 360, 368, 385, 387, 388], "mileag": 7, "vari": [7, 10, 11, 13, 25, 27, 38, 41, 61, 63, 71, 89, 99, 100, 105, 121, 128, 129, 131, 133, 142, 148, 149, 158, 161, 217, 224, 249, 255, 256, 258, 260, 270, 276, 277, 286, 290, 326, 346, 353, 368, 375, 376, 382, 388, 392], "devic": [7, 12, 76, 83, 153, 155, 160, 185, 201, 230, 249, 281, 283, 289, 314, 330, 359], "capabl": [7, 76, 121, 226, 242, 249, 375], "steer": [7, 239, 249], "dcmake_cuda_architectur": 7, "string": [7, 12, 37, 42, 46, 52, 54, 61, 65, 75, 76, 89, 91, 98, 102, 114, 115, 118, 119, 124, 128, 129, 132, 135, 145, 155, 160, 161, 164, 165, 168, 169, 172, 175, 178, 181, 184, 185, 186, 187, 188, 193, 197, 199, 200, 201, 202, 204, 208, 213, 217, 225, 226, 228, 230, 239, 242, 245, 251, 255, 256, 259, 263, 273, 279, 283, 286, 289, 290, 294, 296, 297, 298, 301, 303, 304, 307, 310, 313, 314, 315, 316, 317, 322, 326, 328, 329, 330, 331, 333, 334, 337, 342, 346, 354, 355, 357, 359, 382, 388, 393], "60": [7, 187, 197, 225, 249, 326, 354, 387], "70": [7, 24, 31, 53, 61, 89, 91, 187, 220, 249, 276, 326, 349, 362, 379, 387, 388], "80": [7, 18, 22, 28, 37, 58, 67, 83, 91, 154, 187, 197, 249, 282, 286, 326, 361, 373, 387], "dcmake_c_flag": [7, 238, 239], "dcmake_cuda_flag": 7, "o3": [7, 28, 197, 226, 242], "temporari": [7, 36, 42, 65, 155, 165, 182, 184, 188, 197, 200, 226, 233, 294, 311, 313, 317, 329, 355, 379, 382, 387], "cmakefil": 7, "entir": [7, 25, 29, 33, 41, 42, 59, 61, 65, 89, 91, 98, 118, 119, 124, 128, 148, 149, 150, 154, 155, 158, 161, 165, 171, 181, 197, 207, 208, 224, 226, 228, 230, 234, 251, 255, 276, 277, 278, 282, 283, 286, 290, 294, 300, 310, 326, 336, 337, 353, 357, 359, 363, 369, 388], "new": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 25, 27, 29, 32, 36, 37, 42, 43, 45, 46, 48, 51, 52, 53, 54, 58, 61, 62, 64, 65, 67, 72, 74, 75, 76, 79, 81, 82, 83, 84, 88, 89, 91, 93, 94, 95, 97, 98, 99, 103, 104, 106, 107, 108, 110, 119, 121, 128, 133, 139, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 168, 169, 172, 173, 174, 175, 176, 177, 178, 180, 182, 184, 192, 193, 194, 196, 197, 199, 200, 201, 205, 206, 207, 208, 211, 214, 215, 217, 218, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 238, 242, 244, 248, 249, 255, 267, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 297, 298, 304, 305, 307, 309, 311, 313, 316, 322, 325, 326, 329, 330, 334, 335, 336, 337, 340, 341, 344, 346, 347, 349, 350, 353, 354, 355, 356, 357, 359, 360, 361, 362, 370, 379, 380, 382, 383, 384, 385, 387, 388, 391], "varaibl": 7, "importerror": 7, "correctli": [7, 76, 148, 149, 150, 153, 155, 159, 216, 217, 239, 247, 276, 277, 278, 281, 283, 288, 345, 346, 379, 383, 384], "forc": [7, 14, 36, 44, 66, 75, 91, 92, 121, 125, 144, 149, 155, 156, 166, 168, 242, 249, 252, 272, 277, 283, 284, 295, 297], "even": [8, 9, 25, 28, 29, 32, 36, 40, 47, 52, 54, 59, 61, 71, 73, 75, 76, 91, 114, 128, 146, 149, 154, 155, 156, 160, 161, 165, 166, 168, 175, 182, 194, 197, 207, 217, 218, 238, 242, 255, 274, 277, 282, 283, 284, 286, 289, 290, 294, 295, 297, 304, 311, 323, 325, 326, 336, 346, 347, 368, 371, 372, 379, 380, 382, 387, 388], "builtin": [8, 52, 76, 197, 326, 387], "still": [8, 13, 16, 28, 29, 38, 46, 54, 71, 73, 76, 81, 89, 91, 99, 100, 103, 104, 107, 114, 115, 120, 133, 134, 148, 149, 150, 155, 156, 160, 168, 193, 197, 217, 225, 239, 242, 243, 249, 260, 261, 276, 277, 278, 283, 284, 289, 297, 322, 326, 337, 346, 354, 371, 372, 379, 382, 387], "link": [8, 10, 11, 28, 40, 46, 52, 53, 57, 76, 84, 85, 91, 93, 121, 149, 150, 184, 201, 224, 237, 239, 242, 243, 248, 249, 277, 278, 313, 330, 353, 375, 379, 385], "consult": [8, 121, 239, 243, 385], "explan": [8, 75, 372, 382], "usual": [8, 28, 39, 41, 61, 63, 73, 76, 91, 95, 114, 115, 126, 148, 149, 150, 156, 158, 168, 181, 193, 196, 197, 213, 217, 226, 228, 230, 231, 233, 243, 253, 276, 277, 278, 284, 297, 310, 322, 325, 326, 328, 337, 342, 346, 355, 357, 359, 360, 362, 369, 372, 373, 379, 383, 387, 388], "cache_effici": [8, 155, 205, 217, 283, 334, 346], "true": [8, 13, 28, 39, 54, 59, 61, 76, 95, 133, 148, 149, 155, 159, 178, 181, 184, 188, 194, 195, 197, 200, 201, 208, 216, 217, 226, 239, 242, 244, 260, 274, 276, 277, 282, 283, 286, 288, 292, 297, 298, 304, 307, 310, 313, 317, 321, 323, 324, 326, 329, 330, 337, 340, 345, 346, 349, 355, 368, 370, 371, 372, 375, 379, 380, 382, 383, 384, 387], "runtim": [8, 121, 129, 149, 154, 155, 156, 165, 239, 242, 243, 245, 248, 256, 277, 283, 284, 294], "final": [8, 10, 11, 27, 45, 61, 65, 76, 81, 84, 89, 91, 103, 110, 133, 149, 150, 161, 181, 184, 200, 208, 218, 219, 227, 228, 260, 277, 278, 290, 310, 313, 329, 337, 347, 348, 356, 357, 371, 372, 377, 381, 382, 385, 387], "psolv": [8, 155, 156, 216, 217, 239, 276, 280, 283, 284, 345, 346, 385], "stdinit": [8, 64, 67, 72, 156, 216, 220, 221, 283, 284, 345, 349, 350], "pc": [8, 10, 11, 13, 16, 23, 48, 49, 52, 121, 122, 155, 156, 185, 216, 230, 276, 283, 284, 314, 345, 359, 385], "tstop": [8, 13, 16, 17, 18, 24, 28, 32, 37, 47, 61, 67, 91, 95, 96, 97, 122, 146, 155, 156, 158, 200, 215, 216, 217, 222, 239, 274, 276, 283, 284, 326, 329, 344, 345, 346, 351, 377], "netcon": [8, 9, 13, 16, 17, 18, 21, 22, 29, 32, 35, 36, 38, 66, 71, 95, 135, 141, 148, 149, 150, 151, 152, 155, 156, 216, 217, 222, 224, 263, 269, 276, 277, 278, 279, 280, 283, 284, 345, 346, 351, 353, 373, 383, 384, 385, 388, 393], "weight": [8, 9, 21, 22, 29, 32, 37, 69, 70, 75, 89, 90, 91, 97, 102, 103, 104, 108, 109, 110, 111, 124, 129, 148, 149, 150, 154, 155, 156, 197, 217, 222, 249, 251, 256, 276, 277, 278, 280, 282, 283, 284, 326, 346, 351, 373, 383, 384, 385], "regular": [8, 66, 76, 82, 160, 164, 217, 226, 249, 286, 287, 289, 291, 313, 339, 346, 355, 388], "spike_record": [8, 155, 156, 276, 280, 283, 284], "primarili": [8, 29, 128, 150, 197, 217, 249, 255, 278, 326, 346, 393], "py_obj": 8, "pythonobject": [8, 158, 160, 197, 208, 326, 337, 388], "your_script": 8, "becaus": [8, 9, 14, 25, 29, 31, 35, 42, 45, 52, 53, 58, 61, 62, 65, 71, 75, 76, 83, 89, 93, 95, 98, 99, 102, 119, 121, 128, 131, 142, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 164, 169, 181, 193, 194, 197, 201, 208, 216, 217, 222, 226, 228, 231, 239, 242, 244, 255, 258, 270, 276, 277, 278, 279, 282, 283, 284, 286, 289, 290, 298, 310, 315, 322, 323, 326, 330, 337, 345, 346, 351, 357, 360, 368, 371, 379, 382, 384, 385, 387, 388], "nthread": [8, 155, 158, 197, 217, 240, 269, 280, 283, 286, 326, 346, 375], "launcher": 8, "srun": 8, "mpirun": [8, 153, 155, 239, 281, 283], "serv": [9, 40, 76, 77, 78, 93, 148, 154, 197, 226, 276, 282, 326, 355, 379, 387], "net_rec": [9, 71, 83, 150, 151, 154, 155, 217, 222, 224, 278, 279, 282, 283, 346, 351, 353], "discret": [9, 26, 32, 38, 41, 47, 59, 60, 61, 77, 78, 81, 83, 91, 96, 100, 155, 158, 160, 161, 196, 197, 217, 248, 249, 283, 286, 289, 290, 325, 326, 346, 371, 376, 382, 384], "event": [9, 26, 29, 32, 37, 44, 53, 66, 77, 78, 82, 83, 95, 96, 98, 102, 104, 119, 121, 129, 143, 148, 149, 154, 155, 156, 159, 196, 197, 216, 218, 220, 222, 226, 229, 239, 243, 248, 249, 256, 271, 276, 277, 280, 282, 283, 284, 288, 325, 326, 345, 347, 349, 351, 353, 355, 358, 373, 379, 380, 383, 385, 391], "deliv": [9, 25, 31, 66, 82, 118, 122, 149, 154, 155, 156, 217, 220, 239, 276, 277, 282, 283, 284, 346, 349, 383, 385], "computation": [9, 53, 83, 121, 149, 150, 249, 277, 278, 379, 385], "hundr": [9, 47], "whose": [9, 13, 40, 61, 71, 75, 76, 81, 84, 102, 149, 154, 155, 161, 193, 197, 215, 217, 224, 277, 282, 283, 290, 322, 326, 344, 346, 353, 362, 371, 379], "consequ": [9, 29, 81, 121, 150, 159, 161, 197, 217, 249, 278, 288, 290, 326, 346, 379], "conduct": [9, 10, 11, 25, 31, 37, 43, 46, 63, 71, 77, 78, 89, 90, 99, 100, 104, 114, 121, 122, 131, 145, 147, 148, 150, 154, 155, 197, 217, 220, 249, 258, 273, 275, 276, 278, 282, 283, 326, 346, 349, 373, 379, 380, 382, 384], "dt": [9, 24, 28, 31, 32, 36, 37, 39, 41, 45, 47, 52, 67, 76, 91, 96, 114, 115, 121, 131, 143, 146, 148, 149, 150, 155, 158, 159, 170, 191, 197, 215, 217, 220, 224, 258, 271, 274, 276, 277, 278, 280, 283, 286, 288, 299, 307, 320, 326, 344, 346, 349, 353, 355, 375, 388], "100000": [9, 155, 283, 321, 342], "hour": [9, 40, 243, 372, 393], "take": [9, 10, 11, 27, 28, 29, 36, 37, 41, 44, 49, 52, 54, 71, 76, 81, 84, 89, 91, 95, 107, 114, 115, 121, 128, 131, 133, 144, 146, 148, 149, 154, 155, 156, 159, 160, 161, 163, 164, 165, 168, 170, 177, 181, 191, 193, 197, 204, 213, 214, 216, 217, 218, 220, 222, 224, 226, 228, 239, 242, 243, 244, 249, 255, 258, 260, 262, 272, 274, 276, 277, 280, 282, 283, 284, 288, 289, 290, 293, 294, 297, 299, 306, 310, 318, 320, 322, 326, 333, 342, 343, 345, 346, 347, 349, 351, 353, 355, 357, 362, 363, 368, 369, 375, 382, 383, 384, 385], "total": [9, 10, 11, 13, 29, 32, 36, 53, 84, 88, 89, 91, 102, 121, 122, 128, 129, 131, 148, 149, 150, 155, 161, 196, 197, 217, 233, 238, 239, 249, 255, 256, 258, 276, 277, 278, 283, 290, 325, 326, 346, 362, 368, 372, 388], "proport": [9, 25, 65, 131, 149, 155, 161, 220, 258, 277, 283, 290, 349, 368, 371, 375], "interv": [9, 13, 22, 29, 32, 37, 44, 66, 73, 75, 82, 89, 91, 95, 102, 103, 121, 124, 129, 148, 149, 155, 156, 196, 197, 213, 214, 217, 220, 249, 251, 256, 276, 277, 283, 284, 325, 326, 342, 343, 346, 349, 373, 375, 387], "netstim": [9, 21, 22, 32, 37, 66, 69, 71, 75, 83, 85, 95, 102, 103, 148, 156, 216, 275, 276, 284, 345, 373, 384, 385, 386, 388], "produc": [9, 10, 11, 13, 25, 33, 37, 40, 47, 48, 49, 65, 73, 76, 82, 89, 90, 91, 93, 95, 102, 114, 115, 121, 122, 148, 149, 150, 158, 160, 168, 181, 196, 197, 215, 226, 230, 249, 276, 277, 278, 283, 286, 289, 290, 297, 310, 325, 326, 334, 344, 355, 359, 371, 387, 388], "trigger": [9, 29, 38, 52, 58, 66, 109, 122, 148, 159, 197, 244, 249, 276, 288, 326, 373, 379, 383, 385, 391, 393], "intfire1": [9, 21, 32, 148, 156, 224, 275, 276, 284, 340, 353, 388, 393], "leaki": [9, 148, 197, 276, 326, 382, 388], "driven": [9, 70, 71, 75, 89, 105, 148, 249, 276, 391], "delta": [9, 39, 131, 249, 258, 379], "decai": [9, 25, 29, 32, 91, 102, 104, 148, 249, 276, 383, 384], "exponenti": [9, 27, 29, 32, 76, 86, 89, 104, 124, 148, 181, 191, 196, 217, 226, 249, 251, 276, 310, 320, 325, 346, 378, 383], "toward": [9, 24, 25, 29, 31, 33, 47, 52, 81, 102, 108, 110, 148, 191, 197, 228, 249, 276, 320, 326, 357, 367, 379, 380], "arriv": [9, 29, 66, 102, 148, 149, 155, 217, 276, 277, 283, 346], "w": [9, 28, 29, 76, 88, 90, 102, 121, 148, 154, 155, 184, 188, 197, 226, 228, 244, 248, 249, 276, 283, 313, 326, 355, 357, 375, 379, 388], "abrupt": [9, 40, 121, 161, 290], "exce": [9, 29, 102], "enter": [9, 10, 11, 13, 14, 27, 30, 31, 32, 36, 37, 41, 45, 61, 62, 65, 75, 82, 84, 89, 91, 103, 121, 122, 124, 128, 129, 139, 155, 159, 170, 178, 182, 187, 197, 201, 207, 221, 224, 227, 228, 231, 242, 247, 251, 255, 256, 267, 283, 288, 296, 307, 311, 316, 326, 330, 336, 350, 353, 356, 357, 360, 371, 379], "refractori": [9, 102, 148, 197, 249, 276, 326], "period": [9, 65, 66, 148, 197, 217, 249, 276, 326, 346, 379, 380, 382], "reset": [9, 29, 84, 124, 154, 197, 249, 251, 282, 290, 326, 368, 381], "intfire2": [9, 148, 275, 276, 388, 393], "taum": [9, 148, 276], "settabl": [9, 27, 102, 148, 276, 388], "bia": [9, 40, 148, 228, 276, 357], "net": [9, 20, 26, 66, 85, 102, 104, 106, 110, 148, 155, 156, 239, 249, 276, 283, 284], "synapt": [9, 25, 29, 32, 38, 71, 89, 104, 105, 108, 110, 121, 148, 150, 154, 169, 217, 249, 276, 278, 282, 283, 298, 346, 384, 385, 388, 391], "tau": [9, 22, 29, 37, 38, 102, 104, 148, 217, 239, 249, 276, 346, 373, 383, 384], "potenti": [9, 10, 11, 24, 25, 30, 31, 32, 33, 37, 38, 41, 43, 44, 45, 47, 48, 61, 63, 74, 82, 90, 91, 95, 102, 110, 114, 115, 118, 121, 122, 128, 131, 132, 141, 142, 143, 144, 146, 148, 149, 150, 154, 155, 159, 161, 165, 197, 200, 201, 207, 217, 247, 249, 255, 258, 259, 269, 270, 271, 272, 274, 276, 277, 278, 282, 283, 288, 290, 294, 311, 326, 329, 330, 336, 344, 346, 365, 368, 371, 372, 373, 379, 382, 383, 384, 385, 388], "equilibr": [9, 148, 276], "abruptli": [9, 148, 276], "amount": [9, 28, 29, 41, 65, 90, 104, 148, 149, 150, 155, 156, 161, 197, 221, 234, 249, 276, 277, 278, 283, 284, 286, 290, 326, 350, 363, 379, 380, 384, 387], "intfire4": [9, 148, 275, 276, 388, 393], "excit": [9, 10, 11, 30, 37, 43, 69, 75, 102, 131, 148, 249, 258, 276, 373], "rise": [9, 29, 41, 89, 104, 148, 249, 276], "slower": [9, 29, 124, 143, 226, 229, 233, 239, 251, 271, 355, 358, 362], "alpha": [9, 11, 41, 76, 121, 148, 194, 196, 242, 249, 276, 286, 323, 325, 367, 368, 370, 373, 381], "inhibit": [9, 37, 38, 69, 75, 111, 249], "context": [9, 52, 54, 72, 76, 131, 138, 143, 149, 155, 160, 163, 164, 165, 168, 169, 173, 178, 181, 182, 196, 216, 217, 220, 226, 227, 228, 234, 239, 242, 249, 258, 266, 271, 277, 280, 283, 289, 292, 294, 297, 302, 307, 310, 311, 325, 326, 345, 346, 349, 355, 356, 357, 363, 379, 384, 385, 387], "conceptu": [9, 32, 76, 81, 84, 98, 105, 119, 121, 135, 141, 149, 150, 155, 158, 160, 164, 208, 269, 277, 278, 283, 286, 289, 337, 365, 384, 385], "irrelev": [9, 103, 161, 290, 379, 387], "builder": [9, 14, 26, 30, 37, 38, 42, 61, 74, 75, 78, 82, 83, 96, 97, 102, 103, 105, 108, 109, 110, 111, 112, 121, 145, 155, 156, 168, 248, 271, 273, 283, 284, 297], "instanti": [9, 21, 22, 29, 59, 75, 103, 131, 145, 151, 158, 163, 202, 258, 273, 279, 283, 286, 292, 331, 370, 375], "dummi": [9, 32, 75, 146, 205, 274, 334], "acell_home_": [9, 32, 37, 75], "sooner": [10, 11, 61], "later": [10, 11, 32, 36, 37, 38, 42, 45, 61, 65, 71, 75, 84, 89, 91, 94, 98, 105, 111, 119, 121, 155, 158, 160, 164, 193, 197, 207, 226, 249, 283, 286, 289, 293, 322, 326, 336, 355, 362, 371, 375, 379, 380, 382, 383, 387], "grind": [10, 11, 95], "challeng": [10, 11, 38, 39, 91, 121, 249, 379], "reward": [10, 11, 249], "consum": [10, 11, 71, 84], "learn": [10, 11, 24, 25, 29, 45, 62, 81, 82, 85, 249, 386, 387], "virtu": [10, 11, 379], "least": [10, 11, 13, 32, 33, 39, 40, 47, 49, 54, 61, 71, 77, 78, 81, 89, 95, 97, 129, 131, 133, 149, 155, 161, 184, 197, 214, 218, 222, 228, 234, 243, 256, 258, 260, 277, 283, 286, 290, 313, 326, 343, 347, 351, 357, 363, 379, 380, 382], "unix": [10, 11, 47, 52, 62, 71, 76, 78, 81, 94, 114, 115, 117, 121, 122, 149, 153, 155, 166, 170, 172, 176, 184, 213, 223, 228, 242, 245, 277, 281, 283, 295, 299, 301, 305, 313, 342, 352, 357], "mswin": [10, 11, 31, 36, 46, 47, 52, 62, 71, 77, 78, 81, 87, 121, 122, 172, 184, 213, 223, 224, 301, 313, 342, 352, 353], "microsoft": [10, 168, 226, 242, 245, 297, 355, 379], "workstat": [10, 11, 36, 76, 121, 155, 156, 283, 284], "supercomput": [10, 11, 53, 155, 248, 249, 283], "ask": [10, 11, 40, 51, 61, 77, 81, 82, 84, 89, 95, 103, 149, 155, 156, 200, 207, 219, 228, 230, 243, 277, 283, 284, 329, 336, 348, 357, 359, 382, 383, 387, 388], "administr": [10, 11, 72, 145, 155, 220, 224, 245, 273, 283, 349, 353], "se": [10, 11, 20, 22, 24, 30, 37, 45, 47, 61, 62, 81, 82, 91, 99, 116, 122, 128, 207, 224, 227, 228, 249, 255, 336, 353, 356, 357, 361], "host": [10, 11, 13, 49, 59, 75, 155, 156, 208, 213, 222, 242, 244, 283, 284, 342, 351, 385], "dendrit": [10, 11, 14, 24, 25, 29, 37, 41, 43, 45, 46, 47, 61, 62, 63, 69, 81, 103, 105, 110, 155, 160, 161, 164, 234, 249, 283, 286, 290, 293, 363, 383, 384, 387], "inject": [10, 11, 25, 31, 33, 38, 45, 47, 59, 91, 125, 126, 127, 131, 142, 146, 148, 224, 249, 252, 253, 254, 258, 270, 274, 276, 325, 353, 382], "steadi": [10, 11, 31, 111, 149, 220, 227, 249, 277, 349, 356, 376], "depolar": [10, 11, 75, 116, 148, 150, 249, 276, 278, 382], "relationship": [10, 11, 25, 27, 29, 38, 39, 46, 91, 149, 192, 197, 249, 277, 321, 326, 379, 382], "amplitud": [10, 11, 13, 16, 17, 18, 25, 31, 38, 46, 59, 66, 75, 131, 142, 197, 227, 249, 258, 270, 326, 356, 388], "appli": [10, 11, 16, 25, 40, 47, 61, 62, 65, 71, 76, 89, 91, 95, 99, 121, 122, 149, 158, 164, 197, 211, 217, 249, 277, 286, 287, 289, 293, 326, 327, 334, 340, 344, 346, 370, 371, 375, 379, 380, 393], "frequenc": [10, 11, 13, 16, 17, 18, 28, 29, 71, 75, 91, 95, 120, 125, 126, 127, 131, 197, 249, 252, 253, 254, 258, 326, 379, 380, 385], "distal": [10, 11, 16, 17, 18, 25, 27, 37, 61, 99, 149, 150, 249, 277, 278, 362, 382, 388], "properti": [10, 11, 14, 24, 34, 37, 43, 46, 47, 52, 60, 61, 62, 71, 75, 76, 81, 82, 84, 85, 91, 95, 105, 112, 121, 128, 148, 155, 156, 158, 161, 162, 164, 170, 178, 182, 197, 207, 224, 226, 231, 233, 249, 255, 269, 276, 283, 284, 286, 289, 290, 291, 299, 307, 311, 326, 336, 346, 353, 355, 360, 362, 367, 368, 370, 371, 373, 382, 393], "l": [10, 11, 14, 15, 22, 25, 28, 30, 37, 38, 43, 45, 50, 52, 61, 62, 63, 68, 84, 94, 103, 105, 114, 120, 121, 129, 143, 146, 148, 155, 160, 161, 164, 169, 170, 178, 193, 201, 207, 208, 210, 213, 216, 220, 225, 231, 239, 244, 247, 248, 249, 256, 269, 271, 274, 276, 282, 283, 287, 289, 290, 293, 299, 307, 330, 336, 337, 342, 344, 345, 349, 354, 360, 362, 365, 368, 369, 370, 371, 372, 373, 375, 377, 379, 382, 383, 384, 385, 388], "\u03bcm": [10, 41, 47, 249, 368, 388], "diam": [10, 11, 14, 15, 22, 28, 30, 37, 38, 43, 45, 47, 61, 62, 63, 103, 105, 114, 115, 120, 129, 143, 148, 160, 161, 163, 164, 170, 178, 201, 207, 231, 247, 256, 269, 271, 276, 282, 289, 290, 299, 307, 330, 336, 344, 360, 362, 371, 372, 373, 382, 383, 384, 387, 388], "1831": [10, 11], "area": [10, 11, 15, 22, 31, 37, 46, 47, 48, 50, 61, 65, 71, 75, 76, 81, 99, 110, 120, 122, 134, 139, 146, 148, 149, 155, 158, 161, 184, 197, 203, 217, 226, 228, 230, 249, 261, 267, 269, 274, 276, 277, 283, 286, 289, 290, 313, 326, 332, 337, 346, 355, 357, 359, 368, 371, 375, 379, 382, 388], "cm": [10, 11, 14, 15, 22, 24, 25, 33, 37, 41, 43, 45, 47, 60, 61, 62, 63, 91, 103, 105, 114, 115, 120, 132, 146, 148, 149, 161, 197, 224, 259, 274, 276, 277, 290, 307, 326, 353, 361, 373, 382, 383, 384, 388], "\u03bcf": [10, 388], "ra": [10, 11, 14, 15, 22, 24, 33, 37, 43, 45, 47, 52, 60, 61, 62, 63, 91, 103, 105, 114, 120, 128, 148, 161, 170, 178, 202, 220, 224, 248, 255, 269, 276, 289, 290, 299, 307, 331, 349, 353, 382, 383, 384, 388], "ohm": [10, 11, 24, 25, 33, 37, 43, 45, 47, 61, 62, 63, 91, 103, 105, 114, 115, 161, 224, 290, 307, 353, 382, 383, 384, 388], "nseg": [10, 11, 14, 15, 22, 30, 33, 41, 43, 45, 46, 52, 58, 60, 61, 82, 84, 120, 121, 122, 148, 151, 155, 160, 161, 164, 182, 201, 203, 208, 269, 276, 279, 283, 289, 290, 293, 311, 330, 332, 337, 351, 362, 368, 369, 370, 371, 375, 377, 388], "kinet": [10, 29, 75, 104, 121, 131, 137, 145, 148, 217, 249, 258, 265, 273, 276, 286, 289, 346, 367, 368, 372, 373, 382, 388, 393], "hodgkin": [10, 24, 38, 39, 45, 114, 115, 132, 141, 148, 149, 160, 247, 249, 259, 269, 276, 277, 287, 289, 344, 368, 373, 382, 388, 392, 393], "huxlei": [10, 24, 38, 39, 45, 114, 115, 148, 149, 160, 247, 249, 276, 277, 286, 287, 289, 344, 373, 382, 388, 392, 393], "dend": [10, 11, 13, 14, 15, 16, 17, 18, 22, 24, 37, 38, 45, 58, 61, 103, 105, 160, 164, 173, 199, 208, 215, 286, 289, 290, 302, 328, 337, 344, 362, 368, 377, 382, 383, 384], "1000": [10, 11, 15, 24, 25, 32, 45, 47, 52, 91, 103, 127, 146, 156, 161, 168, 193, 194, 196, 197, 201, 213, 217, 226, 228, 230, 232, 254, 262, 274, 283, 284, 290, 297, 301, 322, 323, 325, 326, 330, 342, 346, 355, 357, 359, 370, 375, 377, 378], "try": [10, 11, 25, 28, 31, 34, 36, 44, 45, 46, 47, 54, 61, 63, 66, 71, 73, 81, 87, 89, 91, 97, 99, 114, 115, 122, 129, 155, 178, 181, 184, 200, 207, 208, 227, 242, 256, 283, 307, 310, 311, 313, 329, 336, 337, 356, 379, 380, 383, 385, 387, 388], "program": [10, 11, 13, 14, 26, 29, 31, 32, 35, 45, 46, 47, 48, 51, 52, 60, 62, 71, 77, 78, 83, 91, 94, 95, 114, 121, 122, 134, 148, 149, 155, 161, 164, 168, 172, 177, 178, 180, 181, 185, 194, 195, 196, 200, 201, 213, 219, 220, 226, 228, 236, 239, 242, 243, 247, 248, 249, 261, 276, 277, 283, 290, 297, 301, 306, 307, 309, 310, 314, 323, 324, 325, 326, 329, 330, 342, 348, 349, 355, 357, 371, 387, 388], "explor": [10, 11, 29, 34, 40, 46, 49, 59, 71, 82, 84, 121, 122, 124, 224, 237, 249, 251, 286, 353, 368, 371, 382, 386, 391], "collect": [10, 11, 40, 47, 53, 59, 76, 77, 78, 85, 88, 91, 95, 129, 131, 139, 150, 155, 156, 164, 168, 193, 197, 224, 228, 239, 248, 249, 256, 258, 267, 278, 283, 284, 297, 322, 326, 353, 357, 368, 383], "measur": [10, 11, 25, 40, 47, 59, 71, 81, 88, 89, 99, 125, 126, 127, 131, 148, 156, 161, 184, 217, 224, 249, 252, 253, 254, 258, 276, 284, 290, 313, 346, 353, 370, 372, 382, 388], "verifi": [10, 11, 13, 27, 38, 42, 43, 45, 48, 61, 62, 63, 91, 98, 99, 119, 207, 242, 249, 336], "gaug": [10, 11], "success": [10, 11, 54, 65, 71, 149, 153, 155, 161, 164, 165, 184, 186, 196, 197, 208, 213, 228, 243, 249, 277, 281, 283, 290, 294, 311, 313, 315, 325, 326, 337, 342, 357, 379, 388], "our": [10, 11, 12, 25, 32, 41, 44, 61, 62, 63, 71, 75, 77, 81, 91, 95, 96, 99, 100, 105, 109, 111, 112, 149, 156, 185, 277, 284, 286, 314, 351, 369, 372, 373, 374, 375, 379, 380, 382, 385, 386, 387, 388], "effort": [10, 11, 14, 32, 46, 61, 91, 98, 119, 128, 156, 228, 255, 284, 357, 379], "shorten": [10, 11, 65, 121, 388], "detect": [10, 11, 25, 47, 54, 154, 155, 197, 217, 239, 249, 282, 283, 326, 346, 383], "defici": [10, 11, 249], "correct": [10, 11, 14, 40, 42, 43, 47, 49, 81, 89, 93, 98, 103, 114, 115, 119, 134, 146, 148, 149, 150, 154, 155, 159, 161, 178, 197, 217, 220, 224, 238, 242, 243, 249, 261, 274, 276, 277, 278, 283, 287, 288, 290, 307, 326, 346, 349, 353, 362, 368, 379, 385], "accord": [10, 11, 12, 14, 16, 25, 32, 41, 61, 63, 65, 105, 121, 124, 144, 148, 151, 155, 159, 168, 172, 197, 217, 226, 232, 234, 242, 251, 272, 276, 279, 283, 288, 297, 301, 326, 334, 346, 355, 361, 363, 379, 380], "three": [10, 11, 13, 27, 33, 37, 42, 50, 61, 63, 65, 71, 83, 91, 94, 95, 103, 110, 112, 125, 128, 139, 142, 148, 150, 155, 156, 158, 161, 164, 178, 184, 186, 187, 197, 199, 208, 217, 226, 230, 244, 249, 252, 255, 267, 270, 276, 278, 283, 284, 286, 290, 307, 313, 315, 326, 328, 337, 346, 355, 359, 362, 368, 379, 380, 387, 388, 392], "brief": [10, 11, 12, 44, 51, 61, 76, 77, 91, 94, 116, 149, 224, 249, 277, 353, 375, 387, 388, 393], "walkthrough": [10, 11], "fourth": [10, 11, 114, 115, 122, 133, 144, 217, 260, 272, 346, 368], "plot": [10, 11, 12, 13, 16, 17, 18, 19, 24, 25, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 58, 61, 64, 67, 69, 70, 72, 73, 74, 76, 81, 82, 84, 89, 91, 95, 98, 99, 100, 103, 105, 110, 112, 113, 119, 121, 122, 123, 125, 126, 127, 134, 135, 146, 149, 154, 161, 168, 185, 196, 197, 218, 220, 221, 224, 226, 228, 231, 232, 233, 247, 250, 252, 253, 254, 261, 263, 274, 276, 277, 283, 290, 297, 314, 325, 326, 327, 334, 347, 349, 350, 353, 355, 360, 361, 362, 367, 368, 369, 370, 375, 377, 378, 384, 385, 386, 387, 391], "stimulu": [10, 11, 13, 16, 17, 18, 31, 32, 37, 42, 45, 46, 66, 98, 119, 122, 128, 131, 142, 156, 197, 249, 255, 258, 270, 276, 284, 326, 344, 346, 383, 384, 385], "onerun": [10, 11, 13, 18], "prompt": [10, 11, 13, 28, 30, 31, 36, 45, 46, 52, 61, 62, 75, 76, 82, 87, 89, 91, 178, 187, 200, 242, 296, 305, 307, 316, 329], "na": [10, 11, 13, 16, 17, 18, 31, 47, 48, 59, 61, 62, 71, 84, 91, 114, 122, 142, 148, 150, 187, 217, 249, 270, 276, 278, 346, 370, 373, 382, 388], "f": [10, 11, 13, 16, 17, 22, 27, 28, 36, 39, 44, 58, 63, 76, 88, 95, 100, 114, 115, 131, 133, 145, 146, 149, 155, 184, 186, 193, 197, 210, 216, 217, 224, 228, 233, 244, 248, 249, 258, 260, 273, 274, 275, 277, 283, 313, 315, 322, 326, 339, 345, 346, 353, 357, 362, 367, 368, 369, 370, 378, 379, 382, 387, 388], "either": [10, 13, 14, 44, 52, 59, 65, 76, 85, 89, 90, 114, 115, 121, 129, 131, 133, 139, 148, 149, 151, 155, 156, 158, 165, 176, 182, 184, 186, 193, 196, 197, 200, 208, 217, 224, 228, 242, 244, 247, 249, 256, 258, 260, 267, 276, 277, 279, 283, 284, 286, 292, 293, 294, 305, 307, 311, 313, 315, 322, 325, 326, 329, 334, 337, 346, 353, 357, 368, 369, 371, 373, 379, 382, 384, 385, 387, 388], "task": [10, 11, 13, 14, 26, 32, 42, 49, 60, 63, 76, 88, 89, 95, 103, 106, 107, 155, 226, 236, 249, 283, 355, 379], "processor": [10, 11, 13, 36, 49, 95, 121, 155, 216, 242, 248, 249, 283, 345, 385], "carri": [10, 11, 13, 88, 131, 142, 149, 150, 155, 249, 258, 270, 277, 278, 283, 374], "multicor": [10, 11, 13, 36, 155, 239, 283], "equal": [10, 11, 13, 24, 25, 28, 29, 33, 39, 52, 65, 75, 86, 91, 102, 104, 124, 129, 131, 146, 149, 155, 156, 159, 161, 163, 165, 178, 181, 187, 193, 196, 197, 201, 216, 217, 223, 224, 226, 249, 251, 256, 258, 274, 277, 283, 284, 288, 290, 292, 294, 307, 310, 311, 316, 322, 325, 326, 330, 345, 346, 352, 353, 355, 362, 368, 374, 382, 387, 388], "respond": [10, 11, 66, 75, 82, 155, 249, 283, 373, 382, 383], "smallest": [10, 11, 39, 40, 47, 86], "largest": [10, 11, 32, 47, 86], "stimuli": [10, 11, 71, 95, 121, 141, 148, 249, 269, 276, 286], "elicit": [10, 11, 32, 91, 148, 249, 276], "repetit": [10, 11, 13, 75, 228, 249, 357, 383], "hasn": [10, 11, 379], "broken": [10, 11, 95, 155, 283], "fi": [10, 11, 13, 16, 17, 216, 345], "fiser": [10, 11], "finompi": [10, 11], "fimpi4": [10, 11], "cmp": [10, 11], "fc": [10, 11, 371], "cmd": [10, 155, 165, 178, 245], "power": [10, 25, 28, 47, 60, 68, 71, 76, 77, 78, 82, 84, 86, 88, 98, 114, 115, 118, 119, 143, 145, 193, 197, 200, 201, 224, 239, 249, 271, 273, 275, 287, 322, 326, 329, 330, 353, 368, 371, 379, 380, 384, 388], "shell": [10, 31, 46, 48, 76, 149, 158, 208, 213, 239, 242, 245, 262, 277, 286, 342, 368], "evalu": [10, 11, 13, 76, 89, 99, 114, 115, 133, 150, 154, 155, 181, 193, 201, 208, 217, 226, 249, 260, 278, 282, 283, 286, 294, 310, 322, 330, 337, 346, 355, 379, 387], "266b5a0": [10, 283], "2017": [10, 239, 249, 283], "05": [10, 17, 19, 67, 94, 122, 200, 228, 249, 276, 283, 290, 329, 357, 368, 370, 383, 387], "22": [10, 67, 154, 155, 159, 197, 200, 213, 244, 249, 283, 288, 326, 329, 342, 344, 375, 382, 383, 387, 388], "subsystem": [10, 237, 241], "quad": [10, 11, 91, 128, 133, 197, 255, 260, 326], "desktop": [10, 11, 71, 78, 244], "16": [10, 11, 29, 65, 76, 95, 155, 159, 194, 197, 247, 249, 283, 286, 288, 323, 326, 375, 379, 382, 383, 387, 388], "speedup": [10, 11, 13, 36, 96, 121, 156, 284], "41": [10, 197, 248, 249, 276, 290, 326, 382, 387, 388], "77": [10, 248, 249, 290, 370, 387, 388], "62": [10, 21, 226, 249, 355, 375, 387], "94": [10, 150, 239, 249, 278], "insert": [10, 11, 13, 14, 15, 22, 28, 30, 31, 46, 47, 48, 58, 61, 62, 64, 65, 67, 72, 76, 83, 84, 91, 122, 136, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 158, 160, 161, 168, 169, 197, 199, 201, 207, 208, 217, 220, 221, 222, 226, 228, 233, 247, 264, 268, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 286, 289, 290, 297, 298, 303, 326, 328, 330, 336, 337, 344, 346, 349, 351, 355, 357, 362, 373, 375, 382, 383, 384, 393], "reveal": [10, 11, 40, 46, 47, 75, 81, 110, 249], "sequenc": [10, 11, 13, 39, 42, 45, 60, 61, 76, 82, 89, 95, 98, 119, 128, 148, 149, 155, 160, 161, 164, 184, 194, 196, 197, 216, 217, 222, 226, 234, 236, 249, 255, 276, 277, 283, 289, 290, 313, 323, 325, 326, 345, 346, 351, 355, 363, 374], "whatev": [10, 11, 31, 61, 62, 87, 122, 156, 164, 185, 215, 217, 238, 284, 286, 314, 344, 346, 385], "think": [10, 11, 43, 46, 61, 62, 71, 89, 91, 114, 115, 121, 131, 149, 217, 228, 258, 277, 346, 357, 384, 388], "understand": [10, 11, 12, 26, 65, 71, 81, 84, 95, 120, 121, 139, 155, 161, 224, 249, 267, 283, 290, 313, 353, 371, 372, 379, 380, 383], "flow": [10, 11, 25, 45, 82, 125, 148, 158, 161, 164, 249, 252, 276, 286, 290, 346, 380, 381], "suggest": [10, 11, 29, 71, 75, 89, 91, 114, 115, 155, 156, 197, 237, 249, 283, 284, 326, 379, 380, 383, 388], "ident": [10, 11, 13, 25, 28, 29, 61, 89, 110, 121, 146, 148, 149, 155, 158, 160, 163, 165, 181, 193, 197, 212, 217, 226, 228, 233, 249, 262, 274, 276, 277, 283, 289, 292, 294, 310, 315, 322, 326, 327, 341, 346, 355, 357, 362, 388], "id": [10, 11, 13, 15, 16, 17, 18, 19, 23, 42, 53, 95, 98, 119, 122, 153, 154, 155, 156, 200, 217, 222, 228, 242, 276, 280, 281, 282, 283, 284, 289, 329, 346, 351, 357, 361, 379, 380, 385], "proc": [10, 11, 16, 17, 18, 21, 22, 28, 29, 52, 64, 71, 72, 76, 83, 91, 120, 143, 146, 154, 155, 161, 163, 165, 168, 169, 173, 178, 180, 185, 186, 188, 192, 193, 194, 196, 197, 199, 201, 202, 208, 211, 214, 220, 221, 226, 227, 230, 232, 234, 249, 271, 294, 309, 324, 330, 331, 337, 349, 350, 353, 356, 388], "func": [10, 11, 16, 17, 21, 22, 28, 52, 71, 76, 91, 120, 133, 155, 165, 180, 197, 201, 202, 203, 262, 294, 309, 326, 330, 331, 388], "illumin": [10, 11], "dark": [10, 11], "littl": [10, 11, 13, 47, 73, 81, 89, 91, 98, 104, 119, 121, 161, 228, 234, 236, 249, 290, 357, 363, 374, 382], "corner": [10, 11, 25, 31, 42, 61, 65, 81, 94, 100, 170, 172, 226, 228, 230, 234, 249, 299, 301, 355, 357, 359, 363, 375], "neurosci": [10, 11, 26, 35, 83, 84, 88, 95, 121, 237, 248, 249, 298, 385], "focu": [10, 11, 121, 156, 228, 249, 284, 357, 379, 382, 383], "princip": [10, 11, 27, 32, 47, 69, 77, 81, 88, 91, 128, 129, 133, 193, 220, 224, 249, 255, 256, 260, 322, 349, 353], "job": [10, 11, 13, 16, 53, 60, 61, 73, 91, 100, 155, 220, 236, 239, 242, 244, 283, 349], "worker": [10, 11, 13, 16, 155, 156, 283, 284], "nrun": [10, 11, 13, 16, 17], "happen": [10, 11, 14, 24, 25, 28, 30, 31, 32, 36, 41, 42, 44, 46, 61, 84, 89, 91, 94, 95, 96, 97, 98, 99, 110, 111, 114, 115, 119, 129, 149, 150, 155, 156, 161, 185, 187, 197, 199, 217, 234, 256, 277, 278, 283, 284, 290, 314, 316, 326, 328, 346, 350, 353, 363, 369, 370, 379, 380, 383, 385, 387, 388], "monitor": [10, 11, 13, 42, 59, 71, 91, 94, 114, 228, 283, 290, 353, 357, 382, 383, 385], "sens": [10, 11, 14, 61, 76, 89, 91, 114, 115, 139, 149, 150, 154, 155, 161, 168, 170, 181, 193, 208, 228, 230, 249, 267, 277, 278, 282, 283, 288, 290, 297, 299, 310, 322, 337, 357, 359, 371, 379, 387], "curv": [10, 11, 13, 16, 17, 89, 91, 128, 129, 197, 224, 225, 226, 249, 255, 256, 326, 353, 354, 367, 382], "initplotfi": [10, 11, 19], "advantag": [10, 11, 29, 46, 82, 89, 91, 93, 95, 120, 194, 197, 217, 226, 242, 249, 323, 326, 337, 367, 368, 379, 384], "um": [11, 25, 31, 33, 37, 43, 46, 59, 63, 208, 239, 286, 290, 307, 337, 369, 373], "um2": [11, 15, 31, 37, 161], "uf": [11, 37, 43, 63, 91, 114, 115, 148, 149, 276, 277], "cm2": [11, 61, 62, 87, 91, 114, 115, 132, 146, 148, 161, 178, 217, 259, 274, 276, 307, 346, 373, 375, 382, 383, 384, 388], "appropri": [11, 13, 16, 17, 24, 30, 38, 39, 41, 52, 59, 71, 76, 91, 100, 144, 148, 149, 150, 155, 159, 165, 197, 200, 201, 207, 217, 220, 226, 227, 239, 242, 244, 272, 276, 277, 278, 283, 286, 288, 294, 326, 329, 330, 336, 337, 346, 349, 356, 368, 371, 373, 379, 382, 383, 388], "d_lambda": [11, 24, 30, 37, 43, 61, 62, 71, 91, 103, 105, 121], "hz": [11, 13, 25, 61, 120, 126, 127, 131, 197, 249, 253, 254, 258, 326], "nrngui": [11, 20, 46, 64, 67, 71, 72, 91, 98, 117, 119, 122, 146, 154, 156, 178, 197, 200, 208, 211, 214, 220, 224, 242, 326, 329, 337, 340, 353], "oc": [11, 28, 37, 52, 54, 61, 76, 81, 82, 87, 89, 91, 149, 165, 176, 197, 213, 262, 277, 294, 305, 326], "mpd": 11, "508": [11, 249], "9756f32df7d0": 11, "2011": [11, 16, 17, 18, 19, 95, 248, 249], "426": [11, 249, 344], "7b4f020b29e8": 11, "2010": [11, 15, 155, 213, 248, 249, 342, 379], "dual": [11, 121, 155, 249, 283], "laptop": 11, "nrnxx": [11, 87], "pop": [12, 20, 32, 36, 37, 46, 52, 61, 67, 75, 79, 89, 91, 94, 102, 103, 124, 128, 129, 139, 148, 154, 164, 167, 171, 172, 173, 174, 178, 182, 184, 201, 207, 208, 218, 224, 227, 228, 231, 234, 235, 243, 251, 255, 256, 267, 276, 293, 296, 300, 301, 302, 303, 307, 311, 313, 330, 336, 337, 347, 353, 356, 357, 360, 363, 364, 388], "arrang": [12, 33, 42, 61, 94, 105, 122, 139, 223, 228, 233, 249, 267, 283, 352, 357, 362, 383], "renam": [12, 32, 37, 89, 102, 103, 104, 105, 149, 224, 276, 277, 353, 379, 380], "clearli": [12, 24, 29, 39, 114, 115, 122, 149, 243, 277, 379, 382, 383], "puls": [12, 30, 31, 33, 38, 41, 44, 58, 61, 62, 66, 82, 85, 91, 122, 142, 148, 197, 217, 249, 270, 276, 326, 346, 382], "protocol": [12, 33, 42, 71, 88, 91, 98, 119, 121, 128, 155, 249, 255], "batteri": [12, 33, 200, 249, 329], "button": [12, 14, 25, 28, 29, 31, 32, 34, 36, 37, 42, 45, 46, 47, 48, 50, 61, 62, 65, 71, 74, 75, 79, 80, 81, 89, 91, 94, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 119, 124, 125, 126, 128, 129, 137, 139, 142, 151, 168, 169, 174, 178, 181, 184, 200, 207, 218, 219, 221, 223, 224, 226, 227, 231, 235, 242, 251, 252, 253, 255, 256, 265, 267, 270, 279, 297, 298, 303, 307, 310, 313, 329, 336, 347, 348, 350, 352, 353, 355, 356, 360, 364], "basic": [12, 22, 29, 30, 32, 37, 52, 53, 61, 71, 76, 82, 83, 91, 95, 122, 131, 141, 147, 150, 153, 155, 156, 200, 208, 216, 217, 218, 226, 249, 258, 269, 275, 278, 281, 283, 284, 329, 337, 345, 346, 347, 355, 370, 379, 380, 384, 385, 387, 389, 391], "panel": [12, 14, 25, 27, 28, 29, 31, 32, 36, 37, 42, 45, 46, 47, 61, 71, 81, 89, 91, 94, 98, 99, 100, 101, 102, 107, 109, 118, 119, 123, 124, 125, 126, 127, 129, 138, 139, 140, 142, 144, 149, 150, 168, 170, 171, 174, 178, 199, 207, 217, 224, 226, 227, 229, 235, 250, 251, 252, 253, 254, 256, 263, 266, 267, 268, 270, 272, 277, 278, 297, 299, 300, 303, 307, 328, 336, 346, 353, 355, 356, 358, 364, 372], "left": [12, 25, 31, 32, 33, 37, 41, 42, 46, 47, 52, 61, 62, 65, 74, 75, 76, 79, 80, 81, 89, 91, 94, 98, 99, 100, 104, 105, 107, 109, 118, 119, 124, 126, 128, 129, 139, 142, 148, 149, 150, 161, 168, 170, 172, 174, 175, 181, 184, 186, 190, 192, 193, 197, 201, 204, 211, 213, 218, 220, 226, 227, 228, 230, 231, 233, 234, 235, 249, 251, 253, 255, 256, 267, 270, 276, 277, 278, 286, 290, 297, 299, 301, 303, 304, 310, 313, 315, 319, 321, 322, 326, 330, 333, 340, 341, 342, 347, 349, 355, 356, 357, 359, 360, 362, 363, 364, 368, 369, 371, 375, 382, 387, 388], "scene": [12, 67, 139, 140, 142, 226, 227, 231, 234, 235, 267, 268, 270, 283, 355, 356, 360, 363, 364], "drag": [12, 27, 32, 37, 42, 47, 50, 61, 62, 65, 68, 71, 75, 80, 81, 91, 94, 99, 100, 104, 105, 106, 107, 108, 110, 117, 118, 128, 129, 168, 172, 173, 218, 226, 228, 231, 235, 242, 255, 256, 297, 298, 301, 302, 347, 355, 357, 360, 364, 382], "unconnect": 12, "red": [12, 25, 27, 28, 29, 42, 46, 47, 61, 65, 79, 81, 89, 91, 94, 96, 99, 100, 105, 122, 126, 127, 139, 140, 161, 177, 197, 226, 230, 232, 234, 235, 242, 253, 254, 267, 268, 276, 290, 306, 326, 355, 359, 361, 363, 364, 382, 383, 384], "circl": [12, 29, 61, 65, 103, 105, 197, 225, 226, 234, 326, 354, 355, 363, 383], "overlap": [12, 37, 105, 107, 196, 325, 382], "fact": [12, 37, 39, 40, 59, 71, 76, 89, 91, 103, 148, 150, 155, 156, 160, 161, 164, 193, 197, 217, 220, 227, 228, 276, 278, 283, 284, 289, 290, 322, 346, 349, 356, 357, 368, 379, 380, 382, 383], "small": [12, 29, 32, 39, 40, 42, 47, 53, 61, 65, 71, 73, 75, 76, 89, 91, 100, 121, 122, 128, 129, 131, 143, 149, 155, 156, 159, 181, 197, 217, 220, 225, 227, 231, 236, 239, 249, 255, 256, 258, 271, 277, 283, 284, 288, 310, 326, 346, 349, 354, 356, 360, 375, 379, 380, 382], "black": [12, 25, 27, 61, 65, 87, 89, 91, 96, 108, 110, 122, 140, 197, 226, 230, 268, 276, 326, 355, 359, 382, 383, 384], "squar": [12, 25, 29, 31, 47, 65, 76, 81, 86, 89, 118, 128, 129, 133, 146, 158, 161, 181, 191, 193, 197, 201, 217, 226, 232, 249, 255, 256, 260, 274, 286, 287, 290, 310, 320, 322, 326, 330, 346, 355, 361, 368, 387, 388], "rotat": [12, 25, 38, 40, 58, 65, 68, 146, 197, 225, 226, 231, 232, 234, 274, 326, 327, 334, 354, 355, 360, 361, 363, 382, 383, 384], "attempt": [12, 42, 54, 73, 76, 84, 98, 119, 131, 133, 148, 150, 155, 160, 161, 170, 182, 207, 217, 258, 260, 276, 278, 283, 286, 289, 290, 311, 315, 336, 346, 379, 385, 387], "made": [12, 13, 33, 47, 59, 61, 65, 75, 76, 81, 91, 98, 105, 119, 121, 139, 148, 150, 155, 158, 161, 168, 197, 208, 217, 224, 226, 227, 230, 244, 267, 276, 278, 283, 286, 290, 297, 326, 337, 346, 353, 355, 356, 359, 371, 379, 380, 385, 387], "fairli": [12, 29, 32, 91], "topologi": [12, 14, 36, 37, 45, 46, 47, 60, 62, 76, 81, 135, 141, 146, 161, 163, 207, 224, 249, 263, 269, 274, 283, 290, 336, 346, 353, 382], "pleasingli": 12, "unlabel": [12, 228, 357], "probabl": [12, 14, 27, 32, 47, 53, 54, 61, 71, 77, 88, 91, 93, 131, 134, 154, 155, 164, 194, 196, 197, 207, 208, 214, 217, 221, 249, 258, 261, 282, 283, 286, 287, 293, 323, 325, 326, 336, 337, 343, 346, 350, 387], "organ": [13, 29, 45, 51, 60, 95, 117, 150, 155, 168, 169, 193, 197, 228, 248, 249, 278, 283, 297, 298, 322, 326, 357, 379, 383, 388], "modular": [13, 43, 45, 51, 60, 71, 83, 85, 91, 249], "fashion": [13, 76], "highlight": [13, 25, 42, 81, 84, 94, 99, 100, 139, 155, 169, 173, 178, 184, 228, 231, 235, 267, 283, 298, 302, 307, 313, 357, 360, 364], "fire": [13, 16, 32, 38, 46, 70, 75, 85, 95, 102, 111, 148, 156, 197, 249, 276, 284, 288, 326, 373, 383, 393], "settl": [13, 24, 73, 89, 91], "pattern": [13, 14, 32, 46, 47, 60, 61, 65, 68, 81, 82, 154, 155, 161, 197, 217, 226, 249, 282, 283, 290, 326, 346, 355, 371], "interspik": [13, 32, 75, 102, 249], "slightli": [13, 29, 61, 73, 93, 99, 145, 149, 158, 161, 197, 217, 230, 273, 277, 288, 290, 307, 320, 326, 346, 359, 388], "nsettl": [13, 16, 17, 18], "isi": [13, 16, 17, 18, 95], "slowest": [13, 231, 360], "sustain": [13, 248, 249], "40": [13, 18, 24, 58, 67, 154, 161, 187, 196, 197, 201, 249, 276, 282, 290, 325, 326, 330, 344, 361, 373, 382, 387, 388], "longest": [13, 41, 197, 326], "375": [13, 249], "500": [13, 16, 17, 18, 22, 37, 41, 43, 61, 63, 67, 121, 131, 161, 193, 196, 226, 230, 249, 258, 276, 322, 325, 326, 355, 359, 373, 382, 388], "attach": [13, 25, 29, 37, 53, 66, 76, 91, 103, 105, 108, 110, 112, 122, 148, 149, 155, 161, 178, 226, 228, 243, 276, 277, 283, 289, 290, 292, 307, 355, 357, 382, 383], "iclamp": [13, 16, 17, 18, 28, 31, 33, 42, 43, 45, 58, 59, 61, 67, 76, 82, 84, 88, 98, 118, 119, 142, 143, 148, 151, 154, 164, 170, 196, 208, 239, 247, 269, 270, 271, 275, 276, 279, 282, 293, 298, 299, 325, 326, 337, 344, 346, 362, 382, 388], "analysi": [13, 16, 17, 18, 26, 81, 82, 84, 95, 121, 149, 198, 239, 248, 249, 277, 327, 388, 391], "get_frequ": 13, "spvec": [13, 16, 17, 18], "enough": [13, 16, 17, 18, 32, 37, 45, 47, 51, 61, 81, 87, 95, 100, 122, 149, 150, 155, 156, 193, 197, 220, 242, 249, 277, 278, 283, 284, 322, 326, 349, 371], "occur": [13, 34, 42, 44, 75, 76, 83, 84, 93, 95, 97, 98, 102, 107, 119, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 166, 184, 197, 201, 217, 221, 239, 276, 277, 278, 282, 283, 284, 286, 288, 290, 295, 313, 318, 326, 330, 346, 350, 368, 369, 371, 378, 379, 380, 384, 385, 387], "freq": [13, 16, 17, 18, 120, 131, 197, 258, 326], "ninvl": [13, 16, 17, 18], "analyz": [13, 16, 17, 18, 49, 81, 84, 95, 239, 249], "batch": [13, 16, 17, 76, 220, 349, 391], "signific": [13, 25, 33, 45, 59, 81, 91, 149, 155, 228, 249, 277, 357, 371, 379, 380, 387], "plotresult": [13, 17], "amp0": [13, 16, 17, 142, 269, 270], "d_amp": 13, "setparam": [13, 16, 17], "run_id": 13, "Its": [13, 46, 50, 61, 109, 121, 149, 161, 207, 228, 249, 277, 290, 336, 357, 368, 379], "whole": [13, 25, 36, 81, 155, 181, 197, 226, 228, 234, 249, 283, 286, 289, 310, 326, 337, 355, 357, 363, 379, 382], "batchrun": [13, 16, 17], "discuss": [13, 29, 32, 40, 42, 47, 52, 71, 89, 91, 94, 98, 119, 121, 128, 131, 149, 150, 155, 156, 158, 164, 217, 249, 255, 277, 278, 283, 284, 286, 293, 346, 379, 380, 392], "trun": [13, 16, 17], "loop": [13, 16, 28, 29, 76, 91, 129, 150, 155, 160, 161, 164, 178, 181, 197, 201, 218, 224, 226, 244, 249, 256, 278, 283, 289, 290, 293, 307, 310, 326, 330, 347, 353, 355, 362, 370, 382, 384, 393], "counter": [13, 52, 150, 155, 196, 239, 278, 283, 325], "pair": [13, 51, 59, 69, 89, 94, 95, 103, 124, 129, 131, 148, 149, 154, 155, 161, 184, 193, 197, 217, 222, 224, 228, 249, 251, 256, 276, 277, 282, 283, 290, 305, 313, 322, 326, 346, 351, 353, 357, 382, 383, 387, 388], "messag": [13, 14, 36, 40, 46, 47, 52, 54, 61, 76, 81, 82, 84, 99, 105, 108, 110, 114, 115, 121, 131, 144, 145, 153, 154, 155, 158, 163, 165, 166, 184, 191, 193, 199, 201, 207, 217, 220, 228, 239, 242, 243, 258, 272, 273, 281, 283, 286, 292, 294, 295, 296, 313, 318, 320, 322, 328, 330, 336, 346, 349, 357, 368, 379, 380, 383, 385, 387], "saveresult": [13, 16, 17], "text": [13, 24, 32, 42, 46, 47, 61, 65, 68, 76, 79, 82, 84, 87, 94, 98, 119, 122, 146, 149, 155, 158, 174, 175, 179, 181, 184, 185, 197, 201, 228, 230, 274, 277, 286, 296, 303, 304, 307, 308, 310, 313, 314, 326, 330, 344, 357, 359, 370, 377, 379, 393], "menu": [13, 25, 29, 30, 31, 32, 37, 42, 46, 47, 50, 61, 65, 74, 75, 76, 79, 80, 81, 82, 89, 91, 94, 98, 100, 102, 103, 107, 118, 119, 122, 123, 124, 125, 126, 127, 129, 139, 140, 142, 148, 151, 172, 178, 179, 197, 207, 214, 217, 218, 221, 226, 227, 231, 234, 235, 242, 250, 251, 252, 253, 254, 256, 267, 268, 269, 270, 276, 279, 301, 307, 308, 326, 336, 343, 346, 347, 350, 355, 356, 360, 363, 364], "retriev": [13, 14, 16, 19, 42, 62, 76, 82, 89, 91, 121, 128, 129, 131, 155, 178, 181, 197, 204, 224, 249, 255, 256, 258, 283, 307, 310, 326, 333, 353, 387], "busi": [13, 46, 76, 149, 155, 213, 277, 283, 342], "commun": [13, 52, 84, 121, 153, 155, 156, 206, 249, 281, 283, 284, 335, 365, 368, 371, 383, 386], "exchang": [13, 84, 149, 155, 156, 239, 248, 249, 277, 283, 284, 388], "seri": [13, 41, 71, 76, 91, 94, 98, 119, 148, 149, 161, 176, 201, 242, 249, 276, 277, 283, 290, 305, 330, 344, 370, 379, 380, 383, 384, 385, 386, 387, 390, 392, 393], "set_param": 13, "stim": [13, 16, 17, 18, 28, 98, 119, 142, 143, 148, 151, 155, 156, 164, 208, 239, 270, 271, 276, 279, 283, 284, 293, 326, 337, 373, 382, 383], "amp": [13, 16, 17, 18, 28, 31, 33, 58, 59, 67, 71, 91, 131, 142, 143, 148, 154, 155, 170, 196, 247, 249, 258, 269, 270, 271, 276, 282, 283, 299, 326, 344, 362, 382, 388], "finish": [13, 27, 52, 99, 100, 103, 105, 109, 124, 129, 133, 143, 149, 154, 155, 218, 221, 251, 256, 260, 271, 277, 282, 283, 347, 350, 379, 380], "def": [13, 24, 29, 44, 58, 59, 87, 95, 133, 146, 155, 159, 216, 228, 260, 274, 276, 279, 282, 283, 288, 289, 290, 297, 298, 302, 307, 314, 315, 316, 317, 321, 322, 323, 324, 325, 326, 328, 334, 343, 345, 346, 349, 350, 351, 353, 355, 357, 359, 361, 362, 363, 367, 368, 369, 370, 372, 375, 377, 382, 383, 384, 385, 387], "param": [13, 16, 27, 28, 29, 52, 63, 91, 207, 336, 384, 385], "notic": [13, 25, 28, 29, 31, 33, 36, 42, 46, 52, 61, 71, 76, 89, 94, 99, 100, 114, 115, 149, 150, 154, 155, 156, 160, 161, 164, 185, 187, 197, 208, 217, 221, 226, 276, 277, 278, 282, 283, 284, 289, 290, 314, 326, 337, 346, 350, 379, 380, 382, 387, 388], "overhead": [13, 131, 154, 155, 156, 165, 196, 197, 204, 215, 217, 239, 258, 282, 283, 284, 294, 325, 326, 344, 346], "tupl": [13, 208, 286, 307, 337, 365, 387], "obtain": [13, 37, 39, 41, 47, 88, 91, 128, 131, 149, 153, 155, 158, 164, 194, 202, 208, 217, 220, 226, 228, 230, 243, 249, 255, 258, 277, 281, 283, 286, 293, 294, 323, 331, 337, 346, 349, 357, 359, 370, 379, 380, 387], "unpack": [13, 16, 155, 280, 283], "recomput": [13, 161, 220, 290, 349], "balanc": [13, 146, 155, 156, 220, 249, 274, 283, 284, 349, 370, 385], "conveni": [13, 14, 25, 27, 28, 32, 42, 47, 53, 54, 60, 61, 69, 76, 81, 82, 91, 94, 106, 107, 114, 115, 122, 145, 148, 149, 158, 161, 169, 174, 188, 197, 200, 201, 217, 220, 221, 226, 228, 243, 244, 273, 276, 277, 286, 290, 298, 303, 307, 317, 326, 329, 330, 346, 349, 350, 355, 357, 371, 372, 379, 387, 388], "aim": [13, 24, 53, 61, 91, 93, 122, 365, 379], "prealloc": 13, "length": [13, 24, 25, 27, 38, 40, 41, 45, 46, 52, 60, 61, 62, 63, 71, 89, 95, 99, 100, 114, 120, 121, 129, 133, 149, 155, 160, 161, 164, 184, 194, 196, 197, 201, 205, 208, 211, 213, 215, 216, 217, 218, 227, 232, 233, 234, 247, 249, 256, 260, 277, 283, 286, 289, 290, 293, 307, 313, 323, 325, 326, 330, 334, 337, 340, 342, 345, 346, 347, 356, 361, 362, 363, 368, 370, 371, 373, 375, 382, 387, 388], "store": [13, 28, 36, 38, 54, 59, 65, 71, 84, 129, 131, 155, 161, 193, 197, 200, 208, 217, 222, 226, 227, 230, 233, 239, 243, 244, 249, 256, 258, 283, 286, 290, 322, 326, 329, 336, 337, 344, 346, 351, 355, 356, 359, 362, 379, 382, 383, 384, 385, 388], "none": [13, 65, 95, 148, 150, 154, 155, 158, 168, 200, 208, 216, 276, 278, 279, 282, 283, 286, 289, 292, 297, 315, 329, 337, 345, 346, 368, 370, 371, 375, 384, 385, 387, 388], "submit": [13, 16, 61, 155, 280, 283], "pyret": [13, 155, 280, 283], "noth": [13, 29, 61, 74, 89, 91, 128, 150, 155, 156, 161, 165, 166, 169, 171, 182, 184, 199, 231, 239, 255, 278, 283, 284, 290, 294, 295, 298, 300, 311, 313, 328, 360, 379, 382, 385, 388], "pick": [13, 16, 29, 43, 71, 73, 89, 91, 122, 133, 196, 197, 206, 236, 243, 260, 325, 326, 335, 369, 379, 380], "guarante": [13, 40, 149, 155, 156, 160, 164, 168, 277, 283, 284, 289, 293, 297, 379, 380, 385], "nerv": [14, 114, 115, 149, 248, 249, 277, 373], "control": [14, 16, 17, 18, 25, 27, 28, 31, 32, 33, 40, 42, 45, 61, 65, 71, 82, 87, 89, 95, 96, 98, 99, 101, 119, 125, 126, 128, 139, 148, 149, 151, 155, 156, 164, 168, 172, 177, 178, 180, 183, 186, 201, 207, 217, 221, 226, 228, 231, 234, 242, 249, 252, 253, 255, 267, 276, 277, 279, 283, 284, 293, 297, 301, 306, 307, 309, 312, 315, 330, 336, 346, 350, 355, 357, 360, 363, 371, 379, 382, 388], "biophys": [14, 24, 26, 27, 31, 34, 43, 45, 46, 47, 60, 69, 71, 81, 82, 83, 84, 85, 91, 95, 101, 105, 110, 112, 120, 220, 224, 249, 344, 349, 353, 391], "morphometr": [14, 26, 45, 62, 82, 91, 121, 249], "break": [14, 28, 51, 52, 60, 61, 71, 76, 155, 164, 194, 197, 201, 236, 239, 283, 323, 330, 379, 388], "analog": [14, 61, 76, 91, 95, 102, 121, 143, 154, 155, 197, 208, 217, 226, 249, 271, 282, 283, 326, 334, 346, 355, 370], "branch": [14, 25, 38, 40, 47, 60, 61, 62, 81, 121, 161, 207, 213, 217, 242, 244, 248, 249, 286, 290, 336, 342, 346, 380, 381, 391], "group": [14, 31, 37, 42, 46, 48, 60, 61, 65, 71, 76, 78, 82, 84, 89, 91, 94, 122, 128, 155, 172, 178, 181, 217, 224, 228, 249, 255, 283, 301, 307, 308, 310, 346, 353, 357, 379], "subset": [14, 22, 27, 32, 35, 46, 60, 63, 81, 84, 91, 101, 143, 156, 186, 197, 210, 228, 249, 271, 284, 315, 326, 339, 357], "anatom": [14, 25, 34, 40, 43, 47, 61, 62, 69, 71, 81, 91, 95, 105, 112, 121, 249], "criteria": [14, 40, 88, 121], "basilar": [14, 25, 43, 61, 62, 63], "apic": [14, 25, 27, 41, 43, 59, 61, 62, 63, 99, 100, 101, 249, 286, 293, 361, 387], "obliqu": [14, 249, 387], "spini": [14, 249], "aspini": 14, "passiv": [14, 24, 25, 31, 43, 45, 61, 91, 148, 149, 220, 249, 276, 277, 349, 382, 383, 384, 388], "conjunct": [14, 164, 226, 355, 365], "reconstruct": [14, 40, 42, 45, 47, 51, 59, 62, 98, 119, 161, 207, 231, 249, 290, 336, 360], "choic": [14, 25, 27, 38, 39, 59, 61, 73, 89, 94, 121, 122, 149, 174, 249, 277, 303, 307, 367, 379], "neuronmainmenu": [14, 30, 32, 37, 42, 45, 98, 119, 172, 178, 224, 228, 301, 307, 353, 357], "asid": [14, 47, 59, 61, 81, 91, 382], "load_fil": [14, 24, 30, 31, 36, 38, 42, 45, 46, 58, 59, 61, 71, 72, 91, 95, 98, 114, 119, 143, 146, 154, 156, 158, 159, 165, 178, 197, 200, 208, 214, 220, 224, 227, 247, 276, 284, 288, 294, 326, 329, 337, 340, 346, 347, 351, 353, 356, 361, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 382, 383, 384, 388], "celbild": 14, "makecellbuild": 14, "row": [14, 175, 193, 220, 228, 249, 304, 322, 349, 357, 373, 388], "radio": [14, 25, 31, 32, 42, 61, 62, 79, 80, 91, 94, 107, 108, 110, 126, 128, 168, 178, 226, 228, 253, 255, 297, 307, 355, 357], "checkbox": [14, 27, 47, 61, 81, 89, 91, 101, 120, 122, 124, 128, 129, 178, 217, 228, 251, 255, 256, 307, 346, 357], "label": [14, 16, 17, 19, 25, 32, 33, 37, 42, 61, 62, 74, 75, 89, 103, 105, 106, 107, 110, 118, 122, 139, 140, 151, 167, 168, 169, 171, 178, 181, 197, 199, 202, 224, 225, 226, 228, 230, 231, 232, 234, 235, 267, 268, 279, 283, 296, 297, 298, 300, 307, 310, 326, 327, 328, 331, 334, 353, 354, 355, 357, 359, 360, 361, 363, 364, 367, 372, 375, 379, 383], "continu": [14, 24, 26, 27, 31, 34, 36, 38, 39, 45, 47, 50, 52, 62, 67, 75, 76, 84, 89, 91, 96, 103, 107, 121, 128, 143, 146, 148, 149, 150, 153, 154, 155, 161, 164, 197, 201, 207, 216, 217, 220, 221, 222, 226, 230, 239, 249, 255, 271, 274, 276, 277, 278, 281, 282, 283, 287, 290, 326, 330, 336, 345, 346, 349, 350, 351, 355, 359, 370, 371, 378, 379, 380, 388], "scan": [14, 165, 187, 197, 249, 294, 316, 326], "worri": [14, 197, 326], "isn": [14, 42, 47, 61, 75, 81, 89, 94, 100, 156, 211, 213, 228, 284, 298, 340, 342, 357], "immedi": [14, 34, 45, 61, 76, 81, 89, 129, 133, 148, 155, 159, 172, 197, 201, 220, 226, 228, 247, 256, 260, 276, 283, 288, 298, 301, 326, 330, 346, 349, 355, 357, 368, 371, 379], "obviou": [14, 29, 106, 114, 115, 150, 239, 278, 379], "reread": [14, 65, 226, 355], "blank": [14, 65, 249], "figur": [14, 25, 37, 38, 42, 46, 47, 49, 58, 60, 68, 76, 81, 82, 84, 95, 96, 116, 148, 155, 156, 200, 224, 226, 243, 249, 276, 283, 284, 329, 336, 353, 355, 361, 362, 369, 372, 375, 379, 380, 382, 383, 384, 385, 387, 388], "everi": [14, 25, 32, 33, 39, 46, 54, 58, 61, 63, 65, 71, 88, 89, 114, 115, 118, 125, 126, 128, 129, 131, 143, 144, 146, 148, 149, 150, 153, 154, 155, 156, 159, 178, 185, 193, 195, 196, 197, 207, 217, 224, 226, 228, 230, 239, 244, 252, 253, 255, 256, 258, 271, 272, 274, 276, 277, 278, 281, 282, 283, 284, 286, 288, 290, 307, 314, 324, 325, 326, 336, 346, 353, 355, 357, 359, 370, 371, 379, 380, 382, 387, 388], "skip": [14, 53, 65, 187, 216, 316, 345, 346, 379, 382, 383, 385, 387, 388], "geometri": [14, 31, 43, 46, 47, 60, 62, 63, 81, 120, 141, 160, 207, 248, 249, 263, 269, 289, 326, 336, 344, 368, 371, 375, 384], "dimens": [14, 47, 61, 65, 76, 81, 114, 115, 146, 149, 158, 160, 161, 182, 193, 201, 217, 228, 249, 274, 277, 286, 289, 290, 311, 322, 330, 346, 357], "spatial": [14, 25, 27, 30, 40, 46, 47, 59, 60, 61, 81, 84, 91, 100, 134, 158, 160, 161, 249, 261, 286, 289, 290, 367, 368, 371], "strategi": [14, 27, 31, 32, 37, 39, 43, 45, 47, 51, 60, 73, 83, 95, 100, 101, 121, 128, 155, 197, 207, 248, 249, 255, 283, 326, 336, 376, 379], "field": [14, 25, 31, 32, 33, 36, 54, 59, 61, 75, 76, 81, 82, 89, 91, 102, 103, 106, 107, 108, 109, 110, 118, 122, 124, 126, 128, 129, 139, 148, 149, 154, 155, 156, 158, 171, 177, 178, 179, 186, 197, 207, 208, 217, 221, 227, 228, 229, 231, 235, 249, 251, 253, 255, 256, 267, 276, 277, 282, 283, 284, 286, 300, 306, 307, 308, 315, 326, 336, 337, 346, 350, 356, 357, 358, 360, 364, 387], "endow": [14, 121, 249], "ionic": [14, 77, 78, 121, 131, 132, 134, 149, 150, 220, 224, 249, 258, 259, 261, 277, 278, 346, 349, 353, 388], "pump": [14, 46, 60, 61, 149, 158, 217, 249, 277, 286, 346, 368, 371], "pa": [14, 22, 25, 31, 37, 43, 45, 47, 61, 62, 63, 76, 77, 78, 84, 91, 103, 148, 151, 199, 201, 208, 239, 276, 279, 326, 328, 330, 337, 382, 383, 384, 388], "until": [14, 28, 32, 45, 47, 61, 65, 75, 76, 81, 91, 93, 95, 96, 105, 154, 155, 167, 168, 172, 185, 197, 200, 202, 213, 217, 221, 236, 242, 243, 282, 283, 296, 297, 301, 314, 326, 329, 331, 342, 346, 350, 359, 373, 379, 380, 382, 385, 388], "pointprocessmanag": [14, 31, 42, 45, 46, 67, 91, 98, 118, 119, 122, 136, 148, 154, 168, 196, 264, 276, 297], "took": [14, 243], "ballstk": [14, 45], "bring": [14, 24, 25, 27, 28, 31, 34, 42, 45, 46, 47, 48, 60, 62, 65, 71, 74, 75, 81, 88, 91, 94, 96, 97, 100, 103, 105, 109, 118, 122, 142, 168, 197, 247, 270, 297, 326, 381], "selector": [14, 42, 164], "shown": [14, 25, 27, 28, 37, 38, 47, 61, 81, 84, 90, 91, 98, 108, 110, 119, 139, 161, 168, 173, 184, 208, 228, 234, 242, 244, 267, 271, 290, 293, 297, 302, 313, 337, 357, 363, 367, 368, 370, 375, 387, 388], "creation": [14, 42, 98, 119, 146, 154, 156, 158, 161, 168, 178, 202, 205, 208, 217, 222, 228, 274, 282, 284, 290, 297, 331, 334, 337, 351, 357, 387], "pre": [14, 29, 93, 110, 150, 154, 161, 169, 184, 197, 217, 240, 244, 278, 280, 282, 290, 298, 313, 326, 346, 379, 380], "31": [15, 58, 76, 87, 197, 226, 249, 290, 326, 344, 355, 382, 387, 388], "51": [15, 22, 197, 249, 326, 351, 387], "ted": [15, 16, 17, 18, 19, 155, 197, 249, 283, 326], "exp": [15, 16, 17, 18, 19, 28, 76, 86, 89, 114, 115, 131, 132, 148, 153, 158, 166, 191, 193, 197, 200, 217, 226, 239, 258, 259, 276, 281, 286, 287, 295, 320, 322, 326, 327, 329, 346, 355, 373, 375, 388], "pi": [15, 28, 52, 76, 114, 115, 120, 131, 143, 149, 161, 168, 178, 181, 186, 189, 191, 197, 207, 208, 225, 226, 230, 258, 271, 277, 290, 297, 307, 310, 315, 318, 320, 326, 336, 337, 354, 355, 359, 382, 383, 384, 385, 387, 388], "gnabar": [15, 22, 44, 46, 67, 131, 164, 258, 293, 328, 373, 382, 383, 384, 388], "gkbar": [15, 22, 36, 46, 67, 276, 373, 382, 383, 384, 388], "gl": [15, 22, 46, 67, 197, 225, 276, 326, 354, 373, 382, 383, 384, 388], "foral": [15, 47, 61, 64, 72, 76, 91, 120, 128, 129, 140, 148, 155, 160, 161, 164, 186, 197, 199, 201, 202, 220, 224, 255, 256, 268, 330, 331, 353, 388], "initbatpar": 16, "06": [16, 17, 18, 19, 100, 148, 249, 276, 387], "46": [16, 18, 249, 382, 387, 388], "17": [16, 53, 88, 95, 121, 208, 239, 242, 248, 249, 286, 337, 344, 371, 375, 382, 383, 387, 388], "suitabl": [16, 32, 37, 40, 59, 71, 84, 121, 148, 149, 150, 165, 196, 197, 224, 233, 276, 277, 278, 294, 325, 326, 353, 362, 368, 378, 393], "correspond": [16, 17, 25, 27, 29, 42, 52, 59, 61, 65, 76, 81, 88, 91, 94, 99, 126, 139, 140, 146, 148, 149, 150, 154, 155, 156, 158, 159, 161, 164, 193, 197, 200, 203, 217, 220, 224, 228, 235, 239, 242, 244, 245, 253, 267, 268, 274, 276, 277, 278, 282, 283, 284, 286, 288, 290, 293, 322, 326, 329, 332, 334, 346, 349, 353, 357, 359, 364, 368, 370, 373, 379, 380, 382, 388], "wrap": [16, 29, 105, 155, 156, 197, 200, 208, 283, 284, 326, 329, 337, 391], "undesir": [16, 94, 95, 288], "stdgui": [16, 17, 18, 19], "nmm": [16, 17, 18, 31], "toolbar": [16, 17, 18, 42, 45, 61, 71, 89, 91, 94, 99], "objref": [16, 17, 18, 19, 21, 22, 23, 32, 64, 67, 71, 72, 76, 83, 91, 129, 133, 143, 146, 148, 149, 150, 151, 154, 155, 156, 158, 160, 161, 163, 164, 165, 168, 169, 173, 174, 180, 181, 182, 184, 192, 193, 194, 196, 197, 199, 200, 201, 208, 211, 214, 217, 220, 225, 226, 228, 232, 234, 256, 294, 297, 309, 310, 311, 326, 329, 330, 337, 340, 388], "whenev": [16, 31, 42, 76, 89, 98, 119, 129, 149, 150, 155, 161, 178, 184, 202, 205, 207, 217, 220, 228, 234, 256, 277, 278, 283, 290, 307, 313, 331, 334, 336, 346, 349, 357, 363, 379, 387], "long": [16, 17, 18, 29, 33, 38, 40, 41, 49, 51, 71, 76, 89, 90, 91, 121, 125, 128, 146, 155, 156, 158, 161, 174, 187, 192, 194, 196, 197, 201, 213, 217, 220, 224, 226, 249, 252, 255, 274, 283, 284, 290, 303, 316, 321, 323, 325, 326, 330, 342, 346, 349, 353, 355, 371, 373, 379, 384, 387, 388], "instrument": [16, 17, 18, 45, 46, 61, 71, 95, 121, 240, 365, 386], "manipul": [16, 17, 18, 28, 36, 52, 54, 65, 95, 121, 124, 129, 141, 155, 160, 168, 169, 193, 197, 200, 201, 206, 212, 217, 218, 224, 228, 231, 247, 251, 256, 269, 276, 283, 289, 297, 298, 313, 322, 329, 330, 333, 335, 341, 346, 347, 353, 357, 360], "del": [16, 17, 18, 29, 31, 67, 91, 142, 148, 154, 217, 249, 269, 270, 276, 346, 375, 382, 383], "dur": [16, 17, 18, 24, 28, 31, 58, 59, 66, 67, 91, 142, 143, 148, 154, 196, 217, 247, 269, 270, 271, 276, 282, 326, 344, 346, 362, 382, 388], "1e9": [16, 17, 18, 31, 59, 89, 128, 148, 217, 255, 276, 326, 346, 373], "fstimamp": [16, 17], "nc": [16, 17, 18, 21, 22, 71, 95, 148, 154, 156, 197, 249, 276, 282, 284, 326, 346, 373, 383, 384, 385], "nil": [16, 17, 18, 154, 155, 199, 202, 217, 328, 331], "threshold": [16, 17, 18, 29, 75, 148, 154, 155, 159, 197, 217, 239, 249, 276, 280, 282, 283, 286, 287, 288, 326, 346, 368, 376, 383, 385], "stabliz": [16, 17, 18], "nmin": [16, 17, 18], "fewer": [16, 17, 18, 129, 155, 197, 256, 283, 326], "postproc": [16, 17, 18], "local": [16, 17, 18, 22, 25, 47, 53, 71, 76, 78, 87, 89, 91, 94, 96, 114, 115, 120, 121, 128, 129, 131, 133, 143, 150, 153, 154, 155, 156, 158, 159, 178, 181, 192, 193, 194, 197, 199, 201, 202, 214, 217, 222, 226, 228, 230, 232, 234, 237, 239, 242, 244, 245, 249, 255, 256, 258, 260, 271, 278, 281, 282, 283, 284, 286, 288, 310, 311, 326, 330, 331, 346, 351, 355, 357, 359, 361, 373, 376, 379, 388], "nspike": [16, 17, 18, 155, 276, 283], "t1": [16, 17, 18, 148, 239, 276, 372], "t2": [16, 17, 18, 372], "1e3": [16, 17, 18, 24], "startsw": [16, 17, 76, 156, 213, 214, 232, 342, 388], "runwork": [16, 155, 156, 280, 283, 284], "beyond": [16, 32, 61, 93, 118, 201, 208, 243, 249, 286, 330, 337, 370], "bulletin": [16, 26, 155, 249, 283, 365], "board": [16, 26, 65, 155, 283, 365], "svec": [16, 17], "fvec": [16, 17, 197, 326], "ii": [16, 17, 28, 29, 71, 197, 249, 326, 379, 391], "tmp": [16, 184, 186, 197, 213, 216, 313, 315, 326, 342, 345], "retval": [16, 155, 280, 283], "boss": 16, "sortindex": [16, 197, 326, 327], "rearrang": 16, "sort": [16, 29, 45, 155, 156, 193, 197, 249, 283, 284, 322, 326, 327, 387], "localobj": [16, 17, 52, 181, 192, 201, 217, 310, 330, 388], "s1": [16, 17, 76, 148, 155, 163, 178, 181, 199, 202, 208, 211, 230, 276, 310, 331, 337, 340, 351, 359], "wopen": [16, 17, 28, 76, 184, 186, 188, 197, 309, 312, 313, 315, 317, 326, 388], "close": [16, 17, 25, 28, 37, 38, 39, 42, 47, 58, 65, 76, 80, 81, 89, 90, 91, 98, 102, 103, 104, 105, 107, 108, 109, 110, 119, 121, 128, 129, 148, 155, 160, 161, 168, 172, 178, 184, 185, 188, 197, 201, 202, 217, 222, 224, 225, 226, 230, 239, 242, 247, 249, 255, 256, 276, 283, 289, 290, 297, 301, 307, 308, 312, 313, 314, 317, 326, 330, 331, 346, 351, 353, 354, 355, 359, 375, 379, 385], "initbats": 17, "48": [17, 18, 67, 154, 249, 382, 387, 388], "track": [17, 89, 91, 100, 105, 143, 149, 174, 197, 249, 271, 277, 303, 326, 365, 379, 380, 384], "fig": [17, 19, 25, 94, 185, 276, 314, 369, 373, 375, 383], "plotfi": [17, 19], "initonerun": 18, "09": [18, 95, 148, 213, 248, 249, 276, 342], "49": [18, 36, 197, 248, 249, 326, 344, 387, 388], "ax": [18, 19, 28, 39, 65, 87, 122, 129, 208, 226, 228, 230, 232, 234, 249, 256, 276, 337, 355, 357, 359, 361, 363, 367], "120": [18, 67, 114, 115, 148, 154, 187, 196, 207, 249, 276, 325, 336], "105": [18, 22, 67, 197, 249, 326], "300": [18, 33, 43, 61, 63, 67, 154, 197, 226, 230, 249, 326, 355, 359], "throughout": [18, 24, 25, 43, 61, 62, 63, 84, 149, 277, 368, 371, 383], "graphlist": [18, 67, 154, 158, 226, 234, 326, 355, 363], "addexpr": [18, 67, 94, 154, 168, 226, 228, 282, 355, 357], "14": [19, 95, 159, 197, 208, 226, 239, 249, 276, 288, 290, 307, 316, 317, 320, 326, 337, 355, 372, 374, 375, 379, 382, 383, 387, 388], "54": [19, 22, 67, 148, 154, 197, 249, 276, 326, 370, 373, 382, 383, 384, 387, 388], "clipboard": [19, 65, 89, 91, 128, 129, 218, 255, 256, 347], "obj": [19, 52, 54, 72, 148, 151, 154, 168, 169, 181, 192, 197, 202, 211, 220, 279, 297, 310, 321, 326, 331, 340], "insuffici": [19, 41, 134, 261, 339], "xvec": [19, 146, 196, 197, 217, 226, 233, 274, 290, 325, 326, 346, 355, 362], "yvec": [19, 217, 226, 233, 290, 346, 355, 362], "xy": [19, 121, 231, 234, 360, 363, 383], "coord": [19, 226, 355], "neuronhom": [20, 87, 155, 161, 165, 170, 176, 201, 207, 208, 213, 224, 228, 262, 290, 294, 299, 305, 330, 336, 342, 353, 357, 388], "net1": 20, "net1run": 20, "netgui": [20, 32, 37, 42, 75, 98, 103, 119, 155, 156, 168, 283, 284, 297], "wman": 20, "netedgegui": [20, 32, 37, 109], "artifici": [21, 22, 26, 29, 69, 70, 71, 74, 75, 77, 78, 83, 84, 85, 103, 106, 110, 121, 135, 139, 141, 147, 150, 151, 154, 155, 156, 201, 202, 216, 224, 249, 263, 267, 269, 275, 278, 279, 282, 283, 284, 330, 331, 340, 345, 353, 391, 393], "acel": [21, 22], "begintempl": [21, 22, 64, 72, 76, 83, 143, 165, 169, 173, 180, 211, 220, 271, 294, 309, 388], "pp": [21, 22, 29, 32, 95, 139, 151, 156, 248, 249, 267, 279, 284], "connect2target": [21, 22, 29, 32, 155, 156, 283, 284], "art": [21, 22, 196, 249, 325, 379], "o1": [21, 22, 28, 76, 155, 163, 168, 181, 193, 202, 208, 217, 310, 324, 331, 337], "endtempl": [21, 22, 64, 72, 76, 83, 143, 169, 173, 180, 211, 220, 271, 309, 388], "nclist": [21, 22, 29, 156, 276, 284], "srcindex": [21, 22], "tarcelindex": [21, 22], "synindex": [21, 22], "synlist": [21, 22, 154, 156, 280, 282, 284], "delai": [21, 22, 29, 32, 35, 36, 38, 47, 58, 59, 69, 70, 71, 81, 89, 95, 103, 108, 109, 110, 111, 148, 154, 155, 156, 178, 197, 217, 228, 247, 249, 276, 280, 282, 283, 284, 307, 326, 344, 346, 357, 362, 382, 383, 384, 385, 388], "s0": [21, 32, 75, 80, 96, 106, 107, 108, 109, 110, 111], "c1": [21, 32, 96, 107, 108, 109, 148, 211, 276, 340], "196": [21, 249], "b": [22, 25, 29, 37, 39, 58, 64, 65, 72, 76, 89, 90, 93, 121, 146, 148, 154, 156, 161, 164, 168, 193, 197, 201, 205, 208, 220, 228, 239, 242, 244, 249, 274, 276, 282, 284, 286, 290, 297, 307, 311, 322, 326, 330, 334, 337, 349, 357, 362, 368, 379, 380, 387], "ballstick": [22, 37, 45], "si": [22, 37, 181, 197, 249, 310, 326], "topol": 22, "shape": [22, 27, 28, 29, 30, 36, 38, 39, 40, 41, 46, 52, 61, 65, 76, 81, 82, 84, 89, 99, 100, 103, 105, 110, 125, 134, 135, 139, 140, 141, 142, 155, 158, 160, 162, 173, 221, 226, 228, 231, 232, 235, 249, 252, 261, 263, 267, 268, 269, 270, 283, 286, 289, 291, 302, 350, 355, 357, 360, 361, 364, 382, 388], "geom": 22, "memb": [22, 207, 336], "biophi": 22, "pt3dclear": [22, 76, 161, 269, 289, 290, 388], "pt3dadd": [22, 52, 76, 134, 161, 261, 269, 289, 290, 388], "sectionlist": [22, 61, 76, 135, 141, 146, 155, 158, 160, 164, 173, 202, 208, 232, 233, 234, 263, 269, 274, 283, 286, 289, 293, 302, 331, 337, 361, 362, 363, 368, 388], "forsec": [22, 61, 63, 76, 160, 162, 164, 199, 201, 233, 330, 388], "6157": [22, 382, 383, 384], "lambda": [22, 91, 120, 208, 286, 290, 297, 326, 337, 351, 375], "036": [22, 67, 100, 148, 154, 248, 249, 276, 373, 382, 383, 384, 388], "0003": [22, 67, 100, 148, 154, 276, 373, 382, 383, 384, 388], "el": [22, 41, 67, 197, 249, 276, 326, 373, 382, 383, 384, 388], "001": [22, 37, 73, 91, 114, 115, 131, 146, 149, 217, 220, 228, 248, 249, 258, 274, 277, 346, 349, 357, 373, 382, 383, 384], "65": [22, 24, 31, 33, 37, 43, 58, 61, 62, 63, 67, 89, 94, 95, 103, 114, 148, 171, 197, 200, 247, 249, 274, 276, 286, 290, 300, 320, 326, 329, 339, 344, 346, 351, 362, 367, 368, 369, 370, 372, 373, 377, 378, 382, 383, 384, 385, 387, 388], "n3d": [22, 47, 76, 120, 161, 269, 289, 290, 293, 375, 382, 383, 384, 388], "pt3dchang": [22, 161, 269, 289, 290, 383, 384, 388], "x3d": [22, 76, 161, 269, 286, 289, 290, 370, 375, 382, 383, 384, 388], "y3d": [22, 76, 161, 269, 286, 289, 290, 370, 375, 383, 384, 388], "z3d": [22, 76, 161, 269, 286, 289, 290, 370, 375, 383, 384, 388], "diam3d": [22, 47, 76, 120, 134, 161, 261, 269, 289, 290, 382, 383, 384, 388], "syn": [22, 38, 148, 149, 150, 154, 217, 242, 276, 277, 278, 280, 282, 340, 346, 373, 383, 384, 385], "e0": [22, 37, 110, 111], "expsyn": [22, 37, 38, 77, 78, 83, 104, 148, 178, 217, 224, 239, 275, 276, 307, 340, 346, 353, 373, 383, 384, 388], "i1": [22, 37, 75, 97, 110, 111, 148, 193, 276, 322], "50": [22, 28, 29, 37, 38, 41, 46, 53, 58, 97, 102, 146, 156, 187, 196, 197, 201, 208, 210, 226, 227, 228, 230, 249, 274, 276, 284, 290, 325, 326, 330, 337, 339, 355, 356, 357, 359, 362, 373, 375, 377, 383, 384, 385, 387, 388], "b0": [22, 37], "52": [22, 155, 239, 249, 276, 283, 387], "se1": [22, 37], "47": [22, 87, 153, 249, 281, 286, 368, 370, 382, 387, 388], "si2": [22, 37], "am": [23, 35, 153, 156, 202, 217, 242, 281, 283, 284, 307, 331, 346, 385, 387], "nhost": [23, 131, 155, 156, 222, 240, 258, 280, 283, 284, 351, 385], "approxim": [24, 36, 39, 41, 61, 89, 120, 128, 149, 155, 158, 197, 217, 249, 255, 277, 283, 286, 287, 291, 326, 340, 346, 378, 382, 388], "initializaton": 24, "natur": [24, 25, 29, 46, 54, 59, 76, 86, 91, 95, 114, 115, 121, 125, 149, 150, 168, 193, 197, 226, 228, 246, 249, 252, 277, 278, 287, 297, 322, 326, 328, 355, 357, 379, 380, 384], "rest": [24, 33, 38, 43, 47, 61, 63, 76, 81, 91, 104, 137, 148, 149, 165, 168, 181, 249, 265, 276, 277, 294, 297, 310, 368, 371, 373, 382, 388], "somat": [24, 25, 31, 45, 61, 75, 91, 97, 249], "sphere": [24, 61, 105, 161, 290, 375, 382], "cylind": [24, 61, 103, 161, 290, 371, 382, 388], "matter": [24, 25, 89, 91, 98, 114, 115, 119, 131, 155, 160, 217, 249, 258, 283, 289, 337, 346, 371], "v_init": [24, 91, 221, 227, 326, 350, 353, 356], "uniform": [24, 29, 43, 61, 76, 91, 155, 161, 196, 197, 224, 249, 283, 290, 325, 326, 353, 368, 376], "drift": [24, 29, 40], "nonuniform": [24, 46, 63, 121, 249, 371], "permiss": [24, 379], "custom_initi": 24, "cellbuild": [24, 26, 27, 30, 31, 33, 34, 42, 43, 46, 47, 60, 63, 75, 78, 81, 85, 91, 98, 99, 100, 101, 103, 105, 116, 119, 120, 121, 136, 168, 264, 297], "anatomi": [24, 25, 45, 46, 60, 71, 82, 84, 121, 249], "compartment": [24, 37, 45, 59, 61, 131, 161, 207, 249, 258, 290, 336], "\u00b5m": [24, 27, 38, 40, 41, 45, 48, 59, 61, 105, 114, 122, 286, 369, 370, 373, 377, 382], "diamet": [24, 33, 38, 40, 41, 45, 46, 47, 60, 61, 62, 81, 105, 120, 129, 131, 134, 160, 161, 163, 197, 231, 234, 249, 256, 258, 261, 286, 289, 290, 326, 360, 363, 371, 373, 382, 383, 388], "160": [24, 43, 45, 61, 62, 63, 103, 105, 187, 249], "\u00b5f": [24, 45, 61, 62, 103, 105], "rm": [24, 25, 45, 62, 91, 191, 216, 228, 320, 345, 357], "000": [24, 45, 53, 62, 121, 155, 226, 283, 355], "session": [24, 26, 27, 31, 37, 39, 45, 46, 47, 52, 60, 62, 77, 78, 81, 82, 89, 91, 94, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 122, 124, 128, 129, 138, 139, 142, 151, 165, 168, 170, 172, 178, 182, 199, 207, 220, 224, 226, 234, 247, 251, 255, 256, 266, 267, 270, 279, 294, 297, 299, 301, 307, 311, 328, 336, 349, 353, 355, 363, 393], "runcontrol": [24, 30, 31, 32, 37, 43, 45, 61, 67, 71, 91, 96, 97, 129, 196, 220, 224, 256, 349, 353], "axi": [24, 25, 27, 30, 31, 40, 47, 50, 61, 65, 68, 73, 74, 75, 76, 81, 84, 88, 89, 90, 91, 100, 118, 121, 122, 128, 129, 133, 196, 197, 224, 226, 227, 228, 230, 231, 249, 255, 256, 260, 325, 326, 334, 353, 355, 356, 357, 359, 360, 362, 375, 383, 384, 388], "pictur": [24, 37, 65, 84, 122, 125, 142, 155, 224, 231, 252, 270, 353, 360, 379], "drastic": 24, "init_ss": 24, "ss_init": 24, "t0": [24, 148, 214, 217, 222, 276, 346, 351, 372], "1e2": 24, "025": [24, 28, 67, 89, 91, 159, 249, 288, 344, 368], "finiti": [24, 52, 58, 64, 72, 76, 91, 95, 114, 129, 143, 144, 146, 148, 149, 150, 154, 155, 161, 196, 197, 200, 216, 217, 220, 221, 222, 239, 247, 256, 271, 272, 274, 276, 277, 278, 282, 283, 286, 290, 325, 326, 329, 344, 345, 346, 349, 350, 351, 353, 362, 367, 368, 369, 370, 372, 373, 375, 377, 378, 382, 383, 384, 385, 388], "far": [24, 25, 29, 36, 37, 91, 128, 129, 133, 155, 156, 161, 208, 238, 239, 255, 256, 260, 283, 284, 290, 337, 375, 379, 380, 384, 385], "jump": [24, 33, 40, 76, 90, 249, 379, 380], "back": [24, 27, 28, 32, 45, 50, 51, 52, 61, 62, 65, 69, 75, 79, 89, 90, 91, 94, 99, 100, 103, 109, 114, 115, 118, 129, 150, 155, 159, 169, 186, 208, 217, 222, 228, 231, 242, 243, 249, 256, 278, 283, 286, 288, 298, 315, 326, 337, 346, 351, 357, 360, 372, 375, 379, 383, 386], "old_cvode_st": 24, "fals": [24, 28, 36, 38, 39, 54, 58, 59, 76, 181, 191, 197, 200, 201, 207, 208, 216, 244, 282, 283, 286, 290, 292, 297, 304, 307, 310, 320, 321, 326, 329, 330, 336, 337, 340, 345, 346, 349, 361, 368, 370, 371, 382, 387], "fadvanc": [24, 76, 129, 131, 143, 144, 146, 148, 149, 150, 155, 160, 196, 197, 215, 217, 220, 221, 222, 224, 227, 256, 258, 271, 272, 274, 276, 277, 278, 283, 289, 325, 326, 344, 346, 349, 350, 351, 353, 356, 368, 375, 377, 388], "inact": [24, 154, 282, 283, 346], "re_init": [24, 44, 91, 158, 217, 220, 221, 269, 286, 346, 349, 350, 353, 368], "fcurrent": [24, 91, 131, 220, 221, 258, 349, 350, 353, 388], "frecord_init": [24, 91, 220, 221, 349, 350, 353, 388], "fih": [24, 44, 64, 71, 72, 159, 220, 288, 349], "finitializehandl": [24, 44, 64, 71, 72, 135, 155, 159, 221, 222, 263, 283, 288, 350, 351, 370, 388], "exptl": 24, "rig": [24, 43, 61, 66, 71, 91], "satisfi": [24, 88, 121, 228, 286, 357, 368, 373, 385, 387], "criterion": [24, 25, 121, 128, 155, 197, 255, 283, 326], "flexibl": [25, 32, 71, 76, 82, 122, 156, 161, 216, 222, 249, 284, 345, 379, 383, 384], "imped": [25, 76, 91, 121, 123, 126, 127, 130, 135, 233, 249, 250, 253, 254, 257, 263, 362, 388], "zn": [25, 249], "zc": 25, "remot": [25, 43, 153, 239, 249, 281, 379], "ratio": [25, 76, 86, 94, 121, 131, 189, 226, 228, 234, 249, 257, 258, 318, 355, 357, 363], "k": [25, 36, 48, 76, 114, 115, 118, 148, 149, 150, 155, 156, 158, 189, 199, 228, 239, 249, 276, 277, 278, 283, 284, 286, 287, 318, 326, 328, 357, 368, 370, 373, 375, 378, 379, 387, 388], "downstream": [25, 108, 379], "upstream": [25, 379], "opposit": [25, 65, 103, 131, 161, 228, 231, 258, 290, 357, 360, 371], "direct": [25, 40, 50, 99, 109, 125, 145, 148, 154, 155, 158, 185, 207, 208, 213, 226, 228, 231, 234, 247, 248, 249, 252, 271, 273, 276, 282, 283, 286, 288, 314, 326, 336, 337, 339, 342, 346, 355, 357, 360, 363, 375, 379], "attenu": [25, 125, 126, 127, 224, 249, 252, 253, 254, 353], "distanc": [25, 27, 36, 41, 43, 45, 63, 76, 84, 100, 105, 121, 125, 126, 133, 155, 161, 192, 224, 226, 233, 234, 249, 252, 253, 260, 269, 283, 289, 290, 321, 353, 355, 362, 363, 369, 371, 388], "transform": [25, 121, 125, 197, 224, 249, 252, 326, 353, 378], "led": 25, "discoveri": [25, 249], "citat": 25, "classic": [25, 69, 71, 158, 161, 242, 249, 286, 290, 370], "infinit": [25, 76, 148, 155, 161, 178, 192, 276, 283, 290, 307, 321], "cylindr": [25, 41, 61, 149, 249, 277, 382], "cabl": [25, 33, 38, 42, 61, 76, 98, 119, 121, 131, 149, 151, 161, 249, 258, 277, 279, 290, 388], "regardless": [25, 33, 71, 83, 94, 95, 149, 155, 193, 217, 277, 283, 286, 289, 322, 343, 346, 375], "cellular": [25, 33, 81, 121, 249], "wherea": [25, 52, 149, 150, 184, 197, 201, 226, 249, 277, 278, 286, 313, 326, 330, 355], "constraint": [25, 53, 88, 89, 148, 155, 249, 276, 283], "preserv": [25, 93, 94, 103, 122, 154, 156, 160, 161, 168, 193, 249, 282, 284, 289, 290, 297, 322, 379], "obscur": [25, 65, 75, 134, 239, 261], "neurondemo": [25, 50, 62, 76, 208, 234, 242, 337, 363], "pyramid": [25, 40, 41, 43, 47, 50, 59, 61, 62, 91, 156, 161, 234, 249, 284, 290, 363, 375, 387], "zoom": [25, 44, 50, 62, 65, 91, 197, 226, 228, 326, 355, 357, 382, 388], "vantag": 25, "screen": [25, 42, 47, 50, 61, 62, 65, 71, 76, 81, 94, 98, 105, 116, 119, 122, 139, 167, 168, 169, 170, 172, 174, 175, 178, 181, 185, 197, 201, 202, 207, 218, 223, 224, 226, 228, 229, 230, 231, 234, 249, 262, 267, 296, 297, 298, 299, 301, 303, 304, 307, 310, 314, 326, 330, 331, 336, 337, 347, 352, 353, 355, 357, 358, 359, 360, 363, 387, 388], "studi": [25, 71, 85, 249, 386, 388], "electr": [25, 33, 41, 88, 121, 148, 155, 161, 249, 276, 283, 290, 371], "suppos": [25, 42, 46, 71, 75, 76, 89, 91, 95, 97, 98, 100, 114, 115, 119, 144, 149, 150, 156, 185, 187, 197, 217, 226, 272, 277, 278, 284, 314, 316, 326, 346, 355, 367, 371, 374, 375, 378, 379], "signal": [25, 41, 52, 76, 95, 155, 161, 213, 228, 249, 283, 290, 342, 357, 368, 371, 382, 392], "electrod": [25, 26, 30, 33, 71, 84, 91, 121, 128, 131, 136, 141, 148, 168, 249, 255, 258, 264, 269, 276, 297, 383], "necessarili": [25, 76, 154, 155, 159, 161, 163, 197, 226, 283, 286, 288, 290, 292, 326, 355, 370], "clamp": [25, 26, 28, 31, 33, 38, 44, 45, 61, 66, 82, 84, 88, 121, 122, 125, 128, 131, 139, 142, 146, 148, 217, 220, 227, 249, 252, 255, 258, 267, 270, 274, 276, 293, 298, 326, 344, 346, 349, 356, 365, 382, 388], "fluctuat": [25, 95, 249], "vm": [25, 33, 45, 47, 75, 91, 92, 94, 97, 122], "ic": [25, 59, 247, 276, 282, 346, 362], "regul": [25, 249, 371, 372], "situat": [25, 75, 76, 93, 121, 149, 155, 197, 220, 277, 283, 286, 307, 326, 349, 379], "mind": [25, 61, 155, 216, 248, 345, 379, 380], "accur": [25, 40, 129, 148, 149, 154, 155, 160, 161, 185, 192, 197, 217, 224, 249, 256, 276, 277, 282, 287, 289, 290, 314, 321, 326, 346, 353, 387], "reflect": [25, 32, 65, 96, 120, 142, 148, 150, 151, 161, 178, 226, 234, 249, 270, 276, 278, 279, 286, 290, 307, 355, 363, 373, 379, 380], "effect": [25, 34, 40, 41, 45, 46, 52, 59, 63, 65, 73, 81, 82, 91, 95, 109, 121, 122, 131, 144, 149, 150, 155, 156, 158, 161, 164, 170, 171, 172, 178, 197, 207, 208, 217, 218, 220, 226, 229, 235, 238, 239, 242, 249, 258, 262, 272, 277, 278, 283, 284, 286, 290, 294, 299, 300, 301, 324, 336, 337, 346, 347, 349, 358, 364, 368, 370, 371, 379, 380, 382, 383, 386, 388], "elsewher": [25, 41, 47, 81, 91, 98, 119, 150, 278, 369], "captur": [25, 40, 51, 71, 91, 95, 197, 207, 238, 239, 249, 326, 336], "affect": [25, 31, 36, 39, 40, 41, 45, 46, 59, 65, 71, 76, 83, 91, 95, 149, 155, 158, 161, 193, 194, 197, 201, 226, 232, 247, 249, 277, 283, 286, 290, 321, 322, 323, 326, 330, 355, 361, 367, 371, 379, 380], "spread": [25, 249], "tell": [25, 29, 46, 52, 59, 61, 75, 87, 89, 91, 94, 99, 100, 118, 122, 134, 149, 150, 155, 156, 184, 226, 227, 243, 249, 261, 277, 278, 283, 284, 312, 313, 356, 361, 370, 371, 382, 383, 387, 388], "particularli": [25, 53, 121, 122, 149, 216, 220, 239, 242, 277, 345, 349, 371, 379], "mous": [25, 31, 37, 46, 47, 50, 61, 65, 74, 75, 76, 79, 80, 81, 89, 91, 94, 100, 105, 106, 107, 108, 110, 126, 128, 139, 142, 151, 168, 169, 172, 173, 175, 218, 226, 228, 231, 234, 235, 249, 253, 255, 267, 270, 279, 297, 298, 301, 302, 304, 347, 355, 357, 360, 363, 364], "middl": [25, 27, 31, 32, 61, 65, 71, 74, 75, 76, 91, 99, 107, 110, 118, 125, 126, 127, 139, 142, 161, 174, 197, 218, 220, 224, 226, 228, 229, 249, 252, 253, 254, 267, 270, 290, 303, 326, 347, 349, 353, 355, 357, 358, 375, 383, 388], "swap": [25, 127, 254, 387], "item": [25, 27, 31, 32, 37, 42, 45, 46, 47, 61, 68, 75, 76, 80, 81, 84, 89, 91, 94, 98, 99, 102, 104, 107, 118, 119, 125, 126, 127, 128, 129, 139, 142, 150, 151, 155, 156, 158, 168, 169, 172, 173, 176, 178, 193, 197, 199, 207, 208, 217, 218, 224, 226, 227, 228, 231, 235, 243, 247, 249, 252, 253, 254, 255, 256, 267, 270, 278, 279, 283, 284, 297, 298, 301, 302, 305, 307, 322, 326, 328, 336, 337, 340, 346, 347, 353, 355, 356, 357, 360, 364, 372, 382, 385, 387, 388], "zin": 25, "ztransfer": 25, "vmeasur": 25, "vinject": 25, "reciproc": [25, 29, 151, 155, 249, 279, 282, 283], "blue": [25, 42, 46, 47, 65, 79, 81, 89, 91, 94, 105, 110, 121, 122, 127, 128, 139, 142, 197, 226, 230, 232, 235, 248, 249, 254, 255, 267, 270, 326, 355, 359, 361, 364, 382, 383], "dot": [25, 46, 105, 110, 126, 127, 139, 141, 142, 160, 197, 208, 235, 249, 253, 254, 267, 269, 270, 289, 326, 327, 337, 364, 379, 380], "bottom": [25, 29, 42, 47, 62, 81, 91, 94, 99, 109, 125, 139, 169, 172, 175, 192, 226, 228, 243, 252, 267, 298, 301, 304, 321, 355, 357, 375, 382], "dc": [25, 91, 249], "nearli": [25, 121, 149, 277], "redraw": [25, 125, 226, 234, 252, 355, 363], "sensit": [25, 36, 118, 121, 131, 149, 155, 249, 258, 277, 283], "why": [25, 32, 41, 46, 47, 61, 75, 81, 82, 89, 91, 95, 97, 114, 115, 120, 122, 155, 239, 283, 324, 382, 385, 388], "known": [25, 41, 54, 76, 103, 131, 146, 155, 156, 166, 216, 226, 239, 258, 274, 276, 283, 284, 295, 311, 345, 368, 379, 382, 385, 387], "kind": [25, 28, 29, 32, 44, 45, 49, 53, 61, 76, 77, 78, 88, 91, 103, 112, 114, 115, 139, 148, 149, 150, 168, 169, 197, 224, 239, 242, 249, 267, 276, 277, 278, 297, 298, 353, 379], "analys": [25, 121, 249], "region": [25, 59, 89, 91, 124, 129, 141, 200, 230, 239, 249, 251, 256, 269, 329, 351, 359, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 388], "editor": [25, 31, 32, 42, 46, 65, 71, 76, 87, 98, 102, 103, 119, 122, 124, 126, 128, 129, 139, 149, 170, 171, 175, 177, 178, 197, 207, 221, 227, 229, 231, 235, 251, 253, 255, 256, 267, 277, 299, 300, 304, 306, 307, 326, 336, 350, 356, 358, 360, 364, 393], "ln": [25, 86, 125, 155, 252, 283], "vin": [25, 125, 126, 193, 252, 253, 322], "vout": [25, 125, 126, 193, 252, 253, 322], "green": [25, 47, 65, 81, 168, 226, 230, 232, 249, 297, 355, 359, 361, 382], "horizont": [25, 50, 65, 89, 90, 99, 122, 139, 168, 178, 228, 249, 267, 297, 307, 357], "closest": [25, 126, 253, 346, 379, 380, 388], "somatopet": 25, "rapidli": [25, 90, 91, 159, 218, 249, 288, 347, 379, 380], "steepest": [25, 28], "somatofug": 25, "magnitud": [25, 83, 89, 91, 121, 156, 197, 217, 239, 249, 283, 284, 326, 346], "resist": [25, 33, 38, 71, 114, 131, 155, 161, 239, 249, 258, 283, 290, 382, 383, 384, 388], "homogen": [25, 84, 235, 249, 364], "spec": [25, 32, 37, 139, 161, 220, 225, 267, 290, 349, 354], "mechtyp": [25, 136, 264], "axon": [25, 26, 30, 33, 38, 41, 43, 46, 47, 59, 61, 62, 63, 81, 103, 122, 148, 149, 150, 160, 163, 164, 173, 199, 201, 202, 208, 215, 217, 249, 276, 277, 278, 289, 293, 302, 328, 330, 331, 337, 344, 346, 373, 383, 387, 388], "g_pa": [25, 37, 47, 62, 84, 91, 103, 129, 148, 197, 199, 256, 276, 388], "0001": [25, 91, 129, 146, 256, 274], "10000": [25, 91, 168, 194, 262, 297, 323], "00002": [25, 249], "50000": [25, 52, 197, 326], "press": [25, 32, 36, 37, 50, 61, 71, 80, 91, 94, 105, 121, 128, 129, 137, 139, 142, 168, 172, 176, 178, 184, 196, 207, 217, 218, 221, 223, 224, 226, 227, 228, 231, 234, 235, 239, 247, 248, 249, 255, 256, 265, 267, 270, 297, 301, 305, 307, 313, 336, 346, 347, 350, 352, 353, 355, 356, 357, 360, 363, 364], "cytoplasm": [25, 91, 114, 121, 249], "axial": [25, 131, 161, 249, 258, 290, 346, 382, 383, 384, 388], "halv": [25, 31], "ultim": [25, 52, 89, 382], "extens": [25, 31, 47, 71, 76, 88, 95, 121, 122, 131, 135, 141, 145, 147, 149, 185, 200, 208, 224, 230, 234, 242, 249, 258, 263, 269, 273, 275, 277, 287, 314, 326, 329, 353, 359, 363, 386, 387], "approach": [25, 29, 38, 39, 71, 75, 85, 105, 121, 148, 149, 197, 217, 244, 249, 276, 277, 290, 326, 341, 346, 368, 370, 373, 375, 378, 379, 380, 382, 385, 392, 393], "let": [25, 27, 30, 36, 41, 52, 61, 62, 63, 65, 73, 84, 89, 91, 99, 100, 110, 118, 121, 149, 156, 196, 201, 217, 277, 284, 325, 330, 346, 367, 369, 372, 373, 374, 375, 379, 382, 383, 384, 387, 388], "neurit": [25, 40, 47, 81, 121, 249], "abscissa": [25, 126, 226, 230, 253, 355, 359], "box": [25, 27, 31, 37, 42, 47, 61, 65, 78, 81, 87, 89, 91, 94, 98, 119, 124, 129, 155, 168, 179, 192, 197, 224, 226, 228, 231, 234, 244, 251, 256, 283, 286, 297, 307, 308, 321, 326, 353, 355, 357, 360, 363, 375], "upper": [25, 31, 61, 65, 71, 81, 125, 139, 170, 193, 220, 226, 230, 249, 252, 267, 322, 349, 355, 359, 375, 385], "trace": [25, 46, 68, 76, 87, 89, 91, 94, 122, 166, 197, 239, 249, 295, 326, 344, 384], "tuft": [25, 249], "yourself": [25, 35, 39, 44, 61, 91, 153, 193, 207, 281, 322, 336, 385, 387, 388], "psp": [25, 249], "efficaci": [25, 249], "declin": 25, "aren": [25, 32, 42, 61, 73, 89, 236], "word": [25, 42, 61, 94, 122, 150, 187, 197, 201, 228, 278, 298, 316, 326, 330, 357], "therefor": [25, 29, 32, 39, 52, 91, 148, 149, 151, 153, 154, 155, 161, 164, 165, 169, 178, 181, 185, 193, 197, 217, 222, 226, 228, 239, 276, 277, 279, 281, 282, 283, 286, 290, 294, 298, 307, 310, 314, 326, 339, 346, 351, 355, 357, 371, 379, 380, 383, 388], "predict": [25, 239, 249], "predictor": [25, 249], "phenomenon": [25, 75], "david": [25, 193, 249, 322], "jaff": [25, 249], "variat": [25, 29, 60, 72, 82, 95, 100, 102, 120, 124, 149, 150, 155, 220, 249, 251, 277, 278, 349], "doesn": [25, 27, 28, 29, 31, 46, 75, 76, 82, 87, 91, 96, 105, 122, 148, 149, 155, 160, 193, 228, 236, 244, 276, 277, 283, 289, 322, 357, 379, 382], "paper": [25, 35, 40, 46, 47, 49, 95, 122, 129, 158, 172, 196, 223, 228, 256, 286, 301, 325, 352, 357, 375], "perhap": [25, 45, 76, 121, 155, 156, 159, 197, 283, 284, 286, 288, 326, 379], "intuit": [25, 39, 84, 91, 121, 148, 197, 249, 276, 326, 372, 383], "represent": [25, 31, 43, 62, 71, 76, 96, 121, 185, 197, 249, 314, 326, 371, 382, 388], "orient": [25, 65, 68, 76, 99, 121, 149, 161, 180, 228, 231, 249, 269, 277, 289, 290, 309, 312, 337, 346, 357, 360, 386, 388], "adjac": [25, 89, 91, 149, 161, 197, 217, 228, 277, 290, 326, 346, 357, 368, 388], "neuromorph": [25, 125, 249, 252], "render": [25, 81, 125, 225, 249, 252, 354, 369, 370, 373, 384], "warp": 25, "proxim": [25, 27, 37, 47, 81, 99, 249], "degre": [25, 40, 65, 76, 102, 121, 158, 220, 226, 231, 249, 286, 287, 349, 355, 360], "farther": [25, 228, 357], "apart": [25, 29, 76, 99, 121, 122, 131, 178, 187, 258, 307, 316, 373, 382], "overal": [25, 84, 91, 249], "form": [25, 38, 39, 41, 49, 60, 65, 76, 90, 91, 114, 115, 121, 124, 128, 129, 133, 146, 148, 149, 150, 154, 155, 158, 160, 161, 164, 168, 172, 175, 178, 181, 182, 184, 186, 188, 190, 193, 197, 199, 200, 201, 204, 208, 217, 218, 220, 226, 227, 228, 230, 233, 242, 249, 251, 255, 256, 260, 274, 276, 277, 278, 282, 283, 286, 289, 290, 297, 299, 301, 304, 307, 310, 311, 313, 315, 317, 319, 322, 326, 328, 329, 330, 333, 337, 346, 347, 349, 355, 356, 357, 359, 362, 363, 368, 371, 372, 378, 379, 385, 388], "easi": [25, 28, 42, 45, 75, 76, 79, 83, 89, 91, 95, 98, 100, 118, 119, 121, 131, 150, 159, 228, 246, 258, 278, 283, 288, 357, 365, 382], "identifi": [25, 28, 32, 39, 42, 47, 59, 65, 81, 84, 98, 119, 126, 129, 144, 155, 164, 196, 249, 253, 256, 272, 283, 286, 293, 305, 325, 336, 368, 371, 379, 382, 385, 388], "visual": [25, 27, 38, 61, 87, 91, 161, 245, 249, 286, 290, 376, 382, 383, 388, 393], "repres": [25, 39, 40, 42, 52, 54, 71, 94, 98, 105, 119, 121, 125, 158, 160, 161, 168, 193, 197, 199, 224, 228, 252, 286, 289, 290, 322, 326, 328, 353, 357, 371, 373, 374, 379, 380, 383, 387, 388], "logarithm": [25, 76, 86, 89, 191, 196, 197, 249, 287, 320, 325, 326], "calibr": [25, 47], "signifi": [25, 89, 134, 150, 197, 226, 261, 278, 355], "fold": [25, 197, 217, 249, 326, 346], "extent": [25, 91, 155, 249, 379], "carneval": [25, 35, 71, 83, 84, 95, 120, 121, 155, 197, 248, 249, 283, 326, 379, 385], "1995": [25, 121, 249], "tsai": [25, 249], "claiborn": [25, 249], "brown": [25, 217, 226, 230, 249, 346, 355, 359, 387], "neural": [25, 40, 47, 76, 151, 248, 249, 279, 379, 388], "vol": [25, 196, 248, 325], "tesauro": [25, 249], "touretzki": [25, 249], "leen": [25, 249], "cambridg": [25, 121, 248, 249], "ma": [25, 95, 114, 121, 132, 148, 178, 217, 248, 249, 259, 276, 346, 373, 375], "mit": [25, 121, 122, 248, 249], "p": [25, 27, 38, 40, 43, 47, 52, 58, 63, 64, 72, 76, 88, 99, 100, 114, 115, 121, 122, 139, 172, 178, 185, 186, 196, 197, 201, 208, 214, 220, 226, 228, 230, 232, 234, 239, 244, 245, 248, 249, 267, 276, 301, 314, 315, 325, 326, 330, 333, 337, 349, 357, 359, 361, 363, 365, 370, 379, 382, 383, 387, 388], "69": [25, 248, 249, 383, 387], "76": [25, 36, 91, 248, 249, 276, 383, 387], "nip": 25, "cc": [25, 368], "945": 25, "pdf": [25, 122, 196, 248, 249, 325, 372], "influenc": [25, 46, 249], "journal": [25, 40, 47, 95, 121, 248, 249, 372, 379, 385], "neurophysiologi": [25, 121, 248, 249], "82": [25, 249, 383, 387], "3268": [25, 249], "3285": [25, 249], "1999": [25, 121, 249, 372], "doi": [25, 40, 46, 47, 88, 90, 95, 248, 249, 372], "1152": [25, 90, 248, 249], "jn": [25, 90, 248, 249], "summer": [26, 71, 121, 283], "atlanta": 26, "georgia": 26, "lipid": [26, 31], "bilay": [26, 31], "squid": [26, 30, 122, 149, 249, 277, 373, 382, 388, 393], "compart": [26, 29, 33, 38, 41, 48, 105, 114, 115, 121, 122, 129, 131, 138, 154, 158, 160, 161, 208, 224, 249, 256, 258, 266, 282, 286, 289, 290, 337, 344, 353, 368, 375, 382], "hhk": [26, 48], "modeldb": [26, 35, 38, 49, 77, 78, 83, 93, 95, 121, 237, 249, 375, 388, 391], "neuroinformat": [26, 84, 248, 249], "inhomogen": [26, 46, 61, 249], "circuit": [26, 38, 71, 121, 148, 161, 249, 276, 290, 391], "embarrassingli": [26, 121, 155, 283], "multithread": [26, 150, 249, 278, 375], "paralel": [26, 131, 150, 278], "hopfield": [26, 36], "brodi": [26, 36, 249], "gatewai": [26, 237, 249], "nsg": 26, "portal": [26, 249, 379], "electroton": [26, 82, 91, 121, 249], "metric": [27, 43, 63, 100, 239, 249], "govern": [27, 43, 61, 63, 66, 93, 101, 118, 121, 149, 150, 249, 277, 278, 286, 372], "intermedi": [27, 39, 71, 129, 224, 231, 256, 353, 360, 379], "subsetdomainiter": [27, 63], "parameter": [27, 60, 82, 89, 99, 124, 197, 249, 251, 326, 378, 384], "name_x": 27, "cellbuid": 27, "root": [27, 39, 46, 61, 81, 84, 86, 99, 118, 126, 148, 151, 155, 156, 161, 162, 163, 191, 197, 208, 233, 244, 249, 253, 276, 279, 283, 284, 287, 289, 290, 291, 292, 320, 326, 337, 346, 362, 379], "slider": [27, 99, 168, 178, 218, 228, 297, 307, 347, 357], "forth": [27, 52, 94, 99, 100, 208, 337], "boundari": [27, 40, 65, 91, 129, 148, 161, 197, 217, 230, 256, 276, 286, 290, 326, 346, 359, 371, 382], "canva": [27, 31, 32, 37, 47, 61, 81, 91, 99, 107, 226, 228, 355, 357], "nnn": [27, 99], "cursor": [27, 31, 47, 50, 61, 74, 75, 76, 80, 81, 89, 91, 94, 100, 104, 105, 107, 108, 110, 172, 228, 230, 301, 357, 359], "nearest": [27, 61, 65, 100, 105, 160, 182, 221, 228, 231, 232, 233, 234, 287, 289, 311, 350, 357, 360, 361, 362, 363], "offer": [27, 40, 61, 71, 81, 94, 98, 100, 119, 121, 367, 368, 371, 388, 390, 393], "radial": [27, 63, 99, 121, 149, 249, 277, 286, 368], "euclidian": 27, "plane": [27, 63, 99, 121, 226, 227, 228, 231, 234, 355, 356, 357, 360, 363, 375, 383], "orthogon": [27, 50, 99, 193, 322], "origin": [27, 28, 29, 36, 40, 43, 45, 54, 59, 61, 63, 65, 76, 84, 91, 99, 128, 131, 146, 148, 149, 155, 158, 161, 181, 184, 186, 196, 197, 216, 218, 226, 228, 230, 231, 233, 234, 242, 247, 249, 255, 258, 274, 276, 277, 283, 286, 290, 310, 313, 315, 325, 326, 345, 347, 355, 357, 359, 360, 362, 363, 373, 379, 383, 388], "intermezzo": 27, "own": [27, 40, 45, 47, 61, 63, 68, 71, 76, 81, 85, 87, 88, 91, 95, 98, 102, 119, 120, 121, 148, 149, 154, 155, 156, 168, 197, 208, 217, 222, 226, 228, 231, 242, 247, 276, 277, 282, 283, 284, 297, 326, 337, 346, 351, 355, 357, 360, 372, 374, 379, 382, 385, 393], "care": [27, 41, 121, 148, 149, 155, 161, 184, 193, 197, 200, 217, 239, 276, 277, 283, 290, 313, 326, 329, 346, 379, 385], "beneath": [27, 61, 75, 99, 184, 313], "paramt": 27, "boltzmann": [27, 100, 318], "ramp": [27, 100, 230, 249, 359], "confirm": [27, 28, 53, 75, 89, 91, 122, 155, 249, 283, 383], "ll": [27, 30, 31, 45, 46, 47, 61, 62, 69, 71, 77, 78, 81, 89, 91, 95, 97, 109, 111, 154, 247, 282, 367, 369, 372, 378, 382, 383, 384, 388], "although": [28, 29, 39, 66, 76, 89, 91, 114, 115, 121, 122, 139, 146, 150, 151, 154, 161, 170, 197, 207, 217, 242, 267, 274, 278, 279, 290, 299, 326, 336, 346, 368, 379, 382], "trivial": [28, 76, 81, 131, 159, 258, 288, 379], "valuabl": [28, 379], "familiar": [28, 32, 51, 149, 207, 277, 336, 337, 385, 388], "ditto": 28, "5300": 28, "high": [28, 29, 33, 52, 71, 73, 75, 76, 84, 91, 95, 121, 128, 149, 155, 156, 168, 178, 196, 197, 207, 217, 231, 232, 249, 255, 277, 283, 284, 297, 307, 325, 326, 336, 346, 360, 361, 368, 371, 379, 382, 385], "precis": [28, 33, 39, 65, 76, 86, 90, 148, 149, 164, 181, 186, 191, 192, 197, 217, 226, 230, 249, 262, 276, 277, 310, 315, 320, 321, 326, 346, 355, 359, 379], "notat": [28, 114, 115, 141, 143, 149, 158, 160, 161, 193, 197, 208, 269, 271, 277, 289, 326, 337], "3e3": 28, "themselv": [28, 54, 121, 155, 197, 217, 242, 243, 283, 286, 326, 346, 373], "chosen": [28, 29, 65, 69, 98, 111, 119, 128, 131, 144, 149, 155, 165, 174, 207, 218, 224, 226, 228, 231, 255, 258, 272, 277, 294, 303, 336, 347, 353, 355, 357, 360, 378, 382, 385], "vec": [28, 29, 133, 145, 154, 155, 181, 193, 194, 196, 197, 201, 202, 208, 217, 232, 247, 273, 282, 283, 310, 322, 323, 325, 326, 330, 331, 334, 337, 346, 361, 388], "xo": [28, 217], "yo": 28, "capit": [28, 197, 226, 326, 355, 387], "oh": [28, 71, 379], "redeclar": [28, 201, 330], "destroi": [28, 29, 32, 42, 65, 76, 90, 98, 119, 128, 139, 142, 145, 151, 154, 155, 156, 159, 160, 161, 168, 169, 172, 184, 188, 196, 197, 202, 205, 218, 228, 232, 234, 255, 267, 270, 273, 279, 282, 283, 284, 288, 289, 290, 297, 298, 301, 313, 317, 325, 326, 331, 334, 347, 357, 361, 363], "gone": [28, 32], "foo": [28, 82, 93, 150, 159, 202, 208, 246, 278, 288, 311, 331, 337, 343, 387], "objectvar": [28, 67, 76, 151, 154, 168, 180, 199, 226, 228, 233, 234, 297, 309, 328, 355, 357, 363, 388], "had": [28, 37, 41, 61, 73, 89, 121, 128, 148, 150, 154, 155, 164, 196, 207, 213, 216, 220, 255, 276, 278, 282, 283, 289, 325, 328, 336, 342, 345, 349, 387, 388], "statu": [28, 68, 185, 207, 242, 243, 244, 248, 249, 314, 336], "objarr": 28, "pile": [28, 122], "maintain": [28, 59, 72, 76, 93, 149, 197, 199, 220, 226, 228, 244, 249, 277, 326, 328, 349, 355, 357, 359, 371, 379, 380, 382], "ie": [28, 114, 115, 129, 131, 133, 148, 149, 153, 154, 155, 159, 161, 168, 169, 177, 193, 197, 201, 207, 208, 213, 217, 224, 226, 228, 234, 256, 258, 260, 276, 277, 281, 282, 283, 288, 290, 297, 298, 306, 322, 326, 330, 336, 337, 342, 346, 353, 355, 357, 363], "reiniti": [28, 44, 158, 286, 368, 370], "derefer": [28, 208, 337], "though": [28, 29, 35, 73, 75, 76, 155, 156, 160, 193, 197, 213, 242, 244, 283, 284, 289, 293, 322, 325, 326, 342, 368, 372, 379, 380, 382, 388], "mystr": [28, 307], "hello": [28, 32, 35, 37, 76, 153, 155, 181, 197, 201, 202, 208, 281, 283, 307, 310, 316, 326, 330, 331, 337, 340, 343, 346, 355, 387], "strdef": [28, 76, 151, 155, 160, 164, 167, 168, 169, 172, 174, 175, 178, 181, 182, 184, 197, 199, 201, 202, 204, 208, 210, 211, 212, 213, 228, 279, 283, 293, 301, 303, 304, 310, 311, 330, 331, 337, 340, 341, 342, 357, 388], "tab": [28, 46, 89, 94, 186, 187, 224, 315, 316, 353], "newlin": [28, 76, 89, 184, 186, 187, 197, 201, 224, 230, 313, 315, 316, 326, 330, 353, 359], "overwrot": 28, "comparison": [28, 76, 122, 178, 181, 195, 197, 248, 249, 307, 310, 324, 326], "AND": [28, 76, 155, 165, 197, 283, 294, 326, 373], "OR": [28, 76, 217, 346], "NOT": [28, 87, 114, 115, 122, 148, 150, 154, 155, 156, 159, 163, 169, 172, 178, 197, 217, 234, 276, 278, 282, 283, 284, 288, 294, 298, 301, 307, 326, 346, 363, 387], "paren": 28, "sin": [28, 52, 76, 86, 146, 155, 158, 161, 168, 181, 186, 191, 197, 201, 213, 226, 227, 230, 274, 283, 286, 287, 290, 297, 310, 315, 320, 326, 327, 330, 334, 342, 355, 356, 359, 362, 383, 384, 385, 387, 388], "co": [28, 52, 76, 86, 132, 158, 161, 168, 181, 191, 197, 201, 226, 230, 249, 259, 286, 287, 290, 297, 310, 320, 326, 327, 330, 355, 359, 383, 384, 385, 388], "log": [28, 76, 86, 91, 125, 127, 128, 153, 155, 158, 191, 197, 207, 224, 242, 252, 254, 255, 281, 283, 286, 287, 320, 326, 327, 336, 353, 379, 388], "log10": [28, 76, 86, 158, 191, 197, 286, 287, 320, 326, 327, 388], "bracket": [28, 89, 168, 202, 217, 286, 297, 331, 346, 368, 387, 388], "clariti": [28, 62, 76, 105, 149, 277, 290, 368], "nest": [28, 52, 65, 76, 164, 178, 181, 213, 249, 262, 307, 310, 342, 387, 388], "prstuff": 28, "s2": [28, 148, 163, 178, 181, 197, 211, 230, 276, 292, 310, 326, 340, 351, 359], "averag": [28, 29, 41, 49, 53, 148, 149, 155, 161, 197, 249, 276, 277, 290, 326, 368, 375], "beginlin": [28, 197, 226, 228, 232, 234, 326, 355, 357, 361, 363], "thick": [28, 96, 108, 110, 122, 226, 249, 355, 382], "draw": [28, 37, 61, 65, 71, 95, 99, 122, 161, 168, 172, 185, 225, 226, 228, 230, 231, 232, 234, 290, 297, 301, 314, 354, 355, 357, 359, 360, 361, 363, 388], "flush": [28, 129, 155, 168, 184, 194, 196, 197, 221, 224, 226, 228, 229, 230, 232, 233, 234, 256, 283, 297, 312, 313, 323, 325, 326, 334, 350, 353, 355, 357, 358, 359, 361, 362, 363], "color": [28, 47, 65, 68, 75, 82, 84, 96, 122, 126, 140, 161, 197, 225, 226, 228, 230, 231, 232, 233, 234, 235, 249, 253, 268, 276, 290, 326, 334, 354, 355, 357, 359, 360, 361, 362, 363, 364, 368, 382, 383, 384], "coordin": [28, 32, 81, 94, 126, 149, 161, 168, 170, 172, 175, 193, 206, 224, 225, 226, 228, 230, 233, 234, 249, 253, 277, 286, 290, 297, 299, 301, 304, 322, 335, 353, 354, 355, 357, 359, 362, 363, 365, 370, 375], "down": [28, 29, 46, 47, 50, 52, 61, 65, 71, 74, 75, 79, 80, 81, 94, 98, 100, 102, 104, 105, 106, 107, 108, 110, 119, 155, 201, 221, 226, 228, 234, 249, 283, 287, 330, 350, 355, 357, 363, 371, 383, 385], "resiz": [28, 29, 42, 148, 154, 155, 168, 193, 197, 205, 217, 220, 226, 228, 230, 233, 276, 282, 283, 297, 322, 326, 327, 334, 346, 349, 355, 357, 359, 362], "mul": [28, 89, 193, 197, 205, 322, 326, 327, 334], "div": [28, 29, 197, 326, 327], "sub": [28, 114, 115, 155, 197, 249, 283, 289, 326, 327, 368, 379, 387], "rid": [28, 47, 81, 94, 197, 249, 326, 370, 382], "element": [28, 68, 71, 76, 94, 95, 121, 122, 129, 131, 133, 146, 149, 154, 155, 168, 181, 184, 190, 193, 197, 200, 201, 205, 208, 216, 217, 220, 232, 249, 256, 258, 260, 274, 277, 282, 283, 297, 307, 310, 313, 319, 322, 326, 329, 330, 334, 337, 345, 346, 349, 361, 387, 388], "product": [28, 41, 51, 71, 114, 115, 149, 158, 181, 197, 249, 277, 310, 326, 368, 379, 380], "wrong": [28, 29, 32, 37, 54, 82, 91, 105, 128, 150, 168, 217, 255, 278, 297, 346, 387], "multipli": [28, 31, 160, 181, 193, 197, 217, 287, 289, 310, 322, 326, 346, 369, 388], "sequenti": [28, 29, 76, 121, 155, 226, 234, 249, 283, 305, 355, 363, 374, 384], "indgen": [28, 193, 196, 197, 201, 205, 208, 322, 325, 326, 327, 330, 334, 337, 355], "aa": [28, 368], "vwrite": [28, 184, 197, 312, 313, 326, 327], "ropen": [28, 76, 184, 186, 187, 188, 193, 197, 201, 309, 312, 313, 315, 316, 317, 322, 326, 330, 388], "vread": [28, 184, 197, 312, 313, 326, 327], "eq": [28, 29, 150, 197, 246, 278, 326, 327], "tmpfile": 28, "aopen": [28, 184, 312, 313], "pointless": 28, "ismembran": [28, 160, 164, 199, 269, 289, 388], "seg": [28, 41, 208, 279, 282, 286, 289, 290, 293, 337, 346, 362, 377, 382, 383, 384], "gnabar_hh": [28, 43, 44, 61, 62, 63, 100, 101, 148, 154, 155, 201, 207, 283, 328, 330, 336, 382, 388], "cvode_act": [28, 38, 146, 154, 159, 274, 276, 282, 288, 346], "big": [28, 29, 31, 46, 73, 82, 89, 243], "1e10": [28, 220, 276, 349], "forev": [28, 39, 155, 283], "min": [28, 29, 76, 133, 155, 187, 197, 239, 249, 260, 283, 307, 316, 326, 327, 375], "max": [28, 29, 76, 143, 187, 197, 201, 239, 271, 307, 316, 322, 326, 327, 330, 375, 377, 379], "min_ind": [28, 197, 326, 327], "max_ind": [28, 197, 326, 327], "ap": [28, 43, 58, 61, 63, 84, 148, 249, 276], "gkbar_hh": [28, 43, 61, 62, 63, 100, 101, 114, 148, 154, 388], "regraph": [28, 76, 230, 359, 388], "reanalyz": 28, "seti": 28, "xpanel": [28, 46, 67, 76, 151, 161, 168, 177, 178, 193, 194, 196, 197, 199, 214, 226, 228, 279, 290, 297, 306, 307, 308, 323, 325, 326, 328, 334, 355, 357, 388], "xvalu": [28, 67, 76, 149, 161, 168, 177, 178, 193, 197, 199, 228, 277, 290, 306, 307, 308, 323, 325, 326, 328, 340, 357, 388], "xbutton": [28, 46, 67, 76, 168, 178, 194, 196, 197, 214, 228, 297, 307, 308, 323, 325, 326, 334, 357, 388], "student": [29, 40, 392, 393], "techniqu": [29, 40, 88, 217, 248, 249, 346, 379, 393], "distract": [29, 110, 121, 122], "popul": [29, 249, 326], "eas": [29, 76], "rather": [29, 75, 76, 114, 115, 121, 149, 158, 161, 168, 197, 200, 249, 277, 286, 290, 297, 326, 329, 334, 337, 367, 372], "qualiti": [29, 47, 71, 89, 121, 122, 194, 196, 228, 323, 325, 357, 379], "rope": 29, "difficult": [29, 36, 71, 76, 84, 107, 155, 158, 208, 231, 283, 337, 360], "lesson": [29, 71, 81], "quickli": [29, 39, 47, 71, 76, 81, 84, 121, 228, 239, 242, 357, 372, 378, 379, 380, 382, 383], "delv": 29, "deepli": [29, 52, 76], "realli": [29, 47, 51, 53, 61, 73, 75, 76, 81, 82, 89, 91, 94, 128, 154, 155, 182, 193, 208, 213, 217, 255, 282, 311, 322, 337, 342, 346, 379], "homework": [29, 393], "design": [29, 52, 56, 61, 76, 121, 135, 217, 231, 242, 249, 263, 346, 360, 365, 379, 382, 383, 392, 393], "asterisk": [29, 84, 388], "omit": [29, 65, 197, 249, 282, 286, 289, 290, 292, 299, 326, 370, 371, 379, 380, 382, 387], "realist": [29, 85, 131, 207, 249, 258, 336, 374, 388], "inhibitori": [29, 37, 38, 69, 75, 95, 104, 105, 110, 148, 249, 276], "hybrid": [29, 85, 158, 249, 286], "Such": [29, 40, 76, 149, 160, 161, 197, 217, 247, 277, 289, 290, 326, 334, 346, 379], "util": [29, 52, 53, 132, 153, 155, 211, 217, 239, 249, 259, 281, 283, 340, 346], "stand": [29, 52, 181, 197, 226, 228, 234, 249, 310, 326, 355, 357, 363, 365, 379], "excitatori": [29, 37, 38, 69, 75, 90, 104, 105, 110, 148, 249, 276, 373, 383, 384, 385], "send": [29, 47, 61, 65, 81, 82, 94, 143, 148, 154, 155, 156, 201, 207, 217, 228, 243, 262, 271, 276, 282, 283, 284, 330, 336, 346, 357, 368, 373, 383, 385], "net_ev": [29, 83, 151, 154, 279, 282], "spontan": [29, 249], "firetim": 29, "routin": [29, 32, 46, 52, 191, 193, 197, 200, 221, 320, 322, 326, 329], "invl": [29, 214], "perturb": [29, 95, 249], "enclos": [29, 76, 114, 115, 150, 156, 165, 168, 181, 185, 226, 278, 284, 294, 297, 310, 314, 355], "underli": [29, 35, 41, 54, 65, 125, 155, 239, 249, 252, 283, 286, 361], "mycel": [29, 61, 289, 375, 383], "hook": [29, 172, 301], "postsynapt": [29, 82, 109, 149, 154, 155, 249, 277, 282, 283, 383, 387], "neg": [29, 33, 39, 53, 76, 89, 126, 128, 131, 134, 148, 155, 161, 170, 193, 196, 197, 208, 212, 224, 249, 253, 255, 258, 261, 276, 283, 287, 290, 299, 322, 325, 326, 337, 341, 353, 379, 387], "highest": [29, 71, 149, 155, 164, 197, 277, 283, 326], "ncell": [29, 155, 156, 283, 284], "lowest": [29, 149, 249, 277, 374], "evenli": [29, 197, 326, 371, 387], "roughli": [29, 61, 371, 393], "cycl": [29, 71, 124, 168, 197, 226, 249, 251, 326, 355, 372, 380, 381], "intrins": [29, 249, 371], "magnifi": [29, 50, 65], "tempor": [29, 249, 371], "onset": [29, 71, 89, 95, 142, 148, 197, 217, 249, 270, 276, 326, 346], "trick": 29, "hyperpolar": [29, 75, 104, 148, 150, 249, 276, 278], "accomplish": [29, 46, 88, 155, 201, 208, 220, 236, 283, 330, 337, 349], "pacemak": [29, 249], "impos": [29, 197, 231, 326, 360], "within": [29, 32, 41, 54, 59, 65, 72, 76, 82, 86, 100, 115, 122, 129, 143, 148, 149, 150, 155, 160, 164, 165, 169, 176, 178, 181, 194, 195, 197, 201, 202, 205, 216, 217, 220, 226, 228, 230, 232, 242, 247, 249, 256, 262, 271, 276, 277, 278, 283, 286, 293, 294, 305, 310, 323, 324, 326, 328, 330, 331, 334, 345, 346, 349, 355, 357, 359, 361, 365, 370, 371, 379, 385, 387, 388], "enslav": 29, "member": [29, 40, 49, 52, 54, 61, 121, 139, 193, 224, 226, 267, 322, 353, 355, 388], "mass": [29, 128, 158, 249, 255, 286, 368, 372, 384], "recov": [29, 42, 75, 98, 119], "amplifi": [29, 33, 91, 148, 249, 276], "receiv": [29, 38, 54, 66, 69, 71, 75, 94, 95, 104, 105, 143, 148, 154, 155, 156, 200, 213, 217, 239, 249, 271, 276, 282, 283, 284, 329, 342, 346, 370, 373, 379, 380, 385], "len": [29, 95, 161, 205, 211, 286, 290, 292, 298, 323, 326, 334, 337, 340, 341, 362, 368, 387], "sp": [29, 52, 286], "savspk": 29, "tvec": [29, 146, 154, 197, 216, 217, 274, 276, 282, 326, 345, 346], "ind": [29, 197, 326, 327], "hit": [29, 155, 283], "wise": [29, 52, 155, 283], "precaut": 29, "screw": 29, "throw": [29, 61, 71, 76, 105, 128, 160, 185, 190, 255, 289, 314, 319], "showspk": 29, "fancier": 29, "syncer": 29, "np": [29, 153, 155, 239, 281, 283, 326], "arang": [29, 387], "5e": [29, 370], "veclist": 29, "went": [29, 91], "ta": 29, "setpar": 29, "redefin": [29, 114, 115, 149, 277], "easier": [29, 45, 47, 61, 71, 76, 77, 78, 149, 150, 160, 197, 228, 238, 246, 277, 278, 283, 289, 326, 355, 357, 372, 379, 382], "overwrit": [29, 42, 45, 98, 119, 197, 326, 379], "low": [29, 33, 65, 71, 73, 76, 91, 121, 128, 178, 194, 196, 197, 207, 228, 230, 231, 232, 239, 249, 255, 286, 307, 323, 325, 326, 336, 340, 346, 357, 359, 360, 361, 368, 370, 371, 379, 382, 388], "wt": 29, "lectur": [29, 249, 286, 389], "rewrit": [29, 121, 379], "wire": [29, 155, 249, 283], "remove_al": [29, 169, 298, 308], "half": [29, 47, 71, 73, 81, 161, 197, 216, 290, 326, 345, 384, 392, 393], "rdm": 29, "discunif": [29, 193, 196, 322, 325], "proj": 29, "repick": [29, 196, 325], "upward": [29, 86], "modulu": [29, 181, 287, 310, 387], "pij": 29, "densiti": [29, 30, 37, 40, 43, 46, 61, 63, 76, 83, 84, 99, 100, 114, 115, 129, 131, 143, 145, 148, 150, 151, 160, 161, 197, 199, 201, 208, 216, 217, 224, 249, 256, 258, 271, 273, 276, 277, 278, 279, 289, 290, 326, 328, 330, 337, 345, 346, 353, 388, 393], "netconlist": [29, 154, 217, 282, 346], "diverg": [29, 155, 249, 368], "conv": 29, "fconn": 29, "prevec": 29, "postvec": 29, "postsyn": 29, "central": [29, 39, 124, 197, 249, 251, 326, 379], "showdiv1": 29, "showconv1": 29, "animplot": 29, "shift": [29, 50, 62, 65, 76, 95, 99, 197, 226, 231, 234, 249, 326, 355, 360, 363, 373, 378], "afterward": [29, 91], "pulldown": 29, "jun": [29, 249], "2015": [29, 159, 249, 288, 371], "34": [29, 161, 196, 249, 276, 290, 325, 326, 344, 373, 375, 382, 387, 388], "giant": [30, 71, 249, 373, 388], "loligo": 30, "pealei": 30, "2e4": 30, "43": [30, 53, 239, 249, 276, 382, 383, 387, 388], "hhaxon": 30, "savesess": 30, "loadsess": 30, "stimul": [30, 32, 44, 45, 70, 71, 85, 102, 103, 148, 151, 156, 249, 276, 279, 284, 383], "propag": [30, 38, 41, 158, 249, 286, 368, 371, 383], "smooth": [30, 93, 197, 249, 326], "evolut": [30, 249, 379], "sodium": [30, 38, 59, 63, 100, 131, 148, 149, 150, 249, 258, 276, 277, 278, 286, 326, 370, 373, 382, 383, 384, 388], "viewer": [30, 136, 264], "rule": [30, 52, 61, 62, 65, 71, 87, 93, 121, 131, 144, 149, 150, 155, 158, 193, 247, 249, 258, 272, 277, 278, 283, 286, 287, 289, 322, 369, 370, 371, 373, 379, 382, 387], "electrolyt": 31, "vesicl": [31, 249], "capacitor": [31, 33, 249], "consol": [31, 76, 154, 155, 187, 213, 228, 283, 316, 342, 357], "anniversari": 31, "bash": [31, 35, 36, 46, 153, 166, 216, 242, 243, 244, 245, 262, 281, 295, 345], "path_to_your_desktop": 31, "intro_to_gui": 31, "congratul": 31, "recreat": [31, 42, 61, 71, 91, 98, 119, 160, 171, 207, 249, 300, 336, 382], "Be": [31, 38, 41, 42, 71, 98, 100, 119, 120, 129, 148, 208, 239, 256, 337], "selectpointprocess": [31, 139, 267], "ppm": [31, 118], "divid": [31, 36, 73, 84, 149, 155, 161, 166, 197, 277, 283, 290, 295, 326, 382, 387, 388], "durat": [31, 46, 47, 59, 66, 102, 142, 148, 197, 249, 270, 276, 326, 382], "checkmark": [31, 129, 138, 177, 224, 256, 266, 306, 353], "ow": 31, "tend": [31, 52, 76, 121, 155, 197, 283, 326, 367], "revers": [31, 37, 144, 148, 150, 155, 193, 197, 249, 272, 276, 278, 288, 322, 326, 327, 368, 373, 379, 380, 382, 383, 384, 387, 388], "rescal": [31, 81, 118, 122, 125, 172, 249, 252, 301], "1a": [31, 46, 53, 244, 249], "poor": [31, 62, 89], "1e4": 31, "cut": [31, 47, 65, 71, 91], "1e": [31, 39, 47, 59, 76, 89, 120, 128, 129, 131, 133, 146, 154, 158, 191, 195, 217, 255, 256, 258, 260, 274, 282, 290, 320, 324, 346, 368, 370, 372, 373, 374, 377], "inreas": 31, "1e5": [31, 120], "etern": 31, "stop": [31, 36, 52, 67, 71, 76, 91, 93, 124, 128, 129, 131, 133, 148, 154, 176, 197, 201, 214, 216, 217, 218, 220, 226, 228, 234, 239, 251, 255, 256, 258, 260, 276, 282, 305, 326, 330, 343, 345, 346, 347, 349, 355, 357, 362, 363, 379, 380, 382, 388], "variablestepcontrol": [31, 32, 37, 217, 346], "clickin": 31, "didact": [31, 32], "readabl": [32, 53, 61, 128, 255, 276, 382, 388], "embodi": 32, "notion": [32, 121, 129, 155, 161, 164, 256, 283, 290], "complic": [32, 41, 75, 148, 149, 155, 158, 168, 221, 230, 276, 277, 283, 297, 350, 359, 382], "burst": [32, 70, 148, 155, 249, 276, 283], "world": [32, 35, 37, 153, 155, 160, 178, 208, 249, 281, 283, 307, 316, 337, 340, 355, 379, 387], "troubl": [32, 37, 114, 115, 243], "artcellgui": [32, 37, 102, 103, 106, 107], "networkcel": [32, 37], "artificialcel": [32, 37, 156, 168, 217, 222, 284, 297, 346, 351], "networkbuild": 32, "radiobutton": [32, 37, 226, 355], "explanatori": [32, 379], "greater": [32, 35, 36, 76, 86, 91, 104, 121, 148, 155, 159, 181, 194, 196, 197, 205, 211, 216, 217, 224, 226, 228, 276, 283, 288, 310, 323, 325, 326, 334, 340, 345, 346, 353, 355, 357], "possibli": [32, 128, 155, 165, 217, 220, 227, 239, 255, 283, 294, 313, 346, 349, 356, 379, 380], "behavior": [32, 61, 68, 82, 84, 95, 114, 154, 155, 158, 161, 197, 217, 248, 249, 282, 283, 286, 287, 290, 320, 326, 346, 368, 379, 382, 388], "pointprocess": [32, 37, 74, 83, 104, 136, 148, 149, 150, 151, 154, 159, 199, 200, 217, 222, 235, 264, 276, 277, 278, 279, 282, 288, 289, 328, 329, 346, 351, 364, 388], "confin": [32, 249], "simulat": [32, 103], "constantli": [32, 76, 155, 283], "substanti": [32, 121, 122, 145, 217, 273, 346], "tar": [32, 37, 49, 80, 107, 108, 110, 153, 155, 242, 281, 283], "spikeplot": [32, 37, 96, 97, 103, 168, 297], "relev": [32, 37, 53, 54, 61, 76, 89, 93, 149, 155, 184, 217, 228, 234, 236, 239, 243, 249, 262, 277, 283, 313, 346, 357, 363, 368, 379, 384, 388, 392], "showcellmap": [32, 37], "c_intfire1": 32, "thousand": [32, 36, 47, 155, 216, 226, 283, 345, 355, 379, 388], "postcel": [32, 154, 217, 280, 282, 346], "precel": [32, 154, 217, 280, 282, 346], "craft": 32, "investig": [32, 40, 84, 121, 217, 249, 346], "larger": [32, 37, 75, 76, 85, 134, 148, 149, 150, 161, 168, 196, 197, 205, 217, 226, 228, 235, 239, 249, 261, 276, 277, 278, 290, 297, 325, 326, 334, 346, 355, 357, 364, 371, 379, 388], "scope": [32, 52, 93, 150, 155, 164, 165, 201, 208, 239, 278, 283, 294, 326, 330, 337, 370, 379], "cell_append": 32, "nc_append": [32, 156, 280, 284], "wide": [32, 65, 71, 93, 121, 197, 242, 249, 326, 379, 388], "essenti": [32, 42, 51, 62, 95, 98, 119, 121, 149, 150, 155, 161, 207, 249, 277, 278, 283, 290, 336, 387, 388], "regard": [32, 61, 122, 148, 149, 155, 156, 159, 160, 161, 208, 217, 222, 243, 276, 277, 283, 284, 288, 289, 290, 337, 346, 351, 379], "consist": [33, 52, 54, 76, 89, 95, 114, 115, 122, 125, 129, 131, 139, 148, 149, 150, 155, 156, 161, 165, 166, 168, 172, 176, 181, 193, 197, 202, 207, 208, 213, 217, 218, 220, 221, 222, 223, 228, 231, 233, 242, 252, 256, 258, 267, 276, 277, 278, 283, 284, 286, 290, 294, 295, 297, 301, 305, 310, 322, 326, 331, 336, 337, 342, 346, 347, 349, 350, 351, 352, 357, 360, 362, 368, 379, 382, 387, 388], "ideal": [33, 71, 142, 146, 148, 270, 274, 276, 371], "resistor": [33, 249], "intra": [33, 155, 158, 249, 283, 286, 370, 393], "op": [33, 156, 284, 379], "linearmechan": [33, 131, 135, 141, 147, 148, 155, 217, 220, 258, 263, 269, 275, 276, 283, 346, 349, 388], "transcend": 33, "histor": [33, 121, 200, 217, 329, 346], "arbitrari": [33, 39, 82, 129, 150, 155, 165, 194, 197, 207, 228, 231, 256, 278, 283, 294, 311, 323, 326, 336, 346, 357, 360, 374, 383, 387], "unfortun": [33, 35, 36, 76, 131, 148, 149, 150, 155, 208, 228, 258, 276, 277, 278, 283, 307, 337, 357], "cost": [33, 62, 73, 121, 134, 239, 249, 261, 346, 388, 389], "worst": 33, "gaussian": [33, 146, 155, 196, 197, 249, 274, 283, 325, 326], "plausibl": [33, 41, 46, 249], "realiz": [33, 149, 277], "volt": [33, 114, 115, 149, 277], "vc": [33, 142, 148, 270, 276, 379], "thu": [33, 39, 42, 59, 74, 76, 98, 114, 115, 119, 143, 146, 148, 155, 160, 161, 169, 170, 196, 197, 201, 202, 204, 208, 217, 220, 226, 271, 274, 276, 283, 286, 289, 290, 299, 307, 322, 325, 326, 330, 331, 333, 336, 337, 346, 349, 355, 368, 379, 388], "micron": [33, 38, 41, 45, 61, 114, 115, 149, 158, 161, 277, 286, 290, 368, 369, 371, 373, 382, 383, 387, 388], "r1": [33, 158, 286], "sign": [33, 46, 47, 81, 89, 91, 104, 149, 186, 187, 197, 240, 249, 277, 287, 315, 316, 326, 379, 387], "r2": [33, 75, 97, 110, 111, 351], "goe": [33, 42, 52, 75, 76, 128, 148, 149, 155, 184, 197, 207, 208, 226, 228, 234, 249, 255, 276, 277, 283, 313, 326, 336, 355, 357, 363, 368, 382, 388], "ground": [33, 52, 65, 146, 148, 161, 217, 249, 274, 276, 290, 346], "10mv": 33, "lincir1": 33, "unfinish": 34, "test0": [35, 153, 155, 281, 283], "pu": 35, "sofwar": 35, "pathto": 35, "paranrn": [35, 155, 156, 213, 283, 284, 342, 385], "2008": [35, 95, 155, 200, 248, 249, 329, 385], "meth": [35, 282, 346], "169": [35, 95, 248, 249, 385], "425": [35, 95, 248, 249, 385], "465": [35, 249], "reprint": [35, 76], "handout": 35, "booklet": 35, "Or": [35, 76, 105, 149, 166, 244, 249, 277, 295, 337], "entri": [35, 46, 47, 52, 65, 71, 76, 81, 98, 102, 109, 119, 124, 129, 133, 144, 149, 158, 175, 184, 197, 228, 236, 249, 251, 256, 260, 272, 277, 287, 293, 298, 304, 313, 326, 339, 357, 379, 382, 388], "especiali": 35, "parallelnetwork": 35, "head": [35, 98, 119, 211, 242, 243, 244, 249, 340, 341, 368, 379], "portion": [35, 48, 65, 128, 139, 140, 217, 220, 228, 249, 255, 267, 268, 286, 346, 349, 357], "parallelnetmanag": [35, 135, 141, 152, 155, 263, 269, 280, 283], "wrapper": [35, 155, 156, 160, 196, 200, 208, 213, 271, 283, 284, 325, 329, 337, 342], "mine": [35, 71, 121, 249], "idiom": [35, 36, 148, 149, 154, 155, 156, 165, 181, 208, 213, 228, 276, 277, 282, 283, 284, 294, 310, 337, 342, 346, 357, 388], "vogel": [35, 249], "abbott": [35, 249], "brett": [35, 83, 95, 248, 249], "purkinj": [36, 249, 387], "miyasho": [36, 249], "2001": [36, 84, 120, 121, 248, 249], "wall": [36, 155, 242, 249, 283], "did": [36, 40, 46, 49, 61, 89, 91, 93, 106, 148, 155, 207, 222, 242, 276, 283, 333, 336, 351, 372, 373, 379, 383], "parallelcomput": 36, "refresh": [36, 37, 103, 104, 231, 360], "1e8": 36, "chanc": [36, 62, 114, 115, 149, 163, 277, 292], "imbal": [36, 155, 249, 283], "split": [36, 155, 156, 161, 216, 248, 279, 283, 284, 290, 345, 368, 379, 382, 383, 388, 392, 393], "multisplit": [36, 155, 161, 216, 217, 280, 283, 290, 345, 346], "26": [36, 41, 84, 197, 200, 243, 249, 326, 329, 382, 383, 387, 388], "cad": 36, "repair": [36, 47, 81, 249], "aid": [36, 84, 155, 249, 283, 365], "rxvt": 36, "icon": [36, 48, 62, 65, 71, 117, 122, 129, 172, 223, 228, 256, 301, 352, 357], "prknj": 36, "complain": 36, "k22": 36, "never": [36, 65, 71, 75, 76, 89, 93, 107, 148, 149, 150, 155, 226, 276, 277, 278, 283, 336, 337, 355, 359, 379, 385], "peopl": [36, 49, 76, 313, 379, 392], "safeti": [36, 155, 201, 283, 330], "k23": 36, "k2": [36, 89, 90, 372], "kc2": 36, "kc3": 36, "kc": 36, "khh": 36, "useion": [36, 144, 147, 272, 275, 373, 375], "ik": [36, 67, 114, 122, 148, 220, 276, 349, 373, 375, 388], "gk": [36, 67, 75, 122, 373, 388], "nexp": 36, "37": [36, 53, 242, 244, 249, 326, 382, 383, 387, 388], "temporarili": [36, 165, 244, 290, 294, 328, 337], "assumpt": [36, 59, 217, 346, 371], "calciump": 36, "bother": [36, 61, 62], "dll": [36, 48, 52, 76, 151, 200, 213, 224, 279, 329, 342, 353], "superlinear": [36, 156, 284], "cash": [36, 249], "worthwhil": [36, 217, 239, 346], "cortex": [36, 249], "sensori": [36, 249], "moment": [36, 62, 91, 239, 249], "transient": [36, 44, 89, 90, 91, 228, 249, 357], "synchroni": [36, 249], "michel": [36, 249], "elaps": [36, 128, 155, 255, 283], "walltim": [36, 155, 283], "mosinit": [36, 38, 46], "start_tim": 36, "run_u": 36, "storag": [36, 52, 65, 95, 154, 155, 161, 193, 197, 199, 222, 249, 282, 283, 290, 322, 326, 328, 351, 371, 393], "mindelai": 36, "sadli": [36, 243], "fortun": [36, 95, 243, 283, 372], "critic": [36, 89, 129, 239, 249, 256, 379, 380], "netreadycellgui": [37, 103, 104, 105, 106], "syntypegui": [37, 103, 104, 105], "continuous_simulations_of_net": 37, "e_pa": [37, 43, 61, 62, 63, 84, 91, 103, 148, 276, 388], "polici": [37, 155, 156, 207, 283, 284, 336], "celltyp": 37, "classnam": [37, 54, 75, 178, 307, 331], "fromcellbuild": 37, "nrc": 37, "info": [37, 53, 103, 134, 155, 157, 160, 161, 163, 167, 217, 222, 226, 231, 238, 239, 243, 261, 262, 276, 283, 285, 289, 290, 346, 351, 355, 360, 375, 379, 380, 387], "duplic": [37, 65, 71, 84, 162, 291], "5m": 37, "syntyp": 37, "font": [37, 65, 94, 170, 172, 226, 299, 301, 355], "detach": 37, "analogi": [37, 149, 193, 277, 322, 365], "easili": [37, 39, 40, 42, 59, 63, 65, 73, 98, 119, 121, 149, 155, 156, 166, 193, 224, 228, 239, 262, 277, 283, 284, 295, 322, 353, 357, 369, 372, 373, 379, 380, 383, 387], "drawn": [37, 65, 161, 196, 197, 224, 225, 226, 228, 231, 232, 234, 290, 325, 326, 353, 354, 355, 357, 360, 361, 363, 379], "si1": 37, "b_ballstick": 37, "sec": [38, 46, 47, 53, 54, 58, 61, 67, 114, 115, 148, 149, 154, 155, 158, 159, 163, 164, 203, 208, 258, 259, 267, 269, 270, 272, 274, 276, 277, 278, 279, 282, 283, 284, 286, 288, 289, 290, 291, 292, 300, 302, 315, 326, 328, 332, 337, 346, 349, 361, 362, 363, 370, 371, 375, 382, 383, 384], "odd": [38, 61, 82, 120, 160, 197, 289, 326, 382, 388], "plotshap": [38, 58, 135, 224, 263, 353, 370, 382, 383, 384, 388], "bonu": [38, 39], "json": 38, "consid": [38, 39, 40, 41, 59, 61, 63, 76, 77, 78, 82, 89, 95, 114, 115, 122, 146, 148, 149, 150, 151, 155, 157, 158, 159, 161, 181, 197, 199, 200, 208, 217, 244, 249, 274, 276, 277, 278, 279, 283, 285, 286, 287, 288, 290, 310, 316, 320, 326, 328, 329, 336, 337, 339, 346, 359, 368, 369, 373, 378, 379, 380, 383, 387, 388], "potassium": [38, 59, 148, 149, 249, 276, 277, 286, 370, 373, 375, 382, 383, 384, 388], "mammalian": [38, 75, 249, 382, 388], "m\u03c9": 38, "strongest": 38, "reposit": [38, 79, 91], "126814": 38, "solver": [38, 39, 121, 146, 158, 200, 217, 239, 274, 286, 329, 346, 368, 372], "csv": [38, 393], "excel": [38, 42, 98, 119, 228, 357, 379, 388, 393], "matlab": [38, 388], "e_": 38, "role": [38, 149, 194, 197, 226, 249, 277, 323, 355, 368, 371, 387, 393], "e_syn": 38, "strength": [38, 71, 95, 108, 110, 121, 131, 155, 249, 258, 283], "point_process": [38, 131, 143, 147, 148, 154, 155, 164, 197, 199, 208, 211, 216, 217, 258, 271, 275, 276, 282, 283, 293, 326, 328, 337, 340, 345, 346, 388], "vgap": 38, "electrode_curr": [38, 147, 148, 275, 276, 346], "megohm": [38, 91, 114, 115, 131, 149, 161, 258, 277, 290], "millivolt": [38, 71, 114, 115, 142, 270, 373], "nanoamp": [38, 71, 114, 115, 146, 148, 161, 274, 276, 290], "differenti": [39, 121, 131, 146, 149, 158, 197, 217, 249, 258, 274, 277, 286, 326, 346, 368, 371], "frac": [39, 145, 146, 191, 273, 274, 275, 320, 368, 378, 382], "dy": [39, 131, 146, 161, 217, 258, 274, 290, 346, 375], "stai": [39, 41, 65, 75, 80, 155, 230, 283, 359, 388], "likewis": [39, 59], "analyt": [39, 83, 148, 149, 217, 249, 276, 277, 346, 368], "subject": [39, 40, 91, 102, 249, 379], "solut": [39, 44, 83, 122, 148, 149, 155, 193, 200, 249, 276, 277, 283, 298, 322, 329, 343, 368, 379, 382, 385, 388], "singular": [39, 131, 149, 193, 258, 277, 322], "od": [39, 121, 149, 155, 249, 277, 283, 371], "exact": [39, 65, 75, 114, 115, 118, 149, 150, 155, 158, 159, 161, 164, 181, 197, 217, 277, 278, 283, 286, 287, 288, 290, 310, 326, 346, 368, 379, 380, 383], "versu": [39, 249], "dx": [39, 155, 158, 161, 197, 249, 283, 286, 290, 326, 370, 375], "quadrat": [39, 124, 128, 251, 255], "bx": 39, "pm": 39, "sqrt": [39, 52, 76, 86, 120, 143, 158, 161, 191, 197, 201, 271, 286, 287, 290, 320, 326, 327, 330, 388], "4ac": 39, "2a": [39, 372], "decid": [39, 40, 42, 47, 51, 81, 93, 94, 95, 121, 155, 156, 213, 217, 283, 284, 342, 346], "subtract": [39, 76, 155, 181, 197, 249, 283, 310, 326], "recal": [39, 75, 91, 197, 228, 249, 326, 357, 371, 372, 382, 388], "midpoint": [39, 108], "y_": 39, "y_n": 39, "formula": [39, 43, 63, 131, 258, 286, 368, 382], "algebra": [39, 121, 122, 146, 149, 217, 274, 277, 346], "monoton": [39, 161, 217, 249, 290, 346], "displaystyl": [39, 378], "lim_": [39, 378], "infti": [39, 41, 378], "theorem": [39, 368], "convinc": 39, "newton": [39, 149, 217, 248, 249, 277, 346, 368, 389], "x_0": 39, "x_": 39, "x_n": 39, "slope": [39, 100, 249], "forward": [39, 95, 197, 228, 249, 286, 326, 357, 368, 381, 393], "approx": [39, 355], "arithmet": [39, 76, 114, 115, 247, 249, 286, 287, 326, 368], "ieee": [39, 248, 249], "754": 39, "quantiti": [39, 114, 115, 215, 344], "epsilon": [39, 217, 346], "ne": [39, 150, 246, 278], "pitfal": [40, 47], "await": [40, 201, 330, 370], "uninform": 40, "who": [40, 47, 88, 121, 149, 158, 194, 277, 286, 323, 374, 388, 390, 392, 393], "lack": [40, 122, 239, 249], "experi": [40, 45, 61, 71, 82, 88, 89, 98, 119, 142, 155, 156, 161, 239, 249, 270, 283, 284, 286, 290], "microscop": [40, 249], "neuroanatomi": [40, 249], "acquisit": [40, 249], "colleagu": 40, "person": [40, 239, 249, 387], "caveat": [40, 149, 150, 231, 277, 278, 360], "mayb": [40, 46, 47, 81, 92, 122, 379], "sake": [40, 62, 69, 105, 178, 371, 383], "mbf": 40, "bioscienc": [40, 249], "literatur": 40, "perspect": [40, 89, 249, 337, 379], "articl": [40, 42, 77, 78, 84, 98, 119, 121, 368, 379], "artifact": [40, 47, 91, 129, 131, 243, 244, 256, 258], "frequenli": 40, "seriou": [40, 81, 91, 114, 115, 155, 156, 197, 207, 217, 224, 283, 284, 336, 346, 353, 379], "advers": [40, 249], "kaspirzhni": [40, 47, 249], "av": [40, 47], "gogan": [40, 47, 249], "horchol": [40, 47, 249], "bossavit": [40, 47, 249], "tyc": [40, 47, 249], "dumont": [40, 47, 249], "2002": [40, 47, 121, 239, 249], "morpholog": [40, 47, 249, 393], "nois": [40, 47, 91, 95, 102, 103, 148, 249, 276], "asses": [40, 47], "13": [40, 41, 47, 53, 65, 95, 155, 197, 208, 226, 249, 276, 316, 317, 326, 333, 337, 339, 355, 369, 370, 372, 375, 379, 382, 383, 387, 388], "357": [40, 47, 249], "380": [40, 47, 249], "1088": [40, 47, 249], "0954": [40, 47], "898x_13_3_307": [40, 47], "scorcioni": [40, 47, 249], "lazarewicz": [40, 47, 249], "ascoli": [40, 47, 249], "quantit": [40, 249, 373, 382], "morphometri": [40, 46, 47, 249], "hippocamp": [40, 47, 249], "laboratori": [40, 47, 121, 197, 249], "neurologi": [40, 47, 248, 249], "473": [40, 47, 249], "177": [40, 47, 249], "193": [40, 47, 249], "2004": [40, 41, 47, 84, 213, 244, 248, 249, 342], "1002": [40, 47, 249, 362], "cne": [40, 47, 249], "20067": [40, 47], "chapter": [40, 52, 71, 76, 77, 78, 121, 248], "corinn": 40, "teeter": [40, 249], "dissert": 40, "character": [40, 249, 368], "arbor": [40, 249], "motiv": [40, 149, 277], "author": [40, 77, 78, 84, 121, 155, 156, 217, 283, 284, 346, 379], "lab": [40, 43, 45, 61, 71, 121], "came": [40, 65, 89, 155, 283], "acquir": [40, 244, 249], "paid": 40, "wage": 40, "career": 40, "didn": [40, 61, 71, 91, 148, 276, 382, 388], "neuromorpho": [40, 41, 47, 59, 370, 375, 391], "org": [40, 41, 46, 47, 52, 59, 84, 88, 146, 155, 193, 196, 239, 242, 243, 244, 245, 248, 249, 274, 283, 322, 325, 370, 372, 375, 379, 391], "archiv": [40, 46, 91, 207, 242, 248, 249, 336], "complaint": [40, 114, 115], "anatomist": [40, 47, 103], "stain": 40, "overestim": 40, "reject": 40, "concern": [40, 82, 238, 371], "optic": [40, 249], "resolut": [40, 71, 76, 122, 129, 155, 156, 158, 178, 213, 214, 221, 226, 228, 249, 256, 283, 284, 286, 307, 342, 343, 350, 355, 357, 371, 379, 382, 388], "pt3d": [40, 46, 47, 61, 161, 290, 382], "finest": 40, "quantiz": [40, 47], "favorit": [40, 47, 388], "nice": [40, 45, 60, 81, 89, 122, 156, 226, 239, 283, 284, 379, 383], "bottleneck": 40, "unreason": [40, 156, 284], "ordinari": [40, 371], "light": [40, 114, 115, 149, 168, 230, 249, 277, 297, 359], "microscopi": [40, 249], "smaller": [40, 47, 59, 71, 78, 89, 91, 194, 197, 205, 323, 326, 334, 368, 371, 375, 379], "pai": [40, 53, 155, 283], "attent": [40, 53, 81, 239, 249, 379, 383], "resolv": [40, 249, 370, 387], "bogu": 40, "fiduci": 40, "bodi": [40, 63, 76, 150, 155, 181, 218, 233, 249, 278, 283, 310, 347, 362], "layer": [40, 63, 146, 148, 247, 249, 274, 276], "cortic": [40, 63, 249], "90": [40, 53, 65, 187, 197, 249, 326, 369], "backlash": 40, "useless": [40, 160, 203, 222, 289, 332, 351], "molecul": [41, 158, 248, 286, 367, 368, 374], "ip3": [41, 249, 286, 287, 368, 371, 376, 378], "wagner": [41, 249], "coeffici": [41, 149, 155, 161, 277, 283, 286, 290, 349, 368, 371, 375], "cytosol": [41, 82, 158, 249, 286, 369, 371, 373], "283": [41, 249, 371], "biologist": 41, "electrophysiologi": [41, 249, 368, 372, 373, 382, 388], "101": [41, 161, 249, 290, 355, 359, 368, 369, 371, 377, 382], "concentr": [41, 82, 89, 90, 114, 115, 131, 134, 144, 149, 150, 158, 220, 224, 249, 258, 261, 272, 277, 278, 286, 349, 351, 353, 368, 369, 371, 372, 373, 375, 376, 378, 388, 392, 393], "nm": [41, 372, 377], "peak": [41, 75, 89, 90, 104, 148, 227, 276, 356, 377, 382], "water": [41, 249], "calcium": [41, 59, 71, 90, 149, 150, 158, 160, 217, 249, 277, 278, 286, 289, 346, 355, 368, 370, 374, 376], "97": [41, 76, 239, 249], "physiologyweb": 41, "answer": [41, 46, 51, 61, 77, 81, 84, 89, 95, 97, 156, 158, 193, 207, 284, 286, 316, 322, 336, 368], "glucos": 41, "spine": [41, 46, 134, 155, 161, 249, 261, 290, 391], "biolog": [41, 61, 69, 84, 95, 103, 121, 249, 368, 372, 388], "cubic": [41, 197, 249, 326, 371, 375], "1mm": 41, "602": [41, 249], "stochast": [41, 77, 78, 95, 121, 196, 249, 286, 325, 368], "percentag": [41, 238], "ca1": [41, 249, 375, 387, 388], "chemic": [41, 149, 249, 277, 368, 370, 371], "speci": [41, 59, 132, 149, 150, 158, 249, 259, 269, 277, 278, 286, 287, 351, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 388], "mm": [41, 114, 115, 132, 149, 249, 259, 277, 367, 368, 369, 370, 372, 373, 377, 378, 388], "shapeplot": [41, 232, 361], "regen": [41, 249, 368, 392], "berridg": 41, "1998": [41, 248, 249, 372], "pure": [41, 82, 197, 211, 217, 249, 315, 326, 337, 340, 342, 346, 371, 388, 392], "travel": [41, 249, 368, 371], "meter": 41, "human": [41, 53, 84, 248, 249, 388], "wave": [41, 131, 197, 226, 248, 249, 258, 326, 355, 359, 376], "front": [41, 45, 65, 88, 89, 91, 128, 168, 169, 249, 255, 297, 298, 368, 375, 387], "ip": [41, 153, 208, 249, 281, 337], "accompani": [41, 71, 249, 379, 380, 382], "fertil": 41, "ca": [41, 59, 144, 150, 156, 158, 197, 208, 249, 272, 276, 277, 278, 282, 286, 292, 293, 332, 337, 362, 363, 367, 368, 370, 371, 374, 388], "egg": [41, 218, 347], "frog": [41, 249], "xenopu": [41, 149, 249, 277], "laevi": [41, 249], "theoret": [41, 128, 249, 255], "433": [41, 249, 372], "447": [41, 249], "great": [42, 71, 98, 119, 128, 148, 149, 207, 210, 255, 276, 277, 336, 339, 371, 379, 382], "labor": [42, 98, 119], "lose": [42, 61, 89, 98, 119, 379], "fitter": [42, 82, 121, 124, 128, 129, 155, 165, 221, 251, 255, 256, 283, 294, 350], "pain": [42, 71, 249], "hidden": [42, 61, 62, 68, 91, 94, 98, 116, 118, 119, 150, 170, 172, 224, 249, 278, 299, 301, 353], "Near": [42, 62, 249], "distress": [42, 98, 119], "earlier": [42, 52, 61, 65, 71, 98, 119, 151, 154, 155, 207, 208, 226, 242, 279, 282, 283, 336, 355], "conflict": [42, 62, 76, 98, 119, 150, 155, 249, 278, 283, 379], "aris": [42, 91, 98, 119, 150, 155, 184, 249, 278, 283, 313, 379, 380], "interfer": [42, 89, 91, 95, 98, 119, 128, 155, 249, 255, 283, 328], "drawback": 42, "variant": [42, 52, 98, 102, 119, 196, 249, 290, 325, 370, 379], "lastli": [42, 98, 114, 115, 119, 150, 220, 278, 349, 379], "unhid": [42, 94], "postscript": [42, 65, 71, 172, 185, 207, 223, 225, 226, 301, 314, 336, 352, 354, 355], "ascii": [42, 71, 87, 89, 122, 172, 186, 197, 216, 226, 283, 301, 315, 326, 339, 345, 355], "plain": [42, 71, 87, 89, 94, 100, 186, 315, 344, 370, 379], "focuss": [42, 61, 100], "lower": [42, 44, 65, 75, 94, 100, 125, 139, 140, 168, 170, 193, 197, 226, 230, 235, 249, 252, 267, 268, 286, 297, 322, 326, 355, 359, 364, 379], "rectangl": [42, 65, 94, 225, 226, 228, 232, 354, 355, 357, 361], "deselect": [42, 226, 355], "insid": [42, 46, 52, 54, 61, 64, 71, 72, 76, 81, 91, 93, 94, 149, 155, 158, 165, 178, 192, 197, 201, 202, 220, 226, 242, 244, 247, 271, 277, 282, 283, 286, 294, 307, 321, 327, 330, 331, 349, 355, 368, 370, 371, 373, 387, 388], "distinguish": [42, 52, 54, 65, 79, 98, 114, 115, 119, 122, 154, 155, 158, 182, 249, 282, 283, 286, 311], "prerequisit": [42, 98, 119, 155, 208, 243, 283], "seclamp": [42, 61, 82, 98, 119, 128, 129, 148, 157, 217, 255, 256, 275, 276, 285, 346, 388], "mismatch": [42, 98, 119, 242, 243, 249], "invalid": [42, 76, 82, 98, 114, 115, 119, 148, 150, 158, 160, 166, 178, 193, 197, 217, 239, 243, 276, 278, 286, 289, 295, 307, 322, 326, 339, 340, 346], "styliz": [43, 46, 60, 62, 63, 82, 160, 231, 289, 360], "weakli": [43, 155, 249, 283], "400": [43, 61, 63, 249], "ba": [43, 61, 63], "800": [43, 61, 63], "gl_hh": [43, 62, 63, 100, 101, 148, 154, 220, 349, 388], "decreas": [43, 63, 91, 160, 178, 193, 197, 228, 234, 249, 289, 307, 322, 326, 357, 363], "linearli": [43, 63, 131, 149, 197, 217, 249, 258, 277, 290, 326, 346, 384, 388], "fall": [43, 63, 76, 81, 89, 91, 95, 148, 155, 197, 249, 276, 283, 326, 382], "distant": [43, 63, 249], "emploi": [43, 91, 95, 121, 197, 207, 326, 336, 379], "gnabar_max": 43, "max_dist": 43, "gk_hh": [43, 388], "assess": [44, 249], "stabil": [44, 61, 121, 146, 149, 155, 156, 220, 249, 274, 277, 283, 284, 349, 379, 380, 391], "hh_patch": 44, "setup_discontinu": 44, "crank": [44, 121, 161, 217, 220, 290, 346, 349, 393], "nicholson": [44, 121, 161, 220, 249, 290, 349, 393], "oran": 45, "pyhon": 45, "overview": [45, 82, 135, 141, 160, 200, 208, 249, 269, 289, 329, 337, 375, 376, 388, 393], "innocu": 45, "eventu": [45, 52, 71, 91, 155, 159, 196, 224, 283, 288, 325, 353, 373, 375, 379], "oop": [45, 52, 91], "establish": [45, 84, 110, 134, 155, 156, 161, 205, 249, 261, 283, 284, 290, 334, 379], "correspeond": 45, "pprint": [45, 46, 337, 388], "prettier": 45, "constitut": [45, 159, 172, 249, 288, 301, 365], "lost": [45, 65, 168, 197, 207, 239, 297, 326, 336], "prematur": [45, 249, 288], "reconstitut": 45, "pfwm": [45, 47, 71, 81, 94, 98, 119, 122], "overlai": 45, "restart": [45, 46, 62, 91, 185, 196, 217, 218, 220, 314, 325, 346, 347, 349], "consecut": 45, "tonight": 45, "fly": [45, 46, 224, 249, 353], "digit": [45, 184, 187, 197, 228, 230, 249, 313, 316, 326, 357, 359], "stem": 45, "evolutionari": [45, 249], "jw": [46, 131, 258], "stockbridg": 46, "westerfield": 46, "impuls": [46, 249], "physiol": [46, 373], "336": [46, 249], "301": [46, 249], "11": [46, 53, 65, 71, 76, 93, 95, 161, 195, 197, 200, 208, 210, 217, 226, 242, 243, 244, 248, 249, 276, 290, 307, 324, 325, 326, 329, 337, 339, 342, 346, 355, 369, 370, 372, 375, 379, 380, 382, 383, 384, 387, 388], "1113": [46, 249], "jphysiol": [46, 249], "sp014582": 46, "plenti": 46, "pubm": 46, "abstract": [46, 76, 103, 161, 249, 290], "clue": [46, 61, 122, 249], "allsec": [46, 47, 58, 59, 61, 158, 208, 283, 286, 289, 290, 315, 328, 337, 346, 349, 351, 361, 362, 368, 370, 371, 377, 382, 388], "browsabl": [46, 81, 121], "peer": [46, 249, 379], "subitem": 46, "shortcut": [46, 65, 78], "heterogen": [46, 84, 249], "search": [46, 84, 89, 121, 128, 155, 165, 197, 200, 217, 228, 237, 248, 249, 255, 283, 286, 294, 326, 329, 346, 357], "grep": [46, 160, 289], "modeldb_and_modelview": 46, "moore83": 46, "semi": [46, 244, 249], "scroll": [46, 47, 74, 75, 80, 94, 98, 100, 102, 118, 119, 169, 175, 178, 228, 298, 304, 307, 357], "agre": [46, 155, 283, 379, 380], "credit": [46, 155, 159, 200, 239, 283, 288, 329], "xvarlabel": [46, 76, 178, 228, 307, 308, 357, 388], "zf": 46, "tj": 46, "neocort": [46, 216, 249, 345], "382": [46, 154, 249], "363": [46, 249], "1038": [46, 249], "382363a0": 46, "patdemo": 46, "zip": [46, 49, 71, 91, 95, 116, 135, 242, 284, 326, 382, 383, 384, 387, 388], "unzip": [46, 71], "brows": [46, 65, 75, 84, 88, 237], "graft": 46, "myelin": [46, 148, 249, 276, 388], "compens": [46, 91, 249], "inconsist": [46, 114, 115, 155, 220, 249, 283, 286, 349, 372, 379], "seem": [46, 61, 68, 73, 75, 82, 91, 114, 115, 122, 151, 193, 207, 242, 279, 322, 336, 379, 380, 382, 383], "said": [47, 379, 382], "wouldn": [47, 109, 382], "eutect": [47, 121], "neurolucida": [47, 121], "v1": [47, 67, 154, 193, 197, 249, 322, 326, 388], "v3": [47, 149, 197, 244, 277, 326], "morphml": [47, 84], "guidanc": [47, 249, 379], "using_morphometric_data": 47, "alredi": 47, "navig": [47, 48, 71, 75, 89, 91, 129, 176, 208, 228, 249, 256, 305, 337, 357], "111200a": 47, "asc": 47, "somewher": [47, 65, 77, 78, 128, 156, 255, 284, 387], "talli": [47, 81], "21549": [47, 81], "xterm": [47, 81, 129, 207, 239, 256, 336], "widget": [47, 81, 124, 129, 135, 139, 149, 165, 179, 197, 199, 227, 228, 251, 256, 267, 277, 294, 308, 326, 328, 356, 357], "convers": [47, 81, 89, 94, 114, 115, 186, 197, 247, 249, 271, 315, 326, 346, 388], "disappear": [47, 71, 74, 81, 91, 146, 228, 274, 357, 383], "dens": [47, 81, 217, 249, 346], "straight": [47, 61, 81, 161, 290], "futur": [47, 61, 81, 91, 121, 128, 149, 150, 159, 186, 200, 226, 248, 255, 277, 278, 286, 288, 315, 329, 355, 365, 368, 372, 379, 380], "diagon": [47, 81, 155, 193, 217, 283, 322, 346], "lie": [47, 65, 81, 87, 89, 105, 197, 199, 242, 326, 328, 368], "unpleas": [47, 81], "mistak": [47, 76, 81, 91, 114, 115, 207, 336, 379], "wasn": [47, 81], "parent": [47, 81, 148, 151, 155, 156, 160, 161, 162, 163, 208, 220, 228, 231, 249, 276, 279, 283, 284, 289, 290, 291, 292, 337, 346, 349, 357, 360, 379, 382, 388], "orphan": [47, 81], "children": [47, 53, 81, 162, 163, 289, 291, 292, 388], "ugli": [47, 81], "neither": [47, 76, 81, 149, 155, 156, 226, 277, 283, 284, 355], "obvious": [47, 81, 114, 115, 156, 218, 284, 347, 379], "optimist": [47, 81], "bottomcel": [47, 81], "topcel": [47, 81], "orang": [47, 81, 226, 355], "li": [47, 249, 286], "closer": [47, 81, 89, 91, 122, 373], "postion": [47, 81], "irregular": [47, 81, 249], "transvers": [47, 249], "fit": [47, 51, 65, 81, 88, 121, 123, 124, 129, 133, 155, 197, 223, 226, 228, 234, 249, 250, 251, 256, 260, 283, 326, 327, 352, 355, 357, 363], "incorrectli": 47, "excess": [47, 197, 226, 326, 355, 388], "mho": [47, 148, 276], "haven": [47, 77, 84, 85, 89, 93, 102, 108, 110, 195, 324, 379, 380, 382], "toi": [47, 156, 236, 249, 284], "someon": [47, 61, 155, 283, 337, 387], "equival": [47, 54, 59, 61, 65, 71, 76, 88, 91, 93, 95, 142, 144, 148, 149, 151, 155, 156, 158, 161, 164, 171, 181, 196, 197, 201, 208, 217, 223, 226, 233, 239, 247, 249, 270, 272, 276, 277, 279, 283, 284, 286, 287, 289, 290, 291, 292, 300, 307, 310, 315, 316, 325, 326, 330, 337, 339, 340, 346, 352, 355, 362, 368, 370, 379, 380, 382, 385, 387, 388], "secnam": [47, 76, 91, 151, 160, 161, 164, 173, 208, 234, 269, 289, 293, 337, 363, 388], "voila": 47, "histogram": [47, 155, 181, 194, 196, 197, 249, 283, 310, 323, 325, 326, 327], "outlier": 47, "systemat": [47, 52, 61, 63, 149, 249, 277], "reader": [47, 59, 62, 88, 100, 105, 216, 283, 345, 379, 388], "anywher": [47, 65, 81, 93, 114, 115, 148, 181, 193, 211, 276, 310, 322, 340], "carefulli": [47, 50, 148, 276, 382], "afflict": 47, "worth": [47, 74, 148, 155, 276, 283, 379], "hhkchan": 48, "mknrndll": [48, 71, 76, 117, 151, 200, 279, 329, 375], "toggl": [48, 61, 62, 65, 89, 91, 94, 128, 201, 217, 226, 228, 231, 255, 307, 330, 346, 355, 357, 360], "team": [49, 379], "everyon": [49, 134, 155, 261, 283], "jone": [49, 249], "2009": [49, 213, 248, 249, 342], "shoudl": 49, "log2": 49, "teammat": 49, "strong": [49, 93, 249], "weak": [49, 75, 249, 387], "kenneth59715": 49, "nsgneuron": 49, "upload": [49, 243, 244], "comet": 49, "gz": [49, 153, 155, 242, 281, 283], "mu_output": 49, "guess": [49, 91, 133, 156, 239, 260, 284], "vertic": [50, 65, 89, 91, 122, 128, 168, 178, 197, 228, 255, 297, 307, 326, 357], "perpendicular": [50, 81, 231, 360], "lift": [50, 359], "pad": [50, 197, 326, 375], "atop": 50, "xside": 50, "viewdown": 50, "zside": 50, "wildli": [50, 91], "ctrl": [50, 98, 119], "secondari": [50, 80, 81, 118, 249], "newview": [50, 68, 226, 355], "focus": [50, 94, 239, 249, 379, 380], "inadvert": [50, 114, 115, 149, 160, 165, 277, 289, 294], "exceed": 51, "stuff": [51, 71, 75, 313], "gid": [51, 53, 154, 155, 156, 216, 239, 276, 282, 283, 284, 345, 382, 383, 384, 385], "subnet": [51, 156, 276, 284], "stori": [51, 122], "presum": [51, 71, 239], "shorter": [51, 83, 121, 290, 326, 379, 380, 384, 388], "overrun": 51, "refin": [51, 84, 128, 249, 255], "unfamilar": 51, "quot": [52, 76, 185, 197, 208, 230, 314, 326, 337, 359, 387], "wikipedia": [52, 287, 368], "acronym": 52, "1984": [52, 76, 121, 155, 159, 200, 239, 248, 249, 283, 288, 329], "book": [52, 76, 77, 78, 121, 248, 249], "yacc": 52, "stage": [52, 249, 380, 381], "appendix": [52, 76, 121], "hoc6": 52, "ivoc": [52, 54, 76, 170, 193, 201, 299, 322, 330], "todai": [52, 249, 393], "ivocmain": [52, 170, 299], "main1": 52, "const": [52, 54], "char": [52, 54, 197, 211, 226, 326, 340, 379], "ivocmain_sess": 52, "start_sess": 52, "hoc_main1": 52, "our_argc": 52, "our_argv": 52, "ypp": 52, "thank": [52, 379], "token": [52, 76, 155, 204, 333], "preced": [52, 65, 76, 107, 144, 160, 164, 168, 181, 249, 262, 272, 289, 297, 310, 379, 388], "express": [52, 61, 84, 86, 89, 114, 115, 121, 122, 124, 128, 141, 149, 160, 164, 168, 180, 193, 197, 201, 208, 217, 224, 226, 227, 228, 230, 233, 234, 249, 251, 255, 256, 269, 277, 289, 292, 294, 309, 322, 326, 330, 337, 339, 346, 353, 355, 356, 357, 359, 362, 363, 368, 371, 372], "recognis": 52, "depth": [52, 63, 262, 375], "stack": [52, 54, 76, 122, 141, 148, 154, 160, 166, 182, 201, 208, 234, 249, 262, 276, 282, 293, 295, 311, 330, 337, 363], "operand": 52, "ti": 52, "inst": 52, "union": 52, "sym": [52, 54], "narg": [52, 54], "ptr": [52, 204, 333], "typedef": 52, "yystyp": 52, "lexer": 52, "tokenis": 52, "yylex": 52, "parser": [52, 71, 76, 181, 201, 310, 330], "yypars": 52, "yylval": 52, "autoobj": 52, "numzero": 52, "argref": 52, "internalsectionnam": 52, "pysec": 52, "pysecnam": 52, "pysecobj": 52, "expr": [52, 76, 149, 193, 197, 201, 204, 226, 227, 277, 326, 330, 333, 355, 356], "stmt": [52, 72, 76, 148, 154, 164, 178, 181, 197, 201, 204, 214, 220, 307, 310, 326, 330, 333], "asgn": 52, "prlist": 52, "delsym": 52, "stmtlist": 52, "strnasgn": 52, "redef": 52, "redefinit": 52, "hocdec": 52, "struct": [52, 155, 262, 283], "subtyp": [52, 182, 249, 286, 311], "defined_on_the_fli": 52, "otherw": 52, "borland": 52, "oboff": 52, "pval": [52, 133, 260], "alia": [52, 211, 249, 286, 340, 341], "scalar": [52, 76, 146, 149, 155, 181, 182, 193, 197, 199, 208, 211, 274, 277, 283, 310, 311, 322, 326, 328, 334, 337, 340, 375], "hocstruct": 52, "object_": 52, "cstr": 52, "pnum": 52, "pvalint": 52, "pvalfloat": 52, "u_auto": 52, "bltin": 52, "u_proc": 52, "prop": 52, "rng": [52, 196, 325], "ppsym": 52, "unsign": [52, 186, 243, 315], "s_varn": 52, "indep": [52, 227, 356], "arrayinfo": 52, "arayinfo": 52, "hocsymextens": 52, "pfri": 52, "pfrv": 52, "pfrd": 52, "pfro": 52, "pfr": 52, "pfri_vp": 52, "pfrv_vp": 52, "pfrd_vp": 52, "pfro_vp": 52, "pfrs_vp": 52, "pf": 52, "pfd": 52, "pfo": 52, "pfv_vp": 52, "pfd_vp": 52, "pfo_vp": 52, "pfs_vp": 52, "hocunion": 52, "stackdatum": 52, "val": [52, 145, 187, 193, 199, 204, 205, 226, 273, 283, 307, 316, 322, 328, 333, 334, 355, 387, 388], "pobj": 52, "pstr": 52, "nullptr_t": 52, "stkobj_unref": 52, "nprog": 52, "prog": 52, "progp": 52, "spot": [52, 65, 228, 357], "progbas": 52, "subprogram": 52, "prog_parse_recov": 52, "hoc_return": 52, "namespac": [52, 201, 208, 330, 337, 372], "frame": [52, 76, 118, 168, 249, 297, 375], "retpc": 52, "resum": [52, 155, 283], "argn": 52, "th": [52, 54, 95, 151, 154, 155, 161, 168, 172, 193, 197, 217, 279, 282, 283, 290, 297, 301, 322, 326, 339, 346, 385], "iter_stmt_begin": 52, "iter_stmt_ob": 52, "ob": [52, 235, 364], "nframe": [52, 262], "hoc_nfram": 52, "fp": 52, "framelast": 52, "lookup": [52, 149, 155, 208, 277, 283, 337, 385], "symlist": [52, 54], "hoc_built_in_symlist": [52, 54], "hoc_top_level_symlist": 52, "p_symlist": 52, "temp": [52, 53, 114, 115, 155, 156, 159, 185, 186, 197, 226, 242, 283, 284, 288, 314, 315, 326], "leakag": [52, 148, 249, 276, 373, 388], "nstack": [52, 262], "suppli": [52, 65, 76, 112, 150, 155, 159, 191, 197, 216, 217, 278, 283, 288, 315, 320, 326, 345, 346], "higher": [52, 75, 146, 156, 160, 168, 226, 249, 274, 284, 288, 289, 297, 355, 379, 388], "deeper": 52, "caller": 52, "gamma": [52, 76, 158, 189, 249, 286, 287, 318, 388], "sscanf": [52, 187, 212, 316, 341, 388], "nrnversion": [52, 207, 213, 224, 262, 336, 342, 353, 388], "var": [52, 76, 129, 164, 165, 178, 187, 196, 197, 201, 205, 215, 217, 227, 239, 256, 294, 305, 307, 316, 325, 326, 327, 330, 334, 346, 356, 383, 388], "spinit": 52, "hocusr": [52, 76], "finalis": 52, "rallbranch": [52, 220, 349, 388], "modl": [52, 149, 277], "reg": 52, "mech": [52, 208, 337, 388], "registr": 52, "classreg": 52, "regist": [52, 121, 129, 169, 173, 200, 205, 239, 256, 302, 329, 334], "matrix": [52, 131, 135, 146, 149, 150, 155, 161, 190, 198, 201, 217, 220, 226, 228, 239, 244, 249, 258, 263, 274, 277, 278, 283, 290, 319, 327, 330, 346, 349, 355, 357, 368, 375, 388], "moreinput": 52, "hoc_run1": 52, "run1": 52, "initcod": 52, "hoc_yypars": 52, "opcod": 52, "arglist": 52, "codesym": 52, "codei": 52, "pn": [52, 197, 326], "hoc_cal": 52, "isec": 52, "execerror": [52, 166, 295, 388], "frames": 52, "lldb": [52, 239], "0x00006000017092c0": 52, "0x000000010038c060": 52, "0x0000600000014480": 52, "280": [52, 249], "fun_bltin": 52, "cpublic": 52, "2163136": 52, "0x00006000002101c0": 52, "u00000010": 52, "u0000001a": 52, "xea": 52, "448": [52, 248, 249, 372], "24576": 52, "ctemplat": [52, 54], "0x0000600001709300": 52, "fun": [52, 197, 227, 326, 356], "objectfunc": 52, "stringfunc": 52, "slot": 52, "nauto": 52, "push_valu": 52, "defn": 52, "hoc_errno_check": 52, "hoc_warn": 52, "errno": 52, "15255": 52, "queue": [52, 71, 216, 217, 220, 222, 283, 345, 346, 349, 351, 385], "0x0000000100e7cba0": 52, "dylib": [52, 242], "1400": 52, "1402": [52, 249], "1404": 52, "1405": [52, 249], "1406": [52, 249], "0x0000000100ea1a18": 52, "hoc_printf": 52, "fileio": 52, "316": [52, 249], "313": [52, 249], "buf": [52, 155, 158, 283, 374], "314": [52, 53, 249], "315": [52, 249], "hoc_sprint1": 52, "317": [52, 249], "strlen": 52, "318": [52, 239, 249], "not_parallel_sub": 52, "plprint": 52, "319": [52, 249], "fflush": 52, "stdout": [52, 155, 156, 184, 186, 213, 283, 284, 313, 315, 342], "sprint1": 52, "ret": [52, 155, 283, 375], "hoc_ret": 52, "unref": [52, 155, 202, 283, 309, 331], "nobjauto": 52, "deepest": 52, "shallowest": 52, "hoc_obj_unref": [52, 54], "hoc_look_inside_stack": 52, "pop_valu": 52, "frameobj_clean": 52, "hoc_nopop": 52, "hoc_pc": 52, "calip": [53, 239], "nsight": [53, 239], "smi": 53, "460": [53, 248, 249], "91": [53, 154, 249], "disp": 53, "volatil": [53, 206, 249, 335], "uncorr": 53, "ecc": 53, "fan": [53, 249], "perf": 53, "pwr": 53, "cap": 53, "mig": 53, "quadro": 53, "p2200": 53, "00000000": 53, "00": [53, 244, 379, 387], "45": [53, 58, 197, 201, 249, 290, 326, 330, 382, 387, 388], "33c": 53, "p8": 53, "4w": 53, "75w": 53, "71mib": 53, "5049mib": 53, "univers": [53, 76, 84, 121, 155, 194, 243, 248, 249, 283, 323], "schedul": 53, "bluebrain5": 53, "slurm": 53, "volta": [53, 244], "salloc": [53, 244], "grant": [53, 71, 84, 217, 249, 346, 379, 380], "294001": 53, "470": [53, 249], "57": [53, 189, 226, 249, 318, 355, 387], "tesla": 53, "v100": 53, "sxm2": 53, "failur": [53, 76, 166, 184, 188, 242, 243, 249, 295, 313, 317, 379], "filter": [53, 158, 184, 185, 193, 197, 216, 223, 224, 249, 286, 313, 314, 322, 326, 327, 345, 352, 353, 387], "42": [53, 76, 93, 150, 186, 197, 246, 249, 276, 278, 290, 307, 315, 316, 317, 320, 326, 333, 340, 370, 382, 387, 388], "coreneuron_modtest": 53, "direct_py_gpu": 53, "53": [53, 76, 249, 370, 387], "98": [53, 76, 83, 121, 196, 248, 249, 325], "direct_hoc_gpu": 53, "44": [53, 200, 226, 249, 329, 355, 382, 387, 388], "spikes_py_gpu": 53, "ringtest": [53, 239, 242, 283], "friend": [53, 122, 387], "statist": [53, 95, 128, 148, 155, 196, 217, 249, 255, 276, 283, 325, 346, 387], "nsy": [53, 239], "nvprof": 53, "num": [53, 76, 95, 210, 292, 339], "stddev": 53, "127": [53, 87, 248, 249], "723": 53, "623": [53, 249], "136": [53, 248, 249], "038": [53, 249], "640": [53, 58], "630": 53, "224": [53, 249], "59": [53, 153, 197, 249, 281, 290, 326, 387], "860": [53, 249], "culaunchkernel": 53, "kernel": [53, 197, 200, 239, 249, 326, 329, 379], "346": [53, 249], "133": [53, 239, 249, 370], "266": [53, 239, 249], "175": [53, 87, 248, 249, 368], "080": [53, 249], "435": [53, 249], "nvkernel__zn10coreneuron18solve_interleaved1ei_f1l653_4": 53, "155": [53, 91, 249], "806": [53, 155, 249], "002": [53, 73, 249, 369], "015": [53, 95, 111, 249], "615": [53, 249], "099": 53, "738": [53, 249], "544": [53, 249, 373], "nvkernel__zn10coreneuron14nrn_cur_expsynepns_9nrnthreadepns_9memb_listei_f1l375_7": 53, "111": [53, 87, 114, 115, 249], "258": [53, 249], "439": [53, 248, 249], "903": [53, 248, 249], "199": [53, 89, 249, 370], "489": [53, 249], "73": [53, 94, 249, 387], "556": 53, "nvkernel__zn10coreneuron11nrn_cur_pasepns_9nrnthreadepns_9memb_listei_f1l274_4": 53, "108": [53, 249, 370], "647": [53, 249], "844": [53, 249], "581": [53, 249], "391": [53, 155, 249, 283], "274": [53, 249], "394": [53, 249], "309": [53, 249], "nvkernel__zn10coreneuron16nrn_state_expsynepns_9nrnthreadepns_9memb_listei_f1l418_10": 53, "substr": [53, 211, 217, 340, 341, 346], "solve_interleaved1": 53, "solve_interleaved2": 53, "nrn_cur_": 53, "nrn_state_": 53, "heavi": [53, 131, 172, 249, 258, 301, 379], "dataset": 53, "extrem": [53, 61, 71, 77, 78, 83, 90, 128, 149, 155, 193, 217, 239, 255, 277, 283, 322, 346, 379, 380, 383], "nvkernel__zn10coreneuron": 53, "sophist": [53, 249, 368, 387], "cpython": 54, "funciton": [54, 298], "nrnpy_pyobj_sym_": 54, "pyobject_typecheck": 54, "po": 54, "hocobject_typ": 54, "nrnpy_ho2po": 54, "pyhocobject": 54, "pyfloat_fromdoubl": 54, "pylong_fromlong": 54, "nrnpy_po2ho": 54, "py_refcnt": 54, "datatyp": 54, "nrnpy_numbercheck": 54, "semant": [54, 114, 115, 148, 155, 158, 164, 168, 197, 207, 208, 276, 283, 286, 297, 326, 336, 337, 380, 381], "pynumber_check": 54, "hoc_obj_ref": 54, "hoc_oop": 54, "oc_ansi": 54, "prototyp": [54, 83, 121, 149, 226, 242, 277, 355, 379], "ifarg": 54, "hoc_is_object_arg": 54, "hoc_is_pdouble_arg": 54, "hoc_is_str_arg": 54, "hoc_is_double_arg": 54, "hoc_obj_getarg": 54, "hoc_objgetarg": 54, "vector_arg": 54, "vect": 54, "hoc_pgetarg": [54, 216, 345], "gargstr": 54, "getarg": 54, "bool": [54, 149, 168, 242, 277, 283, 297, 326, 349], "bad": [54, 76, 89, 155, 164, 283], "runtimeerror": [54, 282, 293, 339], "class2oc": 54, "con": [54, 65], "retobj_memb": 54, "constructor": [54, 154, 155, 158, 159, 160, 196, 197, 211, 279, 282, 283, 286, 288, 325, 326, 333, 340, 361, 362, 363, 383], "destructor": [54, 196, 325], "member_func": 54, "hoc_return_type_cod": 54, "retobj_method": 54, "member_ret_obj_func": 54, "hoc_lookup": 54, "vector_sym": 54, "is_obj_typ": 54, "type_nam": 54, "check_obj_typ": 54, "former": [54, 91, 155, 181, 193, 217, 230, 283, 286, 310, 322, 346, 359], "strcmp": [54, 76, 181, 212, 310, 341, 388], "objcmd": 54, "callabl": [54, 76, 133, 146, 149, 150, 155, 208, 260, 274, 277, 278, 283, 286, 337, 359, 370], "func_cal": 54, "perr": 54, "upon": [54, 77, 78, 84, 217, 228, 249, 346, 357, 371, 379, 380, 387], "pushx": 54, "hoc_push_object": 54, "hoc_push_str": 54, "hoc_pushpx": 54, "hoc_execerror": 54, "hoc_table_lookup": 54, "background": [55, 65, 68, 82, 228, 249, 357, 368, 379], "grammar": [55, 388], "pyobject": [55, 247], "hoccommand": 55, "tip": [55, 61, 71, 102, 103, 121, 249], "resourc": [55, 65, 115, 149, 228, 249, 269, 277, 357, 370, 375, 387, 388, 391], "rtd": 56, "theme": 56, "nbconvert": 56, "recommonmark": 56, "matplotlib": [56, 95, 276, 361, 362, 367, 368, 369, 372, 373, 375, 377, 378, 382, 383, 384, 385], "ipython": [56, 58, 200, 208, 329, 375], "plotnin": [56, 368, 369, 373, 388], "plotli": [56, 361, 369, 370, 373], "jinja2": 56, "ipynb": 58, "googl": [58, 237, 249, 367, 369, 370, 372, 373, 378, 379, 389, 392], "colab": [58, 237, 367, 369, 370, 372, 373, 378, 389, 392], "vertical_axi": 58, "wget": [58, 370], "raw": [58, 197, 242, 243, 326, 370, 375], "githubusercont": [58, 242, 243, 370, 375], "ramcdoug": 58, "dentategranulevideo": 58, "n275": 58, "pyplot": [58, 95, 276, 361, 362, 367, 368, 372, 375, 377, 378, 382, 383, 384, 385, 388], "plt": [58, 76, 95, 185, 230, 276, 314, 326, 359, 361, 367, 372, 378, 382, 383, 384, 385, 387, 388], "tqdm": 58, "base64": 58, "b64encod": 58, "rcparam": 58, "figsiz": [58, 95, 276, 372, 383], "stdrun": [58, 67, 95, 114, 156, 158, 159, 197, 200, 217, 218, 222, 224, 226, 234, 247, 276, 284, 288, 326, 329, 340, 346, 347, 351, 353, 355, 363, 367, 368, 369, 370, 371, 372, 373, 375, 377, 378, 382, 383, 384, 388], "stop_tim": 58, "save_everi": 58, "fire_tim": 58, "23": [58, 83, 84, 95, 114, 115, 153, 154, 155, 243, 248, 249, 281, 283, 290, 382, 383, 387, 388], "neuron_imag": 58, "theta": [58, 146, 249, 274, 290, 383, 384, 385], "360": [58, 249], "gca": [58, 362, 367], "view_init": 58, "yield": [58, 76, 129, 131, 155, 197, 249, 256, 258, 283, 326, 371], "continuerun": [58, 67, 95, 114, 200, 217, 221, 222, 224, 247, 276, 326, 329, 346, 350, 351, 353, 362, 367, 368, 369, 372, 373, 375, 377, 378, 382, 383, 384, 385, 388], "save_all_imag": 58, "enumer": [58, 95, 276, 289, 328, 383, 384, 387], "savefig": [58, 372], "04d": 58, "png": 58, "240": [58, 197, 249, 326], "twelv": 58, "minut": [58, 243], "ffmpeg": 58, "vcodec": 58, "libx264": 58, "crf": 58, "pix_fmt": 58, "yuv420p": 58, "neuron_movi": 58, "stackoverflow": 58, "57377185": 58, "show_video": 58, "video_path": 58, "video_url": 58, "decod": [58, 249], "width": [58, 65, 76, 168, 175, 186, 197, 226, 249, 297, 304, 315, 326, 355, 382], "170k": 59, "programmat": [59, 81, 135, 142, 200, 263, 270, 329, 347, 388], "pyr": 59, "c91662": [59, 361, 370, 375], "__init__": [59, 200, 208, 289, 307, 323, 326, 329, 337, 349, 375, 382, 383, 384, 385, 387, 388], "self": [59, 66, 76, 197, 208, 217, 222, 249, 289, 307, 323, 326, 334, 337, 346, 349, 351, 375, 379, 382, 383, 384, 385, 387], "load_morphologi": 59, "import3d_swc_read": [59, 370, 375], "i3d": [59, 370, 375], "import3d_gui": [59, 370, 375], "import3d_neurolucida3": 59, "import3d_morphml": 59, "import3d_eutectic_read": 59, "occupi": [59, 65, 286, 368], "_ref_i": [59, 208, 276, 290, 326, 337, 355, 383], "inaccess": [59, 168, 297], "garbag": [59, 383], "runnabl": [59, 158, 276, 286, 287, 326], "scenario": [59, 242, 249], "i_stim": 59, "t_stim": 59, "t_stim_vec": 59, "ation": 59, "_ref_amp": [59, 276, 325, 326], "interpol": [59, 149, 159, 160, 161, 197, 217, 249, 277, 288, 289, 290, 326, 327, 346], "homeostat": [59, 249, 371], "intracellular": [59, 71, 90, 141, 150, 249, 269, 278, 283, 368, 370, 371, 373, 375], "circumst": [59, 89, 98, 114, 115, 119, 134, 161, 178, 217, 221, 261, 290, 307, 346, 350], "warrant": [59, 286], "patholog": [59, 249], "ischem": [59, 249, 375], "stroke": [59, 225, 354, 375], "cyt": [59, 158, 286, 351, 367, 368, 370, 371, 373, 374, 377, 378], "nrn_region": [59, 158, 286, 367, 368, 370, 371, 372, 373, 374, 377, 378], "talk": [59, 114, 115, 156, 284], "alter": [59, 65, 249, 371], "contrast": [59, 93, 150, 184, 249, 278, 313, 368], "atolscal": [59, 131, 217, 224, 258, 286, 346, 353, 368, 370, 371, 372], "seek": [59, 184, 312, 313], "term": [59, 63, 65, 84, 89, 90, 91, 114, 115, 121, 131, 146, 149, 150, 155, 158, 161, 197, 217, 222, 249, 258, 274, 277, 278, 283, 286, 290, 326, 346, 351, 379], "wholetre": [59, 162, 208, 269, 286, 289, 291, 337, 369, 370, 373, 382, 383, 384, 388], "belong": [59, 81, 98, 101, 103, 118, 119, 128, 178, 255, 283, 286, 307, 368, 379, 382], "basi": [59, 144, 150, 154, 170, 217, 249, 272, 278, 282, 299, 346, 379, 380], "synonym": [59, 76, 148, 149, 155, 158, 197, 202, 277, 283, 286, 326, 331, 368], "geometr": [60, 196, 249, 325], "pretti": [60, 62, 81, 91, 122, 139, 194, 207, 267, 286, 323, 336, 388], "prone": [60, 114, 115, 121, 224, 353], "typgin": 60, "ptyngi": 60, "reusabl": [60, 71, 78, 121, 383], "trunk": [61, 155, 283], "lump": 61, "el_hh": [61, 148, 154, 220, 349, 388], "equilibrium": [61, 249], "64": [61, 84, 94, 144, 159, 160, 197, 203, 240, 242, 243, 249, 272, 276, 288, 289, 316, 317, 326, 332, 344, 355, 387], "white": [61, 65, 76, 87, 226, 230, 249, 355, 359], "spawn": [61, 71, 102], "basenam": [61, 217, 346], "spring": 61, "rubber": [61, 108, 110], "band": [61, 108, 110, 193, 249, 322], "undo": [61, 65, 379], "grai": [61, 65, 168, 226, 230, 232, 249, 297, 355, 359, 361], "alon": [61, 89, 129, 230, 249, 256, 359, 368, 371], "subtre": [61, 62, 81, 155, 156, 161, 162, 269, 283, 284, 289, 290, 291, 388], "unselect": [61, 65], "quick": [61, 71, 81, 88, 95, 100, 379, 382, 385], "overwritten": [61, 379, 383], "physic": [61, 71, 114, 115, 149, 155, 189, 224, 234, 249, 277, 283, 318, 353, 363, 368, 371], "plan": [61, 83, 84, 249, 379], "physiolog": [61, 150, 249, 278], "subdivis": [61, 81], "painless": 61, "d_x": 61, "round": [61, 86, 159, 192, 197, 217, 221, 226, 228, 283, 287, 288, 321, 326, 346, 350, 355, 357, 385], "ac": [61, 67, 71, 120, 249, 372], "halfwai": [61, 393], "faq": [61, 82, 98, 119, 121, 241], "glanc": [61, 382], "distinct": [61, 84, 95, 122, 154, 155, 194, 197, 217, 249, 282, 283, 288, 323, 326, 346, 379, 380, 388], "spinner": [61, 109], "tenth": [61, 155, 283], "attribut": [61, 69, 84, 89, 91, 93, 103, 128, 133, 170, 200, 208, 249, 255, 260, 298, 299, 329, 337, 367, 382, 387], "column": [61, 65, 75, 79, 128, 175, 193, 197, 226, 228, 249, 255, 304, 322, 326, 355, 357, 365, 388], "remind": [61, 91, 149, 277], "indent": [61, 76, 99, 382, 387, 388], "proce": [61, 100, 244, 379, 380, 382], "lai": [61, 107, 249], "bat": [61, 185, 314], "65mv": 61, "specifc": 61, "crude": [61, 62], "printout": [61, 94, 122], "interconnect": [61, 249], "summari": [61, 149, 217, 224, 238, 239, 277, 346, 353], "dictionari": [61, 208, 289, 328, 337, 372, 388, 393], "airlin": 61, "ticket": 61, "seller": 61, "tinker": 61, "destin": [61, 155, 156, 159, 193, 197, 205, 217, 283, 284, 288, 322, 326, 334, 346, 379], "departur": 61, "flight": [61, 249], "presto": [61, 75], "echo": [61, 216, 242, 243, 345], "revis": [61, 71, 91, 121, 188, 200, 207, 236, 317, 329, 336, 371, 379, 380, 383], "bog": 61, "slow": [61, 89, 91, 104, 164, 165, 178, 197, 217, 239, 249, 294, 307, 326, 346, 375], "concret": [61, 71, 76], "iclamprig": [61, 116], "wet": [61, 71], "experimentalist": [61, 121], "brain": [61, 71, 84, 121, 248, 249, 375], "slice": [61, 71, 200, 249, 326, 329, 387], "tissu": [61, 71, 249], "cultur": [61, 71, 249], "imagin": [61, 114, 115, 125, 150, 191, 252, 278, 320], "vclamprig": 61, "initiclamp": 61, "initvclamp": 61, "benefit": [61, 89, 114, 115, 121, 134, 156, 159, 178, 217, 261, 284, 288, 307, 346], "perfect": [61, 89, 91, 249, 379], "deciph": [61, 249], "idiosyncrat": 61, "somebodi": 61, "wait": [61, 75, 76, 91, 129, 148, 155, 156, 213, 218, 221, 256, 283, 284, 342, 347, 350, 385], "Not": [61, 95, 131, 155, 161, 168, 169, 182, 193, 196, 201, 217, 219, 220, 222, 225, 226, 239, 258, 283, 290, 297, 298, 311, 322, 325, 330, 346, 348, 349, 351, 354, 355], "mold": 61, "invest": [61, 149, 277], "borrow": 62, "333e": 62, "apcial": 62, "demo": [62, 71, 76, 77, 149, 150, 161, 208, 214, 217, 234, 277, 278, 290, 307, 346, 363, 376, 393], "ahead": [62, 89, 91, 110, 249, 382, 383, 384], "messi": 62, "bit": [62, 65, 66, 71, 73, 81, 83, 91, 95, 148, 150, 155, 160, 189, 194, 196, 197, 203, 217, 226, 234, 236, 243, 276, 278, 283, 289, 318, 323, 325, 326, 332, 346, 355, 363], "clearer": [62, 114, 197, 290], "ourselv": [62, 81, 91], "rawpyr": 62, "dendrite_5": 62, "meaning": [62, 76, 114, 115, 128, 149, 150, 255, 277, 278, 370, 379], "nonzero": [62, 89, 91, 156, 160, 190, 193, 196, 201, 203, 283, 284, 289, 319, 322, 325, 330, 332, 388], "hack": [62, 121], "expedi": 62, "trade": [62, 249], "unnecessari": [62, 114, 115, 148, 149, 276, 277], "haspa": 62, "pyrfin": 62, "evid": [63, 249], "manner": [63, 65, 71, 114, 115, 149, 197, 249, 277, 379], "restat": 63, "mathemat": [63, 114, 115, 121, 135, 141, 146, 149, 181, 189, 197, 217, 249, 263, 269, 274, 277, 310, 318, 326, 346, 384], "l0x": 63, "lmax": 63, "centroid": [63, 161, 231, 234, 290, 360, 363], "rangevar_suffix": 63, "fi0": [64, 72, 220, 349], "fi1": [64, 72, 220, 349], "fi2": [64, 72, 220, 349], "allprint": [64, 72, 220, 349], "idraw": [65, 71, 172, 226, 301, 355], "synopsi": [65, 76], "spline": [65, 197, 326], "rec": 65, "tangl": 65, "polygon": 65, "ellips": [65, 225, 354], "printer": [65, 94, 122, 197, 207, 224, 228, 249, 326, 336, 353, 357], "typ": 65, "ing": [65, 148, 276], "portrait": [65, 94, 172, 228, 249, 301, 357], "landscap": [65, 94, 172, 223, 228, 301, 308, 352, 357], "inch": [65, 114, 115, 149, 230, 277, 359], "panner": 65, "pan": [65, 249, 388], "engag": [65, 249], "invert": [65, 226, 355], "stretch": [65, 68, 91, 249], "multilin": [65, 175, 304], "visi": 65, "ble": 65, "invers": [65, 193, 197, 249, 287, 322, 326, 327], "surround": [65, 114, 115, 150, 165, 246, 249, 278, 294, 387], "demarc": [65, 387], "endpoint": [65, 91, 124, 251], "rubberband": [65, 172, 301], "ty": 65, "angl": [65, 86, 191, 225, 226, 320, 354, 355], "radii": 65, "rectangular": [65, 82, 193, 249, 322], "emac": [65, 76, 175, 228, 304, 357], "keystrok": 65, "esc": [65, 176, 305], "constrain": [65, 121, 249, 286], "vertex": [65, 249], "strain": [65, 150, 249, 278], "trol": 65, "brush": [65, 79, 96, 122, 197, 226, 249, 326, 334, 355], "pat": 65, "tern": 65, "fgcolor": 65, "bgcolor": 65, "troll": 65, "fol": 65, "unnam": [65, 89, 91, 128, 255], "revert": [65, 164, 286, 351], "unsav": [65, 76, 230, 359], "filechoos": [65, 129, 256], "3i": 65, "bold": 65, "tiff": [65, 122], "pgmtop": 65, "ppmtop": 65, "bitmap": [65, 71, 122], "mat": 65, "unidraw": 65, "redo": [65, 217, 346], "undon": 65, "redon": 65, "soon": [65, 89, 106, 148, 276, 368, 379], "opera": 65, "tion": 65, "clip": [65, 228, 230, 357, 359], "flip": [65, 67, 168, 297], "mirror": [65, 155, 158, 249, 283, 286, 287, 298], "clockwis": 65, "countercw": 65, "counterclockwis": 65, "movement": [65, 100, 105, 231, 249, 360, 368, 387], "pixel": [65, 168, 170, 172, 226, 234, 249, 297, 299, 301, 355, 363], "cen": 65, "timet": 65, "magnif": 65, "factor": [65, 89, 91, 114, 115, 125, 128, 131, 148, 149, 155, 160, 161, 172, 193, 197, 217, 224, 228, 230, 232, 234, 249, 252, 255, 258, 276, 277, 283, 286, 289, 290, 301, 322, 326, 346, 353, 357, 359, 361, 363, 371, 379], "hor": 65, "izont": 65, "newli": [65, 84, 151, 161, 193, 249, 279, 290, 322, 388], "hierarchi": [65, 228, 249, 357], "ungroup": [65, 98, 119, 122], "dissolv": [65, 228, 357], "behind": [65, 76, 91, 283], "nonexist": 65, "invis": [65, 197, 326, 379], "arrowhead": 65, "solid": [65, 379], "halfton": 65, "shade": 65, "unfil": 65, "foreground": [65, 68], "fore": [65, 249], "dash": [65, 226, 355, 379, 382, 388], "synchron": [65, 141, 155, 200, 249, 269, 283, 329], "mand": 65, "uniti": [65, 76, 128, 234, 255, 363], "vice": [65, 83, 121, 393], "versa": [65, 83, 121, 393], "centimet": [65, 114, 115, 249], "spac": 65, "graviti": [65, 68], "visibl": [65, 68, 79, 118, 169, 172, 173, 226, 228, 298, 301, 302, 355, 357], "undoabl": 65, "databas": [65, 114, 115, 149, 189, 249, 277, 318, 379, 387, 393], "paint": 65, "concaten": [65, 142, 156, 197, 216, 270, 284, 326, 345], "pattern8": 65, "overrid": [65, 208, 337, 353], "histori": [65, 193, 249, 322, 381], "initialfont": 65, "startup": [65, 76, 242], "fonti": 65, "ith": [65, 133, 155, 158, 161, 163, 172, 181, 193, 199, 201, 205, 217, 226, 260, 283, 290, 292, 297, 301, 310, 322, 328, 330, 334, 346, 355], "whitespac": [65, 76, 184, 187, 313, 316], "third": [65, 71, 76, 84, 114, 115, 122, 133, 134, 143, 144, 154, 155, 170, 178, 181, 193, 197, 211, 215, 217, 223, 226, 249, 258, 260, 261, 271, 272, 282, 283, 299, 307, 310, 322, 326, 328, 340, 344, 346, 352, 355, 368, 379, 384, 387], "font3": 65, "8x13bold": 65, "courier": 65, "initialbrush": 65, "brushi": 65, "hexadecim": [65, 186, 315], "decim": [65, 91, 170, 186, 187, 197, 228, 230, 299, 315, 316, 326, 357, 359, 387], "brush2": 65, "ffff": 65, "initialpattern": 65, "patterni": 65, "16x16": 65, "8x8": 65, "4x4": 65, "grayscal": 65, "sixteen": 65, "eight": [65, 178, 197, 249, 307, 326], "hexad": 65, "cimal": 65, "exam": 65, "ple": 65, "8421": 65, "diago": 65, "nalli": 65, "hatch": [65, 218, 249, 347], "initialfgcolor": 65, "iden": 65, "tifi": 65, "fgcolori": 65, "65535": 65, "intens": [65, 84, 121, 232, 249, 361], "sy": [65, 155, 200, 208, 247, 262, 283, 307, 329, 337], "tem": 65, "fgcolor8": 65, "indigo": 65, "48896": 65, "65280": 65, "mixtur": 65, "initialbgcolor": 65, "bgcolori": 65, "web": [65, 249, 379], "vectaport": [65, 122], "ivtool": 65, "ipulse1": [66, 71], "ipulse2": [66, 71], "chief": [66, 122], "ton": 66, "toff": 66, "interpuls": [66, 249], "stimlu": 66, "ipulse3": [66, 71], "deliveri": [66, 71, 121, 143, 149, 154, 197, 217, 222, 249, 271, 277, 282, 326, 346, 351], "ongo": [66, 249], "rvp": [67, 233, 362], "ocbox": 67, "pwman": 67, "409": [67, 249], "singlecompart": [67, 154, 168, 297], "mt": [67, 151, 154, 199, 279, 328, 372], "mechanismstandard": [67, 135, 138, 139, 151, 154, 207, 217, 263, 266, 267, 279, 336, 346, 388], "mstate": [67, 154], "maction": [67, 154], "donotifi": [67, 76, 154, 161, 178, 196, 197, 214, 226, 229, 232, 290, 307, 325, 326, 334, 355, 358, 361, 388], "endbox": [67, 154], "vbox": [67, 76, 135, 142, 154, 167, 168, 197, 211, 226, 263, 270, 296, 297, 308, 326, 340, 355, 388], "107": [67, 249], "93": [67, 155, 249, 283], "96": [67, 76, 91, 154, 155, 239, 249, 283], "pointman": [67, 154, 199, 328], "d1": [67, 120, 154, 249], "71": [67, 249, 387], "497": [67, 239, 249], "208": [67, 154, 249], "326": [67, 154, 249], "stoprun": [67, 133, 154, 220, 227, 260, 282, 349, 356, 388], "runstopat": 67, "til": [67, 76, 155, 197, 217, 228, 283, 326, 346, 357], "runstopin": 67, "steprun": 67, "setdt": 67, "xcheckbox": [67, 76, 161, 178, 228, 290, 307, 308, 357, 388], "quiet": 67, "235": [67, 249], "addvar": [67, 94, 158, 226, 228, 326, 355, 357, 368], "541214": 67, "919169": 67, "ina": [67, 92, 114, 122, 131, 148, 220, 258, 276, 286, 326, 349, 373, 388], "276038": 67, "248243": 67, "il": [67, 373, 388], "336741": 67, "789776": 67, "003": [67, 249], "043": [67, 249], "629": [67, 297, 355], "gna": [67, 75, 122, 373, 388], "563578": 67, "592332": 67, "861661": 67, "ena": [67, 92, 131, 132, 148, 222, 258, 259, 276, 351, 373, 388], "113099": 67, "909585": 67, "stationari": [68, 196, 249, 325], "counterpart": [68, 76, 155, 186, 315], "recurr": [69, 75, 249], "micronet": 69, "motoneuron": [69, 105, 112, 249], "interneuron": [69, 249], "renshaw": [69, 103, 249], "drive": [69, 82, 92, 249, 326, 368, 383, 388], "disclaim": 69, "strictli": [69, 89, 155, 283, 286, 346, 388], "constitu": 69, "palest": 69, "imit": [69, 71], "affer": [70, 95, 112, 249], "internet": [71, 155, 283, 286, 379, 388], "theori": [71, 248, 249, 385, 391], "compuat": 71, "biologi": [71, 82, 248, 249, 368], "autom": [71, 121, 149, 197, 244, 249, 277, 326, 379, 380], "dropdown": 71, "exploit": [71, 121, 249], "afraid": 71, "noon": 71, "accus": 71, "girli": 71, "man": [71, 76, 122, 176, 242, 249, 305], "advantang": 71, "overwhelm": 71, "demand": [71, 129, 201, 243, 249, 256, 330, 379], "greatli": [71, 121, 149, 277], "maintent": 71, "grow": [71, 76, 121, 155, 197, 249, 283, 326, 379], "customiz": [71, 82, 249], "steal": 71, "ansi": 71, "encod": [71, 155, 249, 283, 388], "byte": [71, 155, 196, 197, 239, 283, 286, 325, 326], "notepad": 71, "win2k": 71, "unicod": 71, "gag": 71, "dirti": 71, "encapsul": [71, 76, 83, 122, 156, 197, 226, 234, 284, 307, 326, 328, 355, 363, 384, 387], "coreldraw": [71, 122], "sampl": [71, 155, 194, 196, 197, 249, 283, 323, 325, 326], "neuroscientist": [71, 84, 120, 121, 248], "easiest": [71, 89, 100, 122, 149, 197, 226, 242, 277, 326, 355, 387], "rgb": [71, 87], "workaround": [71, 242], "buildcel": 71, "chop": 71, "chunk": [71, 194, 197, 236, 323, 326, 371], "buildcell_1": 71, "buildcell_2": 71, "subfold": [71, 216, 345], "millisecond": [71, 89, 90, 91, 142, 197, 221, 249, 270, 326, 350], "chart": 71, "micromolar": 71, "nanomolar": 71, "messeng": [71, 374], "curiou": 71, "popular": [71, 121, 379], "bright": [71, 168, 297], "yellow": [71, 226, 228, 230, 231, 355, 357, 359, 360], "tau2": [71, 104, 148, 276], "____rstim____": [71, 148, 276], "___": [71, 148, 276], "__": [71, 148, 276, 382, 388], "___from": [71, 148, 276], "tau1": [71, 104, 148, 149, 276, 277], "artefact": 71, "amp1": [71, 142, 148, 270, 276], "vecplai": 71, "dai": [71, 76, 121, 249, 379, 380], "subdirectori": [71, 207, 216, 242, 336, 345], "vectorplai": [71, 224, 353], "arbforc": 71, "pulsedistrib": 71, "test_1_and_2": 71, "ipulse3rig": 71, "test_3": 71, "pertain": [71, 155, 283], "precomput": 71, "vecstim": 71, "hot": [71, 379, 380], "dozen": [71, 131, 238, 258], "dump": [71, 220, 226, 349, 355, 387, 388], "fiinitializehandl": 71, "syntim": 71, "loadqueu": 71, "latenc": [71, 249], "clampex": 71, "clampexdata": 71, "year": [71, 121, 145, 243, 273, 286, 379, 387], "ago": 71, "os": 71, "parenthes": [71, 89, 114, 115, 158, 181, 197, 201, 208, 286, 310, 315, 326, 330, 337], "handler": [72, 220, 349], "allevi": [72, 220, 349], "m_hh": [72, 148, 217, 220, 224, 232, 233, 346, 349, 353, 361, 362, 388], "tick": [73, 122, 242, 383], "maxim": [73, 155, 156, 249, 283, 284], "standpoint": 73, "ration": 73, "clever": [73, 91], "005": [73, 249, 384], "035": [73, 249], "wider": 73, "041": [73, 249], "satisfactori": [73, 89], "042": 73, "alphabet": [74, 89, 387], "currentlyaccessedsect": 74, "acell_hom": [74, 75], "plotlist": [74, 91], "unintend": [74, 75, 218, 347], "crosshair": [74, 75, 79, 89, 118, 206, 218, 226, 335, 347, 355], "m_cell": 75, "r_cell": 75, "inhibiton": 75, "netreadycel": 75, "deliber": 75, "chose": 75, "clutter": [75, 102, 156, 284], "m1_e0": 75, "recogn": [75, 91, 249], "instantli": 75, "saw": [75, 91], "told": [75, 89, 382], "m_cell_": 75, "partli": [75, 326], "epsp": [75, 249], "summat": [75, 148, 217, 249, 276, 346], "unoppos": 75, "barrag": [75, 249], "inactiv": [75, 148, 249, 276, 373], "attest": 75, "precari": 75, "abil": [75, 121, 145, 158, 168, 249, 273, 286, 297, 387], "ipsp": 75, "undiminish": 75, "shunt": [75, 104, 249], "h_hh": [75, 148, 388], "n_hh": [75, 148, 224, 353, 388], "outcom": [75, 122, 249], "pronounc": 76, "hoak": 76, "kernighan": [76, 121], "pike": [76, 121], "prentic": [76, 88, 121], "hall": [76, 88, 121, 249], "philosophi": 76, "bc": 76, "consider": [76, 91, 128, 155, 156, 217, 221, 249, 255, 283, 284, 346, 350, 379, 380], "hi": [76, 114, 115, 194, 286, 323, 346], "polymorph": 76, "inherit": [76, 114, 115, 208, 249, 337], "neuron3": 76, "oak": 76, "superset": 76, "devot": 76, "depart": [76, 84], "meant": [76, 197, 326, 379], "discours": [76, 149, 277], "reliev": [76, 249], "confus": [76, 102, 148, 154, 155, 161, 164, 168, 207, 220, 230, 276, 282, 283, 290, 297, 336, 349, 359, 379], "mental": 76, "energi": [76, 217, 249, 346, 368], "concept": [76, 121, 149, 196, 277, 325, 375, 387, 388, 391], "bare": [76, 155, 156, 242, 283, 284], "ought": [76, 182], "mswindow": [76, 78, 87, 94, 165, 184, 221, 224, 228, 294, 313, 350, 357], "workhors": 76, "file1": [76, 149, 184, 277, 313, 379], "file2": [76, 149, 184, 277, 313, 379], "loadabl": 76, "ivmodl": 76, "ocmodl": 76, "makeiv": 76, "anymor": [76, 156, 217, 284, 346, 373], "incident": 76, "nrnocmodl": 76, "makeoc": 76, "fragment": [76, 91, 114, 115, 156, 208, 216, 249, 284, 337, 345, 346], "filenam": [76, 129, 134, 149, 165, 172, 184, 186, 193, 213, 215, 216, 220, 223, 225, 226, 228, 234, 242, 256, 261, 277, 286, 294, 301, 313, 315, 322, 342, 344, 345, 349, 352, 354, 355, 357, 363, 375], "eof": [76, 184, 187, 197, 312, 313, 316, 326], "trail": [76, 186, 193, 197, 207, 217, 315, 322, 326, 336, 346, 388], "mere": [76, 91, 149, 159, 161, 184, 193, 197, 202, 217, 221, 228, 277, 288, 290, 313, 326, 331, 350, 357], "winio": 76, "undocu": [76, 216, 345], "andrew": [76, 249], "schulman": 76, "banner": [76, 184, 207, 313, 336, 379, 380], "2003": [76, 248, 249, 374], "john": [76, 78, 121, 134, 155, 196, 249, 261, 283, 325], "moor": [76, 78, 121, 155, 249, 283], "duke": [76, 121, 155, 159, 200, 239, 283, 288, 329], "michael": [76, 84, 121, 155, 197, 243, 283, 326, 379], "copyright": [76, 155, 159, 200, 239, 283, 288, 329], "1994": [76, 248, 249], "appreci": [76, 105, 379], "facil": [76, 155, 220, 283, 349], "symptom": [76, 249], "carat": 76, "chain": [76, 193, 197, 221, 224, 249, 322, 326, 350, 353, 388], "offend": [76, 114, 115, 150, 155, 278, 283], "interrupt": 76, "halt": [76, 163, 292], "necessit": [76, 131, 258], "cnrniv": 76, "succeed": [76, 283, 388], "backslash": 76, "256": [76, 155, 249, 283], "alphanumer": 76, "authorit": [76, 121, 155, 161, 283, 290], "hoc_init": [76, 262], "capac": [76, 249, 346], "extcel": [76, 148], "neuronnhom": 76, "oc_class": 76, "nrn_class": 76, "iterator_stat": [76, 181, 217, 310, 388], "depvar": [76, 201, 330, 388], "eqn": [76, 190, 201, 319, 330, 373, 388], "em": 76, "setpoint": [76, 149, 150, 201, 208, 277, 278, 330, 337, 388], "uninsert": [76, 201, 224, 330, 353, 388], "ifsec": [76, 160, 164, 201, 330, 388], "deg": [76, 189, 225, 318, 354, 388], "phi": [76, 189, 249, 318, 388], "atan": [76, 86, 158, 191, 286, 287, 320, 327, 388], "erf": [76, 158, 191, 286, 287, 320, 327, 388], "erfc": [76, 158, 191, 286, 287, 320, 327, 388], "prmat": [76, 190, 319, 327, 388], "wqinit": 76, "plotx": [76, 230, 359, 388], "ploti": [76, 230, 359, 388], "xred": [76, 187, 201, 309, 312, 316, 330, 388], "sred": [76, 187, 309, 312, 316, 388], "fprint": [76, 186, 188, 193, 309, 312, 315, 317, 322, 327, 388], "fscan": [76, 184, 187, 188, 193, 201, 309, 312, 313, 316, 317, 322, 330, 388], "graphmod": [76, 230, 359, 388], "fmenu": [76, 176, 305, 308, 388], "lw": [76, 185, 230, 309, 312, 314, 359, 388], "getstr": [76, 187, 188, 201, 309, 312, 316, 317, 330, 388], "setcolor": [76, 230, 359, 388], "stopsw": [76, 213, 232, 342, 388], "object_id": [76, 151, 181, 182, 279, 310, 311, 388], "allobjectvar": [76, 182, 311, 388], "allobjext": 76, "xstatebutton": [76, 178, 228, 307, 308, 357, 388], "xlabel": [76, 95, 178, 228, 307, 308, 357, 367, 368, 372, 377, 378, 388], "xmenu": [76, 178, 228, 307, 308, 357, 388], "xpvalu": [76, 177, 178, 193, 194, 196, 197, 214, 297, 306, 307, 308, 326, 388], "xradiobutton": [76, 161, 168, 178, 197, 226, 228, 290, 297, 307, 308, 326, 355, 357, 388], "xfixedvalu": [76, 178, 307, 308, 388], "xslider": [76, 178, 228, 307, 308, 357, 388], "boolean_dialog": [76, 167, 296, 308, 388], "continue_dialog": [76, 167, 296, 308, 388], "string_dialog": [76, 167, 296, 308, 388], "doevent": [76, 226, 229, 355, 358, 388], "numarg": [76, 133, 181, 202, 260, 309, 310, 331, 388], "hoc_pointer_": [76, 182, 311, 388], "execute1": [76, 165, 166, 202, 210, 283, 294, 295, 331, 388], "load_proc": [76, 165, 224, 294, 388], "load_func": [76, 165, 294, 388], "load_templ": [76, 165, 294, 388], "machine_nam": [76, 213, 342, 388], "saveaudit": [76, 219, 348, 388], "retrieveaudit": [76, 219, 348, 388], "coredump_on_error": [76, 166, 295, 388], "checkpoint": [76, 207, 220, 336, 349, 365, 388], "object_push": [76, 154, 182, 311, 388], "object_pop": [76, 154, 182, 311, 388], "pwman_plac": [76, 154, 170, 228, 299, 308, 357, 388], "show_errmess_alwai": [76, 165, 166, 294, 295, 388], "numproc": [76, 155, 283, 385], "myproc": 76, "psync": 76, "settext": [76, 230, 359], "float_epsilon": [76, 181, 195, 197, 201, 288, 310, 324, 326, 327, 330, 388], "hoc_ac_": [76, 154, 155, 169, 199, 204, 206, 208, 234, 283, 298, 309, 328, 333, 335, 337, 363, 388], "clamp_resist": [76, 220, 349, 388], "secondord": [76, 148, 149, 182, 217, 220, 224, 276, 277, 311, 346, 349, 353, 388], "diam_chang": [76, 161, 269, 289, 290, 346, 388], "node_data": [76, 388], "batch_run": [76, 215, 217, 344, 346, 388], "batch_sav": [76, 215, 344, 388], "arc3d": [76, 120, 161, 269, 289, 290, 388], "define_shap": [76, 161, 231, 269, 289, 290, 346, 360, 382, 383, 384, 388], "p3dconst": 76, "spine3d": [76, 161, 269, 289, 290, 388], "setspinearea": [76, 134, 161, 261, 269, 289, 290, 388], "getspinearea": [76, 161, 269, 289, 290, 388], "ri": [76, 91, 114, 161, 269, 289, 290, 388], "initnrn": [76, 220, 349, 388], "fstim": [76, 157, 269, 285, 388], "fstimi": [76, 157, 269, 285, 388], "ion_styl": [76, 144, 150, 269, 272, 278, 388], "nernst": [76, 89, 132, 144, 150, 249, 257, 259, 272, 278, 388], "ghk": [76, 132, 257, 259, 388], "sectionref": [76, 135, 141, 155, 160, 164, 203, 208, 263, 269, 283, 289, 293, 332, 337, 388], "vclamp": [76, 82, 142, 148, 151, 157, 170, 199, 217, 269, 270, 275, 276, 279, 285, 299, 328, 346, 388], "svclamp": 76, "alphasynaps": [76, 148, 151, 199, 275, 276, 279, 328, 388], "apcount": [76, 148, 275, 276, 388], "hbox": [76, 168, 197, 211, 297, 307, 308, 326, 340, 388], "deck": [76, 128, 135, 168, 255, 263, 297, 308, 388], "fit_praxi": [76, 124, 128, 129, 133, 197, 220, 251, 255, 256, 257, 260, 326, 349, 388], "kept": [76, 161, 205, 228, 290, 334, 357, 379], "lag": [76, 89, 147, 249, 275, 384], "coulomb": [76, 114, 115, 149, 189, 277, 318], "mole": [76, 114, 115, 149, 189, 277, 286, 318], "molar": [76, 114, 115, 149, 189, 277, 318], "ga": [76, 114, 115, 149, 189, 277, 318], "joul": [76, 114, 115, 149, 189, 277, 318], "180": [76, 226, 249, 287, 355], "radian": [76, 86, 189, 191, 197, 230, 234, 287, 318, 320, 326, 359, 363], "golden": [76, 189, 318], "circular": [76, 161, 290], "transcendent": 76, "cube": 76, "truncat": [76, 84, 161, 186, 191, 195, 197, 210, 290, 315, 320, 324, 326, 339], "minu": [76, 89, 91, 197, 326], "st1": 76, "st2": 76, "sprint": [76, 155, 165, 168, 178, 186, 208, 212, 228, 315, 337, 341, 357, 388], "compound": [76, 149, 181, 201, 249, 277, 310, 330], "realloc": [76, 197, 205, 217, 326, 334, 346], "embed": [76, 200, 208, 249, 329], "keyboard": [76, 149, 172, 277, 301], "unaryminu": 76, "divis": [76, 155, 181, 197, 249, 283, 287, 310, 326, 387], "remaind": [76, 86, 91, 187, 197, 287, 326, 387], "thought": [76, 131, 197, 217, 228, 258, 326, 346, 357, 379], "repeatedli": [76, 201, 228, 330, 357, 372], "inher": [76, 249, 379], "ambigu": [76, 155, 222, 283, 351], "roundoff": [76, 149, 195, 197, 277, 324, 326], "denot": [76, 126, 127, 149, 150, 160, 181, 197, 233, 253, 254, 277, 278, 286, 289, 310, 326, 371, 379, 387], "math": [76, 86, 89, 135, 146, 158, 192, 198, 263, 271, 274, 283, 286, 287, 290, 297, 315, 327, 342, 355, 359, 362, 376], "till": [76, 226, 230, 355], "stmt1": [76, 181, 201, 310, 330], "stmt2": [76, 181, 201, 310, 330], "expr1": [76, 201, 330], "expr2": [76, 201, 330], "expr3": 76, "iterator_nam": 76, "tt": [76, 214], "fortran": 76, "restrict": [76, 91, 146, 149, 155, 158, 161, 174, 178, 179, 182, 201, 216, 244, 274, 277, 283, 286, 290, 303, 307, 308, 311, 330, 345, 368, 376], "reevalu": 76, "nontrivi": 76, "unrel": [76, 239, 379], "tediou": [76, 155, 197, 283, 326], "formal": [76, 114, 115, 131, 249, 258], "letter": [76, 160, 249, 289, 339, 387], "arg1": [76, 155, 283, 288, 307, 362], "recurs": [76, 129, 165, 168, 178, 202, 218, 221, 249, 256, 276, 294, 297, 307, 331, 347, 350], "factori": [76, 158, 208, 286, 287, 337], "fac": [76, 131, 258], "besid": [76, 235, 290, 364, 368, 379, 380], "nonsens": [76, 217, 346], "overflow": [76, 155, 166, 239, 283, 295], "99": [76, 193, 239, 243, 249, 322], "placement": [76, 105, 168, 178, 179, 226, 249, 297, 307, 308, 355], "interior": [76, 161, 172, 225, 228, 231, 286, 290, 301, 354, 357, 360, 368, 371], "insur": 76, "star": [76, 249], "slash": [76, 114, 115], "arg2": [76, 288, 307], "fprintf": 76, "dthi": 76, "dthat": 76, "scanf": [76, 193, 197, 322, 326, 327], "sentinel": [76, 197, 326], "strvar": [76, 160, 187, 289, 316], "lisp": 76, "ag": [76, 249, 387], "comfort": 76, "instantan": [76, 89, 90, 102, 104, 159, 288], "xb": 76, "x1": [76, 120, 149, 150, 225, 226, 277, 354, 355], "simultan": [76, 88, 93, 121, 129, 139, 146, 148, 149, 155, 201, 226, 249, 256, 267, 274, 276, 277, 283, 330, 355, 379, 385, 387], "hoceqn": 76, "hlp": 76, "anaconda": [77, 242], "deposit": [77, 78], "channelbuild": [77, 78, 118, 121, 145, 158, 273, 286], "ligand": [77, 78, 121, 145, 249, 273, 275], "gate": [77, 78, 95, 121, 131, 145, 158, 249, 258, 273, 275, 286, 368, 370, 382], "accumul": [77, 78, 149, 155, 158, 217, 238, 249, 277, 283, 286, 346, 382], "repertoir": [77, 78, 248], "bunch": [77, 78], "dev": [77, 82, 213, 242, 249, 342, 366, 379, 380], "curor": 79, "reappear": [79, 197, 326], "linestyl": [79, 383], "palett": [79, 104, 226, 228, 355, 357], "webinar": [81, 283, 390, 393], "framework": [81, 156, 242, 249, 284], "broadli": 81, "speak": [81, 129, 256, 346, 388], "categori": [81, 95, 98, 103, 114, 119], "somewhat": [81, 91, 95, 195, 197, 208, 324, 326], "judgment": [81, 121, 207, 336], "closeup": 81, "bound": [81, 155, 181, 200, 208, 234, 248, 249, 283, 286, 310, 329, 337, 363, 374, 375, 385], "thin": [81, 108, 110, 249, 382], "perimet": [81, 249, 286], "enhanc": [82, 168, 249, 297, 379], "compact": [82, 144, 150, 164, 201, 208, 217, 249, 272, 278, 286, 330], "deprec": [82, 156, 158, 160, 200, 284, 286, 289, 326, 329, 365, 381], "frequent": [82, 155, 283, 379, 385], "ve": [82, 94, 103, 156, 194, 242, 243, 244, 284, 323, 382, 388], "stretegi": 82, "mecan": 82, "fooba": 82, "waveform": [82, 249], "overkil": 82, "precalcul": 82, "pclamp": 82, "artif": 83, "integratefir": [83, 102], "substitut": [83, 117, 221, 224, 350, 353, 382, 387], "rudolph": [83, 95, 248, 249], "beeman": [83, 95, 248, 249], "bower": [83, 95, 248, 249], "jm": 83, "diesmann": [83, 249], "morrison": [83, 249], "2007": [83, 95, 200, 248, 249, 329, 365], "comp": 83, "349": [83, 95, 248, 249], "83319": [83, 95], "sushil": 84, "kambampati": 84, "thoma": [84, 249, 387], "mors": [84, 248, 249], "school": 84, "medicin": [84, 249], "neurobiologi": [84, 197, 249], "scienc": [84, 249, 388], "connecticut": 84, "poster": 84, "annual": [84, 121, 249], "confer": [84, 95, 249, 393], "april": 84, "27": [84, 213, 249, 342, 344, 382, 383, 387, 388, 391], "prioriti": [84, 155, 168, 217, 283, 297, 308, 346, 385], "preview": [84, 122, 379], "hierarch": [84, 176, 249, 305], "receptor": [84, 90, 249, 371], "contract": [84, 243, 249], "occurr": [84, 149, 160, 197, 211, 249, 277, 289, 326, 340], "uniqu": [84, 95, 155, 156, 162, 196, 200, 202, 249, 283, 284, 286, 289, 291, 325, 329, 331, 385], "lengthi": [84, 155, 283, 286], "109": [84, 154, 249, 370], "simpler": [84, 156, 181, 208, 217, 226, 284, 310, 346, 370, 379, 388], "eca": [84, 144, 150, 272, 278], "140": [84, 187, 249, 388], "summar": [84, 388], "el_hha2": 84, "ar2_hha_old": 84, "preliminari": [84, 249], "xml": [84, 121], "collabor": [84, 121, 122, 249, 379], "evolv": [84, 379, 383, 384, 385], "catacomb": [84, 145, 273], "genesi": [84, 149, 249, 277], "adopt": [84, 121, 379], "neuroml": [84, 158, 249, 271, 286, 388], "brainml": 84, "cellml": 84, "grate": 84, "nih": 84, "5p01dc004732": 84, "neurobot": 84, "bio": [84, 242, 248, 249], "auth": 84, "gr": [84, 225, 354], "2006": [84, 121, 154, 248, 249, 282], "metaformat": 84, "123": [84, 95, 120, 121, 248, 249], "135": [84, 120, 121, 226, 248, 249, 355], "tm": [84, 155, 248, 249, 283], "davison": [84, 248, 249], "marenco": 84, "shepherd": [84, 248, 249], "gm": [84, 192, 321], "ml": [84, 95, 248], "publicli": [84, 379, 380], "131": [84, 249], "134": [84, 249], "ncbi": 84, "nlm": [84, 146, 249, 274], "gov": [84, 121, 153, 155, 281, 283], "pmc": 84, "pmc6130779": 84, "deserv": 85, "microcircuit": [85, 249], "pkzip": 85, "aco": [86, 158, 286, 287], "arc": [86, 89, 100, 129, 143, 161, 191, 215, 228, 231, 233, 234, 256, 271, 290, 320, 357, 360, 363], "cosin": [86, 197, 201, 249, 287, 326, 330], "arcco": 86, "asin": [86, 158, 286, 287], "sine": [86, 131, 197, 201, 226, 258, 287, 326, 330, 355, 359, 387], "arcsin": 86, "tangent": [86, 158, 191, 197, 286, 287, 320, 326], "arctan": 86, "atan2": [86, 158, 191, 286, 287, 320, 327, 388], "ceil": [86, 158, 286, 287], "cosh": [86, 158, 286, 287], "hyperbol": [86, 158, 191, 197, 286, 287, 320, 326], "fab": [86, 158, 286, 287, 373], "floor": [86, 158, 197, 249, 286, 287, 326, 327], "downward": 86, "fmod": [86, 158, 286, 287], "modulo": [86, 131, 258], "pow": [86, 158, 193, 197, 286, 287, 322, 326, 327], "sinh": [86, 158, 286, 287], "tan": [86, 158, 181, 249, 286, 287, 310], "tanh": [86, 158, 191, 197, 286, 287, 320, 326, 327, 370, 378, 388], "xx": [87, 228, 357, 368], "scene_background": 87, "ffffff": 87, "scene_foreground": 87, "000000": [87, 186, 315], "pseudocolor": 87, "shape_scale_fil": 87, "cm1": 87, "95": [87, 94, 161, 244, 249, 290, 383], "143": [87, 249], "159": [87, 249], "191": [87, 249], "79": [87, 249, 387], "207": [87, 249], "63": [87, 90, 249, 290, 383, 387], "223": [87, 249], "239": [87, 249], "255": [87, 122, 232, 249, 339, 361], "247": [87, 249], "cook": [87, 90, 249], "scheme": [87, 104, 121, 137, 145, 148, 149, 155, 168, 217, 249, 265, 273, 276, 277, 283, 297, 346, 368, 381], "rogowitz": 87, "treinish": 87, "assist": [87, 249], "bergman": 87, "neo": 88, "tighter": 88, "runfitt": [88, 123, 168, 224, 250, 297, 353], "praxi": [88, 89, 91, 124, 128, 129, 133, 251, 255, 256, 260], "brent": 88, "1976": [88, 249], "englewood": [88, 121], "cliff": [88, 121], "nj": [88, 121, 248, 249], "248": [88, 249], "unoptim": 88, "multiplerunfitt": 88, "bluepyopt": [88, 249], "van": [88, 249], "geit": [88, 249], "gevaert": [88, 249], "chindemi": [88, 249], "r\u00f6ssert": [88, 249], "courcol": [88, 249], "muller": [88, 248, 249], "eb": 88, "sch\u00fcrmann": [88, 248, 249], "segev": [88, 248, 249], "markram": [88, 121, 248, 249], "2016": [88, 248, 249, 283, 342], "leverag": [88, 149, 249, 277], "cloud": [88, 237, 249, 389], "neuroinform": [88, 249], "3389": [88, 248, 249], "fninf": [88, 248, 249], "00017": [88, 249], "k_1": 89, "k_2": 89, "gsyn": 89, "mulrunfitt": [89, 91, 98, 119, 123, 168, 224, 250, 297, 353], "mandatori": [89, 368, 379, 380], "anystr": [89, 224, 353], "absent": [89, 150, 217, 278, 346], "201": [89, 94, 249], "8269": 89, "realiti": [89, 91, 239, 379], "ampakin": 89, "promis": 89, "k1": [89, 90, 372, 375], "ah": 89, "forgot": [89, 91], "harm": 89, "unbound": [89, 375], "apper": 89, "minima": 89, "fenc": 89, "nevertheless": [89, 157, 208, 285, 379], "capacit": [89, 91, 114, 148, 197, 217, 249, 276, 326, 346, 382, 383, 384, 388], "unstabl": [89, 149, 244, 277, 379], "strike": 89, "stipul": 89, "proceed": [89, 91, 95, 107, 249, 387, 388], "unresolv": 89, "research": [89, 121, 248, 249, 379, 392], "jugdement": 89, "empir": [89, 121, 200, 329, 371], "norm": [89, 128, 129, 133, 190, 217, 255, 256, 260, 319, 346], "span": [89, 121, 155, 156, 158, 161, 226, 283, 284, 286, 290, 355, 368, 379, 387], "flash": [89, 91], "condctanc": 89, "sigmoid": [89, 378], "discrep": [89, 197, 249, 326], "phase": [89, 91, 124, 131, 155, 197, 226, 227, 228, 239, 249, 251, 258, 283, 326, 355, 356, 357, 379, 380], "transmitt": [89, 95, 149, 150, 249, 277, 278], "finit": [89, 159, 249, 288], "bind": [89, 158, 249, 286, 371, 374, 388], "rc": [89, 90, 188, 200, 207, 224, 317, 329, 336, 353, 379, 380], "aro": [89, 90], "optimum": [89, 155, 283], "hoc_obj_": [89, 206, 224, 228, 309, 311, 335, 353, 357, 388], "unscal": [89, 125, 252], "smoothli": 89, "bounc": [89, 91], "nonphysiolog": 89, "pretend": [90, 155, 283], "razor": 90, "sharp": [90, 249], "transmiss": [90, 249, 391, 393], "nmda": [90, 249], "holm": [90, 249], "levi": [90, 249], "1990": [90, 121, 249], "presynapt": [90, 105, 109, 148, 149, 150, 154, 155, 249, 276, 277, 278, 282, 283, 383], "agonist": [90, 249], "undergo": [90, 128, 255], "conform": [90, 114, 115, 207, 336, 374], "dimensionless": [90, 114, 115], "overset": 90, "rightarrow": 90, "alp": 90, "underset": 90, "bet": [90, 91], "longleftrightarrow": 90, "gmax": [90, 145, 148, 199, 273, 275, 276, 328], "scalefactor": 90, "sudden": [90, 148, 276], "satur": [90, 249], "92651": 90, "insight": [90, 249, 379, 393], "mediat": [90, 249], "influx": [90, 249, 371], "neurophysiol": 90, "1148": 90, "1168": [90, 249], "rn": 91, "blocker": [91, 249], "match": [91, 93, 156, 160, 164, 178, 197, 207, 210, 217, 239, 249, 284, 286, 289, 307, 326, 336, 339, 346, 368, 372, 379, 380, 387], "loss": [91, 98, 119, 249, 290], "153": [91, 249], "emphas": [91, 155, 283], "toler": [91, 121, 128, 131, 133, 217, 224, 249, 255, 258, 260, 286, 346, 353, 368, 371, 372], "siemen": [91, 373], "rawmodel": 91, "tutorial2": 91, "cry": 91, "iclamp_rig": 91, "init_iclamprawmodel": 91, "zz": [91, 368], "loc": [91, 131, 148, 208, 257, 258, 275, 276, 382, 388], "6534218": 91, "nowher": 91, "init_makedata": 91, "inaccur": [91, 120, 131, 258], "tini": 91, "iclampfit": 91, "redrawn": [91, 161, 232, 234, 290, 361, 363], "init_iclampopt": 91, "mainten": [91, 121, 249, 379], "9076814": 91, "0005": [91, 111], "everywher": [91, 217, 369, 373, 382], "sync": [91, 286, 371, 379], "tutor": 91, "optimization2": 91, "simtooldb": 91, "8e2c5f1c3688e84ebd3fdc5e5e6bb722db204196": 91, "39958": 91, "dauntless": 91, "stuck": 91, "hardli": [91, 230, 359], "14481": 91, "157": [91, 249], "9155": [91, 249], "unbeliev": 91, "13613": 91, "9156": 91, "shouldn": 91, "blind": [91, 249], "inconsequenti": 91, "blip": 91, "domin": [91, 155, 249], "relianc": [91, 207, 336], "surmis": 91, "ballpark": 91, "pseudocod": 91, "brought": [91, 379], "9th": [91, 249], "013147": 91, "44123": 91, "150": [91, 187, 194, 196, 225, 226, 249, 323, 325, 354, 355, 359, 377], "07105": 91, "propiti": 91, "disabl": [91, 239, 242, 243], "plummet": 91, "12th": 91, "1536e": 91, "137": [91, 249], "83841": 91, "35106": 91, "visibli": 91, "farm": 91, "squeez": 91, "reduct": [91, 217, 249, 346], "triskaidekaphobia": 91, "13th": 91, "indistinguish": [91, 249], "fell": 91, "0322e": 91, "85852": 91, "43060": 91, "38781": 91, "compel": [91, 249], "modesti": 91, "conclud": 91, "156": [91, 249], "86": [91, 249, 290], "43000": 91, "overcompens": 91, "abandon": [91, 217, 346], "hopefulli": [91, 128, 207, 255, 336, 379], "startpoint": 91, "0125": [91, 122], "thereaft": [91, 196, 325], "poorer": 91, "game": 91, "merg": [91, 149, 150, 197, 217, 244, 249, 277, 278, 326, 346, 380, 381], "collid": 91, "emphazis": 91, "de": [91, 95, 217, 248, 249, 346], "reopen": [91, 128, 168, 255, 297], "cumbersom": [93, 158, 164, 217], "preprocessor": [93, 150, 246, 278, 365, 379], "prove": [93, 148, 276, 351], "modeldbrepositori": 93, "2487": 93, "2730": 93, "2733": 93, "3658": 93, "7399": 93, "7400": 93, "8284": 93, "9889": 93, "12631": 93, "26997": 93, "35358": 93, "37819": 93, "51781": 93, "52034": 93, "64229": 93, "64296": 93, "87585": 93, "93321": 93, "97868": 93, "97874": 93, "97917": 93, "105507": 93, "106891": 93, "113732": 93, "116094": 93, "116830": 93, "116838": 93, "116862": 93, "123815": 93, "136095": 93, "136310": 93, "137845": 93, "138379": 93, "139421": 93, "140881": 93, "141505": 93, "144538": 93, "144549": 93, "144586": 93, "146949": 93, "149000": 93, "149739": 93, "150240": 93, "150245": 93, "150551": 93, "150556": 93, "150691": 93, "151126": 93, "151282": 93, "153280": 93, "154732": 93, "155568": 93, "155601": 93, "155602": 93, "156780": 93, "157157": 93, "168874": 93, "181967": 93, "182129": 93, "183300": 93, "185355": 93, "185858": 93, "186768": 93, "187604": 93, "189154": 93, "194897": 93, "195615": 93, "223031": 93, "225080": 93, "231427": 93, "232097": 93, "239177": 93, "241165": 93, "241240": 93, "244262": 93, "244848": 93, "247968": 93, "249463": 93, "256388": 93, "259366": 93, "stricter": 93, "cast": [93, 121, 182, 208, 290, 311, 322], "discourag": 93, "similarli": [93, 121, 193, 216, 322, 345, 371, 379, 387, 388], "forbidden": 93, "manifest": [93, 207, 228, 336, 357], "some_funct": [93, 239], "harmless": 93, "some_method_taking_an_int": 93, "problemat": [93, 247], "rand": [93, 197, 326], "nrn_random_arg": 93, "clash": [93, 379], "nuanc": 93, "sink": [93, 149, 277, 368], "void_ptr": 93, "linker": 93, "thing_ptr": 93, "c23": 93, "vector_res": 93, "mech_api": 93, "transit": [93, 118, 121, 159, 249, 269, 288], "vector_capac": 93, "ivocvect": 93, "emit": [93, 121, 149, 217, 277, 346], "composit": [94, 249], "land": [94, 228, 357], "proportion": [94, 286], "raster": [94, 95, 155, 276, 283, 383, 384, 385], "ghostscript": [94, 122], "enlarg": 94, "sent": [94, 148, 154, 155, 201, 207, 216, 217, 243, 276, 282, 283, 328, 330, 336, 345, 346, 370, 385], "lpr": [94, 228, 357], "chooser": [94, 128, 129, 174, 184, 224, 228, 255, 256, 303, 312, 313, 353, 357], "9985": 94, "9971": [94, 344], "841": 94, "7917": [94, 197, 249, 326], "broad": 95, "emul": [95, 244, 326], "phenomena": [95, 249, 367, 368], "extrins": 95, "recur": 95, "correl": [95, 194, 197, 249, 323, 326, 327], "nt": [95, 155, 248, 283], "1016": [95, 248, 249], "jneumeth": [95, 248, 249], "010": [95, 210, 217, 248, 249, 339, 346], "preprint": [95, 121], "nrnpub": 95, "96444": 95, "destexh": [95, 121, 248, 249], "398": [95, 248, 249], "1007": [95, 248, 249], "s10827": [95, 248, 249], "007": [95, 248, 249], "0038": [95, 248], "encourag": [95, 155, 283, 379], "347": [95, 249], "628": 95, "663": [95, 249], "913": [95, 249], "456": [95, 249], "245": [95, 197, 249, 326], "281": [95, 249], "295": [95, 197, 249, 326], "confound": [95, 155, 283], "luck": 95, "reliabl": [95, 217, 249, 346], "surrog": [95, 249], "initn": 95, "nsnum": 95, "ns_list": 95, "stim_t": [95, 384, 385], "stim_id": 95, "my_run": 95, "seed": [95, 117, 155, 194, 196, 283, 323, 325], "id_": [95, 200, 329], "3f": [95, 193, 322], "noisefromrandom123": 95, "essenc": 95, "attend": 95, "randomli": [95, 368], "salmon": 95, "jk": 95, "mora": 95, "dror": 95, "ro": [95, 249], "shaw": [95, 249], "1145": [95, 249], "2063384": 95, "2063405": 95, "independent_netstim": 95, "all_random_stream": 95, "vline": [95, 276, 383, 384, 385], "ytick": 95, "xlim": 95, "subplot": [95, 276, 373], "ylabel": [95, 367, 368, 372, 377, 378, 388], "603": 95, "226": [95, 249], "187": [95, 249], "459": [95, 249], "528": [95, 249], "19": [95, 114, 115, 122, 155, 197, 208, 239, 249, 283, 326, 337, 375, 382, 383, 387, 388], "546": [95, 249], "827": 95, "variabletimestep": [96, 121, 224, 353], "disast": [98, 119], "segreg": [98, 119, 249], "q": [98, 119, 193, 210, 249, 322, 365], "groupmanag": [98, 119], "bulk": [98, 119], "newgroup": [98, 119], "changenam": [98, 119], "savegroup": [98, 119], "relaunch": [98, 119, 239], "graf": [98, 119], "apicals_x": [99, 100, 101], "cb": [99, 279], "920": 99, "readout": 99, "reminisc": [99, 201, 225, 330, 354], "thermomet": 99, "temperatur": [99, 220, 224, 249, 349, 353, 370, 373, 388, 393], "tapercel": [99, 116], "smart": [100, 228, 357], "dumb": 100, "p1": [100, 197, 326, 372], "p0": [100, 372], "intercept": [100, 168, 197, 297, 307, 308, 326], "midwai": [100, 121], "menuselect": 100, "poisson": [102, 196, 197, 232, 325, 326, 361], "progenitor": 102, "briefli": 102, "unrespons": [102, 383], "spikedur": 102, "refrac": [102, 148, 276], "vastli": 103, "sesion": 103, "unbranch": [103, 121, 161, 290, 388], "30um": 103, "15000": 103, "uncheck": 103, "grace": [103, 249], "oliv": [103, 249], "toothpick": 103, "mnemon": 103, "nondescript": 103, "exp2syn": [104, 148, 275, 276, 388], "ampa": [104, 249, 383], "67": [104, 249, 387], "10um": 105, "dead": 106, "entail": 108, "subtask": 108, "slight": 108, "bend": 108, "ko": [114, 222, 249, 351, 388], "ki": [114, 388], "understood": [114, 115, 121, 210, 339, 379, 380], "111e": [114, 115], "cm4": [114, 115], "denomin": [114, 115, 283, 373], "m2": [114, 115, 193, 322], "kg": [114, 115], "sec2": [114, 115], "coul": [114, 115, 149, 277], "milliamp": [114, 115, 146, 161, 274, 290, 373], "utest1": [114, 115], "fundament": [114, 115, 149, 155, 156, 221, 277, 283, 284, 346, 350, 379], "retransl": [114, 115], "outset": [114, 115, 168, 197, 297, 326], "WILL": [114, 115, 155, 283], "annoi": [114, 115], "overpow": [114, 115], "imposs": [114, 115, 155, 207, 283, 336], "syntact": [114, 115], "ommit": [114, 115, 158, 286], "necess": [114, 115, 129, 155, 197, 217, 256, 283, 326], "disambigu": [114, 115, 379], "feet": [114, 115], "silent": [114, 115, 249], "wrote": [114, 115, 155, 283], "misinterpret": [114, 115], "strict": [114, 115, 149, 242, 243, 277], "microfarad": [114, 115, 149, 277], "mohm": [114, 115, 148, 149, 276, 277], "liter": [114, 115, 149, 150, 160, 246, 277, 278, 289], "millimolar": [114, 115, 149, 277], "022169e": [114, 115], "652": [114, 115], "602192": [114, 115], "rydberg": [114, 115], "179846": [114, 115], "141593": [114, 115], "lambert": [114, 115, 249], "183099": [114, 115], "candela": [114, 115], "typo": [114, 115, 149, 277, 379], "scop": [114, 115, 149, 277], "degc": [114, 115, 149, 277, 373], "96520": [114, 115, 149, 189, 277, 318], "14159": [114, 115, 149, 277], "foot2inch": [114, 115, 149, 277], "foot": [114, 115, 149, 249, 277], "misunderstand": [114, 115], "checker": [114, 115], "overreach": [114, 115], "unitsoff": [114, 115, 373], "unitson": [114, 115, 373], "a1": [114, 115, 249], "u1": [114, 115], "a2": [114, 115], "u2": [114, 115], "ascertain": [114, 115], "reactant": [114, 115, 158, 368], "flux": [114, 115, 249, 286, 371, 375], "milli": [114, 115], "numbersfootnot": 115, "fuli": 116, "parameterizedcod": 116, "your_starting_fil": 117, "iclamp_": 118, "mundan": 118, "handi": 118, "strang": 118, "mistyp": 118, "alias": [118, 197, 242, 326], "tauc2o": 118, "geom_nseg": 120, "lambda_f": 120, "x2": [120, 149, 150, 225, 277, 278, 354], "d2": [120, 249], "lam": 120, "fixnseg": 120, "topolgi": 120, "theoretician": 121, "sound": [121, 249, 379], "he": [121, 194, 207, 249, 323, 336, 379, 380], "judici": 121, "neurophysiolog": [121, 249], "grasp": 121, "reformul": [121, 249], "incept": 121, "wrestl": 121, "lend": 121, "robust": [121, 161, 249, 290], "oscil": [121, 220, 249, 349, 371], "genericallli": 121, "hindmarsh": [121, 217, 346], "taylor": [121, 249], "serban": [121, 217, 346], "decis": [121, 150, 249, 278, 379], "judgement": 121, "defer": [121, 155, 283], "preoccup": 121, "pose": [121, 371], "122": [121, 249], "seq": [121, 196, 222, 325, 351], "tremend": [121, 217, 346], "multiprocessor": 121, "acceler": [121, 249], "furthermor": [121, 143, 197, 217, 242, 271, 346, 378, 379], "exploratori": 121, "noteworthi": [121, 150, 278], "pinpoint": 121, "ephapt": [121, 249], "textual": 121, "increasingli": 121, "interoper": [121, 248, 249, 292, 373], "transport": [121, 249, 368], "borg": [121, 249], "graham": [121, 249], "formul": [121, 379, 380], "Their": 121, "determinist": [121, 148, 222, 249, 276, 286, 351], "countabl": 121, "began": 121, "plastic": [121, 249, 371], "stepsiz": [121, 197, 326], "standalon": [121, 239, 379], "modif": [121, 149, 208, 249, 277, 337, 379, 382], "februari": [121, 249], "2400": 121, "mail": 121, "subscrib": 121, "2005": [121, 153, 155, 217, 248, 249, 281, 283, 346, 379], "gradual": 121, "supplant": 121, "1600": [121, 249], "4000": [121, 226, 355], "supplement": 121, "email": [121, 243, 387], "telephon": 121, "searchabl": 121, "venu": 121, "tos": 121, "expertis": 121, "sejnowski": [121, 249, 365, 393], "johnston": [121, 249], "wu": [121, 249], "lytton": [121, 155, 248, 249, 283, 389, 392], "stuart": [121, 249], "2000": [121, 148, 248, 249, 276, 371, 375], "satellit": [121, 249], "societi": [121, 249], "california": [121, 249], "san": [121, 249], "diego": [121, 249], "announc": [121, 379, 380], "seminar": [121, 249], "episod": [121, 249], "educ": [121, 249], "european": [121, 249], "beowulf": [121, 155, 283], "ibm": [121, 249, 379], "gene": [121, 248, 249, 371], "xt3": 121, "uk": [121, 249, 372], "thalamocort": [121, 249], "assembli": [121, 249], "york": [121, 248, 249], "oxford": [121, 249], "lawrenc": [121, 249], "livermor": 121, "nation": [121, 149, 249, 277, 365], "foundat": [121, 249], "springer": [121, 248, 249], "verlag": [121, 249], "cannia": [121, 248, 249], "119": [121, 248, 249], "neurolab": [121, 249], "sunderland": [121, 249], "sinauer": [121, 249], "sundial": [121, 217, 346, 371], "llnl": [121, 217, 346], "grafex": 122, "ileak": 122, "notch": 122, "hypothesi": [122, 239], "tire": 122, "montag": 122, "annot": [122, 150, 239, 278, 286, 379, 380], "hardcopi": [122, 207, 336], "serif": 122, "typefac": 122, "slide": [122, 249], "cern": 122, "ch": [122, 193, 244, 322], "pttool": 122, "grif": 122, "card": [122, 128, 142, 168, 249, 255, 270, 297, 365], "ep": [122, 155, 217, 226, 346], "boundingbox": 122, "temp1": [122, 156, 284], "163": [122, 248, 249], "htb": 122, "261": [122, 249], "161": [122, 249], "psfile": 122, "hoffset": 122, "voffset": 122, "caption": [122, 174, 303], "registri": 122, "gsview": 122, "extract": [122, 155, 249, 283, 380, 382, 387, 388, 393], "ghostview": 122, "sorri": [122, 217, 346], "amaz": [122, 387], "puzzl": [122, 249], "functionfitt": [123, 135, 168, 224, 250, 263, 297, 353], "independentvar": [123, 250], "yexpr": [123, 168, 250], "praxisfit": [123, 250], "stopatnextquadform": [123, 250], "watchthefit": [123, 250], "roughfit": [123, 250], "argvalu": [123, 250], "currentvaluesasdefault": [123, 250], "fittodata": [123, 250], "readdatafil": [123, 250], "commonfunctionalform": [123, 250], "fitcriterion": [123, 250], "parameterrangelimit": [123, 250], "dataweight": [123, 250], "saverestorefunct": [123, 250], "readdata": [123, 250], "variabletofit": [123, 128, 250, 255], "parameterstovari": [123, 250], "parameterrang": [123, 250], "changeparmfromlist": [123, 250], "removeparmfromlist": [123, 250], "saverestorefitparam": [123, 250], "numberofdataregion": [123, 250], "anothervariabletofit": [123, 250], "dofit": [123, 250], "singlerunfit": [123, 250], "bequiet": [123, 250], "impedanceratio": [123, 125, 224, 250, 252, 353], "impx": [123, 125, 224, 250, 252, 353], "logavsx": [123, 125, 250, 252], "impshap": [123, 224, 250, 353], "replot": [124, 251], "rightmost": [124, 251], "1e6": [124, 129, 251, 256, 374], "interval3": [124, 251], "adjustweightregion": [124, 129, 251, 256], "moviemod": [125, 252], "recalcul": [125, 149, 161, 168, 220, 252, 277, 290, 297, 349], "initrun": [125, 129, 224, 252, 256, 353], "autoscal": [125, 252], "unus": [125, 127, 144, 160, 193, 252, 254, 272, 289, 322], "1mv": [125, 131, 252, 258], "selectloc": [126, 127, 253, 254], "showposit": [126, 253], "shapeselectact": [126, 253], "moveelectrod": [126, 253], "selectmeasur": [127, 254], "selectinject": [127, 254], "swapmeasur": [127, 254], "companion": [128, 193, 249, 255, 322], "ft1": [128, 255], "fd1": [128, 255], "rebuild": [128, 239, 255, 379], "errorvalu": [128, 255], "some_procedur": [128, 255], "cai0_ca_ion": [128, 144, 150, 255, 272, 278, 370], "parameterpanel": [128, 255], "held": [128, 129, 142, 149, 249, 255, 256, 270, 277, 355], "domainpanel": [128, 255], "obviat": [128, 154, 155, 217, 255, 282, 283, 346], "difficulti": [128, 197, 217, 239, 255, 326, 346, 371, 393], "optimizerpanel": [128, 255], "stop_praxi": [128, 133, 255, 257, 260, 388], "attr_praxi": [128, 133, 255, 257, 260, 388], "maxsteps": [128, 133, 255, 260], "printmod": [128, 133, 255, 260], "eigenvalu": [128, 193, 255, 322], "eigenvector": [128, 193, 255, 322], "pval_praxi": [128, 133, 255, 257, 260, 388], "savepath": [128, 255], "famili": [128, 139, 142, 197, 217, 220, 226, 228, 249, 255, 267, 270, 326, 346, 349, 355, 357], "regionfit": [128, 255], "yfit": [128, 255], "slave": [129, 256], "alternativli": [129, 256], "datafromclipboard": [129, 256], "retrievefromfil": [129, 256], "defaultfieldeditor": [129, 256], "savefitparm": [129, 256], "savefitbrows": [129, 256], "printwindowmanag": [129, 179, 228, 256, 308, 357], "outputvari": [129, 256], "patient": [129, 249, 256], "instant": [131, 258], "di": [131, 249, 258], "dv": [131, 197, 258, 326], "d2v": [131, 258], "dx2": [131, 258], "jwc": [131, 258], "i0": [131, 193, 258, 322], "jwt": [131, 258], "solvabl": [131, 258], "daspk": [131, 217, 258, 346], "deltafac": [131, 257, 258], "obei": [131, 148, 258, 276], "expens": [131, 149, 155, 222, 258, 277, 351, 371], "thumb": [131, 155, 258, 283], "cy": [131, 258], "qualif": [131, 258], "hang": [131, 258, 283], "target_var": [131, 155, 258, 280, 283], "transfer_phas": [131, 257, 258], "regret": [131, 258], "inconveni": [131, 155, 164, 228, 258, 283, 357], "jacobi": [131, 249, 258], "modest": [131, 149, 258, 277], "df": [131, 258], "1na": [131, 258], "2pi": [131, 168, 258], "yreal": 131, "iyimag": 131, "yimag": 131, "input_phas": [131, 257, 258], "ineffici": [131, 155, 193, 217, 224, 258, 283, 346, 385], "imp": [131, 233, 258, 362], "jacobian": [131, 134, 149, 217, 220, 258, 261, 277, 346, 349], "goldman": [132, 259], "katz": [132, 249, 259], "permeabl": [132, 249, 259, 286], "nai": [132, 144, 187, 259, 272, 388], "nao": [132, 144, 259, 272, 388], "rtf": [132, 259], "funnam": [133, 260], "efun_as_python_cal": [133, 260], "hoc_vector": 133, "scopmath": [133, 197, 260, 326], "varx": [133, 260], "efun": [133, 260], "paxi": [133, 260], "10g": [133, 186, 315, 368], "previous_index": [133, 260], "mcell_ran4_index": [133, 260], "x0": [133, 226, 260, 355], "reproduc": [133, 196, 197, 207, 249, 260, 325, 326, 336, 368], "mcell_ran4": [133, 196, 198, 260, 325, 327, 388], "method3": [134, 261], "hope": [134, 249, 261, 379], "diamlist": [134, 261], "extraeqn": [134, 261], "nts_spine": [134, 261], "spined3d": [134, 261], "presenc": [134, 148, 221, 249, 261, 276, 350, 387], "spatial_method": [134, 261], "nemo": [134, 261], "neuron2nemo": [134, 261], "miller": [134, 248, 249, 261], "nemosi": [134, 261], "nemo2neuron": [134, 261], "mike": 135, "neubig": [135, 249], "glyph": [135, 226, 263, 355, 388], "guimath": [135, 198, 263, 327, 388], "ptrvector": [135, 209, 263, 338, 388], "pwmanag": [135, 170, 179, 223, 263, 299, 308, 352, 388], "stringfunct": [135, 156, 182, 187, 212, 263, 284, 316, 341, 388], "symchoos": [135, 167, 179, 182, 218, 263, 296, 308, 311, 347, 388], "texteditor": [135, 179, 263, 308, 388], "timer": [135, 155, 213, 239, 263, 283, 342, 388], "valuefieldeditor": [135, 179, 263, 308, 388], "kschan": [135, 141, 147, 158, 263, 269, 275, 286, 368, 388], "mechanismtyp": [135, 141, 155, 199, 211, 217, 263, 269, 283, 328, 340, 346, 388], "rangevarplot": [135, 161, 162, 226, 228, 263, 290, 291, 355, 357, 388], "sectionbrows": [135, 162, 179, 263, 291, 308, 388], "statetransitionev": [135, 141, 147, 263, 269, 388], "predeclar": [135, 180, 263, 309], "grapher": [135, 226, 263, 355], "notif": [135, 263], "menuexplor": [135, 224, 263, 353], "obsolet": [135, 141, 154, 179, 180, 181, 183, 208, 209, 213, 217, 220, 263, 269, 282, 308, 309, 310, 312, 337, 338, 342, 346, 349], "showmechan": [136, 224, 264, 353], "kineticbuild": [136, 224, 264, 353], "pointmanag": [136, 264], "pointgroup": [136, 264], "pointprocessgroupmanag": [136, 264], "subtool": [137, 265], "markov": [137, 249, 265], "cleaner": [139, 267, 289, 379, 388], "dismiss": [139, 142, 168, 171, 207, 218, 226, 228, 234, 267, 270, 297, 300, 336, 347, 355, 357, 363], "supersed": [139, 156, 160, 176, 197, 203, 224, 267, 284, 289, 305, 332, 353], "xplacement": [139, 142, 267, 270], "yplacement": [139, 142, 267, 270], "subpanel": [139, 267], "panelstyl": [139, 267], "viewselect": [139, 267], "globalspec": [139, 267], "NO": [139, 155, 161, 181, 267, 283, 290, 310], "viewonenam": [139, 267], "submenu": [139, 151, 178, 227, 267, 279, 307, 356], "wherev": [140, 268, 385], "ed": [140, 149, 165, 197, 233, 248, 268, 277, 294, 326, 362], "valueeditor": [140, 268], "frankenhaus": [141, 269], "protein": [141, 200, 249, 269, 329, 368, 369, 370, 371, 374, 393], "subworld": [141, 152, 269, 280, 384], "anonym": [142, 208, 270, 337], "dur0": [142, 269, 270], "dur1": [142, 148, 270, 276], "dur2": [142, 148, 270, 276], "vclampigraph": [142, 269, 270], "currentgraph": [142, 270], "vclampfamili": [142, 269, 270], "keeplin": [142, 270], "hoccod": [142, 270], "varyamp": [142, 270], "testlevel": [142, 269, 270], "returnlevel": [142, 269, 270], "amp2": [142, 148, 270, 276], "varlabel": [142, 270], "hocmech": 143, "make_mechan": [143, 269, 271, 275, 388], "parm1": [143, 271], "parm2": [143, 271], "parm3": [143, 271], "make_pointprocess": [143, 269, 271, 275, 388], "name_suffix": 143, "after_cvod": [143, 271], "after_step": [143, 271], "stagger": [143, 217, 271, 346], "noload": [143, 165, 197, 207, 294, 326, 336], "v_max": [143, 271], "oldstyl": [144, 272], "name_ion": [144, 272], "c_style": [144, 272], "e_styl": [144, 272], "einit": [144, 272], "eadvanc": [144, 272], "cinit": [144, 272], "na_ion": [144, 239, 272, 326, 388], "k_ion": [144, 239, 272, 388], "ca_ion": [144, 160, 272, 289], "nai0_na_ion": [144, 272, 388], "nao0_na_ion": [144, 272, 388], "cao": [144, 150, 249, 272, 278], "cao0_ca_ion": [144, 150, 272, 278, 370], "ion_regist": [144, 269, 272, 388], "inam": [144, 272], "nameo": [144, 272], "namei": [144, 226, 272], "enam": [144, 272], "diname_dv": [144, 272], "ion_charg": [144, 269, 272, 388], "java": [145, 273, 365], "albeit": [145, 273, 339], "setstructur": [145, 273, 275], "remove_st": [145, 273, 275], "ksstate": [145, 269, 273, 275, 388], "remove_transit": [145, 273, 275], "kstran": [145, 269, 273, 275, 388], "ngate": [145, 273, 275, 286], "nstate": [145, 159, 273, 275, 288], "ntran": [145, 273, 275], "nligand": [145, 273, 275], "iv_typ": [145, 273, 275], "erev": [145, 273, 275], "add_hhstat": [145, 273, 275], "add_ksstat": [145, 273, 275], "add_transit": [145, 273, 275], "src_index": [145, 273], "target_index": [145, 273], "src_ksstate": [145, 273], "target_ksst": [145, 273], "tran": [145, 155, 249, 273, 275, 283], "ksgate": [145, 269, 273, 275, 388], "helper": [145, 200, 239, 273, 329], "sindex": [145, 273, 275], "set_f": [145, 273, 275], "ftype": [145, 273, 275], "parmvec": [145, 273], "vvec": [145, 273], "avec": [145, 273], "bvec": [145, 273], "inftau": [145, 273, 275], "infvec": [145, 273], "tauvec": [145, 273], "parm": [145, 273, 275], "lm": [146, 249, 274], "y0": [146, 226, 274, 355], "sl": [146, 162, 164, 208, 232, 234, 274, 289, 291, 302, 337, 361, 363], "layervec": [146, 274], "pycal": [146, 159, 247, 274, 288, 346], "matric": [146, 193, 274, 322], "spars": [146, 149, 193, 217, 249, 274, 277, 322, 346], "vext": [146, 148, 150, 155, 217, 274, 276, 278, 283, 346, 388], "outward": [146, 148, 150, 274, 276, 278], "mathrm": [146, 274, 346, 368, 374], "mu": [146, 249, 274, 371], "nf": [146, 274], "kenneth": [146, 274], "kundert": [146, 274], "netlib": [146, 193, 274, 322], "pendulum": [146, 274], "omega": [146, 274], "cmat": [146, 274], "gmat": [146, 274], "setval": [146, 193, 205, 274, 322, 327, 334], "trajec": [146, 274], "_ref_x": [146, 205, 208, 260, 274, 283, 290, 313, 326, 333, 334, 337, 355, 361], "_ref_t": [146, 159, 208, 247, 274, 278, 288, 326, 333, 337, 340, 344, 367, 372, 373, 374, 375, 377, 378, 382, 383, 384, 385, 388], "prun": [146, 156, 216, 274, 280, 284, 345], "theta0": [146, 274], "omega0": [146, 274], "atol": [146, 217, 224, 274, 346, 353], "9999": [146, 274], "exec_menu": [146, 226, 232, 234, 274, 355, 361, 362, 363], "nonspecific_curr": [147, 275, 373], "for_netcon": [147, 275], "protect": [147, 148, 155, 249, 275, 276, 283], "mutexlock": [147, 275], "mutexunlock": [147, 275], "paradigm": [147, 249, 275], "function_t": [147, 275], "IF": [147, 275], "artificial_cel": [148, 151, 154, 211, 217, 276, 279, 282, 340, 346], "pnt": [148, 275, 276], "get_loc": [148, 151, 164, 275, 276, 293, 382, 388], "pop_sect": [148, 151, 154, 164, 208, 234, 276, 282, 289, 290, 293, 337, 363, 388], "brace": [148, 149, 181, 201, 277, 310, 330, 387], "get_seg": [148, 275, 276, 279, 293, 382, 388], "pyseg": [148, 276], "has_loc": [148, 275, 276, 382, 388], "stimobj": [148, 276], "umho": [148, 276], "micromho": [148, 276], "rstim": [148, 276], "vclmp": [148, 217, 276, 346], "amplfier": [148, 276], "stiff": [148, 149, 217, 276, 277, 346], "straightforwardli": [148, 276], "clampobj": [148, 276], "dur3": [148, 276], "amp3": [148, 276], "svclmp": [148, 276], "exceedingli": [148, 276], "s3": [148, 181, 197, 276, 310, 326], "c2": [148, 276, 351, 379], "c3": [148, 276, 379], "apc": [148, 276], "play_remov": [148, 197, 276, 326, 327], "thresh": [148, 197, 276, 326], "freed": [148, 150, 154, 159, 160, 193, 197, 204, 205, 226, 234, 276, 278, 283, 288, 289, 326, 333, 334, 355, 363], "condduct": [148, 276], "bath": [148, 276], "appoxim": [148, 276], "negexp": [148, 196, 197, 276, 325, 326], "m0": [148, 276], "infinitesim": [148, 217, 276, 346], "ib": [148, 187, 276], "taue": [148, 276], "taui1": [148, 276], "taui2": [148, 276], "i2": [148, 276], "relax": [148, 243, 249, 276], "isol": [148, 155, 168, 249, 276, 283, 297, 379], "setdata": [148, 276], "setdata_suffix": [148, 276], "setdata_hh": [148, 276, 388], "i_cap": [148, 276, 388], "ina_hh": 148, "ik_hh": 148, "rates_hh": [148, 227, 276, 356, 388], "mhn": [148, 276], "inf_hh": [148, 276], "tau_hh": [148, 276], "usetable_hh": [148, 276, 388], "ek": [148, 276, 373, 388], "fastpa": [148, 201, 276, 330, 388], "passive0": [148, 276], "wast": [148, 155, 156, 182, 276, 283, 284], "xraxial": [148, 276, 388], "xg": [148, 276, 388], "xc": [148, 276, 388], "e_extracellular": [148, 276, 388], "seal": [148, 276, 346], "sheath": [148, 249, 276, 388], "nlayer": [148, 276], "violenc": [148, 276], "believ": [148, 149, 276, 277], "extcab": [148, 276], "xcaxial": [148, 276], "truth": [148, 249, 276, 326], "v4": [148, 197, 276, 326], "sav_g": [148, 276], "ndlist": [148, 276], "sav_rh": [148, 276], "rootnod": [148, 276], "extracellularli": [148, 249, 276], "recompil": [148, 230, 242, 359, 385], "nbsr": [149, 277], "cagk": [149, 277], "among": [149, 155, 249, 277, 283, 379, 380], "biomed": [149, 249, 277], "v2": [149, 193, 197, 249, 277, 322, 326, 388], "advent": [149, 277], "entitl": [149, 243, 277], "file3": [149, 184, 277, 313], "aros": [149, 277], "frankenhaeus": [149, 277, 368], "appar": [149, 153, 249, 277, 281, 379], "glean": [149, 277], "highli": [149, 239, 249, 277, 379], "instabl": [149, 150, 249, 277, 278], "cabpump": [149, 217, 277, 346], "endcom": [149, 277, 373], "variable_nam": [149, 277], "integer_valu": [149, 277], "legibl": [149, 277], "nrnunit": [149, 262, 277], "nrn_dynamic_units_use_legaci": [149, 262, 277], "todo": [149, 150, 155, 277, 278, 283], "enforc": [149, 277], "stylist": [149, 277], "substant": [149, 239, 277], "augment": [149, 155, 249, 277, 283], "section1": [149, 150, 277, 278], "var1_mech1": [149, 150], "section2": [149, 150, 277, 278], "var2_mech2": [149, 150], "everytim": [149, 150, 277, 278], "var2": [149, 150, 201, 211, 277, 278, 330, 340], "var1": [149, 150, 201, 277, 278, 330], "vpre": [149, 150, 201, 277, 278, 330], "somedendrit": [149, 150], "tpre": [149, 150, 277, 278], "ach_releas": [149, 150], "inc": [149, 187, 248, 249, 277], "colon": [149, 165, 201, 249, 277, 294, 330, 387], "modl_includ": [149, 277], "inclus": [149, 197, 239, 277, 326, 387], "rung": [149, 277], "kutta": [149, 277], "cheap": [149, 277], "hh2": [149, 277], "microsiemen": [149, 277], "nor": [149, 226, 277, 286, 355], "infin": [149, 187, 197, 217, 226, 277, 326, 346, 355], "state1": [149, 277], "state2": [149, 277], "nonloc": [149, 277], "longitudin": [149, 249, 277, 286], "flux_expr": [149, 277], "setdata_mechnam": [149, 277], "mechnam": [149, 171, 208, 277, 300, 328, 337], "pp_objref": [149, 277], "procnam": [149, 234, 277, 363], "uncommon": [149, 277, 379], "tables": [149, 277], "greatest": [149, 277, 313], "usetable_suffix": [149, 220, 277, 349], "spent": [149, 155, 277, 283], "repaid": [149, 277], "state0": [149, 277], "cai0": [149, 277], "\u03bdmod\u03bb": [149, 277], "table_tau1_": [149, 277], "mod_suffix": [149, 277], "tau1_vec": [149, 277], "v_vec": [149, 277], "tau1_k3st": [149, 277], "doubli": [149, 277], "iclamp1": [149, 150, 277, 278], "_name": [150, 278], "underscor": [150, 278, 382, 388], "overload": [150, 158, 278], "omiss": [150, 278], "transmembran": [150, 249, 278, 346], "iion": [150, 278], "ioni": [150, 278], "iono": [150, 278], "eion": [150, 262, 278], "treatment": [150, 249, 278, 373], "privileg": [150, 164, 249, 278], "conserv": [150, 197, 249, 278, 326, 346, 368], "curi": [150, 278, 286], "uri": [150, 278, 286], "chebi": [150, 278, 286, 373], "29101": [150, 278, 286, 373], "wors": [150, 278, 379], "subtl": [150, 155, 249, 278, 283, 379], "reconnect": [150, 160, 278, 289], "fname_othermodelsuffix": [150, 278], "fornetcon": [150, 278], "mcna": [150, 278], "cadif": [150, 278], "vein": [150, 278], "adequ": [150, 155, 278, 283], "set_foo": [150, 246, 278], "exclus": [150, 178, 228, 242, 244, 246, 249, 278, 307, 357, 379, 380], "1762": [150, 246, 278, 379], "nrn_version_eq": [150, 246, 278], "nrn_version_n": [150, 246, 278], "nrn_version_gt": [150, 246, 278], "nrn_version_lt": [150, 246, 278], "nrn_version_gteq": [150, 246, 278], "nrn_version_lteq": [150, 246, 278], "nrn_version_gteq_8_2_0": [150, 246, 278], "nrn_version_": [150, 246, 278], "gt": [150, 246, 278, 370, 373, 375, 382, 388], "lt": [150, 246, 249, 278, 373, 375, 382, 388], "gteq": [150, 246, 278], "lteq": [150, 246, 278], "caution": [150, 155, 246, 278, 283, 393], "restraint": [150, 246, 278], "oppos": [151, 154, 226, 249, 279, 282, 287, 355, 387], "mname": [151, 279], "strarg": 151, "nop": 151, "is_netcon_target": [151, 269, 279], "boolean": [151, 154, 155, 160, 163, 166, 168, 172, 175, 184, 192, 194, 197, 207, 217, 226, 279, 282, 283, 289, 292, 295, 297, 301, 304, 321, 323, 326, 336, 346, 355], "has_net_ev": [151, 269, 279], "is_artifici": [151, 211, 269, 279, 340, 341], "patternstim": [151, 275, 276, 279, 388], "pp_begin": [151, 269, 279], "nullobject": [151, 154, 160, 180, 182, 279, 309, 311], "child": [151, 155, 160, 161, 163, 208, 279, 283, 289, 290, 292, 337, 379], "pp_next": [151, 269, 279], "internal_typ": [151, 155, 269, 279, 283], "lyttonmpi": [153, 281], "mc": [153, 155, 193, 281, 283], "anl": [153, 155, 281, 283], "jul": [153, 154, 281, 282], "readili": [153, 249, 281, 373], "password": [153, 155, 243, 281, 283], "ssh": [153, 155, 243, 244, 281, 283], "localhost": [153, 281], "rsa": [153, 155, 281, 283], "rsh": [153, 155, 281, 283], "unlikelyto": [153, 281], "environment": [153, 242, 281], "rshcommand": [153, 155, 281, 283], "mush": [153, 281], "setenv": [153, 281], "csh": [153, 155, 281], "tcp": [153, 281], "ch_p4": [153, 155, 281, 283], "where_you_want_it": [153, 281], "i686": [153, 155, 200, 281, 283, 329], "mpich_path": [153, 281], "mpich_lib": [153, 281], "ld_library_path": [153, 242, 281], "where_to": [153, 281], "where_is_iv": [153, 281], "billl": [153, 281], "your_machin": [153, 281], "pend": [154, 155, 184, 217, 229, 282, 283, 313, 346, 358], "retain": [154, 197, 207, 249, 276, 282, 326, 336, 379], "hoc_paramet": 154, "passag": [154, 282], "suspect": [154, 282], "use_local_dt": [154, 197, 217, 326, 346], "neosim": [154, 282], "detector": [154, 155, 239, 249, 282, 283, 383, 385], "tdeliv": [154, 282], "target_object": [154, 282], "source_object": [154, 282], "preloc": [154, 280, 282], "postloc": [154, 280, 282], "cellobj": [154, 282], "setpost": [154, 280, 282], "newtarget": [154, 282], "Will": [154, 282], "prelist": [154, 280, 282], "postcelllist": [154, 280, 282], "precelllist": [154, 280, 282], "wcnt": [154, 280, 282], "0th": [154, 181, 197, 208, 282, 310, 326, 337, 385], "neccon": [154, 282], "idvec": [154, 156, 282, 284], "nb": [154, 161, 282, 290, 388], "ceas": [154, 282], "save_window_": 154, "rvp_": 154, "scene_vector_": 154, "ocbox_": 154, "ocbox_list_": 154, "scene_": 154, "scene_list_": 154, "flip_to": [154, 168, 297, 308], "152": [154, 249], "493": [154, 249], "save_nam": [154, 226, 232, 234, 355, 361, 363], "presyn": [154, 155, 217, 239, 282, 283, 346], "condition_ord": [154, 159, 217, 282, 288, 346], "get_recordvec": [154, 280, 282], "srcgid": [154, 155, 280, 282, 283], "interprocessor": [154, 155, 217, 282, 283, 346], "gid_connect": [154, 155, 156, 276, 280, 282, 283, 284, 385], "linda": [155, 283, 365], "week": [155, 283, 379, 380], "month": [155, 249, 283, 379, 380], "pvm": [155, 156, 283, 284], "pack": [155, 280, 283], "upkpyobj": [155, 280, 283], "pickleabl": [155, 283], "pickl": [155, 283], "scatter": [155, 205, 283, 334, 346, 369, 373], "submiss": [155, 283], "unexecut": [155, 283], "stringent": [155, 283], "subsidiari": [155, 283], "trap": [155, 166, 249, 283, 295, 373], "innermost": [155, 283], "amort": [155, 283], "bbsworker": 155, "hineshf": 155, "pinki": 155, "descend": [155, 161, 290], "userid": [155, 280, 283], "myid": [155, 156, 283, 284], "ihost": [155, 283], "mpi_comm_rank": [155, 283], "function_nam": [155, 283], "python_cal": [155, 283], "server": [155, 230, 242, 283, 359, 379], "copyofarg1": 155, "indetermin": [155, 283], "pedant": 155, "upkvec": [155, 280, 283], "IT": [155, 249], "BE": 155, "THE": [155, 231, 360], "pc1": [155, 283], "pc2": [155, 283], "python_object": [155, 283], "idl": [155, 283], "save_context": [155, 283], "tstr": [155, 184], "look_tak": [155, 280, 283], "restore_context": 155, "bulletproof": [155, 283], "invari": [155, 249, 283], "upset": [155, 283], "upkstr": [155, 280, 283], "upkscalar": [155, 280, 283], "str": [155, 168, 184, 204, 211, 283, 286, 289, 297, 333, 334, 337, 340, 361, 387], "vecsrc": [155, 283], "unpickl": [155, 283], "st": [155, 210, 249, 283], "clock": [155, 249, 283], "mpi_wtim": [155, 283], "clock_t": [155, 283], "wait_tim": [155, 156, 280, 283, 284], "step_wait": 155, "step_tim": [155, 280, 283], "integ_tim": [155, 280, 283], "event_tim": [155, 280, 283], "barrier": [155, 217, 249, 280, 283, 346, 368, 385], "allgath": [155, 280, 283], "send_tim": [155, 280, 283], "vtransfer_tim": [155, 280, 283], "transfer_exchange_tim": [155, 283], "splitcell_exchange_tim": [155, 283], "reducedtree_computation_tim": [155, 283], "splitcel": [155, 156, 280, 283, 284], "backbone_styl": [155, 283], "mech_tim": [155, 280, 283], "mechanism_tim": [155, 283], "twofold": [155, 283], "crunch": [155, 283], "client": [155, 283, 375], "promptli": [155, 283], "dealt": [155, 167, 283, 296], "pvm_send": [155, 283], "pvm_recv": [155, 283], "asynchron": [155, 249, 283], "sigpol": [155, 283], "pvm_probe": [155, 283], "win95": [155, 283], "poll": [155, 283], "polldelai": [155, 283], "seldom": [155, 197, 283, 326], "stl": [155, 283], "lucki": [155, 283], "24": [155, 170, 197, 248, 249, 283, 299, 326, 382, 383, 387, 388], "osx": [155, 213, 242, 244, 283, 342], "g5": [155, 283], "node0": [155, 283], "node11": [155, 283], "opinion": [155, 283], "bill": [155, 249, 283, 389, 392], "node1": [155, 283], "late": [155, 249, 283], "keygen": [155, 283], "id_rsa": [155, 283], "pub": [155, 283], "authorized_kei": [155, 283], "systemprefer": [155, 283], "servic": [155, 249, 283, 379], "remotelogin": [155, 283], "pwd": [155, 238, 244, 283], "powerpc": [155, 194, 200, 283, 323, 329], "mpicc": [155, 283], "mpicxx": [155, 283], "mpic": [155, 283], "confid": [155, 283], "machinefil": [155, 283], "mpifil": [155, 283], "gcc2": [155, 283], "srcdir": [155, 213, 283], "withmpi": [155, 283], "carbon": [155, 249, 283, 365], "nrnmpi_init": [155, 283, 385, 388], "58": [155, 248, 249, 276, 283, 387], "libnrnmech": [155, 208, 242, 283, 375], "neurondev": [155, 283], "bbs_msg_cnt_": [155, 283], "bbs_poll_cnt_": [155, 283], "6667": [155, 283], "bbs_poll_": [155, 283], "mpi32": [155, 283], "bizarr": [155, 283], "tiger": [155, 249, 283], "creator": [155, 283], "waittim": [155, 283], "mpi_barri": [155, 283], "allreduc": [155, 280, 283], "src_dest_vector": [155, 283], "result_vector": [155, 283], "alltoal": [155, 280, 283], "vsrc": [155, 197, 283, 326], "vcnt": [155, 283], "vdest": [155, 197, 283, 326], "mpi_alltoallv": [155, 283], "cnt": [155, 172, 199, 216, 217, 283, 301, 328, 345, 346], "tvl": [155, 283], "py_alltoal": [155, 280, 283, 385], "destlist": [155, 283], "srclist": [155, 283], "100k": [155, 283], "src_buffer_s": [155, 283], "dest_buffer_s": [155, 283], "intermingl": [155, 283], "ba5e547c21f6": 155, "2013": [155, 248, 249], "2012": [155, 249, 365], "broadcast": [155, 280, 283], "assynchron": [155, 283], "indirectli": [155, 239, 283], "specfi": [155, 283], "id_world": [155, 280, 283], "id_bb": [155, 280, 283], "nhost_world": [155, 280, 283], "nhost_bb": [155, 280, 283], "subworld_s": [155, 283], "03d": [155, 283], "bb": [155, 283, 368], "sleep": [155, 249, 283, 290, 326, 334], "nafter": [155, 283], "nbefor": [155, 283], "454": [155, 249], "bb5c4f755f59": 155, "192": [155, 249, 283], "492": [155, 249, 283], "091": [155, 283], "310": [155, 242, 243, 244, 249, 283], "netparmpi": [155, 156, 283, 284], "targetsynaps": [155, 283], "networkreadycel": [155, 156, 168, 283, 284, 297], "sid": [155, 283], "accessor": [155, 283], "gid2cel": [155, 208, 280, 283, 337, 385], "rigor": [155, 283], "invent": [155, 249, 283], "identif": [155, 249, 283], "outputcel": [155, 156, 280, 283, 284], "set_gid2nod": [155, 156, 276, 280, 283, 284, 385], "dendro": [155, 249, 283], "gid_exist": [155, 156, 280, 283, 284, 385], "unwrap": [155, 156, 221, 283, 284, 350], "principl": [155, 156, 249, 283, 284, 370, 379], "spiketimevector": [155, 283], "gidvector": [155, 283], "gid_clear": [155, 280, 283], "set_maxstep": [155, 156, 216, 217, 276, 280, 283, 284, 345, 346, 385], "timeout": [155, 178, 280, 283, 307], "oldtimeout": [155, 283], "massiv": [155, 283, 379], "local_minimum_delai": [155, 283], "default_max_step": [155, 283], "mpi_allgath": [155, 283], "spike_compress": [155, 217, 280, 283, 346], "gid_compress": [155, 283], "compress": [155, 197, 249, 283, 286, 326], "spiketim": [155, 239, 283], "mpi_allgatherv": [155, 283], "queue_mod": [155, 217, 283, 346], "gid2obj": [155, 156, 280, 283, 284], "spike_statist": [155, 156, 280, 283, 284], "nsendmax": [155, 156, 283, 284], "nsend": [155, 156, 283, 284], "nrecv": [155, 156, 283, 284], "nrecv_us": [155, 156, 283, 284], "max_histogram": [155, 280, 283], "maxspik": [155, 283], "max_spikes_sent_by_any_host": [155, 283], "nrn_spikebuf_s": [155, 283], "at_tim": [155, 217, 239, 283, 346], "dae": [155, 217, 283, 346], "source_var": [155, 280, 283], "source_global_index": [155, 283], "1096": [155, 249, 283], "294dac40175f": [155, 283], "target_vari": [155, 283], "targetpointprocess": [155, 283], "source_vari": [155, 283], "setup_transf": [155, 280, 283], "inter": [155, 249, 283], "rootsect": [155, 283], "splitcell_connect": [155, 283], "host_with_other_subtre": [155, 283], "has_par": [155, 163, 283, 289, 292], "backbon": [155, 283], "milit": [155, 283], "forthcom": [155, 283], "anyon": [155, 283, 379], "elect": [155, 283], "favor": [155, 160, 249, 283, 289, 326], "shortest": [155, 197, 249, 283, 326], "gausian": [155, 283], "dereferenc": [155, 283, 334], "partit": [155, 244, 280, 283], "seclist": [155, 233, 283, 361], "thread_stat": [155, 280, 283], "thread_busywait": [155, 280, 283], "thread_how_many_proc": [155, 280, 283], "concurr": [155, 249, 283], "hardware_concurr": [155, 283], "hyperthread": [155, 283], "sec_in_thread": [155, 280, 283], "resid": [155, 283], "thread_ctim": [155, 280, 283], "ct": [155, 249, 283], "tid": [155, 283], "prcellstat": [155, 239, 280, 283], "precellst": [155, 283], "_suffix": [155, 283], "nrndat": [155, 283], "diagnos": [155, 283], "diff": [155, 244, 283, 286, 368, 379], "nri": [155, 283], "netrec": [155, 220, 224, 283, 349, 353], "pnm": [156, 284], "285": [156, 249], "granular": [156, 197, 249, 284, 326], "signfic": [156, 284], "source_cell_gid": [156, 284], "target_cell_gid": [156, 284], "intent": [156, 160, 222, 284, 289, 351, 379], "128": [156, 197, 249, 284, 326], "ye": [156, 187, 239, 249, 284, 316, 387], "foolish": [156, 284], "round_robin": [156, 280, 284], "sprinkl": [156, 284], "lesser": [156, 164, 284], "meti": [156, 284], "prstat": [156, 280, 284], "neighbor": [156, 284], "register_cel": [156, 280, 284], "presuppos": [156, 284], "paragraph": [156, 197, 283, 284, 326], "ncstim": [156, 284, 383], "want_all_spik": [156, 280, 284], "spikevec": [156, 284], "1n": [156, 284], "2n": [156, 284], "gatherspik": [156, 280, 284], "machine_id": [156, 284], "create_cel": [156, 280, 284], "cellobject": [156, 284], "obexpr": [156, 284], "src_gid": [156, 284], "target_gid": [156, 284], "synapse_id": [156, 284], "is_point_process": [156, 211, 284, 340, 341], "src_id": [156, 284], "synapse_target_object": [156, 284], "gidvec": [156, 276, 284], "pinit": [156, 280, 284], "pcontinu": [156, 280, 284], "hostca": [156, 284], "hostpar": [156, 284], "fclamp": [157, 220, 269, 285, 349, 388], "fclampi": [157, 269, 285, 388], "fclampv": [157, 269, 285, 388], "prstim": [157, 269, 285, 388], "fsyn": [157, 285, 388], "pyobj": 158, "tradition": [158, 379], "gotcha": [158, 382], "__add__": [158, 388], "cabuf": [158, 374], "cabufi": 158, "multicompartmentreact": [158, 269, 286, 368, 369, 371], "set_solve_typ": [158, 269, 286], "interchang": [158, 286, 326, 388], "plasma": [158, 286, 368, 371], "er": [158, 249, 286, 368, 371], "rxdgeometri": [158, 286], "distributedboundari": [158, 286, 371], "fractionalvolum": [158, 286, 368, 371], "fixedcrosssect": [158, 286, 368], "fixedperimet": [158, 286, 368], "scalablebord": [158, 286], "changeabl": [158, 286], "ip3r": [158, 286, 371], "react": [158, 286, 368], "generalizedreact": [158, 286], "reactant_sum": [158, 286], "product_sum": [158, 286], "forward_r": [158, 286], "backward_r": [158, 286], "custom_dynam": [158, 286, 368, 372], "kf": [158, 286, 368, 375], "kb": [158, 286, 368, 370, 375], "ca_plus_buf": 158, "admittedli": [158, 159, 217, 288], "membrane_flux": [158, 286, 368], "constant_product": [158, 286], "dprotein": [158, 286], "live": [158, 211, 249, 286, 340], "border": [158, 228, 249, 286, 357], "scale_by_area": [158, 286], "acosh": [158, 286, 287], "asinh": [158, 286, 287], "copysign": [158, 286, 287], "expm1": [158, 286, 287], "lgamma": [158, 286, 287], "log1p": [158, 286, 287], "trunc": [158, 286, 287], "vtrap": [158, 286, 287, 373], "nodelist": [158, 269, 286], "_ref_concentr": [158, 286, 368, 372], "node_list": [158, 286], "nl": [158, 368], "__get__item": 158, "satifi": [158, 286], "new_node_list": [158, 286], "just_er": [158, 286], "jneuroml": [158, 286], "finer": [158, 286], "num_thread": [158, 286], "rxdexcept": [158, 269, 286], "__str__": [158, 388], "ste": [159, 288], "istat": [159, 288], "grotesqu": [159, 288], "tnext": [159, 288], "fteinit": [159, 288], "steps_per_m": [159, 288], "1353": [159, 288], "fa0eeb93b0fb": [159, 288], "881784197e": [159, 288], "30926389122e": [159, 288], "015625": [159, 288], "43225906488": [159, 288], "11022302463e": [159, 288], "exhibit": [159, 249, 288], "triggervar": [159, 288], "triggerthreash": [159, 288], "deactiv": [159, 249, 288], "isrcstat": [159, 288], "idestst": [159, 288], "triggerthresh": [159, 288], "hocref": 159, "subtleti": [159, 288], "earliest": [159, 217, 239, 288, 346], "_ref_v": [159, 208, 247, 276, 277, 278, 282, 283, 288, 326, 337, 344, 373, 382, 383, 384, 388], "tevent": [159, 217, 288, 346], "delete_sect": [160, 161, 163, 199, 269, 289, 292, 388], "section_exist": [160, 163, 269, 289, 292, 388], "section_own": [160, 269, 289, 388], "pointprocesss": 160, "reloc": [160, 171, 234, 235, 249, 289, 300, 363, 364], "sim1": [160, 289], "oddfactor": [160, 289], "sim2": [160, 289], "sim3": [160, 289], "issect": [160, 164, 269, 289, 388], "n1": [160, 289], "n2": [160, 289], "abz45": [160, 289], "sectionnam": [160, 164, 269, 289, 293, 388], "parent_sect": [160, 269, 289, 388], "parent_nod": [160, 269, 289, 388], "parent_connect": [160, 163, 269, 289, 292, 388], "section_orient": [160, 163, 269, 289, 292, 388], "permit": [161, 249, 290, 333, 379, 387, 388], "paramount": [161, 290], "pt3dconst": [161, 269, 289, 290, 388], "respecifi": [161, 290], "micron2": [161, 290], "cone": [161, 249, 290], "niceti": [161, 290], "nonlinearli": [161, 290], "sight": [161, 290], "66": [161, 249, 290, 387], "fewest": [161, 290], "suffic": [161, 290, 326, 384], "trapezoid": [161, 231, 249, 290, 360], "degener": [161, 249, 290], "curvatur": [161, 290], "simplist": [161, 290], "decoupl": [161, 249, 290], "dendrite_1": [161, 234, 290, 363], "pt3dstyle": [161, 269, 289, 290, 388], "buffers": [161, 290], "diam_shap": 161, "coincid": [161, 249, 290, 368], "pt3dinsert": [161, 269, 289, 290, 388], "pt3dremov": [161, 269, 289, 290, 388], "naiv": [161, 290], "ruin": [161, 290], "1e30": [161, 290], "1e20": [161, 290], "600": [161, 168, 230, 249, 297, 359], "700": [161, 166, 168, 191, 239, 295, 297, 320], "leaf": [162, 291], "allroot": [162, 289, 291], "printnam": [162, 202, 289, 291, 331], "sref": [163, 292], "section_pop": 163, "truepar": [163, 289, 292, 388], "has_truepar": [163, 289, 292], "nchild": [163, 289, 292], "is_ca": [163, 289, 292], "varnam": [164, 170, 174, 178, 199, 201, 208, 226, 232, 299, 303, 307, 328, 330, 337, 355], "push_sect": [164, 203, 234, 289, 293, 332, 363, 388], "resort": [164, 293], "perman": [164, 228, 357], "priviledg": [164, 245], "go_to": 164, "getloc": [164, 293], "section_nam": [164, 293], "this_sect": [164, 203, 293, 332, 338, 388], "corrupt": [164, 239, 293], "tilda": [165, 294], "err": [165, 294], "show_err_m": [165, 294], "outside_var": [165, 294], "unavail": [165, 294], "name1": [165, 294], "hoc_library_path": [165, 294], "descriptor": [165, 294, 387], "coredump": [166, 207, 295, 336], "nrn_fenableexcept": [166, 295], "previous_floating_point_mask": [166, 295], "sigfp": [166, 239, 295], "nan": [166, 187, 240, 286, 295], "inf": [166, 187, 197, 240, 295, 326, 327, 373], "ulimit": [166, 295], "unlimit": [166, 295], "mask": [166, 249, 295], "feenableexcept": [166, 239, 295], "message1": [166, 295], "message2": [166, 295], "cancel": [167, 168, 174, 184, 191, 207, 227, 228, 296, 297, 303, 313, 320, 336, 356, 357, 388], "ncard": [168, 297], "mkgraph": [168, 297], "xexpr": [168, 226, 355], "le": [168, 249, 297, 368], "ldot": [168, 297], "height": [168, 175, 191, 226, 297, 304, 320, 355, 387], "unmap": [168, 172, 226, 228, 232, 234, 297, 301, 308, 355, 357, 361, 363], "depict": [168, 297], "procedure_nam": [168, 226, 297, 355], "remove_last": [168, 297, 308], "move_last": [168, 297, 308], "scrollbox": [168, 178, 297, 307], "tile": [168, 297], "inset": [168, 297], "sea": [168, 297], "ismap": [168, 297, 308], "proc_nam": [168, 297], "stringn": [168, 297], "unreferenc": [168, 169, 276, 297, 298], "dismiss_act": [168, 297, 308], "owner": [168, 297], "grab": [168, 245, 297, 385], "start_siz": [168, 297], "narrow": [168, 249, 297], "full_request": [168, 297, 308], "990": [168, 197, 249, 297, 326], "pointgroupmanag": [168, 297], "980": [168, 249, 297], "900": [168, 262, 297], "templatenam": [169, 182, 298, 311], "insrt": [169, 197, 298, 308, 326, 327], "decrement": [169, 172, 202, 298, 301, 331], "strname": [169, 298], "scroll_po": [169, 298, 308], "select_act": [169, 173, 226, 298, 302, 308, 355], "accept_act": [169, 173, 298, 302, 308], "ivoc_styl": [170, 299, 308, 388], "xvalue_format": [170, 299], "7g": [170, 299], "helvetica": [170, 299], "medium": [170, 249, 299, 379], "menubar": [170, 178, 224, 299, 307, 353], "menuitem": [170, 299], "variable_domain": [170, 178, 194, 196, 299, 308, 388], "lower_limit": [170, 299, 307], "upper_limit": [170, 299, 307], "portabl": [170, 197, 220, 248, 299, 326, 349], "nrnglobalmechmenu": [171, 199, 300, 308, 328, 388], "nrnmechmenu": [171, 199, 300, 308, 328, 388], "vestigi": [171, 231, 300, 360], "nrnsecmenu": [171, 300, 308, 388], "nrnpointmenu": [171, 199, 300, 308, 328, 388], "pointprocessobject": [171, 300], "labelstyl": [171, 300], "vartyp": [171, 199, 300, 328], "leader": [172, 301, 308], "printabl": [172, 223, 228, 301, 352, 357], "is_map": [172, 301, 308], "iconifi": [172, 228, 301, 308, 357], "deiconifi": [172, 301, 308], "un": [172, 197, 301], "group_object": [172, 301], "oo": [172, 301], "save_sess": [172, 223, 224, 228, 301, 352, 353, 357, 388], "group_obj": [172, 301], "snap": [172, 301, 308], "snapshot": [172, 207, 301, 336, 362], "decor": [172, 301], "arrow": [172, 176, 178, 226, 228, 301, 305, 307, 355, 357], "filebrows": [172, 301], "window_plac": [172, 301, 308], "paper_plac": [172, 301, 308], "deco": [172, 301, 308], "printfil": [172, 226, 232, 234, 301, 308, 355, 361, 363], "postcript": [172, 207, 301, 336], "sb": [173, 302], "objet": 173, "plotwhat": [174, 224, 227, 303, 353, 356], "scobj": [174, 303], "readonli": [175, 304, 308], "tex": [176, 305], "vfe": [177, 306], "laid": [178, 307], "panel_scrol": [178, 228, 307, 357], "ont": 178, "telltal": [178, 307], "contigu": [178, 200, 217, 307, 329, 346], "car": [178, 307], "mutual": [178, 202, 228, 249, 307, 331, 357], "six": [178, 197, 249, 307, 326, 328], "nextlin": [178, 307], "seven": [178, 249, 307], "recentdir": [178, 307], "walk": [178, 249, 307], "boolean_deflt": [178, 307], "boolean_canrun": [178, 307], "boolean_usepoint": [178, 307], "default_button": [178, 307], "kit": [178, 249, 307, 372], "push_button": [178, 307], "10th": [178, 197, 249, 307, 326], "send_cmd": 178, "vert": [178, 307], "stepper": [178, 228, 307, 357], "4th": [178, 215, 217, 307, 344, 346], "downsid": [178, 217, 307, 346], "current_unit": [178, 307], "units_on_flag": [178, 307], "obfunc": [180, 201, 208, 309, 330, 337, 388], "redirect": [180, 183, 213, 309, 312, 342], "plotter": [180, 183, 230, 309, 312, 359], "negat": [181, 310], "unequ": [181, 310], "objref1": [181, 310], "objref2": [181, 310], "strdef1": [181, 310], "strdef2": [181, 310], "obj1": [181, 310], "string1": [181, 212, 310, 341], "obj2": [181, 211, 310, 340], "string2": [181, 212, 310, 341], "subexpress": [181, 310], "vec1": [181, 197, 201, 310, 326, 330], "distil": [181, 310], "printsquar": [181, 310], "stmt3": [181, 201, 310, 330], "position": [181, 310], "dimension": [181, 193, 197, 200, 201, 226, 249, 310, 322, 326, 329, 330, 355, 368], "oi": [181, 249, 310], "mult": [181, 310], "o4": [181, 197, 226, 310], "argtyp": [181, 309, 310, 388], "ityp": [181, 310], "iarg": [181, 310], "nrn_dll": [182, 200, 208, 311, 329, 337], "name_declar": [182, 211, 311, 340, 388], "typeerror": [182, 208, 277, 311, 337, 383, 387], "unspecifi": [182, 311], "userproperti": [182, 311], "is_nam": [182, 211, 340, 341], "nrnmainmenu_": 182, "ldfile": 182, "hex": 182, "allobject": [182, 311, 388], "nref": [182, 311], "objectref": [182, 226, 279, 311], "fobj": [184, 313], "getnam": [184, 228, 312, 313, 357], "f1": [184, 228, 313, 357], "f2": [184, 313], "f3": [184, 313], "stdin": [184, 313], "stderr": [184, 197, 313, 326, 327], "mktemp": [184, 312, 313], "writabl": [184, 313], "unlink": [184, 312, 313], "scanvar": [184, 187, 312, 313, 316], "scanstr": [184, 312, 313], "delimit": [184, 313], "pathnam": [184, 313], "isopen": [184, 312, 313], "unimpl": [184, 313], "courtesi": [184, 313], "zach": [184, 197, 313, 326], "mainen": [184, 197, 249, 313, 326, 393], "helmholtz": [184, 313], "sdsc": [184, 313], "fwrite": [184, 197, 222, 313, 326, 327, 351], "fread": [184, 197, 222, 313, 326, 327, 351], "laser": [185, 249, 314], "writer": [185, 216, 314, 345, 388], "hp": [185, 230, 314, 359], "pen": [185, 226, 230, 314, 355, 359], "hewlett": [185, 314], "packard": [185, 314], "sun": [185, 191, 249, 314, 320], "f2p": [185, 314], "codraw": [185, 314], "dra": [185, 314], "com1": [185, 230, 314, 359], "9600": [185, 314], "baud": [185, 314], "verb": [185, 230, 314], "autoexec": [185, 314], "dddd": [186, 315], "ddddd": [186, 315], "dddddde": [186, 315], "nn": [186, 249, 315], "octal": [186, 315], "justifi": [186, 315], "preci": [186, 315], "carriag": [186, 315], "feed": [186, 249, 315], "tpi": [186, 315], "141592654": [186, 315], "hoc_stdio": 186, "hoc_stdout": [186, 309, 312, 315, 388], "promptstr": [187, 316], "defaultchar": [187, 316], "charlist": [187, 316], "stewart": [187, 193, 230, 248, 249, 316, 322, 359], "jaslov": [187, 230, 316, 359, 373], "shall": [187, 244, 316, 379, 380], "ny": [187, 232, 248, 249, 316, 361], "3e4": [187, 316], "not45": [187, 316], "13000": [187, 316], "170": [187, 249], "nano": [187, 249], "nanotub": [187, 249], "ni": [187, 365], "infi": 187, "130": [187, 249], "3e": 187, "4e": 187, "5e5": 187, "6e": 187, "4xxx5": 187, "diagnost": [187, 188, 191, 230, 316, 317, 320, 359], "infil": [188, 317], "ndat": [188, 316, 317], "successfulli": [188, 317, 351, 375, 385, 388], "outfil": [188, 317], "hocfil": [188, 200, 317, 329], "rcsrevis": [188, 200, 317, 329], "unaffect": [188, 200, 317, 329], "14159265358979323846": [189, 318], "71828182845904523536": [189, 318], "57721566490153286060": [189, 318], "29577951308232087680": [189, 318], "61803398874989484820": [189, 318], "96484": [189, 318], "56": [189, 249, 276, 318, 383, 387], "31441": [189, 318], "eqinit": [190, 201, 319, 327, 330, 388], "extrapol": [191, 197, 320, 326], "deem": [191, 320], "690": 191, "710": [191, 249], "trigonometr": [191, 320], "triangl": [191, 197, 226, 320, 326, 355], "hypotenus": [191, 320], "int_": [191, 320], "d2line": [192, 321, 327], "xpoint": [192, 321], "ypoint": [192, 321], "xline0": [192, 321], "yline0": [192, 321], "xline1": [192, 321], "yline1": [192, 321], "d2line_seg": [192, 321, 327], "feround": [192, 321, 327], "lastmod": [192, 321], "fe_downward": [192, 321], "fe_tonearest": [192, 321], "fe_towardzero": [192, 321], "fe_upward": [192, 321], "unduli": [192, 321], "test_round": [192, 321], "1000000": [192, 213], "17lf": [192, 321], "mobj": [193, 322], "nrow": [193, 322, 327], "ncol": [193, 322, 327], "irow": [193, 322], "icol": [193, 322], "mout": [193, 322], "vobj": [193, 322], "mfull": [193, 322], "scaffold": [193, 197, 249, 322], "mspars": [193, 322], "mband": [193, 322], "meschach": [193, 322], "mulv": [193, 322, 327], "ocmatrix": [193, 322], "mx": [193, 322], "guard": 193, "getval": [193, 205, 322, 327, 334], "msrcdest": [193, 322], "setcol": [193, 322, 327], "mdest": [193, 322], "msrc": [193, 322], "bcopi": [193, 322, 327], "j0": [193, 322], "j1": [193, 322], "submatrix": [193, 322], "col": [193, 322, 373], "jcol": [193, 322], "sprowlen": [193, 322, 327], "spgetrowv": [193, 322, 327], "jx": [193, 322], "sparse_print": [193, 322], "element_format": [193, 322], "row_format": [193, 322], "8g": [193, 274, 322], "fileobj": [193, 197, 322, 326], "file_object": [193, 322], "mcol": [193, 322], "permut": [193, 283, 322], "getrow": [193, 322, 327], "getcol": [193, 322, 327], "getdiag": [193, 322, 327], "diag": [193, 322], "vx": [193, 322], "vb": [193, 322], "lu": [193, 249, 322], "lufactor": [193, 322], "setdiag": [193, 322, 327], "475": [193, 322], "525": [193, 249, 262, 322], "499": [193, 322], "535": [193, 249, 322], "det": [193, 322, 327], "mantissa": [193, 322], "base10expon": 193, "mant": [193, 322], "mulm": [193, 322, 327], "5f": [193, 322], "m1srcdest": [193, 322], "m2src": [193, 322], "setrow": [193, 322, 327], "mrow": [193, 322], "minv": [193, 322], "svd": [193, 322, 327], "dvec": [193, 197, 290, 322, 326], "umat": [193, 322], "vmat": [193, 322], "decomposit": [193, 322], "ut": [193, 322], "dmat": [193, 322], "svdtest": [193, 322], "transpos": [193, 322, 327, 388], "setrand": [193, 196, 197, 232, 322, 325, 326, 327, 361], "symmeig": [193, 322, 327], "veigenvalu": [193, 322], "symmetr": [193, 322], "qt": [193, 249, 322], "to_vector": [193, 233, 322, 327, 362], "jth": [193, 201, 322, 330], "from_vector": [193, 233, 322, 327, 362], "cholesky_factor": 193, "choleski": 193, "triangular": 193, "ltranspos": 193, "cf": 193, "cholesky_solv": 193, "highindex": [194, 196, 323, 325], "64bit": [194, 323], "cryptograph": [194, 196, 323, 325], "uniformli": [194, 323], "lowindex": [194, 196, 323, 325], "mcell_ran4_init": [194, 196, 323, 325, 327, 388], "replai": [194, 249, 323], "tom": [194, 323, 387], "bartol": [194, 249, 323], "salk": [194, 197, 323], "mcell": [194, 196, 249, 323, 325], "ran4": [194, 196, 323, 325], "fear": [194, 249, 323], "fastest": [194, 224, 231, 323, 353, 360], "million": [194, 323], "1ghz": [194, 323], "piii": [194, 323], "rs6000": [194, 323], "mip": [194, 323], "g1": [194, 196, 197, 301, 323, 325, 326], "g2": [194, 196, 197, 301, 323, 325, 326], "hist": [194, 196, 197, 249, 323, 325, 326, 327], "doit": [194, 196, 325], "use_mcell_ran4": [194, 323, 327, 388], "scop_random": [194, 323], "congruenti": [194, 196, 323, 325], "exprand": [194, 323], "normrand": [194, 323], "poisrand": [194, 323], "set_se": [194, 323], "previous_lowindex": [194, 323], "scop_rand": [194, 323], "random123_globalindex": [194, 196, 323, 325], "gotten": [195, 197, 324, 326], "deviat": [196, 197, 325, 326], "acg": [196, 325], "versatil": [196, 249, 325], "34bit": [196, 325], "thesalmon": [196, 325], "random123sc11": [196, 325], "knuth": [196, 325], "iii": [196, 249, 325], "fibonacci": [196, 325, 387], "55": [196, 197, 248, 249, 286, 290, 325, 326, 362, 373, 387], "1244": [196, 325], "2440": [196, 249, 325], "mlcg": [196, 325], "seed1": [196, 325], "seed2": [196, 325], "id1": [196, 325], "id2": [196, 325], "id3": [196, 325], "philox4x32": [196, 325], "crypotgraph": [196, 325], "uint32": [196, 325], "currenthighindex": [196, 325], "sethighindex": [196, 325], "idum": [196, 325], "varianc": [196, 197, 249, 325, 326], "lognorm": [196, 325], "binomi": [196, 325], "trial": [196, 197, 249, 325, 326], "resampl": [196, 197, 325, 326, 327], "hypergeo": [196, 325], "hypergeometr": [196, 325], "erlang": [196, 325], "weibul": [196, 325], "beta": [196, 249, 286, 325, 373, 380, 381], "institut": [197, 249], "10010": 197, "torrei": 197, "pine": 197, "rd": [197, 326], "la": [197, 244, 249], "jolla": 197, "92037": 197, "python_iter": [197, 326], "vsrcdest": [197, 326], "elabor": [197, 371, 379], "s4": [197, 326], "linspac": [197, 290, 326, 378, 387], "superior": [197, 249], "shrink": [197, 326], "buffer_s": [197, 326, 327], "new_siz": [197, 326], "forgiv": [197, 326], "violat": [197, 226, 326, 355], "unhandl": [197, 326], "growth": [197, 249, 326], "point_process_object": [197, 216, 326, 345], "varvar": [197, 326], "vrecord": [197, 326], "indices_of_discontinuities_vector": [197, 326], "benefici": [197, 217, 326, 346], "implic": [197, 249, 326, 368, 371, 393], "piecewis": [197, 326], "varstart": [197, 326], "495": [197, 249, 326], "vec2": [197, 326], "ten": [197, 210, 249, 326], "31st": [197, 249, 326], "32nd": [197, 326], "33rd": [197, 326], "dest_start": [197, 326], "src_start": [197, 326], "src_end": [197, 326], "dest_inc": [197, 326], "src_inc": [197, 326], "vsrcdestindex": [197, 326], "vsrcindex": [197, 326], "vdestindex": [197, 326], "dest": [197, 283, 326], "vsrcx": [197, 326], "shuffl": [197, 326], "newvec": [197, 208, 326, 337], "srcstart": [197, 326], "srcend": [197, 326], "cl": [197, 226, 249, 286, 326, 327, 355, 368], "predat": [197, 249, 326], "from_doubl": [197, 326, 327], "px": [197, 326], "vsourc": [197, 326], "opstr": [197, 326], "value1": [197, 326], "op2str": [197, 326], "value2": [197, 326], "indvwher": [197, 326, 327], "indwher": [197, 326, 327], "vd": [197, 326], "spark": [197, 326], "argment": [197, 326], "sparc": [197, 326], "uncompress": [197, 326], "decompress": [197, 326], "format_str": [197, 326], "4f": [197, 326], "0000": [197, 243, 326], "9000": [197, 326], "presiz": [197, 326], "scantil": [197, 326, 327], "1e15": [197, 326], "graphobj": [197, 326, 334], "x_vec": [197, 326, 334], "x_increment": [197, 326, 334], "rapid": [197, 249, 326, 334], "anim": [197, 249, 326, 334, 375], "disturb": [197, 222, 326, 351], "ploterr": [197, 326, 327], "err_vec": [197, 326], "seraph": [197, 326], "1point": [197, 326], "errvec": [197, 326], "250": [197, 226, 249, 326, 355], "x_vector": [197, 326], "newvect": [197, 326], "manhattan": [197, 326], "sumgauss": [197, 326, 327], "weight_vec": [197, 326], "vectobj": [197, 326], "smhist": [197, 326, 327], "convolv": [197, 326], "varsiz": [197, 326], "varstep": [197, 326], "vindex": [197, 326], "fiftieth": [197, 326], "sixtieth": [197, 326], "addrand": [197, 326, 327], "randobj": [197, 326], "msec": [197, 326], "sq": [197, 326], "320": [197, 239, 249, 326], "to_python": [197, 208, 247, 326, 327, 337], "pythonlist": [197, 326], "numpyarrai": [197, 326], "from_python": [197, 208, 326, 327, 337], "as_numpi": [197, 247, 326, 327, 355], "data_vec": [197, 326], "fit_vec": [197, 326], "fcn": [197, 326], "indep_vec": [197, 326], "p2": [197, 372], "simplex": [197, 224, 326, 353], "tunabl": [197, 326], "reiter": [197, 249, 326], "wild": [197, 239, 326], "exp1": [197, 326], "exp2": [197, 326], "funfit": [197, 326], "ivec": [197, 326], "ysrcdest": [197, 326], "xdest": [197, 326], "xsrc": [197, 326], "ydest": [197, 326], "ysrc": [197, 326], "xd": [197, 326], "yd": [197, 326], "eleven": [197, 326], "385": [197, 249, 326], "87": [197, 249, 326, 379], "455": [197, 326, 385], "925": [197, 249, 326, 384], "501": [197, 249, 326, 362], "00000": [197, 326], "33835": [197, 326], "33333": [197, 326], "6867": [197, 326], "6666": [197, 326], "04505": [197, 326], "4134": [197, 326], "3333": [197, 326], "median": [197, 249, 326, 327], "medfltr": [197, 326, 327], "2nd": [197, 249, 326], "rebin": [197, 326, 327], "trio": [197, 326], "vec3": [197, 326], "sumsq": [197, 326, 327], "stdev": [197, 326, 327], "sem": [197, 249, 326], "inner": [197, 326, 371], "mag": [197, 326, 327], "meansqerr": [197, 326, 327], "fft": [197, 326, 327], "recip": [197, 243, 326], "autocorrel": [197, 326], "convlv": [197, 326, 327], "convolut": [197, 326], "deconvolut": [197, 249, 326], "countup": [197, 326], "countdown": [197, 326], "spctrm": [197, 326, 327], "spectral": [197, 249, 326], "g3": [197, 326], "setup_gui": 197, "sinusoid": [197, 249, 326], "higest": [197, 326], "love": [197, 326], "imaginari": [197, 326], "spectra": [197, 249, 326], "spectrum": [197, 249, 326], "vt_src": [197, 326], "vfr_dest": [197, 326], "vfi_dest": [197, 326], "vt_dest": [197, 326], "vfr_src": [197, 326], "vfi_src": [197, 326], "freqenc": [197, 326], "vtsrc": [197, 326], "vt": [197, 208, 326, 337], "vfr": [197, 326], "vfi": [197, 326], "g4": [197, 326], "b1": [197, 326], "trigavg": [197, 326, 327], "spikebin": [197, 326, 327], "psth": [197, 326, 327], "vmeanfreq": [197, 326], "vsrchist": [197, 326], "mislead": [197, 315, 326], "f_mean": [197, 326], "widen": [197, 249, 326], "_second_": [197, 326], "binwidth": [197, 326], "_milliseconds_": [197, 326], "superimpos": [197, 326], "sum_": [197, 326], "acknowledg": [197, 326], "vecsiz": [197, 326], "minsum": [197, 326], "spuriou": [197, 249, 326], "fourier": [198, 327], "nonlinear": [198, 217, 249, 327, 346], "ms1": [199, 328], "ms2": [199, 328], "msname": [199, 328], "pname": [199, 328], "ptype": [199, 328], "change_pa": [199, 328], "arrayindex": [199, 328], "1e300": [199, 328], "offici": [200, 242, 244, 247, 329], "docstr": [200, 329, 387, 388], "load_mechan": [200, 208, 329, 337], "myobj": [200, 329], "hocerror": [200, 208, 329, 337], "hocobject": [200, 208, 329, 337, 388], "format_except": [200, 208, 329, 337], "tb": [200, 329], "traceback": [200, 329], "nrnpyerr_str": [200, 329], "py_doc": [200, 329], "simctrl": [200, 329], "new_hoc_class": [200, 208, 329, 337], "new_point_process": [200, 208, 329, 337], "printpath": [200, 329], "ctype": [200, 290, 329], "nrn_dll_sym": [200, 208, 290, 329, 337], "c_int": [200, 290, 329], "nrn_dll_sym_nt": [200, 208, 329, 337], "libnrnpython1013": [200, 329], "numpy_element_ref": [200, 208, 297, 326, 329, 337], "numpy_arrai": [200, 329], "ndarrai": [200, 329], "kwarg": [200, 329, 372], "register_savest": [200, 208, 329, 337], "uuid": [200, 329], "bytestr": [200, 329], "exitonerror": [200, 329], "test_rxd": [200, 208, 329, 337], "crxd": [200, 286, 329, 375, 377], "helpdict": [201, 330], "netscap": [201, 228, 330, 357], "unaccept": [201, 330], "stm2": [201, 330], "numel": [201, 330], "bye": [201, 330], "varn": [201, 330], "exprn": [201, 330], "4y": [201, 330], "tobj": [201, 330], "stringnam": [201, 330], "pvar": [201, 330], "synpr": [201, 330], "soma1": [201, 330], "syn1": [201, 330], "synp": [201, 330], "axon2": [201, 330], "global_ra": [202, 331], "ra_valu": [202, 331], "objectvari": [202, 331], "refcount": [202, 331], "demothi": [202, 331], "this_nod": [203, 332, 338, 388], "segnum": 203, "unsaf": [203, 311, 332], "prt": [204, 333], "variablenam": [204, 333], "margin": [204, 217, 333, 346], "pv": [205, 249, 334], "pset": [205, 334], "ptr_update_callback": [205, 334], "newsiz": [205, 334], "var_val": [205, 334], "srcvec": [205, 334], "destvec": [205, 334], "hoc_stat": [205, 334], "pythoncallback": [205, 334], "pickvector": [206, 224, 226, 335, 353, 355], "hoc_cross_x_": [206, 228, 309, 335, 357, 388], "hoc_cross_y_": [206, 228, 309, 335, 357, 388], "reproduct": [207, 249, 336], "morph": [207, 336], "regrett": [207, 336], "failsaf": [207, 336], "disk": [207, 336, 379], "audit": [207, 244, 336], "recapitul": [207, 336], "excruci": [207, 336], "nrnmainmenu": [207, 224, 336, 353], "checkout": [207, 244, 336, 365, 380, 381], "archiveandhardcopi": [207, 336], "print_cmd": [207, 228, 336, 357], "lock": [207, 249, 336], "anywai": [207, 336, 379], "checkin": [207, 224, 336, 353], "microemac": [207, 336], "newest": [207, 336], "cat": [207, 216, 243, 249, 336, 345], "postscriptfil": [207, 336], "lp": [207, 226, 336], "she": [207, 336], "envis": [207, 336], "lib64": 208, "incess": 208, "nrn_load_dll": [208, 213, 342, 388], "python_stat": [208, 337], "tripl": [208, 337, 387], "toplevelhocinterpret": 208, "goodby": [208, 337], "chgstr": [208, 337], "chgval": [208, 337], "chgobj": [208, 337], "_ref_": [208, 326, 337, 388], "_ref_i_pa": [208, 337], "minimalist": [208, 337, 379], "newlist": [208, 337], "apnd": [208, 337], "irksom": 208, "anyclass": [208, 337], "myvector": [208, 337], "hclass": [208, 337], "zzz": [208, 337], "baseattr": [208, 337, 382, 388], "mysect": [208, 337], "_ref_hocvar": [208, 278, 337], "pointer_nam": [208, 277, 278, 337], "point_proces_object": [208, 278, 337], "mechanism_object": [208, 277, 278, 337], "tstpnt1": [208, 277, 337], "tstpnt2": [208, 277, 337], "hoc_ac": [208, 337], "double_valu": [208, 337], "asec": [208, 337], "anticip": [208, 249, 337], "0x2a96982108": 208, "pysec_2a96982108": 208, "sr": [208, 337], "compactli": [208, 337], "childsec": [208, 337], "parentsec": [208, 337], "parentx": [208, 337, 388], "childx": [208, 337], "parentseg": [208, 269, 289, 292, 337, 346, 388], "python_avail": [208, 337], "ev": [208, 337], "eval": [208, 242, 243, 294, 311, 337], "tup": [208, 337], "helloworld": [208, 337], "xyz": [208, 337, 379], "2th": [208, 337], "__getitem__": [208, 337, 388], "dg": [208, 337], "lf": [210, 339], "30000001": 210, "0xff": [210, 339], "ff": 210, "75": [210, 249, 290, 339, 387], "987654321": [210, 339], "15g": 210, "lc": 210, "5c": 210, "pollut": [211, 340], "strobj": [211, 340], "regexp": [211, 340], "tail": [211, 340, 341], "alias_list": [211, 340, 341], "sf": [211, 340], "lexicograph": [212, 341], "chdir": [213, 342, 388], "getcwd": [213, 342, 388], "neurohom": [213, 342], "hostnam": [213, 342], "unix_mac_pc": [213, 342, 388], "darwin": [213, 342], "versionstr": 213, "majorstr": [213, 342], "36": [213, 248, 249, 276, 342, 382, 387, 388], "296": [213, 249, 342], "ff4976021aae": [213, 342], "nobann": [213, 342], "twophase_multisend": [213, 342], "534": [213, 249, 342], "2160ccb31406": [213, 342], "triplet": [213, 342], "progam": [213, 342], "winexec": [213, 342], "exitcod": [213, 342], "cmdstr": [213, 342], "stdout_str": [213, 342], "cygwin": [213, 342, 365], "nrnsy": [213, 342], "tmpdos2": [213, 342], "tmpdos1": [213, 342], "stopwatch": [213, 342], "gettimeofdai": [213, 342], "dll_file_nam": [213, 342], "show_winio": [213, 342, 388], "movierun": [214, 343], "nstep": 214, "istep": 214, "tstep": [215, 344], "gbyte": [216, 345], "bbss": [216, 345], "restore_test": [216, 345], "save_test": [216, 345], "save_test_bin": [216, 345], "restore_test_bin": [216, 345], "vitiat": [216, 345], "vector_play_init": [216, 345], "frecord": [216, 345], "xdir": [216, 345], "xval": [216, 345], "apriori": [216, 345], "out2in": [216, 345], "sed": [216, 345], "wc": [216, 345], "assoc": [216, 345], "ppobj": [216, 345], "januari": [217, 346], "peter": [217, 249, 346], "aaron": [217, 346], "collier": [217, 346], "keith": [217, 346], "alan": [217, 346], "steve": [217, 346], "lee": [217, 249, 346], "radu": [217, 346], "dan": [217, 249, 346], "shumak": [217, 346], "carol": [217, 346], "woodward": [217, 346], "use_daspk": [217, 346], "rtol": [217, 346], "hoc_channel": 217, "hoc_ev": 217, "catchal": [217, 346], "use_mxb": [217, 346], "current_method": [217, 346], "tout": [217, 346], "spike_stat": [217, 346], "selfev": [217, 346], "net_send": [217, 220, 346, 349], "net_mov": [217, 346], "print_event_queu": [217, 346], "event_queue_info": [217, 346], "flagvec": [217, 346], "atolscale_for_st": [217, 346], "tol": [217, 346], "tolerancemultipli": [217, 346], "trigksyn": 217, "atoltool": [217, 346], "state_suffix": [217, 346], "pointprocessnam": [217, 346], "adam": [217, 249, 346, 389], "bashforth": [217, 346], "maxord": [217, 346], "dest_vector": [217, 346], "dstate": [217, 346], "ypvec": [217, 346], "statenam": [217, 346], "yscatter": [217, 346], "ygather": [217, 346], "fixed_step": [217, 346], "error_weight": [217, 346], "acor": [217, 346], "dest_str": [217, 346], "ltr": 217, "rangevar": [217, 232, 233, 361, 362], "record_remov": [217, 346], "continuefor": [217, 346], "lvardt": [217, 346], "meanwhil": [217, 346], "minstep": [217, 346], "hmin": [217, 346], "maxstep": [217, 346], "hmax": [217, 346], "debug_ev": [217, 346], "use_long_doubl": [217, 346], "booelan": [217, 346], "precondit": [217, 346], "krylov": [217, 346], "1or2": [217, 346], "dae_init_dtep": [217, 346], "heurist": [217, 239, 346], "dtep": [217, 346], "parasit": [217, 346], "neighborhood": [217, 248, 249, 346], "simgraph_remov": [217, 346], "state_magnitud": [217, 346], "maxstat": [217, 346], "maxacor": [217, 346], "modeltyp": [217, 346], "use_sparse13": [217, 346], "methodtyp": [217, 346], "localtyp": [217, 346], "simuat": 217, "store_ev": [217, 346], "tq": [217, 346], "exper": [217, 346], "use_fixed_step_bin_queu": [217, 346], "use_self_queu": [217, 346], "splai": [217, 346], "outstand": [217, 222, 346, 351], "impact": [217, 249, 346, 379], "queu": [217, 346], "hubert": [217, 249, 346], "eichner": [217, 248, 249, 346], "eichnerh": [217, 346], "tum": [217, 346], "icur": [217, 346], "nicolson": [217, 220, 346, 349], "m_": [217, 346], "provis": [217, 249, 346], "huge": [217, 346], "concomit": [217, 346], "istim": [217, 346], "on_valu": [217, 346], "t_threshold": [217, 346], "makefamili": [218, 347], "numberstep": [218, 347], "stringchoos": [218, 347], "regularli": [218, 221, 249, 347, 350, 379], "stop_run": [218, 347], "atendofact": [218, 347], "cont": [218, 248, 249, 347], "candid": [218, 221, 249, 347, 380, 381], "gathervalu": [218, 347], "rudimentari": [218, 226, 347, 355], "5dt": [220, 224, 349, 353], "whichev": [220, 349], "il_hh": [220, 349, 388], "fmatrix": [220, 349, 388], "coeefici": 220, "nodea": [220, 349], "nodeb": [220, 349], "noderh": [220, 349], "damp": [220, 349], "bypass": [220, 349], "centigrad": [220, 349], "gracefulli": [220, 349], "oscilloscop": [221, 350], "ivochelp": [222, 351], "writehoc": [222, 351], "print_sess": [223, 224, 228, 352, 353, 357, 388], "useprint": [223, 352], "useselect": [223, 352], "pipe": [223, 242, 352], "saveabl": [223, 224, 352, 353], "saveal": [223, 352], "execcommand": [224, 353], "gathervec": [224, 353], "vecwrap": [224, 353], "perus": [224, 353], "nrnmac": [224, 353], "netbuild": [224, 353], "dramat": [224, 239, 353], "fieldeditor": [224, 353], "morphoelectron": [224, 353], "prjnrnpr": [224, 353], "windowgroup": [224, 353], "scalex": [225, 226, 354, 355], "scalei": [225, 226, 354, 355], "new_path": [225, 354], "move_to": [225, 354], "line_to": 225, "curve_to": [225, 354], "y1": [225, 226, 354, 355], "y2": [225, 354], "close_path": [225, 354], "radiu": [225, 226, 354, 355, 383, 384, 385], "colorindex": [225, 226, 234, 354, 355, 363], "brushindex": [225, 226, 354, 355], "control_point": 225, "cpt": [225, 249, 354], "fixtyp": [225, 226, 354, 355], "glyphobject": [225, 226, 354, 355], "gif": [225, 226, 354, 355], "xmin": [226, 355], "xmax": [226, 355], "ymin": [226, 355], "ymax": [226, 355], "xaxi": [226, 355], "xstart": [226, 230, 355, 359], "xstop": [226, 230, 355, 359], "ypo": [226, 355], "ntic": [226, 355], "nminor": [226, 355], "shownumb": [226, 355], "yaxi": [226, 355], "ystart": [226, 230, 355, 359], "ystop": [226, 230, 355, 359], "tic": [226, 230, 355, 359], "3333333": [226, 355], "xpo": [226, 355], "color_index": [226, 355], "brush_index": [226, 355], "_ref_rangevar": [226, 346], "addobject": [226, 233, 355, 362], "usepoint": [226, 355], "fastflush": [226, 232, 355, 361], "graphlin": [226, 355], "450": [226, 230, 249, 355, 359], "pl": [226, 355], "getlin": [226, 355], "thisindex": [226, 355], "previndex": [226, 355], "xline": [226, 355], "yline": [226, 355], "line_info": [226, 355], "polylin": [226, 355], "erase_al": [226, 232, 234, 355, 361, 363], "dbl": [226, 355], "view_equal_plot": 226, "x_align": [226, 355], "y_align": [226, 355], "vfix": [226, 355], "colornam": [226, 355], "violet": [226, 230, 355, 359], "thinnest": [226, 355], "default_brush": [226, 355], "changecolor": [226, 355], "mleft": [226, 234, 355, 363], "mbottom": [226, 234, 355, 363], "mwidth": [226, 234, 355, 363], "mheight": [226, 234, 355, 363], "wleft": [226, 355], "wtop": [226, 355], "wwidth": [226, 355], "wheight": [226, 355], "crosshair_act": [226, 228, 355, 357], "vectorflag": [226, 355], "keypress": [226, 228, 355, 357], "y_objectref": [226, 355], "menu_tool": [226, 232, 234, 355, 361, 363], "view_count": [226, 232, 234, 355, 361, 363], "flush_list": [226, 234, 355, 363], "menu_remov": [226, 355], "menu_act": [226, 232, 234, 355, 361, 363], "telltalegroup": [226, 355], "radioitem": [226, 355], "keystat": [226, 234, 355, 363], "meta": [226, 234, 249, 355, 363], "wg": [226, 355], "hg": [226, 336, 355], "xg0": [226, 355], "yg0": [226, 355], "xg1": [226, 355], "yg1": [226, 355], "xv": [226, 355], "377x420": [226, 355], "225x279": [226, 355], "377": [226, 249, 355], "420": [226, 249, 355], "279": [226, 249, 355], "225": [226, 249, 355, 368], "coodin": [226, 355], "view_info": [226, 355], "model_coord": [226, 355], "view_siz": [226, 355], "simgraph": [226, 355], "makegraph": [227, 356], "minf_hh": [227, 356, 388], "setview": [227, 356], "inward": [227, 249, 356], "proflig": [228, 357], "freeli": [228, 249, 357], "openlook": [228, 357], "motif": [228, 249, 357], "dismissbutton": [228, 357], "wield": [228, 357], "tempstr": [228, 357], "pushbutton": [228, 357], "statebutton": [228, 307, 357], "lieu": [228, 337, 357], "decad": [228, 357, 385], "autorepeatstart": [228, 357], "autorepeatdelai": [228, 357], "redisplai": [228, 357], "pwm_help": [228, 357], "dialogu": [228, 357], "polish": [228, 357], "plp": [228, 357], "pwm_postscript_filt": [228, 357], "temp_filenam": [228, 357], "printer_command": [228, 357], "ault": [228, 357], "prn": [228, 357], "lmb": [228, 357], "hair": [228, 249, 357], "maxima": [228, 357], "radiomenu": [228, 357], "cbwidget": [228, 357], "felt": [229, 358], "inrang": [230, 359], "5x3": [230, 359], "xorg": [230, 232, 234, 359, 361, 363], "xsize": [230, 232, 359, 361], "yorg": [230, 232, 234, 359, 361, 363], "ysize": [230, 232, 359, 361], "nticx": [230, 359], "ntici": [230, 359], "3rd": [230, 249, 359], "6th": [230, 359], "plotsin": 230, "colorv": [230, 359], "tektronix": [230, 359], "4010": [230, 359], "780": [230, 359], "turbo": [230, 359], "vga": [230, 359], "ega": [230, 359], "cga": [230, 359], "hercul": [230, 359], "hp7475": [230, 359], "cyan": [230, 359], "magenta": [230, 359], "550": [230, 359], "adaptor": [230, 359], "kill": [230, 359], "tamper": [231, 360], "schemat": [231, 234, 360, 363], "decent": [231, 360], "commut": [231, 360], "veloc": [231, 249, 360], "occlud": [231, 360], "purpl": [231, 360], "colorbar": [231, 360], "hinton": [232, 361], "push_select": [232, 234, 361, 363], "color_list": [232, 234, 361, 363], "color_al": [232, 234, 361, 363], "colormap": [232, 361], "nx": [232, 361], "len_scal": [232, 234, 361, 363], "scl": [232, 234, 361, 363], "zorg": [232, 234, 361, 363], "xrad": [232, 234, 361, 363], "yrad": [232, 234, 361, 363], "zrad": [232, 234, 361, 363], "rangvarplot": [233, 362], "sleft": [234, 363], "swidth": [234, 363], "sheight": [234, 363], "mright": [234, 363], "mtop": [234, 363], "1st": [234, 249, 363], "2d": [234, 286, 363], "point_mark": [234, 363], "objvar": [234, 363], "yichun": [234, 363], "wei": [234, 249, 363], "yichunw": [234, 363], "usc": [234, 363], "point_mark_remov": [234, 363], "pointmark": [234, 363], "ss": [234, 363], "uncom": 236, "750": [237, 249], "pkg": [237, 242, 243, 247], "troubleshoot": 237, "ebrain": 237, "dnrn": [238, 242], "genhtml": 238, "coverage_flag": 238, "fno": [238, 239, 242], "inlin": [238, 239, 271, 367, 368, 377, 382, 383, 384, 388], "gdca": 238, "tracefil": 238, "dnrn_enable_coverag": 238, "disorgan": 239, "inspir": [239, 249], "slowdown": 239, "llvm": 239, "divbyzero": 239, "pyenv": 239, "bt": 239, "osrc_": 239, "proven": 239, "pythonmalloc": 239, "47683": 239, "memcheck": 239, "gpl": 239, "julian": 239, "seward": 239, "libvex": 239, "rerun": [239, 367, 372, 383], "heap": 239, "988": [239, 249], "809": 239, "971": [239, 249], "344": [239, 249], "541": [239, 249], "095": 239, "055": [239, 249], "991": 239, "520": [239, 248, 249], "659": [239, 249], "446": [239, 249], "reachabl": 239, "014": [239, 249], "639": [239, 249], "newarrai": 239, "suppress": [239, 249], "vgdb": 239, "31925": 239, "pid": 239, "asan": 239, "lsan": 239, "ubsan": 239, "catch": [239, 249, 311], "danger": [239, 379], "widespread": [239, 249, 379], "ubiquit": 239, "fsanit": 239, "xxx": 239, "san_opt": 239, "1842": [239, 249], "nrn_sanit": 239, "dnrn_sanit": 239, "llvm_symbolizer_path": 239, "symlink": 239, "preload": 239, "ld_preload": 239, "supp": 239, "dcorenrn_sanit": 239, "nmodl_sanit": 239, "incur": 239, "5x": 239, "15x": 239, "10x": 239, "test_nam": 239, "nogui": [239, 262], "nopython": 239, "2572": 239, "0x7b3c00000bf0": 239, "savulesc": 239, "workspac": [239, 245], "nrncvode": 239, "cvodeobj": 239, "751": [239, 249], "0x38673e": 239, "cvodestb": 239, "0x389e27": 239, "_nrn_current__iclamp": 239, "0x5b8f02": 239, "_nrn_cur__iclamp": 239, "306": [239, 249], "0x5b9236": 239, "rhs_memb": 239, "cvmemblist": 239, "cvtrset": 239, "68": [239, 248, 249, 290, 361, 387], "0x38a0eb": 239, "rh": [239, 368], "0x38a2f6": 239, "fun_thread_transfer_part2": 239, "occvod": 239, "671": [239, 249], "0x3bbbf1": 239, "fun_thread": 239, "0x3bd049": 239, "f_thread": 239, "1532": 239, "0x384f45": 239, "slave_main": 239, "337": [239, 249], "0x5157ee": 239, "753": [239, 249], "0x386759": 239, "profiler_interfac": 239, "likwid": 239, "craypat": 239, "comparis": 239, "phase_begin": 239, "phase_end": 239, "instrumentor": 239, "critical_region": 239, "dnrn_enable_profil": 239, "dnrn_profil": 239, "dcmake_prefix_path": [239, 242, 243, 245], "dcorenrn_enable_caliper_profil": 239, "dcorenrn_enable_unit_test": 239, "cmake_prefix_path": 239, "cali_config": 239, "calc": 239, "0a": [239, 242, 243, 379, 380], "693": [239, 249], "gabe0abaac": 239, "magkanar": 239, "abe0abaac": 239, "avg": 239, "145432": 239, "648498": 239, "000002": 239, "001370": 239, "142800": 239, "845079": 239, "030670": 239, "014766": 239, "001479": 239, "013395": 239, "002913": 239, "995957": 239, "002908": 239, "992531": 239, "003067": 239, "101477": 239, "003941": 239, "700332": 239, "cur": 239, "002994": 239, "051458": 239, "006994": 239, "792216": 239, "062940": 239, "125835": 239, "003172": 239, "173421": 239, "007137": 239, "890198": 239, "007100": 239, "864846": 239, "003138": 239, "150125": 239, "003269": 239, "239885": 239, "007921": 239, "427387": 239, "013076": 239, "959540": 239, "000021": 239, "014389": 239, "000037": 239, "025352": 239, "003804": 239, "606461": 239, "000235": 239, "161020": 239, "000022": 239, "015074": 239, "000003": 239, "002056": 239, "000001": 239, "000685": 239, "nvtx": 239, "nsys_nvtx_profiler_register_onli": 239, "omp_num_thread": 239, "stat": 239, "fault": [239, 242], "osrt": 239, "your_sim": 239, "datpath": 239, "struggl": 239, "sm": 239, "throughput": [239, 249], "bandwidth": [239, 249], "rooflin": 239, "ncu": 239, "kernel_nam": 239, "section_set": 239, "regex": 239, "pseudorandom": 239, "impract": [239, 368], "boost": [239, 249], "pool": [239, 249], "x86": [240, 242, 243], "notar": 240, "pypi": [240, 242], "requisit": 240, "valgrind": 240, "sanit": 240, "threadsanit": 240, "tsan": 240, "38": [242, 243, 244, 249, 276, 344, 382, 387, 388], "sysconfig": [242, 243], "get_platform": [242, 243], "pythonvers": 242, "726": [242, 243, 249], "gb9a811a32": [242, 243], "uninstallng": 242, "trash": 242, "rosetta2": 242, "lipo": [242, 243], "incflag": 242, "loadflag": 242, "nrn_pylib": 242, "opt": [242, 243, 244], "anaconda3": 242, "libpython3": 242, "archprefer": 242, "macos11": 242, "rpm": [242, 379], "deb": [242, 379], "mingw": [242, 245, 365], "distro": [242, 244], "pleas": [242, 244, 249, 371, 379, 380], "virtualbox": 242, "wsl2": 242, "viewtop": 242, "php": 242, "95302": 242, "wsl1": 242, "powershel": [242, 245], "saniti": [242, 283], "vcxsrv": 242, "sourceforg": 242, "xlaunch": 242, "wizard": 242, "appdata": 242, "defend": 242, "firewal": 242, "bashrc": 242, "amd": 242, "advis": 242, "coreutil": [242, 243], "cask": 242, "xcode": [242, 243], "logout": 242, "wm_ffm": 242, "homebrew": [242, 243], "curl": [242, 243], "fssl": [242, 243], "shellenv": [242, 243], "zprofil": [242, 243], "cento": 242, "hat": 242, "libncurs": 242, "libopenmpi": 242, "libx11": 242, "libxcomposit": 242, "scipi": 242, "buildoptiondefault": 242, "bone": 242, "dpython": 242, "dcmake": 242, "dcorenrn": 242, "rst": 242, "regress": 242, "gapjunct": 242, "tgoto": 242, "tgetent": 242, "tput": 242, "ncurs": 242, "dyld_library_path": 242, "mpi_lib_nrn_path": 242, "ld": 242, "dyld": 242, "pyex": 242, "nrn_enable_python_dynam": 242, "libnrnpython3": 242, "nrnpyenv": 242, "nrn_pythonhom": 242, "inappropri": [242, 388], "avx512er": 242, "avx512pf": 242, "nrn_nmodl_cxx_flag": 242, "unrecogn": 242, "build_ext": 242, "geometry3d": 242, "graphicsprimit": 242, "fwrapv": 242, "denable_dtrac": 242, "dmacosx": 242, "wstrict": 242, "wshorten": 242, "iwithsysroot": 242, "libressl": 242, "app": [242, 243, 249], "macosx11": 242, "isysroot": 242, "cflag": 242, "membership": 243, "certif": 243, "macosx_deployment_target": [243, 244], "deploy": [243, 249, 379, 380], "nrn_src": 243, "nrn_instal": 243, "dnrn_enable_mpi_dynam": [243, 245], "div_enable_x11_dynam": 243, "archs_cmak": 243, "dcmake_osx_architectur": 243, "macpkg": 243, "codesign": 243, "nrn_codesign": 243, "scari": 243, "harden": 243, "nrn_entitl": 243, "plist": 243, "packagesbuild": 243, "macdist": 243, "pkgproj": 243, "productsign": 243, "nrn_productsign": 243, "macnrn_notar": 243, "notarizaton": 243, "1048": [243, 249], "appstoreconnect": 243, "legal": 243, "logfileurl": 243, "altool": 243, "requestidentifi": 243, "usernam": [243, 244], "7254157952d4f3573c2804879cf6da8d": 243, "osxapp": 243, "ssl": 243, "itun": 243, "asset": 243, "requestuuid": 243, "152f0f0e": 243, "af58": 243, "4d22": 243, "b291": 243, "6a441825dd20": 243, "requestidentif": 243, "stapl": 243, "stapler": 243, "package_file_nam": 243, "cp": [243, 314], "package_full_nam": 243, "neuronsimulatior": 243, "sur": 243, "unam": 243, "rc1": 243, "redundantli": 243, "29": [243, 249, 370, 382, 387, 388, 391], "catalina": 243, "developerid": 243, "cer": 243, "keychain": 243, "receipt": 243, "nrn_notar": 243, "jit": 243, "manylinux": 244, "hub": [244, 249], "pipelin": [244, 249], "dockerfil": 244, "cron": 244, "neuron_wheel": 244, "_gpu": 244, "gcc9": 244, "1971": 244, "tweak": 244, "manylinuxwheel": 244, "manylinuxgpuwheel": 244, "qemu": 244, "manylinux_imag": 244, "manylinux2014_aarch64": 244, "mount": 244, "neuron_wheel_gpu": 244, "nrnwheel": 244, "bbpcode": 244, "epfl": [244, 379], "kumbhar": [244, 248, 249], "secur": 244, "wheelhous": 244, "build_wheel": 244, "test_wheel": 244, "236": [244, 249], "cp38": 244, "macosx_10_9_x86_64": 244, "whl": 244, "skip_embeded_python_test": 244, "proj16": 244, "ntask": 244, "cp37": 244, "cp37m": 244, "manylinux1_x86_64": 244, "prod": 244, "neuron_gpu_nightli": 244, "0a709": 244, "manylinux_2_17_x86_64": 244, "manylinux2014_x86_64": 244, "mvapich2": 244, "pgaccelinfo": 244, "nrn_nightly_upload": 244, "nrn_release_upload": 244, "neuron_nightly_tag": 244, "thorough": 244, "happi": [244, 384], "hacki": 244, "config": 244, "202101": 244, "neuron_wheel_vers": 244, "89": [244, 248, 249, 383], "nrn_python_vers": 244, "chocolatei": 245, "studio": 245, "visualstudio": 245, "cplusplu": 245, "pwsh": 245, "win_download_dep": 245, "nsi": 245, "win_install_dep": 245, "msvcc": 245, "msvc": 245, "plugin": 245, "msys2": 245, "toolchain": 245, "pacakag": 245, "mingw64": 245, "win_build_cmak": 245, "python37": 245, "python38": 245, "python39": 245, "python310": 245, "dmpi_cxx_lib_nam": 245, "dmpi_c_lib_nam": 245, "dmpi_msmpi_librari": 245, "filepath": 245, "x64": 245, "setup_ex": 245, "subprocess": 247, "pyimport": 247, "pythonhom": 247, "check_cal": 247, "println": 247, "float64": 247, "72": [247, 249, 276, 372, 379, 387], "pyarrai": 247, "jvec": 247, "awil": [248, 249], "cornu": 248, "dura": [248, 249, 389], "bernal": [248, 249, 389], "king": [248, 249], "lupton": 248, "magkanari": [248, 249], "mcdougal": [248, 249, 389], "pereira": [248, 249, 379], "s\u0103vulescu": 248, "biorxiv": [248, 249], "1101": [248, 249], "482816": 248, "eggleston": 248, "galijasev": 248, "474683": 248, "jaeger": [248, 249], "jung": [248, 249], "encyclopedia": [248, 249], "978": [248, 249], "4614": [248, 249], "7320": 248, "6_795": 248, "frontier": [248, 249], "00041": [248, 249], "seidenstein": [248, 249], "neurotechnologi": [248, 249], "2063": [248, 249], "2090": [248, 249], "ww": 248, "00028": [248, 249], "kumar": [248, 249], "fncom": [248, 249], "00049": [248, 249], "heidelberg": [248, 249], "chen": [248, 249], "symposium": [248, 249], "ipdp": [248, 249], "1109": [248, 249], "5470407": [248, 249], "neuro": [248, 249], "trend": [248, 249], "008": [248, 249], "0087": [248, 249], "203": [248, 249], "210": [248, 249], "0073": 248, "epilepsi": [248, 249], "academ": [248, 249], "b978": [248, 249], "012373649": 248, "50005": 248, "50004": 248, "cannon": [248, 249], "gewaltig": [248, 249], "gleeson": [248, 249], "bhalla": [248, 249], "corn": 248, "schutter": [248, 249], "138": [248, 249], "s12021": [248, 249], "0004": 248, "crasto": 248, "cj": 248, "molecular": [248, 249, 368], "401": [248, 249], "humana": [248, 249], "totowa": [248, 249], "59745": [248, 249], "1017": [248, 249], "cbo9780511541612": 248, "129": [248, 249], "006": [248, 249], "7949": 248, "921": [248, 249], "1162": [248, 249], "0899766053429453": 248, "media": [248, 249], "221": [248, 249], "bmm221": 248, "neurocomput": [248, 249], "1117": [248, 249], "1122": [248, 249], "neucom": [248, 249], "handbook": [248, 249], "usa": 248, "1177": [248, 249, 372], "107385840100700207": 248, "995": [248, 249], "089976600300015475": 248, "mirski": 248, "heali": 248, "singer": [248, 249], "skoufo": 248, "multidisciplinari": 248, "468": [248, 249], "s0166": 248, "2236": 248, "01300": [248, 249], "neurosimul": 248, "koch": [248, 249], "121": [248, 249], "1997": [248, 249, 379], "1179": 248, "1209": [248, 249], "neco": [248, 249], "contrera": [248, 249], "steriad": [248, 249], "thalam": [248, 249], "quiescenc": [248, 249], "seizur": [248, 249], "1679": [248, 249], "1696": [248, 249], "contemporari": 248, "trimbl": 248, "cum": [248, 249], "butterworth": 248, "heinemann": [248, 249], "147": [248, 249], "boston": [248, 249], "4615": 248, "2736": [248, 249], "7_8": 248, "1993": [248, 249], "eeckman": [248, 249], "3560": 248, "7_11": 248, "1989": [248, 249], "0020": 248, "7101": 248, "90007": 248, "84": [248, 249], "90008": 248, "2672": 249, "abbasi": 249, "sarbaz": 249, "cerebellar": 249, "ataxia": 249, "mutant": 249, "med": 249, "mice": 249, "acetazolamid": 249, "aminopyridin": 249, "biomedicin": 249, "113": 249, "697": 249, "704": 249, "cmpb": 249, "janahmadi": 249, "tonic": 249, "rat": 249, "riluzol": 249, "clinic": 249, "61": [249, 387], "15412": 249, "bcn": 249, "03080108": 249, "shahabi": 249, "sk": 249, "deep": [249, 379], "nuclei": 249, "abdela": 249, "mousa": 249, "gamal": 249, "khalil": 249, "elbasiouni": 249, "eldawlatli": 249, "classif": 249, "spinal": 249, "amyotroph": 249, "sclerosi": 249, "2020": [249, 318, 349, 379], "3680": 249, "3683": 249, "embc44109": 249, "9176551": 249, "aberra": 249, "peterchev": 249, "grill": 249, "066023": 249, "1741": 249, "2552": [249, 276], "aadbb1": 249, "wang": 249, "transcrani": 249, "magnet": 249, "189": 249, "br": 249, "abrahamsson": 249, "cathala": 249, "matsui": 249, "shigemoto": 249, "digregorio": 249, "sublinear": 249, "gradient": [249, 370], "027": 249, "acciarito": 249, "cardarilli": 249, "cristini": 249, "nunzio": 249, "fazzolari": 249, "khanal": 249, "susi": 249, "lif": 249, "memrist": 249, "stdp": 249, "vlsi": 249, "81": [249, 387], "acker": 249, "antic": 249, "backpropag": 249, "basal": [249, 286, 293, 387], "1524": 249, "hoyo": 249, "loew": 249, "eneuro": 249, "0050": 249, "1523": 249, "ackermann": 249, "bhadra": 249, "gerg": 249, "065007": 249, "2560": 249, "jr": 249, "kilgor": 249, "bipolar": 249, "cuff": 249, "transact": 249, "rehabilit": 249, "469": 249, "477": 249, "tnsre": 249, "2034069": 249, "adesnik": 249, "scanziani": 249, "competit": 249, "464": 249, "1155": 249, "nature08935": 249, "adonia": 249, "duffi": 249, "barro": 249, "mccoi": 249, "balasubramaniam": 249, "demyelin": 249, "remyelin": 249, "2765": 249, "2774": 249, "3137350": 249, "siljak": 249, "marchetti": 249, "reconfigur": [249, 385], "synthet": 249, "556628": 249, "2020a": 249, "yastrebova": 249, "koucheryavi": 249, "cleari": 249, "nanobiosci": 249, "tnb": 249, "2975942": 249, "2020b": 249, "aghvami": 249, "m\u00fcller": 249, "araabi": 249, "egger": 249, "granul": 249, "584": 249, "595": 249, "jneurosci": 249, "1798": 249, "aguiar": 249, "sousa": 249, "lima": 249, "nonspecif": 249, "cation": 249, "windup": 249, "wdr": 249, "104": 249, "1166": 249, "00834": 249, "willshaw": 249, "mossi": 249, "fibr": 249, "bouton": 249, "699": 249, "703": 249, "ahlfor": 249, "wreh": 249, "meg": 249, "eeg": 249, "dipol": 249, "879": 249, "887": 249, "s11517": 249, "1296": 249, "ahm": 249, "anderson": 249, "dougla": 249, "martin": 249, "whitteridg": 249, "evok": 249, "cerebr": 249, "462": 249, "476": 249, "ait": 249, "ouar": 249, "filipi": 249, "tzilivaki": 249, "poirazi": 249, "canepari": 249, "ca2": [249, 371], "climb": 249, "fiber": 249, "1969": 249, "1981": 249, "2155": 249, "akbari": 249, "moradi": 249, "hadaeghi": 249, "gharibzadeh": 249, "emkanjoo": 249, "cardiac": 249, "physiologi": 249, "fphy": 249, "00077": 249, "akemann": 249, "kn\u00f6pfel": 249, "kv3": 249, "resurg": 249, "4602": 249, "4612": 249, "lundbi": 249, "mutoh": 249, "fluoresc": 249, "3959": 249, "3976": 249, "akiyama": 249, "shimizu": 249, "miyakawa": 249, "inou": 249, "induc": [249, 371, 383, 388], "polar": [249, 373], "1383": 249, "brainr": 249, "097": 249, "alessi": 249, "raspanti": 249, "magistretti": 249, "afterpotenti": 249, "stellat": 249, "entorhin": 249, "hippocampu": [249, 387], "404": 249, "hipo": 249, "22529": 249, "alfonsa": 249, "merrick": 249, "codadu": 249, "cunningham": 249, "deisseroth": 249, "racca": 249, "trevelyan": 249, "intraneuron": 249, "chlorid": [249, 286, 368], "epilept": 249, "7715": 249, "7726": 249, "4105": 249, "allain": 249, "cazenav": 249, "delpi": 249, "exerti": 249, "barth": 249, "meyrand": 249, "cattaert": 249, "branchereau": 249, "nonsynapt": 249, "glycin": 249, "kcc2": 249, "development": 249, "764": 249, "779": 249, "dneu": 249, "22358": 249, "allam": 249, "ghaderi": 249, "bouteil": 249, "legendr": 249, "ambert": 249, "greget": 249, "bischoff": 249, "baudri": 249, "berger": 249, "astrocyt": [249, 375], "glutam": 249, "uptak": 249, "00070": 249, "geiger": 249, "311": 249, "1290": 249, "1293": 249, "gabaerg": 249, "spill": 249, "942": 249, "950": 249, "roth": 249, "325": 249, "1126": 249, "1174331": 249, "allen": 249, "fidel": 249, "recruit": 249, "036024": 249, "aa9db5": 249, "allken": 249, "chepkoech": 249, "einevol": 249, "haln": 249, "subcellular": 249, "genicul": 249, "nucleu": 249, "plo": [249, 379], "ONE": 249, "e107780": 249, "pone": 249, "0107780": 249, "almog": 249, "barkai": 249, "lampert": 249, "korngreen": 249, "cole": 249, "fncel": 249, "00187": 249, "182": 249, "2896": 249, "alturki": 249, "feng": 249, "nair": 249, "guntu": 249, "334": 249, "331": 249, "016": [249, 371], "alvarez": 249, "290": 249, "yaari": 249, "yamada": 249, "kuba": 249, "avian": 249, "magnocellulari": 249, "619": 249, "631": 249, "1124": 249, "amarillo": 249, "tisson": 249, "mato": 249, "nadal": 249, "rectifi": 249, "ikir": 249, "2358": 249, "2372": 249, "00867": 249, "zagha": 249, "rudi": 249, "interplai": 249, "subthreshold": 249, "oscillatori": 249, "393": 249, "410": 249, "00647": 249, "amatrudo": 249, "weaver": 249, "crimin": 249, "hof": 249, "rosen": 249, "luebk": 249, "monkei": 249, "prefront": 249, "13644": 249, "13660": 249, "2581": 249, "ambro": 249, "ingerson": 249, "grover": 249, "1512": 249, "1536": 249, "302": 249, "amir": 249, "devor": 249, "invas": 249, "2181": 249, "2191": 249, "2003a": 249, "disrupt": 249, "2700": 249, "2708": 249, "2003b": 249, "kocsi": 249, "ectop": 249, "electrogenesi": 249, "2576": 249, "2585": 249, "liu": 249, "125": [249, 286, 368, 373], "421": 249, "2002a": 249, "micha": [249, 286, 368], "discharg": 249, "1187": 249, "1198": 249, "2002b": 249, "amo": 249, "jacobson": 249, "duker": 249, "carlsson": 249, "herg": 249, "repolar": 249, "agent": 249, "345": 249, "cardiovascular": 249, "651": 249, "658": 249, "amsalem": 249, "eyal": 249, "rogozinski": 249, "288": 249, "s41467": 249, "019": 249, "13932": 249, "l2": 249, "basket": 249, "3655": 249, "3668": 249, "1093": 249, "cercor": 249, "bhw166": 249, "tang": 249, "pei": 249, "duan": 249, "00029": 249, "anastassi": 249, "montgomeri": 249, "barahona": 249, "buzs\u00e1ki": 249, "1936": 249, "3635": 249, "anaya": 249, "zander": 249, "sankarasubramanian": 249, "lempka": 249, "cord": 249, "neurostimul": 249, "neuromodul": 249, "1111": 249, "ner": 249, "12965": 249, "lanka": 249, "sharma": 249, "butson": 249, "baker": 249, "dorval": 249, "\u03bcdb": 249, "multiresolut": 249, "fnin": 249, "01152": 249, "2019a": 249, "dufflei": 249, "vorwerk": 249, "anod": 249, "misunderstood": 249, "preferenti": 249, "016026": 249, "aae590": 249, "2019b": 249, "ost": 249, "026005": 249, "aaa14b": 249, "2018a": 249, "binzegg": 249, "kahana": 249, "asymmetri": 249, "820": 249, "824": 249, "farokhniae": 249, "gunalan": 249, "howel": 249, "mcintyr": 249, "hyperdirect": 249, "pathwai": 249, "subthalam": 249, "1140": 249, "1150": 249, "2018b": 249, "andrad": 249, "yorgan": 249, "lipscomb": 249, "schizophrenia": 249, "risk": [249, 379], "cacna1i": 249, "cav3": 249, "34233": 249, "srep34233": 249, "andre": 249, "butenko": 249, "kober": 249, "higuchi": 249, "fauser": 249, "storch": 249, "k\u00fchn": 249, "horn": 249, "rienen": 249, "350": 249, "113978": 249, "expneurol": 249, "andreozzi": 249, "carannant": 249, "addio": 249, "cesarelli": 249, "balbi": 249, "phenomenolog": [249, 368, 375], "nav1": 249, "17493": 249, "s41598": 249, "53662": 249, "androuin": 249, "potier": 249, "n\u00e4gerl": 249, "danglot": 249, "thierri": 249, "youssef": 249, "triller": 249, "duyckaert": 249, "hachimi": 249, "dutar": 249, "delatour": 249, "marti": 249, "alzheim": 249, "diseas": 249, "acta": 249, "neuropathologica": 249, "839": 249, "854": 249, "s00401": 249, "018": 249, "1847": 249, "angelo": 249, "london": 249, "christensen": 249, "h\u00e4usser": 249, "8643": 249, "8653": 249, "angulo": 249, "henzi": 249, "neymotin": [249, 371], "suarez": 249, "schwaller": 249, "moreno": 249, "amyloid": 249, "pathologi": 249, "unexpect": 249, "homeostasi": [249, 371, 392], "subicular": 249, "dementia": 249, "251": 249, "jalz": 249, "017": 249, "orman": 249, "buitrago": 249, "cepeda": 249, "prado": 249, "stefanov": 249, "duff": 249, "276": 249, "nbd": 249, "anirudhan": 249, "narayanan": 249, "emerg": 249, "dispar": 249, "4691": 249, "4705": 249, "4223": 249, "ankri": 249, "ezra": 249, "tsur": 249, "maimon": 249, "kaushanski": 249, "rivlin": 249, "etzion": 249, "antagonist": 249, "retina": 249, "107608": 249, "celrep": 249, "antun": 249, "faria": 249, "da": 249, "silva": 249, "simo": 249, "souza": 249, "channelopathi": 249, "autism": 249, "disord": 249, "1750058": 249, "1142": 249, "s0129065717500587": 249, "anwar": 249, "hepburn": 249, "nedelescu": 249, "15848": 249, "15867": 249, "hong": 249, "cerebellum": [249, 387], "681": 249, "s12311": 249, "0224": 249, "room": 249, "kuhn": 249, "168": 249, "00168": 249, "apollo": 249, "grayden": 249, "burkitt": 249, "meffin": 249, "kameneva": 249, "aii": 249, "amacrin": 249, "6551": 249, "6554": 249, "embc": 249, "6611056": 249, "apostolid": 249, "milstein": 249, "grienberg": 249, "bittner": 249, "mage": 249, "plateau": 249, "770": 249, "783": 249, "040": 249, "appukuttan": 249, "manchanda": 249, "urinari": 249, "bladder": 249, "muscl": 249, "syncytium": 249, "167": 249, "0532": 249, "2015a": 249, "2017a": 249, "655225": 249, "padmakumar": 249, "convex": 249, "bioengin": 249, "biotechnologi": 249, "fbioe": 249, "00064": 249, "2017b": 249, "young": 249, "syncyti": 249, "detrusor": 249, "1300": 249, "sath": 249, "homotyp": 249, "heterotyp": 249, "5th": 249, "iccab": 249, "7344707": 249, "2015b": 249, "icsmb": 249, "7915104": 249, "aradi": 249, "erdi": 249, "multicompartment": 249, "519": 249, "527": 249, "1996a": 249, "cybernet": 249, "605": 249, "1996b": 249, "1996c": 249, "252": 249, "1996d": 249, "maccaferri": 249, "juvenil": 249, "ca3": 249, "9681": 249, "9692": 249, "santhakumar": 249, "soltesz": 249, "divers": [249, 371, 379], "ipsc": 249, "neuropharmacologi": 249, "511": 249, "522": 249, "perisomat": 249, "2849": 249, "2858": 249, "538": 249, "227": 249, "arai": 249, "tanaka": 249, "tachibana": 249, "adult": 249, "9260": 249, "9270": 249, "1590": 249, "araya": 249, "yust": 249, "neck": 249, "academi": 249, "america": 249, "e2895": 249, "e2904": 249, "1073": 249, "pna": 249, "1321869111": 249, "archi": 249, "mel": 249, "intradendrit": 249, "binocular": 249, "aria": 249, "vall": 249, "leija": 249, "moral": 249, "cifuent": 249, "bdnf": 249, "ngf": 249, "cervic": 249, "ganglion": 249, "206": 249, "214": 249, "neuropharm": 249, "ariav": 249, "polski": 249, "schiller": 249, "submillisecond": 249, "7750": 249, "7758": 249, "arkhipov": 249, "gouwen": 249, "billeh": 249, "gratii": 249, "iyer": 249, "xu": 249, "asl": 249, "berg": 249, "buic": 249, "cain": 249, "costa": 249, "vri": 249, "denman": 249, "durand": 249, "jarski": 249, "lecoq": 249, "mihala": 249, "ocker": 249, "olsen": 249, "reid": 249, "soler": 249, "llavina": 249, "sorensen": 249, "silico": 249, "e1006535": 249, "pcbi": [249, 379], "1006535": 249, "arleo": 249, "nieu": 249, "bezzi": 249, "errico": 249, "coenen": 249, "2031": 249, "2058": 249, "neco_a_00006": 249, "arruda": 249, "publio": 249, "roqu": 249, "periglomerular": 249, "mitral": 249, "e56148": 249, "0056148": 249, "arsiero": 249, "l\u00fcscher": 249, "lundstrom": 249, "giugliano": 249, "medial": 249, "3274": 249, "3284": 249, "aruljothi": 249, "mandg": 249, "heat": 249, "nocicept": 249, "8th": 249, "8008422": 249, "gasparini": 249, "medinilla": 249, "postinhibitori": 249, "rebound": 249, "6434": 249, "6442": 249, "4066": 249, "ashhad": 249, "feldman": 249, "inspiratori": 249, "rhythmogenesi": 249, "106": 249, "482": 249, "e4": 249, "inositol": [249, 371], "trisphosph": 249, "591": 249, "1645": 249, "1669": 249, "245688": 249, "gliotransmiss": 249, "e3280": 249, "e3289": 249, "1522180113": 249, "aspart": 249, "ladenbau": 249, "obermay": 249, "e1005206": 249, "1005206": 249, "remm": 249, "e1006124": 249, "1006124": 249, "athilingam": 249, "ben": 249, "shalom": 249, "keeshen": 249, "sohal": 249, "bender": 249, "serotonin": 249, "elif": [249, 342], "610": 249, "7554": 249, "31991": 249, "aubi": 249, "sayegh": 249, "faur": 249, "vertebr": 249, "6373": 249, "6390": 249, "5624": 249, "augustin": 249, "zylbert": 249, "partridg": 249, "drosophila": [249, 372], "melanogast": 249, "0423": 249, "avella": 249, "gonzalez": 249, "aerd": 249, "elburg": 249, "poil": 249, "mansveld": 249, "linkenka": 249, "hansen": 249, "pelt": 249, "ooyen": 249, "e1002666": 249, "1002666": 249, "e100899": 249, "0100899": 249, "141": 249, "00141": 249, "avin": 249, "gradwohl": 249, "grossman": 249, "motor": [249, 387], "pressur": 249, "2716": 249, "2729": 249, "ejn": 249, "12267": 249, "azouz": 249, "spatiotempor": [249, 371], "revisit": [249, 379], "2785": 249, "2796": 249, "vivo": 249, "8110": 249, "8115": 249, "513": 249, "523": 249, "disinhibit": 249, "striat": 249, "1286": [249, 365], "baccu": 249, "8345": 249, "8350": 249, "sahlei": 249, "1226": 249, "1236": 249, "badoual": 249, "piwkowska": 249, "bal": 249, "498": 249, "zou": 249, "fregnac": 249, "bagherimofidi": 249, "pouladian": 249, "jamei": 249, "tehrani": 249, "fard": 249, "mri": 249, "somatosensori": 249, "interdisciplinari": 249, "253": 249, "262": 249, "2016a": 249, "tactil": 249, "laminar": 249, "australasian": 249, "717": 249, "s13246": 249, "0467": 249, "2016b": 249, "bagnal": 249, "hull": 249, "bushong": 249, "ellisman": 249, "194": 249, "032": 249, "bahl": 249, "stemmler": 249, "herz": 249, "bahmer": 249, "gupta": 249, "auditori": 249, "793": 249, "00793": 249, "langner": 249, "cochlear": 249, "genet": [249, 371], "102": 249, "s00422": 249, "009": 249, "0353": 249, "perez": 249, "rosello": 249, "barrionuevo": 249, "unitari": 249, "commissur": 249, "perfor": 249, "158": 249, "0304": 249, "ryou": 249, "schiff": 249, "purpura": 249, "arous": 249, "frontostriat": 249, "healthi": 249, "nonhuman": 249, "primat": 249, "116": 249, "2383": 249, "2404": 249, "01129": 249, "balagu": 249, "capogrosso": 249, "residu": 249, "cortico": 249, "paralysi": 249, "254": 249, "ner49283": 249, "9441219": 249, "balakrishnan": 249, "pearc": 249, "midazolam": 249, "atropin": 249, "1212": 249, "1231": 249, "22307": 249, "characterist": 249, "pharmacolog": 249, "fncir": 249, "00150": 249, "martinoia": 249, "colombo": 249, "massobrio": 249, "\u03b1": [249, 367], "reapprais": 249, "427": 249, "429": 249, "clinph": 249, "00015": 249, "hellgren": 249, "kotaleski": 249, "macroscop": [249, 375], "isoform": 249, "e1005737": 249, "1005737": 249, "hummo": 249, "amygdala": 249, "249": 249, "267": 249, "030": 249, "balmer": 249, "merjan": 249, "trussel": 249, "1010": 249, "63819": 249, "banerje": 249, "banitt": 249, "depress": 249, "facilitatori": 249, "865": 249, "870": 249, "10230": 249, "10239": 249, "ilan": 249, "gidon": 249, "interregion": 249, "989": [249, 344], "998": 249, "00612": 249, "baranauska": 249, "fleidervish": 249, "4051": 249, "4056": 249, "1215125110": 249, "martina": 249, "684": 249, "mukovskii": 249, "wolf": 249, "volgushev": 249, "1070": 249, "1090": 249, "072": 249, "barbieri": 249, "bertelli": 249, "pusch": 249, "gavazzo": 249, "gs967": 249, "hemipleg": 249, "migrain": 249, "mutat": 249, "scn1a": 249, "headach": 249, "1186": 249, "s10194": 249, "1056": 249, "barela": 249, "waddi": 249, "lickfett": 249, "hunter": 249, "anido": 249, "helmer": 249, "goldin": 249, "escayg": 249, "2714": 249, "2723": 249, "butterman": 249, "lev": 249, "binshtok": 249, "peripher": 249, "9346": 249, "9363": 249, "1546": 249, "goldstein": 249, "caspi": 249, "kv7": 249, "nociceptor": 249, "181": 249, "fnmol": 249, "00181": 249, "barlow": 249, "joo": 249, "trinh": 249, "longtin": 249, "cool": 249, "bifurc": 249, "mild": 249, "traumat": 249, "injuri": 249, "chao": 249, "106328": 249, "1063": 249, "5040288": 249, "barriga": 249, "rivera": 249, "guo": 249, "yang": 249, "doko": 249, "lovel": 249, "morlei": 249, "suan": 249, "prosthesi": 249, "42682": 249, "srep42682": 249, "zulaica": 249, "rahmon": 249, "perin": 249, "ramaswami": 249, "neocortex": 249, "fnsyn": 249, "barri": 249, "turner": 249, "schloss": 249, "glenn": 249, "song": 249, "lukin": 249, "park": 249, "walsworth": 249, "quantum": 249, "defect": [249, 379], "diamond": 249, "14133": 249, "14138": 249, "1601513113": 249, "barto": 249, "vida": 249, "frotscher": 249, "jona": 249, "gyru": 249, "2687": 249, "2698": 249, "meyer": 249, "monyer": 249, "13222": 249, "13227": 249, "yehuda": 249, "1127": 249, "1136": 249, "basak": 249, "microdomain": 249, "e1006485": 249, "1006485": 249, "dispers": 249, "sharpli": 249, "596": 249, "4173": 249, "4205": 249, "jp275310": 249, "567": 249, "590": 249, "s00429": 249, "02018": 249, "basalyga": 249, "gleiser": 249, "wennek": 249, "718": 249, "0164": 249, "3_4": 249, "montemurro": 249, "273": 249, "012": 249, "0420": 249, "basu": 249, "sriniva": 249, "cheung": 249, "taniguchi": 249, "huang": 249, "siegelbaum": 249, "1208": 249, "1221": 249, "bathelli": 249, "margri": 249, "larkum": 249, "piriform": 249, "12641": 249, "12652": 249, "battefeld": 249, "popov": 249, "kole": 249, "internod": 249, "remodel": 249, "e5": 249, "039": 249, "gavrili": 249, "cooper": [249, 371], "heteromer": 249, "3719": 249, "3732": 249, "4206": 249, "beaulieu": 249, "laroch": 249, "toloza": 249, "william": 249, "frosch": 249, "cosgrov": 249, "harnett": 249, "allometr": 249, "278": 249, "s41586": 249, "021": 249, "04072": 249, "der": 249, "lafourcad": 249, "barnagian": 249, "eskandar": 249, "643": 249, "e14": 249, "045": 249, "b\u00e9dard": 249, "b\u00e9huret": 249, "deleuz": 249, "oversampl": 249, "1133": 249, "1143": 249, "kr\u00f6ger": 249, "1829": 249, "rodrigu": 249, "roi": 249, "389": 249, "403": 249, "0250": 249, "begum": 249, "bakiri": 249, "volynski": 249, "kullmann": 249, "broaden": 249, "12102": 249, "ncomms12102": 249, "behabadi": 249, "j4": 249, "sweet": 249, "wrinkl": 249, "2865": 249, "2870": 249, "subunit": 249, "503": 249, "1217645111": 249, "jadi": 249, "e1002599": 249, "1002599": 249, "corticothalam": 249, "00080": 249, "gomez": 249, "fr\u00e9gnac": 249, "substrat": [249, 368], "e1003401": 249, "1003401": 249, "bein": 249, "mongiat": 249, "schwarzach": 249, "cuntz": 249, "jedlicka": 249, "t2n": 249, "electrophysiolog": [249, 371], "matur": [249, 388], "born": [249, 379], "e26517": 249, "26517": 249, "bekker": 249, "steven": 249, "sucros": 249, "miniatur": 249, "epsc": 249, "1250": 249, "1255": 249, "1996": [249, 393], "bekkouch": 249, "shoemak": 249, "fabian": 249, "rigosi": 249, "wiederman": 249, "carrol": 249, "multicompart": [249, 383, 384, 385], "insect": 249, "icann": 249, "397": 249, "dragonfli": 249, "684872": 249, "bekolai": 249, "bergstra": 249, "hunsberg": 249, "dewolf": 249, "rasmussen": 249, "choo": 249, "voelker": 249, "eliasmith": 249, "nengo": 249, "00048": 249, "bell": 249, "joint": 249, "technologi": [249, 379, 380], "9502": 249, "5668": 249, "belling": 249, "miyazawa": 249, "steinmetz": 249, "submyelin": 249, "263": 249, "rho": 249, "487": 249, "compbiom": 249, "benk": 249, "l\u00fcthi": 249, "palmer": 249, "wikstr\u00f6m": 249, "isaac": 249, "collingridg": 249, "537": 249, "407": [249, 276], "bennett": 249, "muschol": 249, "neurohypophysi": 249, "varicos": 249, "endocrinologi": 249, "2829": 249, "2836": 249, "aviv": 249, "razon": 249, "183": 249, "024": 249, "berrio": 249, "sander": 249, "scn2a": 249, "infantil": 249, "psychiatri": 249, "232": 249, "biopsych": 249, "ladd": 249, "artherya": 249, "kim": 249, "sanghevi": 249, "bouchard": 249, "neurogpu": 249, "366": 249, "109400": 249, "liberman": 249, "00004": 249, "benucci": 249, "verschur": 249, "k\u00f6nig": 249, "pairwis": 249, "2351": 249, "2378": 249, "cognit": 249, "neurodynam": 249, "berecki": 249, "bryson": 249, "terhag": 249, "maljev": 249, "gazina": 249, "hill": [249, 368], "petrou": 249, "encephalopathi": 249, "annal": 249, "85": [249, 290], "514": 249, "ana": 249, "25438": 249, "berend": 249, "maex": 249, "2531": [249, 276], "2547": 249, "bernand": 249, "\u00f6": 249, "88": 249, "11569": 249, "11573": 249, "1991": 249, "amplif": 249, "2743": 249, "2753": 249, "bernasconi": 249, "schindler": 249, "stoop": 249, "74": [249, 276, 387], "berzhanskaya": 249, "chernyi": 249, "gluckman": 249, "rhythm": [249, 376], "369": 249, "0426": 249, "bessaih": 249, "leresch": 249, "11376": 249, "11381": 249, "bezair": 249, "raikov": 249, "burk": 249, "armstrong": 249, "simtrack": 249, "081927": 249, "vya": 249, "rodent": 249, "e18566": 249, "18566": 249, "324": 249, "lahowetz": 249, "bhumbra": 249, "bannatyn": 249, "watanab": 249, "todd": 249, "maxwel": 249, "beato": 249, "12919": 249, "12932": 249, "0199": 249, "bialowa": 249, "rama": 249, "zbili": 249, "marra": 249, "fronzaroli": 249, "molinier": 249, "carlier": 249, "debann": 249, "kv1": 249, "293": 249, "304": 249, "12787": 249, "bianchi": 249, "tirozzi": 249, "cuomo": 249, "mari": 249, "creb": 249, "transcript": [249, 372], "165": [249, 387], "22212": 249, "marasco": 249, "limongiello": 249, "0383": 249, "vital": 249, "garad": 249, "pousinha": 249, "lessmann": 249, "644": 249, "657": 249, "bpj": 249, "bian": 249, "r\u00fcckerl": 249, "saint": 249, "cloment": 249, "mariani": 249, "sherrard": 249, "65954": 249, "bicknel": 249, "4001": 249, "4017": 249, "e10": 249, "044": 249, "bieda": 249, "copenhagen": 249, "retin": 249, "243": 249, "jia": 249, "siegl": 249, "388": 249, "e18": 249, "piasini": 249, "lorincz": 249, "nusser": 249, "silver": 249, "lossless": 249, "83": [249, 286, 371, 387], "960": 249, "974": 249, "020": [249, 371], "bingham": 249, "1380": 249, "8512503": 249, "loizo": 249, "yu": 249, "gilbert": 249, "lazzi": 249, "2794": 249, "2797": 249, "7591310": 249, "2278": 249, "2289": 249, "tbme": 249, "2791860": 249, "mergenth": 249, "electroceut": 249, "00013": 249, "paknahad": 249, "girard": 249, "admitt": 249, "00072": 249, "birdno": 249, "rezai": 249, "tremor": 249, "1675": 249, "kuncel": 249, "gross": 249, "364": 249, "383": 249, "00906": 249, "dostrovski": 249, "hutchison": 249, "e96026": 249, "0096026": 249, "bir\u00f3": 249, "\u00e1": 249, "br\u00e9maud": 249, "falck": 249, "ruiz": 249, "supralinear": 249, "glutamaterg": 249, "romani": 249, "1033": 249, "1036": 249, "aan3846": 249, "blackman": 249, "grabuschnig": 249, "legenstein": 249, "sj\u00f6str\u00f6m": 249, "biocytin": 249, "histologi": 249, "photon": 249, "fnana": 249, "00065": 249, "blair": 249, "mozer": 249, "hasselmo": 249, "nonburst": 249, "zeitschrift": 249, "f\u00fcr": 249, "naturforschung": 249, "617": 249, "627": 249, "kern": 249, "icsd": 249, "463": 249, "bloss": 249, "cembrowski": 249, "karsh": 249, "colonel": 249, "fetter": 249, "spruston": 249, "1030": 249, "029": 249, "353": 249, "s41593": 249, "0084": 249, "bock": 249, "honnuraiah": 249, "paradox": 249, "7826": 249, "7839": 249, "0105": 249, "negrean": 249, "0780": 249, "bodda": 249, "palathing": 249, "sankar": 249, "diwakar": 249, "lfpsim": 249, "informat": 249, "icacci": 249, "8125898": 249, "bogaard": 249, "zochowski": 249, "booth": 249, "1677": 249, "1687": 249, "bolduan": 249, "grosser": 249, "shrinkag": 249, "acut": 249, "metal": 249, "spacer": 249, "histolog": 249, "2577": 249, "2589": 249, "02141": 249, "bonaiuto": 249, "barn": 249, "bestmann": 249, "neuroimag": 249, "242": 249, "118479": 249, "booker": 249, "althof": 249, "bettler": 249, "hear": 249, "wickman": 249, "kulik": 249, "gabab": 249, "parvalbumin": [249, 374], "7961": 249, "7974": 249, "sim\u00f5": 249, "oliveira": 249, "anstei": 249, "kozic": 249, "dando": 249, "jackson": 249, "baxter": 249, "isom": 249, "sherman": 249, "hardingham": 249, "brophi": 249, "wylli": 249, "intact": 249, "syndrom": 249, "107988": 249, "poe": 249, "rem": 249, "reactiv": 249, "173": 249, "borda": 249, "bossana": 249, "verbist": 249, "l1": 249, "118": 249, "00118": 249, "borel": 249, "guadagna": 249, "jang": 249, "kwag": 249, "paulsen": 249, "00263": 249, "bo": 249, "harri": 249, "warrick": 249, "brocard": 249, "demianenko": 249, "manuel": 249, "zytnicki": 249, "korogod": 249, "locomot": 249, "3315": 249, "3327": 249, "093": 249, "botta": 249, "sangrei": 249, "valenzuela": 249, "alcohol": 249, "golgi": 249, "atpas": [249, 371], "neuropsychopharmacologi": 249, "npp": 249, "ethanol": 249, "616": 249, "624": 249, "1530": 249, "0277": 249, "01658": 249, "bourbeau": 249, "hokanson": 249, "rubin": 249, "weber": 249, "intraneur": 249, "dorsal": 249, "ganglia": 249, "056009": 249, "hu": 249, "keller": 249, "multiscal": [249, 391], "nervou": 249, "3008": 249, "3011": 249, "2158605": 249, "2011a": 249, "pernot": 249, "445": 249, "iemb": 249, "6090061": 249, "2011b": 249, "6612": 249, "6615": 249, "6347510": 249, "1863": 249, "1870": 249, "braganza": 249, "mueller": 249, "komorowska": 249, "kelli": 249, "beck": 249, "910": 249, "53148": 249, "gaba": 249, "21753": 249, "srep21753": 249, "supiot": 249, "hodeib": 249, "laup\u00e9ni": 249, "dalvi": 249, "zhu": 249, "compensatori": 249, "fetal": 249, "sod": 249, "e51402": 249, "51402": 249, "branco": 249, "clark": 249, "discrimin": 249, "329": 249, "1671": 249, "1189664": 249, "885": 249, "892": 249, "tozer": 249, "magnu": 249, "sugino": 249, "wood": 249, "sternson": 249, "hypothalam": 249, "1749": 249, "1761": 249, "bra": 249, "lahjouji": 249, "kulagina": 249, "barb": 249, "abducen": 249, "electron": [249, 318], "compter": 249, "neurocytologi": 249, "brecht": 249, "sakmann": 249, "recept": 249, "barrel": 249, "553": 249, "265": 249, "whisker": 249, "deflect": 249, "septa": 249, "543": 249, "breen": 249, "gerken": 249, "butera": 249, "2843": 249, "2862": 249, "brennan": 249, "jedrasiak": 249, "cape": 249, "kailasa": 249, "rice": 249, "sudhakar": 249, "thalamu": 249, "claustrum": 249, "retrospleni": 249, "62207": 249, "hyperexcit": 249, "superfici": 249, "1598": 249, "1612": 249, "e8": 249, "breton": 249, "provench": 249, "bakhshetyan": 249, "hardi": 249, "bammann": 249, "cavarretta": 249, "snapyan": 249, "c\u00f4t\u00e9": 249, "saghatelyan": 249, "12659": 249, "ncomms12659": 249, "gerstner": 249, "3637": 249, "3642": 249, "monier": 249, "gonz\u00e1lez": 249, "vitro": 249, "lilith": 249, "fournier": 249, "379": 249, "parametr": 249, "1597": 249, "1601": 249, "2007a": 249, "goodman": 249, "zirp": 249, "natschl\u00e4ger": 249, "pecevski": 249, "ermentrout": 249, "djurfeldt": 249, "lansner": 249, "rochel": 249, "vievil": 249, "boustani": 249, "2007b": 249, "briant": 249, "paton": 249, "picker": 249, "champnei": 249, "vascular": 249, "sympathet": 249, "postganglion": 249, "371": 249, "jtbi": 249, "037": 249, "reinboth": 249, "spilioti": 249, "miranda": 249, "rodriguez": 249, "rorsman": 249, "\u03b4": 249, "\u03b2": 249, "somatostatin": 249, "197": 249, "215": 249, "jp274581": 249, "stalbovskii": 249, "nolan": 249, "vasoconstrictor": 249, "preganglion": 249, "elev": 249, "hypertens": 249, "2756": 249, "2778": 249, "00350": 249, "briska": 249, "uhlrich": 249, "299": 249, "305": 249, "1531": 249, "globu": 249, "pallidu": 249, "fnsy": 249, "00040": 249, "broicher": 249, "kanyshkova": 249, "landgraf": 249, "rankov": 249, "meuth": 249, "pape": 249, "budd": 249, "splice": 249, "132": 249, "145": [249, 374], "384": 249, "399": 249, "seidenbech": 249, "munsch": 249, "antiepilept": 249, "drug": 249, "relai": 249, "431": 249, "broser": 249, "schult": 249, "lang": 249, "helmchen": 249, "wittum": 249, "anisotrop": 249, "1253": 249, "1264": 249, "evan": 249, "smith": [249, 387], "rich": [249, 371], "ransom": 249, "hypotherm": 249, "neuroprotect": 249, "reperfus": 249, "exposur": 249, "aglycemia": 249, "acidif": 249, "e14007": 249, "14814": 249, "phy2": 249, "14007": 249, "feerick": 249, "fitzhugh": 249, "nagumo": 249, "4731": 249, "4734": 249, "moraru": 249, "schaff": 249, "biochem": 249, "011": 249, "0317": 249, "zador": 249, "hebbian": 249, "lippmann": 249, "moodi": 249, "mateo": 249, "morgan": 249, "kaufmann": 249, "1991a": 249, "debat": 249, "davi": 249, "1991b": 249, "mckenna": 249, "zornetz": 249, "1992": [249, 373], "br\u00fcderl": 249, "petrovici": 249, "vogging": 249, "ehrlich": 249, "pfeil": 249, "millner": 249, "gruebl": 249, "wendt": 249, "schwartz": 249, "jeltsch": 249, "fier": 249, "schill": 249, "breitwies": 249, "petkov": 249, "krishnamurthi": 249, "kremkow": 249, "lundqvist": 249, "partzsch": 249, "scholz": 249, "zuehl": 249, "mayr": 249, "potjan": 249, "schueffni": 249, "schemmel": 249, "meier": 249, "comprehens": [249, 388], "0435": 249, "brunner": 249, "ster": 249, "weert": 249, "andr\u00e1si": 249, "neubrandt": 249, "corti": 249, "corsi": 249, "ferraguti": 249, "gerber": 249, "szabad": 249, "silenc": 249, "mglu2": 249, "7285": 249, "7298": 249, "4537": 249, "analogu": 249, "13033": 249, "ncomms13033": 249, "bryman": 249, "photoreceptor": 249, "acuiti": 249, "vision": 249, "348": 249, "e7": 249, "berkov": 249, "e1009521": 249, "1009521": 249, "zandt": 249, "rossert": 249, "117": [249, 373], "3192": 249, "3202": 249, "1906369117": 249, "buccino": 249, "mearec": 249, "testbench": 249, "185": [249, 370], "204": 249, "09467": 249, "hagen": 249, "haflig": 249, "cauwenbergh": 249, "2627": 249, "2630": 249, "8512788": 249, "hurwitz": 249, "garcia": 249, "magland": 249, "hennig": 249, "spikeinterfac": 249, "unifi": 249, "61834": 249, "kordovan": 249, "ness": 249, "merkt": 249, "h\u00e4fliger": 249, "fyhn": 249, "rotter": 249, "multielectrod": 249, "1232": 249, "00210": 249, "kuchta": 249, "j\u00e6ger": 249, "berthet": 249, "mardal": 249, "tveito": 249, "probe": [249, 388], "026030": 249, "ab03a1": 249, "somata": 249, "977": 249, "8036988": 249, "999": 249, "8512498": 249, "2018c": 249, "buckingham": 249, "spencer": 249, "metazoan": 249, "861": 249, "868": 249, "ali": 249, "zebrafish": 249, "larval": 249, "3055": 249, "3063": 249, "bucurenciu": 249, "nanodomain": 249, "sensor": 249, "536": 249, "545": 249, "026": 249, "budak": 249, "grosh": 249, "sasmal": 249, "corfa": 249, "synaptopathi": 249, "e1008499": 249, "1008499": 249, "royal": 249, "272": 249, "coulon": 249, "pawlowski": 249, "jape": 249, "halothan": 249, "pfl\u00fcger": 249, "buonomano": 249, "1129": 249, "1141": 249, "2275": 249, "2283": 249, "burton": 249, "urban": 249, "feedforward": 249, "14103": 249, "14122": 249, "0746": 249, "b\u00fa": 249, "antal": 249, "emri": 249, "intrathalam": 249, "spindl": 249, "biologica": 249, "hungarica": 249, "bush": 249, "prieb": 249, "microcolumn": 249, "855": 249, "867": 249, "princ": 249, "posttraumat": 249, "epileptogenesi": 249, "1748": 249, "1758": 249, "166": 249, "2183": 249, "2193": 249, "schr\u00f6der": 249, "k\u00f6hling": 249, "oss": 249, "db": 249, "e1008023": 249, "1008023": 249, "mak": 249, "henderson": 249, "661": 249, "670": 249, "2490": 249, "2500": 249, "implant": 249, "1889": 249, "1894": 249, "normann": 249, "036009": 249, "byczkowicz": 249, "eshra": 249, "montanaro": 249, "trevisiol": 249, "hirrling": 249, "hallermann": 249, "hcn": 249, "e42766": 249, "42766": 249, "bywalez": 249, "patirnich": 249, "rupprecht": 249, "p\u00e1lfi": 249, "r\u00f3zsa": 249, "601": 249, "051": 249, "cagnan": 249, "meijer": 249, "gil": 249, "krupa": 249, "heida": 249, "wadman": 249, "marten": 249, "parkinson": 249, "1306": 249, "1317": 249, "1460": 249, "9568": 249, "06922": 249, "cakir": 249, "nobl": 249, "labadi": 249, "robot": 249, "intervent": [249, 379], "2513006": 249, "cali": 249, "pignatelli": 249, "carleton": 249, "infer": 249, "330": 249, "calin": 249, "jageman": 249, "2923": 249, "2927": 249, "tunstal": 249, "mensh": 249, "frost": 249, "tritonia": 249, "2382": 249, "2398": 249, "callawai": 249, "lasser": 249, "ross": 249, "barnacl": 249, "1157": 249, "cameron": 249, "vafai": 249, "regener": [249, 276], "goldfish": 249, "camir\u00e9": 249, "lazarevich": 249, "topolnik": 249, "00047": 249, "camu\u00f1a": 249, "mesa": 249, "quiroga": 249, "1191": 249, "neco_a_00433": 249, "canakci": 249, "inci": 249, "kuzum": 249, "rippl": 249, "e0184542": 249, "0184542": 249, "canavi": 249, "midbrain": 249, "dopamin": 249, "donnel": 249, "probabilist": 249, "e1000886": 249, "1000886": 249, "sui": 249, "lyu": 249, "chai": 249, "epiretin": 249, "neuroengin": 249, "s12984": 249, "0065": 249, "capllonch": 249, "juan": 249, "koelbl": 249, "sepulveda": 249, "discretis": 249, "ceec": 249, "7835916": 249, "kolbl": 249, "unidirect": 249, "39th": 249, "8036804": 249, "embec": 249, "nbc": 249, "eskola": 249, "v\u00e4is\u00e4nen": 249, "viik": 249, "hyttinen": 249, "singapor": 249, "662": 249, "ohmic": 249, "11th": 249, "ceec47804": 249, "8974323": 249, "e1007826": 249, "1007826": 249, "gandar": 249, "greiner": 249, "moraud": 249, "wenger": 249, "shkorbatova": 249, "musienko": 249, "minev": 249, "lacour": 249, "courtin": 249, "subdur": 249, "electrochem": 249, "therapi": 249, "026024": 249, "aaa87a": 249, "raspopov": 249, "beauparl": 249, "bassi": 249, "luciani": 249, "micera": 249, "epidur": 249, "sensorimotor": 249, "19326": 249, "19340": 249, "1688": 249, "capurro": 249, "diambra": 249, "malta": 249, "heart": 249, "beat": 249, "medit": 249, "physica": 249, "327": 249, "carbunaru": 249, "reson": 249, "758": 249, "carlin": 249, "jiang": 249, "jordan": 249, "brownston": 249, "bistabl": [249, 367], "1635": 249, "1646": 249, "bui": 249, "staircas": 249, "5343": 249, "5353": 249, "5458": 249, "qualit": 249, "1995a": 249, "1995b": 249, "78": [249, 276, 387], "720": 249, "workbench": 249, "carr": 249, "cantrel": 249, "scheuer": 249, "catteral": 249, "surmeier": 249, "novel": 249, "carrillo": 249, "tolu": 249, "biosystem": 249, "cartmel": 249, "tian": 249, "thio": 249, "leuz": 249, "dor": 249, "mcnab": 249, "halpern": 249, "multimod": 249, "accumben": 249, "198": 249, "149": 249, "carvalho": 249, "774": 249, "785": 249, "casal": 249, "mccormick": 249, "18289": 249, "18302": 249, "4417": 249, "casaleggio": 249, "errat": 249, "arrhythmia": 249, "e100288": 249, "0100288": 249, "casali": 249, "marenzi": 249, "medini": 249, "casellato": 249, "00037": 249, "tognolina": 249, "gandolfi": 249, "mapelli": 249, "uncov": 249, "635": 249, "s42003": 249, "01360": 249, "llobet": 249, "terni": 249, "g\u00f3mez": 249, "aranda": 249, "blanch": 249, "doohan": 249, "revil": 249, "blasi": 249, "solsona": 249, "pore": 249, "clostridium": 249, "perfringen": 249, "\u03b5": 249, "toxin": 249, "0051": 249, "cassara": 249, "hagberg": 249, "bianciardi": 249, "maraviglia": 249, "ultra": 249, "1228": 249, "1241": 249, "castelfranco": 249, "hartlin": 249, "invertebr": 249, "521": 249, "0552": 249, "cataldi": 249, "lariccia": 249, "marzaioli": 249, "cavaccini": 249, "curia": 249, "viggiano": 249, "canzoniero": 249, "renzo": 249, "avoli": 249, "annunziato": 249, "zn2": 249, "2274": 249, "2284": 249, "bricklei": 249, "cull": [249, 286], "candi": 249, "farrant": 249, "6074": 249, "6085": 249, "cattani": 249, "solina": 249, "canuto": 249, "00030": 249, "cauller": 249, "connor": 249, "229": 249, "762": 249, "igarashi": 249, "odor": 249, "7625": 249, "25740": 249, "tegolo": 249, "emiss": 249, "00310": 249, "glomerular": 249, "00067": 249, "cazad": 249, "bidaud": 249, "lori": 249, "chemin": 249, "submembran": 249, "e22331": 249, "22331": 249, "caz\u00e9": 249, "humphri": 249, "gutkin": 249, "e1002867": 249, "1002867": 249, "jarvi": 249, "foust": 249, "schultz": 249, "2511": 249, "2527": 249, "neco_a_00989": 249, "ceballo": 249, "tzounopoulo": 249, "le\u00e3o": 249, "ih": 249, "fusiform": 249, "00249": 249, "pena": 249, "epj": 249, "s11734": 249, "00176": 249, "prolong": 249, "2207": 249, "2217": 249, "047": 249, "cellot": 249, "maggi": 249, "castro": 249, "catalano": 249, "scattoni": 249, "calamandrei": 249, "cherubini": 249, "impair": 249, "autist": 249, "neonat": 249, "btbr": 249, "tf": 249, "31696": 249, "srep31696": 249, "logan": 249, "kath": 249, "rieck": 249, "axonless": 249, "cerc\u00f3": 249, "miguel": 249, "trueta": 249, "autoinhibit": 249, "leech": 249, "1075": 249, "1085": 249, "cerina": 249, "szkudlarek": 249, "nguyen": 249, "g\u00f6bel": 249, "kv": 249, "noxiou": 249, "british": 249, "pharmacologi": 249, "172": 249, "3126": 249, "3140": 249, "bph": 249, "13113": 249, "cest\u00e8l": 249, "labat": 249, "rusconi": 249, "tarantino": 249, "mumoli": 249, "franceschetti": 249, "annesi": 249, "mantegazza": 249, "gambardella": 249, "t1174": 249, "epilepsia": 249, "927": 249, "935": 249, "epi": 249, "12123": 249, "2013a": 249, "schiavon": 249, "nonfunct": 249, "rescu": 249, "17546": 249, "17551": 249, "1309827110": 249, "2013b": 249, "chadderdon": 249, "mohan": 249, "suter": 249, "kerr": 249, "franci": 249, "1239": 249, "1262": 249, "neco_a_00602": 249, "reinforc": 249, "e47251": 249, "0047251": 249, "chakraborti": 249, "truong": 249, "bikson": 249, "kaphzan": 249, "2786": 249, "bhx158": 249, "chamber": 249, "bethwait": 249, "peachei": 249, "abramson": 249, "00053": 249, "bornstein": 249, "gwynn": 249, "koussoula": 249, "gastrointestin": 249, "tract": 249, "american": 249, "liver": 249, "307": 249, "g517": 249, "g532": 249, "ajpgi": 249, "00228": 249, "chan": 249, "guzman": 249, "ilij": 249, "mercer": 249, "rick": 249, "tkatch": 249, "meredith": 249, "rejuven": 249, "1081": 249, "1086": 249, "hcn2": 249, "hcn1": 249, "autonom": [249, 379], "9921": 249, "9932": 249, "kuo": 249, "weng": 249, "lin": 249, "cheng": 249, "lien": 249, "ba2": 249, "bupivacain": 249, "oligodendrocyt": 249, "precursor": 249, "4843": 249, "4858": 249, "257113": 249, "krautham": 249, "92": 249, "higlei": 249, "e13747": 249, "13747": 249, "chaturvedi": 249, "foutz": 249, "lujan": 249, "056023": 249, "chatzikalymni": 249, "gumu": 249, "skinner": 249, "982": 249, "23364": 249, "orien": 249, "lacunosum": 249, "olm": 249, "\u03b8": 249, "lfp": 249, "510": 249, "0146": 249, "monteil": 249, "bourinet": 249, "nargeot": 249, "a1g": 249, "1238": 249, "2001a": 249, "rey": 249, "isotyp": 249, "1g": 249, "1h": 249, "1i": 249, "540": 249, "endogen": 249, "cannabinoid": 249, "anandamid": 249, "embo": 249, "7033": 249, "7040": 249, "2001b": 249, "siquier": 249, "pernet": 249, "nicouleau": 249, "barcia": 249, "ahmad": 249, "medina": 249, "cano": 249, "hanein": 249, "altin": 249, "bole": 249, "feysot": 249, "fourag": 249, "nitschk\u00e9": 249, "thevenon": 249, "rio": 249, "blanc": 249, "vidal": 249, "bahi": 249, "buisson": 249, "desguerr": 249, "munnich": 249, "lyonnet": 249, "boddaert": 249, "fassi": 249, "shinawi": 249, "zimmerman": 249, "amiel": 249, "faivr": 249, "colleaux": 249, "cantagrel": 249, "novo": 249, "childhood": 249, "atrophi": 249, "cacna1g": 249, "awy145": 249, "chemla": 249, "chavan": 249, "vsdi": 249, "438": 249, "gabaa": 249, "115": 249, "2867": 249, "2879": 249, "00352": 249, "stiefel": 249, "bullock": 249, "coral": 249, "neuroethologi": 249, "195": 249, "thon": 249, "eghbal": 249, "ahmadi": 249, "baram": 249, "febril": 249, "zheng": 249, "htsort": 249, "657151": 249, "murphi": 249, "raymond": 249, "methyl": 249, "164": 249, "ren": 249, "nonsatur": 249, "212": 249, "219": 249, "zhang": 249, "zhou": 249, "luo": 249, "tast": 249, "china": 249, "1047": [249, 344], "s11427": 249, "0138": 249, "2009a": 249, "biomimet": 249, "biosensor": 249, "acid": 249, "sensat": 249, "actuat": 249, "139": 249, "576": 249, "583": 249, "2009b": 249, "georg": 249, "camp": 249, "alloster": 249, "188": 249, "shen": 249, "midtgaard": 249, "2755": 249, "2764": 249, "shu": 249, "kapur": 249, "bayliss": 249, "knock": 249, "2611": 249, "2622": 249, "3771": 249, "kennedi": 249, "willcox": 249, "isofluran": 249, "knockout": 249, "2009c": 249, "kinas": 249, "ch\u00e9reau": 249, "saraceno": 249, "angibaud": 249, "superresolut": 249, "114": 249, "1607541114": 249, "chiang": 249, "chien": 249, "chiu": 249, "adolesc": 249, "3393": 249, "chimento": 249, "doshai": 249, "macular": 249, "micrograph": 249, "1883": 249, "1896": 249, "macula": 249, "781": 249, "chiovini": 249, "turi": 249, "katona": 249, "kasz\u00e1": 249, "ma\u00e1k": 249, "szalai": 249, "szab\u00f3": 249, "szadai": 249, "k\u00e1li": 249, "908": 249, "924": 249, "004": 249, "chitwood": 249, "nonpyramid": 249, "plenum": 249, "hubbard": 249, "515": 249, "743": 249, "756": 249, "lur": 249, "elli": 249, "340": 249, "759": 249, "1234274": 249, "choi": 249, "waxman": 249, "3173": 249, "3184": 249, "00100": 249, "chono": 249, "takagi": 249, "koyama": 249, "suzuki": 249, "ito": 249, "chow": 249, "3013": 249, "3021": 249, "alessandro": 249, "lega": 249, "hildebrand": 249, "antenn": 249, "lobe": 249, "chung": 249, "im": [249, 375], "seo": 249, "42nd": 249, "conf": 249, "2938": 249, "2941": 249, "9175250": 249, "ciotti": 249, "pedrocchi": 249, "pudend": 249, "bioelectron": 249, "sexual": 249, "dysfunct": 249, "270": 249, "9441309": 249, "monsivai": 249, "johnson": 249, "lebel": 249, "gobbi": 249, "ramasubbu": 249, "kiss": 249, "subcallos": 249, "cingul": 249, "1094": 249, "clai": 249, "paydarfar": 249, "forger": 249, "1421": 249, "1428": 249, "1098": 249, "rsif": 249, "0166": 249, "cleland": 249, "sethupathi": 249, "topograph": 249, "bmc": 249, "2202": 249, "clopath": 249, "b\u00fcsing": 249, "vasilaki": 249, "352": 249, "2479": 249, "cochran": 249, "nieser": 249, "z\u00f6llner": 249, "mcinni": 249, "enrich": 249, "gemb": 249, "gigasci": 249, "giaa091": 249, "coggan": 249, "prescott": 249, "20602": 249, "20609": 249, "1013798107": 249, "cal\u00ec": 249, "lehv\u00e4slaiho": 249, "norepinephrin": 249, "glycogenolysi": 249, "fuel": 249, "lactat": 249, "e1006392": 249, "1006392": 249, "afterdischarg": 249, "0562": 249, "cohen": 249, "shappir": 249, "yitzchaik": 249, "spira": 249, "transistor": 249, "electro": 249, "aplysia": 249, "656": 249, "grown": [249, 379], "811": 249, "819": 249, "klooster": 249, "weil": 249, "m\u00f6biu": 249, "nave": 249, "saltatori": [249, 371], "periaxon": 249, "nanocircuit": 249, "322": 249, "e15": 249, "8988": 249, "8998": 249, "0261": 249, "coker": 249, "zellmer": 249, "moran": 249, "micro": [249, 382, 383, 384], "siev": 249, "bidirect": 249, "026001": 249, "aaefcf": 249, "026002": 249, "aaefab": 249, "colbert": 249, "533": 249, "colburn": 249, "brughera": 249, "brainstem": 249, "bilater": 249, "otolaryngologi": 249, "comb": 249, "8127": 249, "0449": 249, "cond": 249, "013": 249, "0447": 249, "connelli": 249, "autapt": 249, "e89995": 249, "0089995": 249, "crunelli": 249, "errington": 249, "15505": 249, "15522": 249, "2740": 249, "3735": 249, "3754": 249, "3836": 249, "intracort": 249, "schwindt": 249, "grand": 249, "spain": 249, "2116": 249, "2128": 249, "wilhelm": 249, "guest": [249, 392], "liang": 249, "s0079": 249, "6123": 249, "65001": 249, "coomb": 249, "timofeeva": 249, "svensson": 249, "lord": 249, "josic": 249, "cox": 249, "trip": 249, "cornford": 249, "mercier": 249, "leit": 249, "magloir": 249, "e49872": 249, "49872": 249, "formento": 249, "locomotor": 249, "neurorehabilit": 249, "coskren": 249, "kabaso": 249, "wearn": 249, "yadav": 249, "rumbel": 249, "rhesu": 249, "0541": 249, "couto": 249, "kilohertz": 249, "ineffect": 249, "00022": 249, "linaro": 249, "e1004112": 249, "1004112": 249, "coventri": 249, "parthasarathi": 249, "sommer": 249, "bartlett": 249, "winner": 249, "particl": [249, 375], "swarm": 249, "social": 249, "0628": 249, "crane": 249, "neild": 249, "arteriolar": 249, "microcircul": 249, "cremonesi": 249, "hager": 249, "wellein": 249, "428": 249, "449": 249, "1094342020912528": 249, "09451": 249, "criado": 249, "gasulla": 249, "mantovani": 249, "cluster49012": 249, "crotti": 249, "lasker": 249, "011908": 249, "physrev": 249, "intersymbol": 249, "1006": 249, "1009": 249, "metabol": 249, "1652": 249, "1656": 249, "3843": 249, "3854": 249, "1237": 249, "1246": 249, "cruz": 249, "148": 249, "kushmerick": 249, "moreira": 249, "lobo": 249, "thiamin": 249, "053": 249, "csernai": 249, "borb\u00e9li": 249, "burka": 249, "feket": 249, "balogh": 249, "barth\u00f3": 249, "597": 249, "4069": 249, "4086": 249, "jp277664": 249, "cserp\u00e1n": 249, "mesz\u00e9na": 249, "wittner": 249, "t\u00f3th": 249, "ulbert": 249, "somogyv\u00e1ri": 249, "w\u00f3jcik": 249, "62017": 249, "cudmor": 249, "giraud": 249, "12885": 249, "12895": 249, "0740": 249, "culmon": 249, "peptid": 249, "00052": 249, "bird": 249, "mittag": 249, "schneider": 249, "mediavilla": 249, "hoffmann": 249, "deller": 249, "constanc": 249, "3647": 249, "3662": 249, "028": 249, "borst": 249, "1742": 249, "4682": 249, "haag": 249, "11082": 249, "11085": 249, "forstner": 249, "axo": 249, "10229": 249, "10233": 249, "currin": 249, "akerman": 249, "raimondo": 249, "e1007932": 249, "1007932": 249, "curti": 249, "budelli": 249, "pereda": 249, "1683": 249, "1699": 249, "cutsuridi": 249, "mimet": 249, "655": 249, "s12559": 249, "09658": 249, "cobb": 249, "423": 249, "20661": 249, "spatio": 249, "quantifi": 249, "intellig": 249, "bioinspir": 249, "cabestani": 249, "prieto": 249, "sandov": 249, "berlin": 249, "maffei": 249, "armano": 249, "rossi": 249, "taglietti": 249, "fontana": 249, "naldi": 249, "rimehaug": 249, "stasik": 249, "e1008386": 249, "1008386": 249, "hernando": 249, "plana": 249, "devress": 249, "dichter": 249, "povolotski": 249, "sonata": 249, "e1007696": 249, "1007696": 249, "amico": 249, "l\u00f3pez": 249, "jokanov": 249, "sirvent": 249, "corbalan": 249, "drom": 249, "47th": 249, "3229710": 249, "3229752": 249, "hopp": 249, "motion": 249, "5787": 249, "23998": 249, "daneshi": 249, "kohan": 249, "lashkari": 249, "sparrei": 249, "paranod": 249, "damag": 249, "395": 249, "411": 249, "1691": 249, "1195": 249, "1211": 249, "3203": 249, "stratifi": 249, "593": 249, "3549": 249, "3576": 249, "jp270688": 249, "dasgupta": 249, "sikdar": 249, "269": 249, "22371": 249, "datunashvili": 249, "chaudhari": 249, "zobeiri": 249, "l\u00fcttjohann": 249, "mergia": 249, "baumann": 249, "balfanz": 249, "luijtelaar": 249, "koesl": 249, "cyclic": 249, "nucleotid": 249, "00369": 249, "daur": 249, "nadim": 249, "bucher": 249, "00477": 249, "dave": 249, "mahapatra": 249, "5359": 249, "5362": 249, "7319602": 249, "guinea": 249, "pig": 249, "bioinformat": 249, "1750011": 249, "s0219720017500111": 249, "linster": 249, "cacheaux": 249, "iven": 249, "lapilov": 249, "kaufer": 249, "friedman": 249, "10588": 249, "10599": 249, "gu\u00e9rin": 249, "malzach": 249, "schad": 249, "wald": 249, "magnetostimul": 249, "5316": 249, "05493": 249, "vom": 249, "endt": 249, "coil": 249, "electromagnet": 249, "686": 249, "701": 249, "mrm": 249, "27382": 249, "merrison": 249, "hort": 249, "soff": 249, "borisyuk": 249, "fascicul": 249, "tadpol": 249, "13551": 249, "13804": 249, "chapman": 249, "crc": 249, "287": 249, "dendrodendrit": 249, "1921": 249, "1935": 249, "modal": 249, "5604": 249, "5615": 249, "eppler": 249, "perrinet": 249, "yger": 249, "pynn": 249, "374": 249, "davoin": 249, "151": 249, "ulrich": 249, "frontal": 249, "kir2": 249, "kleak": 249, "8776": 249, "8787": 249, "wokosin": 249, "plotkin": 249, "striatal": 249, "11603": 249, "11614": 249, "pava": 249, "panch": 249, "orozco": 249, "\u00e1lvarez": 249, "henao": 249, "gallo": 249, "\u00f3": 249, "daza": 249, "santacoloma": 249, "guti\u00e9rrez": 249, "revista": 249, "facultad": 249, "ingenier\u00eda": 249, "universidad": 249, "antioquia": 249, "debai": 249, "wolfart": 249, "franc": 249, "masson": 249, "pari": 249, "558": 249, "degro": 249, "somatodendrit": 249, "00006": 249, "deister": 249, "wilson": 249, "8452": 249, "8461": 249, "deitcher": 249, "kanari": 249, "verhoog": 249, "atenekeng": 249, "kahou": 249, "kock": 249, "morpho": 249, "l3": 249, "5398": 249, "5414": 249, "bhx226": 249, "dekker": 249, "briair": 249, "frijn": 249, "0503": 249, "delanei": 249, "sedlak": 249, "autuori": 249, "sah": 249, "basolater": 249, "triheteromer": 249, "glun2b": 249, "1391": 249, "delattr": 249, "perich": 249, "220": 249, "00220": 249, "sadoc": 249, "shin": 249, "uebel": 249, "renger": 249, "12228": 249, "12236": 249, "1362": 249, "delgado": 249, "desai": 249, "15713": 249, "15725": 249, "3068": 249, "delorm": 249, "365": 249, "delvendahl": 249, "straub": 249, "00093": 249, "demaegd": 249, "stein": 249, "e1008057": 249, "1008057": 249, "neuropeptid": 249, "7607": 249, "7622": 249, "0101": 249, "dembitskaya": 249, "semyanov": 249, "2118": 249, "poddubnayai": 249, "makedonskyi": 249, "epileptiform": 249, "hyppocamp": 249, "possess": 249, "thermosensit": 249, "trp": 249, "s11062": 249, "9624": 249, "desjardin": 249, "reinker": 249, "miura": 249, "neuman": 249, "142": 249, "9099": 249, "9111": 249, "2175": 249, "506": 249, "babloyantz": 249, "neuroreport": 249, "1552": 249, "1993a": 249, "ferret": 249, "2049": 249, "2070": 249, "rhythmic": 249, "reticular": 249, "803": 249, "818": 249, "1994a": 249, "2220": 249, "1994b": 249, "1998a": 249, "coher": 249, "443": [249, 370], "555": 249, "563": 249, "huguenard": 249, "thermodynam": 249, "259": 249, "boca": 249, "raton": 249, "fl": 249, "par\u00e9": 249, "somato": 249, "1998b": 249, "1994c": 249, "synthesi": 249, "231": 249, "1994d": 249, "norwel": 249, "kluwer": 249, "arbib": 249, "956": 249, "959": 249, "1998c": 249, "1130": 249, "marder": 249, "789": 249, "795": 249, "reticulari": 249, "2473": 249, "2477": 249, "1993b": 249, "3574": 249, "3588": 249, "1998d": 249, "1547": 249, "bombard": 249, "233": 249, "238": 249, "901": 249, "906": 249, "fellou": 249, "739": 249, "spillov": 249, "aminobutyr": 249, "9515": 249, "9519": 249, "amsterdam": 249, "elsevi": 249, "1049": 249, "1053": 249, "philosoph": 249, "devaux": 249, "gow": 249, "insul": 249, "909": 249, "yarom": 249, "inferior": 249, "olivari": 249, "3048": 249, "3058": 249, "dewel": 249, "gabbiani": 249, "collis": 249, "e34238": 249, "34238": 249, "1753": 249, "1764": 249, "00363": 249, "691": 249, "706": 249, "deyo": 249, "hypersynchroni": 249, "psychopharmacologi": 249, "735": 249, "dhupia": 249, "rathour": 249, "constrict": 249, "00456": 249, "diaz": 249, "wadleigh": 249, "mimic": 249, "e55673": 249, "0055673": 249, "diba": 249, "lester": 249, "9723": 249, "9733": 249, "dietz": 249, "greenberg": 249, "mcalpin": 249, "interaur": 249, "convei": 249, "envelop": [249, 368], "binaur": 249, "jaro": 249, "s10162": 249, "0573": 249, "dijk": 249, "verhagen": 249, "bour": 249, "veltink": 249, "capsul": 249, "561": 249, "12702": 249, "046003": 249, "dityatev": 249, "chmykhova": 249, "dityateva": 249, "babalian": 249, "kleinl": 249, "clamann": 249, "reticulospin": 249, "lumbar": 249, "430": [249, 284], "neurolog": 249, "psychiatr": 249, "senbhattacharya": 249, "chowdhuri": 249, "lombardo": 249, "ltp": 249, "ltd": 249, "e21928": 249, "0021928": 249, "goldfarb": 249, "532": 249, "djuris": 249, "zecev": 249, "zone": 249, "6703": 249, "6714": 249, "4057": 249, "4068": 249, "doiron": 249, "berman": 249, "maler": 249, "noonan": 249, "lemon": 249, "doischer": 249, "hosp": 249, "yanagawa": 249, "obata": 249, "postnat": 249, "12956": 249, "12968": 249, "domanski": 249, "phenotyp": 249, "fmr1": 249, "4814": 249, "12736": 249, "donlei": 249, "bergin": 249, "schulz": 249, "undergradu": 249, "741": 249, "9441407": 249, "donnelli": 249, "carotid": 249, "1394": 249, "doron": 249, "1550": 249, "1561": 249, "dorp": 249, "zeeuw": 249, "unipolar": 249, "5403": 249, "5408": 249, "1314219111": 249, "dougali": 249, "matthew": 249, "liss": 249, "ungless": 249, "ventrolater": 249, "periaqueduct": 249, "raph": 249, "vlpag": 249, "drn": 249, "275": 249, "0641": 249, "dougherti": 249, "islam": 249, "ventral": 249, "5707": 249, "5722": 249, "242693": 249, "dover": 249, "subramaniyam": 249, "fhf": 249, "ncomms12895": 249, "588": 249, "3695": 249, "3711": [249, 276], "192559": 249, "doyon": 249, "castonguai": 249, "godin": 249, "koninck": 249, "e1002149": 249, "1002149": 249, "drion": 249, "seutin": 249, "sepulchr": 249, "e41806": 249, "0041806": 249, "massott": 249, "reconcil": 249, "dopaminerg": 249, "e1002050": 249, "1002050": 249, "druckmann": 249, "0269": 249, "du": 249, "glycinerg": 249, "bullfrog": 249, "784": 249, "lindroo": 249, "ding": 249, "e7612": 249, "e7621": 249, "1704893114": 249, "hao": 249, "gigout": 249, "sundt": 249, "gamper": 249, "2306": 249, "2322": 249, "dudman": 249, "1000290": 249, "methodologi": [249, 379], "066024": 249, "ab3c95": 249, "dugladz": 249, "maziashvili": 249, "b\u00f6rger": 249, "gurgenidz": 249, "h\u00e4ussler": 249, "winkelmann": 249, "haa": 249, "kopel": 249, "glove": 249, "autoreceptor": 249, "15073": 249, "15078": 249, "1313505110": 249, "schmitz": 249, "whittington": 249, "1458": 249, "1461": 249, "1222017": 249, "tort": 249, "otah": 249, "mesial": 249, "17530": 249, "17535": 249, "duijnhouw": 249, "dukkipati": 249, "garrett": 249, "vulner": 249, "1745": 249, "jp275498": 249, "recognit": 249, "patrec": 249, "neurocontrol": 249, "lesion": 249, "sivagnanam": 249, "majumdar": 249, "neuroprosthesi": 249, "jrd": 249, "2656758": 249, "cantarelli": 249, "quintana": 249, "kedziora": 249, "netpyn": [249, 286, 389, 391], "e44494": 249, "44494": 249, "przekwa": 249, "musculoskelet": 249, "neurorobot": 249, "fnbot": 249, "durstewitz": 249, "gabriel": 249, "894": 249, "dyhrfjeld": 249, "johnsen": 249, "f\u00f6ldy": 249, "upregul": [249, 371], "huerta": 249, "tsimr": 249, "topolog": [249, 388], "1566": 249, "1587": 249, "dzubai": 249, "jahr": 249, "cleft": 249, "5265": 249, "5274": 249, "ebner": 249, "4295": 249, "4307": 249, "e6": 249, "068": 249, "ecker": 249, "s\u00e1rai": 249, "thomson": 249, "reimann": 249, "23220": 249, "edward": 249, "yeh": 249, "arnett": 249, "nagapann": 249, "crayfish": 249, "899": 249, "bast": 249, "udvari": 249, "messor": 249, "oberlaend": 249, "schmitt": 249, "wallac": 249, "14072": 249, "14077": 249, "1518773112": 249, "nevian": 249, "bruno": 249, "subcolumnar": 249, "876": [249, 276], "889": 249, "vrabec": 249, "mitig": 249, "1810": 249, "abeb": 249, "eguchi": 249, "stringer": 249, "oppon": 249, "00016": 249, "ehl": 249, "bista": 249, "480": 249, "s00424": 249, "1188": 249, "eiching": 249, "herrmann": 249, "pankratz": 249, "herti": 249, "health": 249, "eiber": 249, "payn": 249, "biscola": 249, "havton": 249, "keast": 249, "osborn": 249, "fallon": 249, "viscer": 249, "ac36e2": 249, "ruck": 249, "gola": 249, "kovac": 249, "hundeheg": 249, "immunolog": 249, "461": 249, "jim": 249, "klug": 249, "pettersen": 249, "halgren": 249, "dale": 249, "2174": 249, "2190": 249, "marr": 249, "behuret": 249, "baudot": 249, "law": [249, 346, 368], "e1000519": 249, "1000519": 249, "pospischil": 249, "ghaleb": 249, "schneeberg": 249, "fern\u00e1ndez": 249, "quintero": 249, "geisler": 249, "pelizzari": 249, "polstra": 249, "deneck": 249, "campiglio": 249, "liedl": 249, "renta": 249, "marsh": 249, "conlin": 249, "tuluc": 249, "kutsch": 249, "flucher": 249, "neurodevelopment": 249, "144": 249, "2092": 249, "2106": 249, "awab101": 249, "elaagoubi": 249, "mushahwar": 249, "3961": 249, "3974": 249, "570": 249, "355": 249, "1243": 249, "1261": 249, "japplphysiol": 249, "00496": 249, "amendola": 249, "heckman": 249, "superoxid": 249, "dismutas": 249, "5544": 249, "5558": 249, "0434": 249, "intraspin": 249, "microstimul": 249, "103": 249, "286": 249, "1824": 249, "1836": 249, "elbaz": 249, "buterman": 249, "neuroconstruct": 249, "circuitri": 249, "s12868": 249, "00578": 249, "bizri": 249, "kahlig": 249, "shryock": 249, "belardinelli": 249, "rajamani": 249, "ranolazin": 249, "paramyotonia": 249, "congenita": 249, "4161": 249, "14851": 249, "502": 249, "086": 249, "1913": 249, "1930": 249, "1000781": 249, "elgueta": 249, "5561": 249, "13533": 249, "k\u00f6hler": 249, "perisoma": 249, "4131": 249, "4139": 249, "3671": 249, "ellend": 249, "irkl": 249, "lamsa": 249, "15208": 249, "15222": 249, "1747": 249, "emnett": 249, "eisenman": 249, "izumi": 249, "zorumski": 249, "mennerick": 249, "pharmacodynam": 249, "memantin": 249, "ketamin": 249, "947": 249, "mol": [249, 286], "089334": 249, "engel": 249, "405": 249, "417": 249, "schulten": 249, "schild": 249, "1310": 249, "1319": 249, "enoki": 249, "kiuchi": 249, "koizumi": 249, "sasaki": 249, "kudo": [249, 379], "333": 249, "enrico": 249, "spiga": 249, "mula": 249, "caboni": 249, "diana": 249, "morphofunct": 249, "tegment": 249, "opiat": 249, "withdraw": 249, "grobler": 249, "eriksson": 249, "frans\u00e9n": 249, "zilbert": 249, "ermolyuk": 249, "alder": 249, "surg": 249, "pavlov": 249, "1754": 249, "1763": 249, "3563": 249, "esler": 249, "maturana": 249, "055001": 249, "aacbaa": 249, "nikol": 249, "pyrho": 249, "optogenet": 249, "00008": 249, "ewart": 249, "langen": 249, "delalondr": 249, "neuromapp": 249, "mini": 249, "kunkel": 249, "yokota": 249, "balaji": 249, "key": 249, "8063": 249, "8071": 249, "5431": 249, "testa": 249, "benavid": 249, "piccion": 249, "defelip": 249, "lodder": 249, "e16553": 249, "16553": 249, "patil": 249, "unravel": 249, "starburst": 249, "e1009754": 249, "1009754": 249, "yi": 249, "deng": 249, "asymptot": 249, "neco_a_01438": 249, "farahani": 249, "kronberg": 249, "fallahrad": 249, "oviedo": 249, "parra": 249, "fardet": 249, "levina": 249, "e1008503": 249, "1008503": 249, "farinella": 249, "ruedt": 249, "lanor": 249, "nmdar": 249, "l5": 249, "e1003590": 249, "1003590": 249, "farisello": 249, "boido": 249, "medrihan": 249, "cesca": 249, "valtorta": 249, "baldelli": 249, "benfenati": 249, "extrasynapt": 249, "synapsin": 249, "bhs041": 249, "farri": 249, "1838": 249, "1855": 249, "00054": 249, "farrow": 249, "1312": 249, "1320": 249, "feetham": 249, "nunn": 249, "lewi": 249, "dart": 249, "barrett": 249, "jollei": 249, "trpv4": 249, "osmosensor": 249, "paraventricular": 249, "1768": 249, "13023": 249, "fellner": 249, "stiennon": 249, "rattai": 249, "spheric": [249, 382], "1315": 249, "1328": 249, "00700": 249, "829": 249, "Wills": 249, "gebhart": 249, "colorect": 249, "2618": 249, "2634": 249, "00717": 249, "headlei": 249, "kanta": 249, "0388": 249, "9441199": 249, "samarth": 249, "amygdalar": 249, "370": 249, "376": 249, "059": 249, "955": 249, "975": 249, "051902": 249, "fenton": 249, "lenck": 249, "santini": 249, "zinyuk": 249, "kub\u00edk": 249, "bure": 249, "poucet": 249, "olyph": 249, "4613": 249, "4625": 249, "5576": 249, "ferdou": 249, "zeng": 249, "yan": 249, "berdichevski": 249, "6496": 249, "6499": 249, "embc46164": 249, "9629799": 249, "ferguson": 249, "huh": 249, "amilhon": 249, "manseau": 249, "bistratifi": 249, "00110": 249, "sevilla": 249, "fuenzalida": 249, "porto": 249, "pazo": 249, "bu\u00f1o": 249, "afterhyperpolar": 249, "3242": 249, "3255": 249, "ferrant": 249, "synergist": 249, "00439": 249, "blackwel": 249, "neuropharmacolog": 249, "chemistri": 249, "2456": 249, "2471": 249, "18004": 249, "18009": 249, "0904784106": 249, "2156": 249, "2165": 249, "3495": 249, "ferrares": 249, "jouhanneau": 249, "schreiber": 249, "poulet": 249, "3455": 249, "3465": 249, "088": 249, "ferrario": 249, "e33281": 249, "33281": 249, "palyanov": 249, "koutsik": 249, "robert": [249, 389], "unpredict": 249, "swim": 249, "e1009654": 249, "1009654": 249, "fietkiewicz": 249, "loparo": 249, "hypogloss": 249, "respiratori": 249, "065011": 249, "shafer": 249, "platt": 249, "cnsn": 249, "fineberg": 249, "ritter": 249, "covarrubia": 249, "elucid": 249, "recombin": 249, "jgp": 249, "201210869": 249, "finelli": 249, "hanei": 249, "bazhenov": 249, "stopfer": 249, "e1000062": 249, "1000062": 249, "fink": 249, "glisk": 249, "catoni": 249, "stacei": 249, "abnorm": 249, "0024": 249, "finn": 249, "weiland": 249, "argu": 249, "190": 249, "ojemb": 249, "3001563": 249, "fiorillo": 249, "fischer": 249, "westov": 249, "518": 249, "gutnick": 249, "852": 249, "2574": 249, "libman": 249, "cesium": 249, "dialysi": 249, "035001": 249, "polyamin": 249, "18994": 249, "18999": 249, "cumul": 249, "fleme": 249, "dunn": 249, "loweri": 249, "00166": 249, "or\u0142owski": 249, "chaillet": 249, "00639": 249, "fletcher": 249, "048": 249, "flore": 249, "barrera": 249, "lavil": 249, "plata": 249, "tapia": 249, "barga": 249, "galarraga": 249, "suprathreshold": 249, "corticostriat": 249, "719": 249, "731": 249, "fohlmeist": 249, "salamand": 249, "1947": 249, "1997a": 249, "1948": 249, "1964": 249, "1997b": 249, "3759": 249, "3777": 249, "00551": 249, "newman": 249, "1357": 249, "00123": 249, "foldi": 249, "howard": 249, "subpopul": 249, "folei": 249, "049": 249, "fontain": 249, "pe\u00f1a": 249, "e1003560": 249, "1003560": 249, "ford": 249, "ganguli": 249, "poorman": 249, "grissom": 249, "jenkin": [249, 379], "chiel": 249, "jansen": 249, "infrar": 249, "surgeri": 249, "lsm": 249, "23139": 249, "minassian": 249, "mignardot": 249, "goff": 249, "rowald": 249, "bloch": 249, "propriocept": 249, "1728": 249, "0262": 249, "forrest": 249, "dissoci": 249, "e68765": 249, "0068765": 249, "e51169": 249, "0051169": 249, "fortier": 249, "s00221": 249, "2483": 249, "brai": 249, "asymmetr": 249, "209": 249, "060": 249, "foubert": 249, "bennequin": 249, "droulez": 249, "milleret": 249, "interhemispher": 249, "707": 249, "2741": 249, "3640": 249, "collater": 249, "15490": 249, "15498": 249, "2752": 249, "e51901": 249, "0051901": 249, "2012a": 249, "arlow": 249, "channelrhodopsin": 249, "3235": 249, "3245": 249, "00501": 249, "2012b": 249, "066008": 249, "francavilla": 249, "guet": 249, "mccreight": 249, "amalyan": 249, "hui": 249, "michaud": 249, "marino": 249, "tremblai": 249, "\u00e8": 249, "vip": 249, "554405": 249, "frank": 249, "natora": 249, "linden": 249, "5626631": 249, "calmodulin": [249, 371], "bioessai": 249, "epileptogen": 249, "1630": 249, "1634": 249, "tigerholm": 249, "877": 249, "20694": 249, "freeman": 249, "jeng": 249, "hartveit": 249, "fri": 249, "prosthet": 249, "046005": 249, "frei": 249, "egert": 249, "heer": 249, "hafizov": 249, "hierlemann": 249, "microelectron": 249, "2198": 249, "friedrich": 249, "vella": 249, "guly\u00e1": 249, "freund": 249, "00063": 249, "nyl\u00e9n": 249, "grillner": 249, "cholinerg": 249, "2135": 249, "2148": 249, "14854": 249, "2021a": 249, "hjorth": 249, "snudda": 249, "748989": 249, "2021b": 249, "fujita": 249, "fukai": 249, "kitano": 249, "539": 249, "0368": 249, "slopsema": 249, "heyboer": 249, "polasek": 249, "0689": 249, "gal": 249, "schindel": 249, "718270": 249, "galati": 249, "hiester": 249, "00209": 249, "gallego": 249, "jame": 249, "meng": 249, "umashankar": 249, "picon": 249, "mazaraki": 249, "faisal": 249, "reynold": 249, "neuroinflamm": 249, "nawm": 249, "ranvier": 249, "e3001008": 249, "pbio": 249, "3001008": 249, "galloni": 249, "laffer": 249, "rancz": 249, "55761": 249, "kalman": 249, "104353": 249, "thermal": 249, "036020": 249, "ab131b": 249, "gao": 249, "00734": 249, "garc\u00eda": 249, "grajal": 249, "rucabado": 249, "dopico": 249, "j\u00e9rusalem": 249, "e0116532": 249, "0116532": 249, "lazaro": 249, "ho": 249, "schnupp": 249, "2359": 249, "2368": 249, "garden": 249, "dodson": 249, "875": 249, "garg": 249, "lakhani": 249, "09890": 249, "gartland": 249, "detwil": 249, "18353": 249, "18363": 249, "4212": 249, "11046": 249, "11056": 249, "ge": 249, "qian": 249, "1756": 249, "6606": 249, "geert": 249, "spiro": 249, "s13195": 249, "0343": 249, "pk": 249, "pd": [249, 388], "pharmacokinet": 249, "257": 249, "s10928": 249, "9297": 249, "twyman": 249, "alph": 249, "prospect": [249, 379], "mechanist": 249, "e49732": 249, "0049732": 249, "l\u00fcbke": 249, "1023": 249, "taskin": 249, "ionotrop": 249, "gemin": 249, "serna": 249, "zamith": 249, "assendorp": 249, "fossati": 249, "rosta": 249, "charrier": 249, "dualli": 249, "innerv": 249, "e3001375": 249, "3001375": 249, "sabarli": 249, "guigon": 249, "berri": 249, "delord": 249, "436": 249, "056": 249, "gentiletti": 249, "suffczynski": 249, "gnatkovski": 249, "1750004": 249, "577": 249, "2307": 249, "georgiadi": 249, "wrai": 249, "ourselin": 249, "warren": 249, "modat": 249, "pathogen": 249, "neurodegen": 249, "e0192518": 249, "0192518": 249, "gerlei": 249, "passlack": 249, "haw": 249, "vandrei": 249, "papastathopoulo": 249, "4228": 249, "17500": 249, "gertler": 249, "dichotom": 249, "10814": 249, "10824": 249, "gherardi": 249, "t\u00f6reyin": 249, "9441104": 249, "gibson": 249, "beierlein": 249, "467": 249, "democraci": 249, "3226": 249, "3234": 249, "341": 249, "zolnik": 249, "fidzinski": 249, "papoutsi": 249, "holtkamp": 249, "367": 249, "aax6239": 249, "gilli": 249, "2352": 249, "2365": 249, "ginebaugh": 249, "cypher": 249, "ortiz": 249, "laghaei": 249, "merinei": 249, "3504": 249, "3516": 249, "2415": 249, "gire": 249, "zak": 249, "whitesel": 249, "mulligan": 249, "hen": 249, "schoppa": 249, "mainli": [249, 379], "multistep": 249, "2964": 249, "2975": 249, "5580": 249, "glasauer": 249, "nystagmu": 249, "171": 249, "marin": 249, "earnshaw": 249, "sadeh": 249, "birgiola": 249, "cayco": 249, "gajic": 249, "crook": 249, "idili": 249, "larson": 249, "stanislova": 249, "albada": 249, "rai": 249, "dimitrova": 249, "e1000815": 249, "1000815": 249, "2010a": 249, "steuber": 249, "2010b": 249, "609": 249, "colibaba": 249, "redman": 249, "bachor": 249, "stricker": 249, "daria": 249, "prune": 249, "femtosecond": 249, "dendrotomi": 249, "19078": 249, "srep19078": 249, "goetz": 249, "11810": 249, "2017339118": 249, "goffredo": 249, "schmid": 249, "conforto": 249, "bilotti": 249, "palma": 249, "vegni": 249, "alessio": 249, "transcutan": 249, "1329": 249, "1345": 249, "1108": 249, "0118": 249, "gold": 249, "girardin": 249, "3340": 249, "3351": 249, "91365": 249, "henz": 249, "buzsaki": 249, "3113": 249, "3128": 249, "schoorlemm": 249, "huan": 249, "giza": 249, "tchetchik": 249, "kellei": 249, "vega": 249, "ornitz": 249, "fibroblast": 249, "homolog": 249, "dichotomi": 249, "2998": 249, "3010": 249, "micku": 249, "568": 249, "\u00ed\u00f1igo": 249, "portugu\u00e9": 249, "801": 249, "812": 249, "golestanirad": 249, "gale": 249, "manzoor": 249, "glait": 249, "haer": 249, "kaltenbach": 249, "bonmassar": 249, "solenoid": 249, "micromagnet": 249, "724": 249, "00724": 249, "izquierdo": 249, "mosig": 249, "pollo": 249, "126": 249, "2528": 249, "pier12013108": 249, "gome": 249, "bedard": 249, "valtcheva": 249, "nelson": 249, "khokhlova": 249, "pouget": 249, "venanc": 249, "234": 249, "246": 249, "00044": 249, "pakdaman": 249, "061910": 249, "ugart": 249, "restrepo": 249, "herrera": 249, "pi\u00f1a": 249, "s\u00e1nchez": 249, "pertusa": 249, "orio": 249, "madrid": 249, "brake": 249, "ikd": 249, "cold": 249, "allodynia": 249, "chronic": 249, "3109": 249, "3553": 249, "neeli": 249, "gutierrez": 249, "lago": 249, "roja": 249, "estevez": 249, "naranjo": 249, "shaker": 249, "tetraethylammonium": 249, "633": 249, "650": 249, "goodliff": 249, "rubakov": 249, "medalla": 249, "q175": 249, "huntington": 249, "0200626": 249, "gorin": 249, "tsitoura": 249, "kahan": 249, "watznauer": 249, "drose": 249, "mathar": 249, "hanganu": 249, "opatz": 249, "shaul": 249, "spehr": 249, "interdepend": 249, "infraslow": 249, "accessori": 249, "3127": 249, "3144": 249, "2520": 249, "goriounova": 249, "heyer": 249, "wilber": 249, "kerkhof": 249, "smede": 249, "verbern": 249, "idema": 249, "baayen": 249, "pieneman": 249, "klein": 249, "e41714": 249, "41714": 249, "goudar": 249, "509": 249, "00568": 249, "6239": 249, "6249": 249, "hawrylycz": 249, "02718": 249, "glia": 249, "s1740925x09990391": 249, "goyer": 249, "kurth": 249, "gillet": 249, "kein": 249, "r\u00fcbsamen": 249, "kuenzel": 249, "0186": 249, "422": 249, "549": 249, "1385": 249, "1410": 249, "1785": 249, "ia": 249, "neco_a_00375": 249, "nitzan": 249, "surea": 249, "tricep": 249, "162": 249, "wong": 249, "forsyth": 249, "calyx": 249, "saudargien": 249, "2194": 249, "2222": 249, "neco_a_00640": 249, "brun": 249, "a\u03b2": 249, "941": 249, "951": 249, "13211": 249, "permitt": 249, "conductor": 249, "2386": 249, "2393": 249, "2055054": 249, "dielectr": 249, "4148": 249, "4151": 249, "6346880": 249, "594": 249, "2202403": 249, "medengphi": 249, "mitelut": 249, "bionet": 249, "e0201630": 249, "0201630": 249, "grau": 249, "serrat": 249, "simon": 249, "laminari": 249, "396": 249, "velt": 249, "humayun": 249, "scarlati": 249, "505": 249, "grein": 249, "stepniewski": 249, "knodel": 249, "queisser": 249, "00068": 249, "barra": 249, "lorach": 249, "conti": 249, "kaeser": 249, "fallegg": 249, "borgognon": 249, "limb": 249, "20703": 249, "4486": 249, "snyder": 249, "miocinov": 249, "1137": 249, "robertson": 249, "antidrom": 249, "simmon": 249, "paresthesia": 249, "1234": 249, "grillo": 249, "neve": 249, "walker": 249, "vizcai": 249, "barrena": 249, "fleck": 249, "burron": 249, "282": 249, "e3": 249, "grime": 249, "graydon": 249, "kachar": 249, "873": 249, "grisham": 249, "schottler": 249, "krasn": 249, "swimmi": 249, "teach": 249, "a8": 249, "groen": 249, "p\u00e9rez": 249, "garci": 249, "wortel": 249, "00066": 249, "grosch": 249, "kettenmann": 249, "reichenbach": 249, "bergmann": 249, "glial": 249, "barreda": 249, "beed": 249, "dorsoventr": 249, "810": 249, "0354": 249, "simiaki": 249, "martinet": 249, "toumaz": 249, "488": 249, "0431": 249, "grubb": 249, "1074": 249, "nature09160": 249, "grunditz": 249, "holbro": 249, "zuo": 249, "oertner": 249, "13457": 249, "13466": 249, "gruntman": 249, "reiser": 249, "0046": 249, "gu": 249, "mcdougel": 249, "terman": 249, "1769": 249, "jbc": 249, "m111": 249, "299305": 249, "gude": 249, "ttx": 249, "tumor": 249, "necrosi": 249, "00652": 249, "is3": 249, "e0209429": 249, "0209429": 249, "f1000research": 249, "12688": 249, "22584": 249, "997": 249, "1014": 249, "00204": 249, "gulledg": 249, "bravo": 249, "0085": 249, "e36007": 249, "0036007": 249, "00088": 249, "duchin": 249, "patriat": 249, "sapiro": 249, "harel": 249, "e0176132": 249, "0176132": 249, "277": 249, "542": 249, "547": 249, "g\u00fcnai": 249, "siel": 249, "dharmar": 249, "wolfram": 249, "marlei": 249, "bain": 249, "prinz": 249, "e1004189": 249, "1004189": 249, "twyford": 249, "6108": 249, "6111": 249, "6945023": 249, "2014a": 249, "025005": 249, "6539": 249, "6542": 249, "6611053": 249, "4553": 249, "4556": 249, "6610560": 249, "6096": 249, "6099": 249, "6945020": 249, "2014b": 249, "muralidharan": 249, "neuroprosthes": 249, "2248": 249, "2251": 249, "8512748": 249, "sovilj": 249, "4557": 249, "4560": 249, "6610561": 249, "2013c": 249, "413": 249, "00413": 249, "cassar\u00e1": 249, "tarotin": 249, "donega": 249, "sokal": 249, "ouchouch": 249, "dopson": 249, "matteucci": 249, "neufeld": 249, "schiefer": 249, "rowl": 249, "mcgill": 249, "perkin": 249, "dolezalova": 249, "saeb": 249, "parsi": 249, "kuster": 249, "yazicioglu": 249, "witherington": 249, "chew": 249, "quantif": 249, "splenic": 249, "01299": 249, "majawadia": 249, "2692": 249, "2695": 249, "8037412": 249, "00713": 249, "gurkiewicz": 249, "e169": 249, "0030169": 249, "erythromelalgia": 249, "f1449v": 249, "1557": 249, "00703": 249, "padilla": 249, "substantia": 249, "nigra": 249, "11011": 249, "11019": 249, "2519": 249, "gwak": 249, "053102": 249, "5134765": 249, "g\u0142\u0105bska": 249, "chintaluri": 249, "9319": 249, "potworowski": 249, "\u0142\u0119ski": 249, "e105071": 249, "0105071": 249, "norheim": 249, "glpa": 249, "00001": 249, "kuznetsov": 249, "e69984": 249, "0069984": 249, "haddjeri": 249, "hopkin": 249, "ramirez": 249, "franco": 249, "marquez": 249, "pouei": 249, "amalr": 249, "goaillard": 249, "kv4": 249, "0207": 249, "dahmen": 249, "stavrin": 249, "lind\u00e9n": 249, "tetzlaff": 249, "gr\u00fcn": 249, "4461": 249, "4496": [249, 344], "bhw237": 249, "fossum": 249, "alonso": 249, "swadlow": 249, "focal": 249, "signatur": [249, 387], "monosynapt": 249, "5123": 249, "5143": 249, "2715": 249, "n\u00e6ss": 249, "ecog": 249, "lfpy": 249, "00092": 249, "khosrowshahi": 249, "s\u00f8rensen": 249, "haft": 249, "visapi": 249, "hahn": 249, "subthalamopallid": 249, "441": 249, "0225": 249, "hai": 249, "dormann": 249, "bartic": 249, "borgh": 249, "langedijk": 249, "protrus": 249, "adher": [249, 379, 380], "1153": 249, "1165": 249, "hale": 249, "conscious": 249, "361": 249, "s0219635214400056": 249, "3132": 249, "pawlu": 249, "heckmann": 249, "8975": 249, "8980": 249, "augustinait": 249, "heggelund": 249, "e1002160": 249, "1002160": 249, "m\u00e4ki": 249, "marttunen": 249, "andreassen": 249, "e1005193": 249, "1005193": 249, "csd": 249, "00976": 249, "tenn\u00f8": 249, "haug": 249, "weltzien": 249, "hodn": 249, "gonadotropin": 249, "teleost": 249, "fish": 249, "medaka": 249, "e1006662": 249, "1006662": 249, "hamada": 249, "goethal": 249, "covari": 249, "14841": 249, "14846": 249, "1607548113": 249, "7272": 249, "7286": 249, "4747": 249, "hamani": 249, "amorim": 249, "wheeler": 249, "diwan": 249, "driesslein": 249, "covolan": 249, "nobrega": 249, "antidepress": 249, "205": 249, "hanemaaij": 249, "wilder": 249, "grasman": 249, "pav\u00f3n": 249, "aroca": 249, "nav": 249, "54566": 249, "hanson": 249, "madison": 249, "imbalanc": 249, "therapeut": 249, "sethuramanujam": 249, "derosenrol": 249, "jain": 249, "awatramani": 249, "e42392": 249, "42392": 249, "hanuschkin": 249, "yim": 249, "cham": 249, "805": 249, "poo": 249, "21906": 249, "21911": 249, "0912022106": 249, "8559": 249, "8569": 249, "makara": 249, "491": 249, "599": 249, "nature11554": 249, "harrington": 249, "chekmenev": 249, "schepkin": 249, "fonteh": 249, "arakaki": 249, "cephalalgia": 249, "1254": 249, "1265": 249, "0333102411408360": 249, "engl": 249, "attwel": 249, "jolivet": 249, "e1007226": 249, "1007226": 249, "poorli": 249, "s1740925x09990263": 249, "hartman": 249, "lehotzki": 249, "ilie\u015f": 249, "zupanc": 249, "dimorph": 249, "00789": 249, "hartmann": 249, "veruki": 249, "exocytosi": 249, "e14186": 249, "14186": 249, "harti": 249, "cardamon": 249, "wimmer": 249, "eplepsyr": 249, "hatori": 249, "sakai": 249, "ownership": 249, "716": 249, "729": 249, "1364": 249, "josaa": 249, "000716": 249, "segal": 249, "vasodilat": 249, "hamster": 249, "arteri": 249, "complementari": [249, 287, 371, 393], "adrenoreceptor": 249, "291": 249, "7606": 249, "744": 249, "637": 249, "mindscop": 249, "7337": 249, "7344": 249, "1512901113": 249, "schuermann": 249, "5b": 249, "e1002107": 249, "1002107": 249, "axosomat": 249, "despit": [249, 315, 337, 379], "2972": 249, "2981": 249, "3561": 249, "3571": 249, "bhu200": 249, "hayakawa": 249, "samura": 249, "kamijo": 249, "aihara": 249, "s11571": 249, "9309": 249, "hayashida": 249, "rodr\u00edguez": 249, "ogata": 249, "partida": 249, "stradleigh": 249, "colado": 249, "ishida": 249, "15001": 249, "15016": 249, "3827": 249, "yagi": 249, "kyriazi": 249, "pare": 249, "microcircuitri": 249, "3159": 249, "heiberg": 249, "dlgn": 249, "triadic": 249, "e1004929": 249, "1004929": 249, "heilman": 249, "quattrochi": 249, "heinzl": 249, "salazar": 249, "helmstaedt": 249, "feldmey": 249, "938": 249, "hemond": 249, "epstein": 249, "bolei": 249, "ca3b": 249, "424": 249, "359": 249, "lva": 249, "hendrickson": 249, "bi": [249, 286], "1413": 249, "1416": 249, "7590973": 249, "00155": 249, "quasi": 249, "tetrahedr": 249, "mesh": 249, "00129": 249, "hernandez": 249, "vera": 249, "santand": 249, "zurek": 249, "1472": 249, "6920": 249, "sajad": 249, "woodman": 249, "schall": 249, "riera": 249, "0221": 249, "klau": 249, "autaps": 249, "flander": 249, "8402": 249, "8416": 249, "herzog": 249, "kube": 249, "voigt": 249, "displac": 249, "1121": 249, "cummin": 249, "1351": 249, "heshmat": 249, "sajedi": 249, "schrott": 249, "751599": 249, "hesprich": 249, "beardslei": 249, "electroencephalographi": 249, "8716883": 249, "hei": 249, "giocomo": 249, "00492": 249, "457": 249, "hilgetag": 249, "barba": 249, "embryologi": 249, "roossien": 249, "caldwel": 249, "chestek": 249, "056007": 249, "aacdb8": 249, "borla": 249, "jos\u00e9": 249, "mallei": 249, "neurokinemat": 249, "2115": 249, "2124": 249, "6_6": 249, "shrager": 249, "hiratani": 249, "redund": 249, "e6871": 249, "e6879": 249, "1803274115": 249, "kozlov": 249, "09531": 249, "johansson": 249, "tokarska": 249, "dorst": 249, "suryanarayana": 249, "silberberg": 249, "striatum": 249, "9554": 249, "9565": 249, "2000671117": 249, "h\u00f4": 249, "1488": 249, "kroger": 249, "hoch": 249, "wen": 249, "011911": 249, "hoffman": 249, "387": 249, "869": 249, "straehl": 249, "weitbrecht": 249, "inhibitor": 249, "4415": 249, "4429": 249, "bhv039": 249, "gaunt": 249, "multichannel": 249, "13067": 249, "31247": 249, "1478": 249, "1491": 249, "huw": 249, "peterson": 249, "utricular": 249, "1986": 249, "00895": 249, "holt": 249, "netoff": 249, "0523": 249, "shinn": 249, "moehli": 249, "phasic": 249, "e1005011": 249, "1005011": 249, "1001": [249, 359, 361], "1013": 249, "184": 249, "sanchez": 249, "jp275083": 249, "zorio": 249, "00175": 249, "ratt\u00e9": 249, "robberecht": 249, "2069": 249, "2081": 249, "00919": 249, "fairhal": 249, "e1000119": 249, "1000119": 249, "h\u00f6nigsperg": 249, "marosi": 249, "storm": 249, "1551": 249, "1580": 249, "280826": 249, "e55590": 249, "0055590": 249, "quenet": 249, "foucart": 249, "244": 249, "hossain": 249, "rasband": 249, "morest": 249, "cochlea": 249, "6857": 249, "6868": 249, "hous": 249, "elstrott": 249, "koh": 249, "831": 249, "houslei": 249, "nardelli": 249, "cope": 249, "chemotherapi": 249, "113354": 249, "houston": 249, "diamanti": 249, "diamantaki": 249, "kutsarova": 249, "sultan": 249, "46147": 249, "srep46147": 249, "houwel": 249, "timofeev": 249, "grenier": 249, "742": 249, "modi": 249, "ganter": 249, "834": 249, "845": 249, "neu": 249, "echegoyen": 249, "2394": 249, "2409": 249, "rajendra": 249, "mayberg": 249, "hbm": 249, "24419": 249, "046026": 249, "415": 249, "12929": 249, "huynh": 249, "046030": 249, "lad": 249, "intradur": 249, "e114938": 249, "0114938": 249, "tradeoff": [249, 290], "036023": 249, "feasibl": 249, "interferenti": 249, "13137": 249, "056015": 249, "naik": 249, "297": 249, "2292025": 249, "hsu": 249, "zhao": 249, "steep": [249, 378], "karschin": 249, "labarca": 249, "figl": 249, "davidson": 249, "1196": 249, "1206": 249, "00058": 249, "volterra": 249, "00112": 249, "supercrit": 249, "3678": 249, "vandael": 249, "bean": 249, "1326": 249, "hou": 249, "996": 249, "432": 249, "00432": 249, "h\u00fcbel": 249, "ullah": 249, "suscept": 249, "0591": 249, "hugosdottir": 249, "m\u00f8rch": 249, "j\u00f8rgensen": 249, "nielsen": 249, "pedersen": 249, "cutan": 249, "percept": 249, "0527": 249, "unmyelin": 249, "e1004240": 249, "1004240": 249, "e1004702": 249, "1004702": 249, "morphforg": 249, "toolbox": 249, "franklin": 249, "1430": 249, "1448": 249, "22324": 249, "e0182648": 249, "0182648": 249, "mellor": 249, "acetylcholin": 249, "huth": 249, "rittger": 249, "saftig": 249, "cleav": 249, "enzym": [249, 368], "bace1": 249, "0913": 249, "hyun": 249, "eom": 249, "bae": 249, "heterosynapt": 249, "3617": 249, "3643": 249, "jp270372": 249, "iancu": 249, "1685": 249, "iannella": 249, "launei": 249, "mosaic": 249, "00042": 249, "engram": 249, "00021": 249, "iascon": 249, "s\u00fcmb\u00fcl": 249, "andreu": 249, "goudi": 249, "blocku": 249, "peng": 249, "polleux": 249, "566": 249, "578": 249, "iavaron": 249, "shi": 249, "reilli": 249, "e1006753": 249, "1006753": 249, "ienna": 249, "valenti": 249, "19th": 249, "124": 249, "3274005": 249, "3274011": 249, "igra": 249, "fowerak": 249, "ware": 249, "hullig": 249, "483": 249, "485": 249, "ilin": 249, "bai": 249, "watson": 249, "dc2": 249, "4141": 249, "4157": 249, "malyshev": 249, "ensembl": 249, "2281": 249, "2292": 249, "0771": 249, "hashimoto": 249, "1711": 249, "imanaga": 249, "ogawa": 249, "warashina": 249, "insp": 249, "monophas": 249, "adren": 249, "chromaffin": 249, "iseri": 249, "kosta": 249, "4482": 249, "9630642": 249, "sale": 249, "fry": 249, "kanai": 249, "drake": 249, "micturit": 249, "barrington": 249, "crh": 249, "56605": 249, "ivanov": 249, "gueritaud": 249, "unpurifi": 249, "embryon": 249, "hindlimb": 249, "iyengar": 249, "pithapuram": 249, "singh": 249, "raghavan": 249, "curat": 249, "neuroid": 249, "neuromotor": 249, "00056": 249, "yaron": 249, "jakoubovitch": 249, "oz": 249, "564": 249, "nath": 249, "jessen": 249, "nitric": 249, "oxid": 249, "e1002550": 249, "1002550": 249, "poleg": 249, "10210": [249, 290], "jproc": 249, "2312671": 249, "lisman": 249, "1065": 249, "1077": 249, "brenner": 249, "1506": 249, "1520": 249, "00385": 249, "fisher": 249, "confoc": 249, "218": 249, "degeneraci": 249, "57243": 249, "baum": 249, "delsei": 249, "52949": 249, "jamieson": 249, "boyd": 249, "mclachlan": 249, "2430": 249, "466": 249, "472": 249, "bbrc": 249, "081": 249, "han": 249, "186": 249, "jarecki": 249, "piekarz": 249, "378": 249, "jci40801": 249, "roxin": 249, "1667": 249, "e1006027": 249, "1006027": 249, "benuskova": 249, "abraham": 249, "bcm": 249, "metaplast": 249, "e1004588": 249, "1004588": 249, "backu": 249, "898": 249, "20804": 249, "0214": 249, "hoon": 249, "papadopoulo": 249, "vlacho": 249, "winkel": 249, "poulopoulo": 249, "betz": 249, "brose": 249, "varoqueaux": 249, "neuroligin": 249, "bhq100": 249, "molnar": 249, "036022": 249, "jensen": 249, "kopach": 249, "savtchenko": 249, "rusakov": 249, "62588": 249, "jeub": 249, "emrich": 249, "pradier": 249, "taha": 249, "gailu": 249, "durner": 249, "fuch": 249, "ang": 249, "huylebroeck": 249, "zimmer": 249, "racz": 249, "smad": 249, "drg": 249, "2384": 249, "ji": 249, "tucker": 249, "putzier": 249, "levitan": 249, "shepard": 249, "ether": 249, "\u00e0": 249, "2906": 249, "2916": 249, "08190": 249, "collin": 249, "sacral": 249, "1987": 249, "00337": 249, "jochem": 249, "yoshida": 249, "e0123799": 249, "0123799": 249, "ir": 249, "328": 249, "s12038": 249, "9039": [249, 276], "calib": 249, "nodal": 249, "1874": 249, "1884": 249, "00338": 249, "2549": 249, "2563": 249, "ghosh": 249, "vitek": 249, "parkinsonian": 249, "rigid": 249, "bradykinesia": 249, "pallid": 249, "00039": 249, "kopp": 249, "scheinpflug": 249, "3187": 249, "3200": 249, "191973": 249, "griffin": 249, "1399": [249, 365], "2008a": 249, "skrzypiec": 249, "chernova": 249, "kv2": 249, "586": 249, "3493": 249, "3509": 249, "2008b": 249, "lagnado": 249, "connectom": 249, "e06250": 249, "06250": 249, "rempel": 249, "localis": 249, "roger": 249, "sullivan": 249, "russo": 249, "mcmahon": 249, "reversibli": 249, "scitranslm": 249, "abg9890": 249, "impend": 249, "1067": 249, "1079": 249, "00607": 249, "magneto": 249, "encephalographi": 249, "neuromethod": 249, "7657_2011_16": 249, "pritchett": 249, "stufflebeam": 249, "hamalainen": 249, "magnetoencephalographi": 249, "10751": 249, "10764": 249, "zylberberg": 249, "614377": 249, "30333": 249, "sikora": 249, "h\u00e4m\u00e4l\u00e4inen": 249, "3554": 249, "3572": 249, "00535": 249, "morri": 249, "sick": 249, "164_2017_63": 249, "joucla": 249, "yvert": 249, "e41324": 249, "0041324": 249, "gli\u00e8r": 249, "rousseau": 249, "penetr": 249, "microelectrod": 249, "e4828": 249, "0004828": 249, "3508": 249, "justu": 249, "dal\u00fcgg": 249, "fuhrmann": 249, "hann": 249, "kaneko": 249, "sosulina": 249, "schwarz": 249, "elliott": 249, "schoch": 249, "bradk": 249, "remi": 249, "septoentorhin": 249, "4447": 249, "henri": 249, "macaqu": 249, "2268": 249, "kagan": 249, "ramrakhyani": 249, "sciatic": 249, "millimet": 249, "1138": 249, "2544247": 249, "kager": 249, "somjen": 249, "interstiti": 249, "2712": 249, "misra": 249, "10958": 249, "10966": 249, "hirakawa": 249, "174": 249, "088492": 249, "kairiss": 249, "kalmbach": 249, "buchin": 249, "nandi": 249, "bakken": 249, "hodg": 249, "chong": 249, "frate": 249, "maltzer": 249, "nicovich": 249, "keen": 249, "silbergeld": 249, "gwinn": 249, "ojemann": 249, "lein": 249, "ting": 249, "supragranular": 249, "1194": 249, "kamaleddin": 249, "e2100148": 249, "202100148": 249, "kameda": 249, "hioki": 249, "sohn": 249, "sonomura": 249, "furuta": 249, "fujiyama": 249, "838": 249, "08027": 249, "degen": 249, "7103": 249, "7106": 249, "6091795": 249, "hadjinicola": 249, "cloherti": 249, "ibbotson": 249, "016017": 249, "4246": 249, "4249": 249, "5627176": 249, "0322": 249, "kamitani": 249, "bhalodia": 249, "kubota": 249, "shimojo": 249, "kamiya": 249, "afterdepolar": 249, "00407": 249, "kampa": 249, "7424": 249, "7432": 249, "kanold": 249, "2887": 249, "2897": 249, "caputi": 249, "doengi": 249, "chetkovich": 249, "dube": 249, "brewster": 249, "8847": 249, "8857": 249, "kaplan": 249, "00005": 249, "ketchum": 249, "haberli": 249, "2546": 249, "2559": 249, "2545": 249, "karada": 249, "olsson": 249, "winther": 249, "perrier": 249, "webb": 249, "huck": 249, "andersen": 249, "thielscher": 249, "643614": 249, "wojciechowski": 249, "dalbi": 249, "opto": 249, "4503": 249, "22793": 249, "karmarkar": 249, "507": 249, "najarian": 249, "373": 249, "kase": 249, "imoto": 249, "transduct": 249, "619747": 249, "406": 249, "00937": 249, "uta": 249, "ishihara": 249, "par": 249, "reticulata": 249, "neur": 249, "kaspirzhnyi": 249, "178": 249, "9671": 249, "9731": 249, "h\u00e1jo": 249, "tam\u00e1": 249, "vizi": 249, "roller": 249, "coaster": 249, "2153": 249, "1009270108": 249, "katyar": 249, "nya": 249, "14434": 249, "menon": 249, "geinisman": 249, "kean": 249, "abosch": 249, "bajwa": 249, "direction": 249, "bedez": 249, "moussaoui": 249, "acm": 249, "tcbb": 249, "2561932": 249, "4939": 249, "7321": 249, "7_17": 249, "1501": 249, "1516": 249, "kent": 249, "036010": 249, "826": 249, "843": 249, "00074": 249, "046010": 249, "hogan": 249, "kramer": 249, "12754": 249, "swan": 249, "brocker": 249, "keren": 249, "587": 249, "1437": 249, "pele": 249, "3730": 249, "3742": 249, "electrostimul": 249, "2178614": 249, "robinson": 249, "khadka": 249, "swami": 249, "rado": 249, "sc": 249, "026033": 249, "ab8344": 249, "khaliq": 249, "raman": 249, "4899": 249, "4912": 249, "khatri": 249, "pugh": 249, "16683": 249, "53087": 249, "kidd": 249, "sattel": 249, "213": 249, "s10158": 249, "0034": 249, "utilis": 249, "14354": 249, "14358": 249, "induct": 249, "pavlovian": 249, "030262": 249, "2163": 249, "2182": 249, "1037": 249, "00034": 249, "cav1": 249, "00491": 249, "pic": 249, "0014": 249, "5301": 249, "5311": 249, "neulet": 249, "dib": 249, "retrograd": 249, "e43654": 249, "0043654": 249, "e95454": 249, "0095454": 249, "pymu": 249, "321": 249, "0145": 249, "sandercock": 249, "soleu": 249, "046025": 249, "clemen": 249, "baron": 249, "misumi": 249, "dppx": 249, "dpp6": 249, "1835": 249, "14566": 249, "ncomms14566": 249, "e06414": 249, "06414": 249, "kish": 249, "9441073": 249, "vlieger": 249, "kooi": 249, "mobil": 249, "1693": 249, "klefenz": 249, "harczo": 249, "pitch": 249, "486": 249, "00486": 249, "harper": 249, "mckown": 249, "beenhakk": 249, "tenuou": 249, "1248": 249, "015005": 249, "1361": 249, "6560": 249, "aaf308": 249, "knowlton": 249, "ziouziou": 249, "hammer": 249, "roeper": 249, "atyp": 249, "e1009371": 249, "1009371": 249, "knox": 249, "glauser": 249, "tennei": 249, "holland": 249, "pathogenesi": 249, "13962": 249, "kobayashi": 249, "okamoto": 249, "mochizuki": 249, "urakubo": 249, "funayama": 249, "ishikawa": 249, "kashima": 249, "ouchi": 249, "szymanska": 249, "ishii": 249, "ikegaya": 249, "146": 249, "ohmori": 249, "yoshinaga": 249, "gotman": 249, "881": 249, "rapp": 249, "kochenov": 249, "poddubnaya": 249, "makedonski": 249, "parasympathet": 249, "effer": 249, "9583": 249, "\u0430": 249, "\u043c": 249, "9518": 249, "9504": 249, "kochubei": 249, "yanov": 249, "ergic": 249, "9165": 249, "416": 249, "neunet": 249, "koelman": 249, "kohl": 249, "parviainen": 249, "neurosolv": 249, "topographi": 249, "s10548": 249, "00838": 249, "fujii": 249, "jakob": 249, "masland": 249, "rt": 249, "pcr": 249, "contact": [249, 371, 387], "22522": 249, "takayasu": 249, "asynmetr": 249, "s0219635210002469": 249, "kolbaev": 249, "mohapatra": 249, "lombardi": 249, "staiger": 249, "luhmann": 249, "kilb": 249, "nkcc": 249, "immatur": 249, "18399": 249, "75382": 249, "brauer": 249, "ilschner": 249, "ruben": 249, "komendantov": 249, "1866": 249, "konstantoudaki": 249, "chalkiadaki": 249, "sidiropoul": 249, "modulatori": 249, "00007": 249, "koo": 249, "tepper": 249, "neostriatum": 249, "7916": 249, "7922": 249, "pervouchin": 249, "malerba": 249, "tempel": 249, "911": 249, "kaiser": 249, "bituft": 249, "562": 249, "437": 249, "kukushka": 249, "2260": 249, "2270": 249, "chernetchenko": 249, "tristabl": 249, "412": 249, "hypothermia": 249, "9605": 249, "9382": 249, "9447": 249, "kukoushka": 249, "nucl": 249, "9274": 249, "maksymchuk": 249, "vlasov": 249, "cymbalyuk": 249, "anesthet": 249, "trpm8": 249, "09889": 249, "novorodovskaya": 249, "organellar": 249, "organel": 249, "9072": 249, "osorio": 249, "delma": 249, "myenter": 249, "19336950": 249, "973784": 249, "pfeiffer": 249, "sigulinski": 249, "rod": 249, "ey": 249, "108554": 249, "exer": 249, "prosthes": 249, "healthcar": 249, "htl": 249, "0115": 249, "mize": 249, "2901": 249, "2913": 249, "3038406": 249, "5020": 249, "kourennyi": 249, "hart": 249, "mahmud": 249, "baldridg": 249, "buhl": 249, "6219": 249, "6233": 249, "jp276356": 249, "koutsou": 249, "bugmann": 249, "christodoul": 249, "bioystem": 249, "kovalski": 249, "neuropath": 249, "1442": 249, "arnir": 249, "accommod": 249, "crosheck": 249, "kress": 249, "dowl": 249, "571": 249, "20667": 249, "kretzberg": 249, "kretschmer": 249, "burgin": 249, "attractor": 249, "martinotti": 249, "e30752": 249, "0030752": 249, "salienc": 249, "00060": 249, "rahman": 249, "krueppel": 249, "adachi": 249, "3443": 249, "3453": 249, "4357": 249, "444": 249, "1069": 249, "chick": 249, "ishiguro": 249, "redistribut": 249, "8815": 249, "ncomms9815": 249, "kubat": 249, "\u00f6ktem": 249, "mruk": 249, "akin": 249, "kobertz": 249, "sod1": 249, "351": 249, "s10867": 249, "9411": 249, "1694": 249, "1704": 249, "karub": 249, "nomura": 249, "schertel": 249, "kawaguchi": 249, "srep00089": 249, "kondo": 249, "hatada": 249, "yamaguchi": 249, "moham": 249, "e07919": 249, "07919": 249, "kuck": 249, "stegeman": 249, "asseldonk": 249, "056014": 249, "aa7960": 249, "heijden": 249, "bushi": 249, "gerbil": 249, "4260": 249, "4273": 249, "5433": 249, "nerlich": 249, "milenkov": 249, "00014": 249, "wirth": 249, "luksch": 249, "mei": 249, "1b": 249, "synaptogenesi": 249, "1302": 249, "046": 249, "morari": 249, "289": 249, "9082": 249, "386": 249, "343": 249, "217": 249, "222": 249, "batini": 249, "italienn": 249, "211": 249, "9286": 249, "myakoushko": 249, "mehta": 249, "00038": 249, "e38446": 249, "38446": 249, "24th": 249, "kumaravelu": 249, "oza": 249, "behrend": 249, "deconstruct": 249, "680": 249, "00862": 249, "sombeck": 249, "bensmaia": 249, "stonei": 249, "tomlinson": 249, "callier": 249, "046045": 249, "abacd8": 249, "fouriaux": 249, "ovcharenko": 249, "mallon": 249, "sainz": 249, "booster": 249, "41321": 249, "1_19": 249, "yoshimoto": 249, "knight": 249, "exascal": 249, "1044": 249, "1052": 249, "052": 249, "wolgamuth": 249, "574": 249, "kuriyama": 249, "yamazaki": 249, "623552": 249, "kuznetsova": 249, "paladini": 249, "0222": 249, "1110": 249, "0604": 249, "kwon": 249, "sakamoto": 249, "peterka": 249, "1100": 249, "labarrera": 249, "dudai": 249, "weiner": 249, "kaduri": 249, "amichai": 249, "zylbermann": 249, "adrenerg": 249, "1034": 249, "labrakaki": 249, "lamina": 249, "00424": 249, "liao": 249, "tsang": 249, "shih": 249, "036001": 249, "342": 249, "lajeuness": 249, "01090": 249, "tuleau": 249, "malot": 249, "rivoirard": 249, "bouret": 249, "reynaud": 249, "hawk": 249, "rhode": 249, "turtl": 249, "683": 249, "694": 249, "sandler": 249, "760": 249, "1171958": 249, "lasien": 249, "shupe": 249, "perlmutt": 249, "horner": 249, "spare": 249, "3887": 249, "3896": 249, "latim": 249, "a197": 249, "a202": 249, "curriculum": 249, "te": 249, "2859411": 249, "latorr": 249, "w\u00e5rdell": 249, "025026": 249, "2057": 249, "aafdd9": 249, "laudanski": 249, "torben": 249, "shamma": 249, "e1003775": 249, "1003775": 249, "lavian": 249, "entopeduncular": 249, "884": 249, "lavzin": 249, "rapoport": 249, "garion": 249, "angular": 249, "490": 249, "nature11451": 249, "puglies": 249, "sliva": 249, "668": 249, "688": 249, "bhab221": 249, "saraga": 249, "churchil": 249, "statland": 249, "mcbain": 249, "kcnq": 249, "12325": 249, "12338": 249, "boer": 249, "iwema": 249, "finkel": 249, "1978": 249, "przedborski": 249, "buno": 249, "1011": 249, "1025": 249, "pinaud": 249, "renden": 249, "taschenberg": 249, "spirou": 249, "levinson": 249, "von": 249, "gersdorff": 249, "locu": 249, "recoveri": 249, "3724": 249, "3738": 249, "walmslei": 249, "mntb": 249, "3095": 249, "3108": 249, "lebloi": 249, "bodor": 249, "perkel": 249, "timescal": 249, "15420": 249, "15433": 249, "3060": 249, "hershei": 249, "bradlei": 249, "yearwood": 249, "765": 249, "matsunaga": 249, "fort": 249, "s40244": 249, "0012": 249, "ghovanloo": 249, "wirelessli": 249, "1095": 249, "1106": [249, 276], "2741107": 249, "hitti": 249, "leiter": 249, "abolish": 249, "046001": 249, "3888": 249, "3901": 249, "marchionni": 249, "varga": 249, "danielson": 249, "lovett": 249, "barron": 249, "losonczi": 249, "034": 249, "fluid": 249, "catfish": 249, "unsupervis": 249, "vocal": 249, "2579": 249, "2603": 249, "neco_a_00345": 249, "lefler": 249, "vrieler": 249, "43560": 249, "lehto": 249, "shatillo": 249, "teplitzki": 249, "utecht": 249, "adriani": 249, "mangia": 249, "sierra": 249, "gr\u00f6hn": 249, "016016": 249, "aa5238": 249, "lei": 249, "kellard": 249, "hara": 249, "islet": 249, "1080": 249, "19382014": 249, "1493316": 249, "leleo": 249, "e1009558": 249, "1009558": 249, "lemair": 249, "ultrasound": 249, "intramembran": 249, "cavit": 249, "046007": 249, "ab1685": 249, "vicari": 249, "morphoson": 249, "iscienc": 249, "103085": 249, "isci": 249, "machado": 249, "moffitt": 249, "otto": 249, "kipk": 249, "045006": 249, "e59839": 249, "0059839": 249, "anesthesiologi": 249, "1376": 249, "1097": 249, "aln": 249, "0000000000000649": 249, "wyant": 249, "ozinga": 249, "572": 249, "13037": [249, 290], "lenz": 249, "platschek": 249, "priesemann": 249, "becker": 249, "willem": 249, "ziemann": 249, "dahlhau": 249, "postsynaps": 249, "3323": 249, "3337": 249, "0859": 249, "letzku": 249, "10420": 249, "10429": 249, "macki": 249, "meech": 249, "spong": 249, "202": 249, "1139": 249, "lezmi": 249, "lipinski": 249, "khrapunski": 249, "patrich": 249, "peretz": 249, "attali": 249, "ck2": 249, "e10234": 249, "e10243": 249, "1708700114": 249, "0396": 249, "3037": 249, "2831": 249, "e1005760": 249, "1005760": 249, "noradrenerg": 249, "3177": 249, "00324": 249, "greensid": 249, "songbird": 249, "hvc": 249, "011918": 249, "066007": 249, "yao": 249, "e1006871": 249, "1006871": 249, "mclaughlin": 249, "15244": 249, "15252": 249, "1904463116": 249, "bilinear": 249, "e1004014": 249, "1004014": 249, "cpa": 249, "22020": 249, "5637": 249, "05527": 249, "565": 249, "575": 249, "camkii": 249, "deduc": 249, "e1005946": 249, "1005946": 249, "morita": 249, "241": 249, "9169": 249, "2739": 249, "00397": 249, "3233": 249, "jin": 249, "170007": 249, "1717": 249, "1731": 249, "rasch": 249, "teng": 249, "559": 249, "4517": 249, "2017c": 249, "liebmann": 249, "karst": 249, "gemert": 249, "jo\u00ebl": 249, "corticosteron": 249, "958": 249, "968": 249, "hant": 249, "neurotransmiss": 249, "schorg": 249, "cassett": 249, "exon": 249, "a1b": 249, "5322": 249, "5331": 249, "tropper": 249, "patoari": 249, "pde": 249, "2710": 249, "2987373": 249, "ishlam": 249, "284": 249, "1057": 249, "s41273": 249, "0033": 249, "bizzarri": 249, "brambilla": 249, "granato": 249, "isca": 249, "iscas45731": 249, "9180633": 249, "storac": 249, "e1001102": 249, "1001102": 249, "0245": 249, "gruen": 249, "859": 249, "872": 249, "lindgren": 249, "lizard": 249, "414": 249, "filipovi\u0107": 249, "ketzef": 249, "lindahl": 249, "msn": 249, "00003": 249, "14891": 249, "lindsai": 249, "rosenberg": 249, "lipowski": 249, "gillessen": 249, "tao": 249, "interven": 249, "2443": 249, "su": 249, "bao": 249, "prostaglandin": 249, "traffick": 249, "rrr": 249, "traffic": 249, "0854": 249, "01027": 249, "xiao": 249, "fraser": 249, "grueneberg": 249, "1318": 249, "1334": 249, "00907": 249, "ogden": 249, "comeri": 249, "vabicaserin": 249, "ht2c": 249, "pharmacometr": 249, "e111": 249, "3145": 249, "3161": 249, "13172": 249, "13181": 249, "colecraft": 249, "e21989": 249, "21989": 249, "pka": 249, "i1656m": 249, "2098": 249, "00921": 249, "kimura": 249, "higashijima": 249, "vestibular": 249, "otolith": 249, "748": 249, "lloren": 249, "desynchron": 249, "cela": 249, "marc": 249, "0043": 249, "lauritzen": 249, "6100": 249, "6103": 249, "6945021": 249, "1120": 249, "2832055": 249, "absorpt": 249, "4491": 249, "4505": 249, "0031": 249, "00420": 249, "bicarbon": 249, "3390": 249, "ijms20061416": 249, "efflux": 249, "e1008573": 249, "1008573": 249, "e1009199": 249, "1009199": 249, "nonreciproc": 249, "downregul": 249, "2114": 249, "00446": 249, "lonardoni": 249, "amin": 249, "marco": 249, "maccion": 249, "berdondini": 249, "e1005672": 249, "1005672": 249, "meunier": 249, "8219": 249, "8233": 249, "beeren": 249, "haeusser": 249, "latham": 249, "nature09086": 249, "schreibman": 249, "332": 249, "853": 249, "juri": 249, "meza": 249, "henni": 249, "nigral": 249, "8295": 249, "8310": 249, "0651": 249, "lopreor": 249, "sosinski": 249, "electrodiffus": 249, "2624": 249, "2635": 249, "lorenzo": 249, "vuillaum": 249, "binczak": 249, "jacquir": 249, "8717136": 249, "losavio": 249, "santamaria": 249, "pang": 249, "kakadiari": 249, "saggau": 249, "multiphoton": 249, "2422": 249, "2429": 249, "lovelac": 249, "cio": 249, "kleiman": 249, "bidirection": 249, "59548": 249, "wade": 249, "458": 249, "1327493": 249, "lubba": 249, "guen": 249, "cork": 249, "eftekhar": 249, "pypn": 249, "9383": 249, "hunt": 249, "1454": 249, "1468": 249, "bht336": 249, "rocher": 249, "dickstein": 249, "transgen": 249, "0244": 249, "dagda": 249, "glycolysi": 249, "2523": 249, "2540": 249, "00629": 249, "luj\u00e1n": 249, "malon": 249, "nontherapeut": 249, "21262": 249, "herman": 249, "prestimulu": 249, "11817": 249, "11824": 249, "5155": 249, "palva": 249, "silverstein": 249, "40hz": 249, "infra": 249, "471": 249, "dittrich": 249, "stile": 249, "11268": 249, "11281": 249, "macia": 249, "moss": 249, "microsecond": 249, "e2006422": 249, "2006422": 249, "1689": 249, "22764": 249, "villett": 249, "chamberland": 249, "bhz334": 249, "lupascu": 249, "morabito": 249, "merenda": 249, "marinelli": 249, "transsynapt": 249, "00023": 249, "ruggeri": 249, "parisi": 249, "pimpinella": 249, "pizzarelli": 249, "meli": 249, "cattaneo": 249, "intrabodi": 249, "gephyrin": 249, "00173": 249, "luqu": 249, "navero": 249, "paus": 249, "e1006298": 249, "1006298": 249, "715": 249, "luthman": 249, "hoebeek": 249, "davei": 249, "667": 249, "682": 249, "0295": 249, "luz": 249, "szuc": 249, "pinho": 249, "safronov": 249, "anterolater": 249, "neighbour": 249, "4489": 249, "197012": 249, "lv": 249, "gong": 249, "caffein": 249, "carp": 249, "965113": 249, "eigenmannia": 249, "clonazepam": 249, "3339": 249, "3343": 249, "heteroassoci": 249, "queri": [249, 286, 290, 346, 371, 379, 388], "673": 249, "hellman": 249, "sutula": 249, "kindl": 249, "3996": 249, "3998": 249, "lipton": 249, "temporo": 249, "septal": 249, "2301": 249, "wester": 249, "garbei": 249, "bass": 249, "berc": 249, "collet": 249, "cerveri": 249, "339": 249, "omurtag": 249, "clonic": 249, "1059": 249, "ethosuximid": 249, "1992a": 249, "bacar": 249, "birkhaeus": 249, "1992b": 249, "bioelectromagnet": 249, "1160": 249, "1164": 249, "stalei": 249, "wathei": 249, "2008c": 249, "2745": 249, "2008d": 249, "neco_a_00876": 249, "6_9": 249, "e1003137": 249, "1003137": 249, "gigg": 249, "multiglomerular": 249, "vomeronas": 249, "9341": 249, "9352": 249, "futia": 249, "ozbai": 249, "llano": 249, "4217": 249, "18034": 249, "maccabe": 249, "nagarajan": 249, "amassian": 249, "szabo": 249, "ahad": 249, "cracco": 249, "eberl": 249, "porcin": 249, "585": 249, "303": 249, "magalh\u00e3": 249, "sterl": 249, "434": 249, "2019c": 249, "895": 249, "repli": 249, "castelli": 249, "forti": 249, "573": 249, "lovero": 249, "barnett": 249, "spikeforest": 249, "face": [249, 382], "sorter": 249, "55167": 249, "7th": 249, "7146752": 249, "atp": 249, "7824861": 249, "e0200712": 249, "0200712": 249, "8541971": 249, "stn": 249, "izhikevich": 249, "7824871": 249, "va": 249, "deferen": 249, "817": 249, "981": 249, "1595": 249, "4_52": 249, "mahnam": 249, "hashemi": 249, "036005": 249, "mahrou": 249, "00359": 249, "joerg": 249, "1427": 249, "268": 249, "1503": 249, "maingret": 249, "clerc": 249, "crest": 249, "inflammatori": 249, "denk": 249, "tank": 249, "grade": [249, 379], "2584": 249, "2601": 249, "zemmar": 249, "vicent": 249, "e1007601": 249, "1007601": 249, "phillip": 249, "metzner": 249, "stepwis": 249, "264": 249, "witoelar": 249, "bettella": 249, "djurov": 249, "bpsc": 249, "55714": 249, "krull": 249, "moberget": 249, "elvs\u00e5shagen": 249, "891": 249, "bhy291": 249, "malaga": 249, "schroeder": 249, "patel": 249, "irwin": 249, "thompson": 249, "nicol": 249, "bentlei": 249, "scar": 249, "016010": 249, "male": 249, "blumenfeld": 249, "bront": 249, "malinvaud": 249, "vassia": 249, "reichenberg": 249, "straka": 249, "3310": 249, "3325": 249, "5318": 249, "mandairon": 249, "ferretti": 249, "3244": 249, "bhatnagar": 249, "intercellular": 249, "8008434": 249, "bk": 249, "37th": 249, "7319606": 249, "1006293": 249, "shukla": 249, "kir4": 249, "41st": 249, "8857153": 249, "campagnola": 249, "manita": 249, "elementari": [249, 368], "7833": 249, "7845": 249, "524": 249, "20644": 249, "manninen": 249, "a\u0107imovi\u0107": 249, "havela": 249, "teppola": 249, "linn": 249, "replic": [249, 326], "00020": 249, "manookin": 249, "puller": 249, "riek": 249, "neitz": 249, "1606": 249, "1616": 249, "00484": 249, "manor": 249, "rinzel": 249, "928": 249, "srep00928": 249, "strahler": 249, "2934": 249, "srep02934": 249, "marcelin": 249, "chauvier": 249, "esclapez": 249, "bernard": 249, "deficit": 249, "mcclelland": 249, "3736": 249, "3747": 249, "5870": 249, "8873": 249, "8884": 249, "schaefer": 249, "vigour": 249, "marianelli": 249, "panares": 249, "897": 249, "2407861": 249, "markaki": 249, "orphanoudaki": 249, "440": [249, 380, 381], "abdellah": 249, "ailamaki": 249, "nanclar": 249, "antil": 249, "arsev": 249, "bilgili": 249, "buncic": 249, "chalimourda": 249, "dumusc": 249, "dyne": 249, "eilemann": 249, "ghobril": 249, "haenel": 249, "heini": 249, "kenyon": 249, "khazen": 249, "kisvardai": 249, "lasserr": 249, "b\u00e9": 249, "merch\u00e1n": 249, "meystr": 249, "morric": 249, "mu\u00f1oz": 249, "c\u00e9spede": 249, "muralidhar": 249, "muthurasa": 249, "nachbaur": 249, "nolt": 249, "palacio": 249, "pastor": 249, "ranjan": 249, "riachi": 249, "riquelm": 249, "sfyraki": 249, "shillcock": 249, "tauhe": 249, "telefont": 249, "toledo": 249, "tr\u00e4nkler": 249, "d\u00edaz": 249, "zaninetta": 249, "marsalek": 249, "maunsel": 249, "jitter": 249, "740": 249, "mengual": 249, "wybo": 249, "spierenburg": 249, "santello": 249, "senn": 249, "anterior": 249, "3028": 249, "martinello": 249, "giacalon": 249, "shah": 249, "0408": 249, "mart\u00ednez": 249, "ca\u00f1ada": 249, "mobarhan": 249, "morilla": 249, "pelayo": 249, "e1005930": 249, "1005930": 249, "fellin": 249, "panzeri": 249, "electroencephalogram": 249, "e1008893": 249, "1008893": 249, "noei": 249, "s40708": 249, "00148": 249, "masoli": 249, "00278": 249, "ottaviani": 249, "e1007937": 249, "1007937": 249, "rizza": 249, "sgritta": 249, "00071": 249, "laforenza": 249, "moccia": 249, "0953": 249, "2467": 249, "2476": 249, "masurkar": 249, "juxtaglomerular": 249, "brann": 249, "992": 249, "aparicio": 249, "592": 249, "669": 249, "267872": 249, "mateu": 249, "lope": 249, "aroso": 249, "ger\u00f3": 249, "menes": 249, "neto": 249, "lamghari": 249, "ac41db": 249, "matsubara": 249, "torikai": 249, "automaton": 249, "836": 249, "tnnl": 249, "2425893": 249, "matsumura": 249, "yamamoto": 249, "katsurabayashi": 249, "niwano": 249, "hirano": 249, "iwata": 249, "9905": 249, "28232": 249, "mattioni": 249, "nov\u00e8r": 249, "neuronvisio": 249, "e66811": 249, "0066811": 249, "6609439": 249, "0463": 249, "brien": 249, "2583": 249, "2586": 249, "6610068": 249, "matzner": 249, "gorodetski": 249, "gad": 249, "5833": 249, "62750": 249, "mauric": 249, "lopez": 249, "10289": 249, "10301": 249, "mazzatenta": 249, "campidelli": 249, "gambazzi": 249, "businaro": 249, "prato": 249, "ballerini": 249, "6931": 249, "6936": 249, "mazzoni": 249, "e1004584": 249, "1004584": 249, "dingledin": 249, "mccafferti": 249, "venzi": 249, "l\u0151rincz": 249, "delicata": 249, "atherton": 249, "recchia": 249, "orban": 249, "giovanni": 249, "0130": 249, "mccaulei": 249, "petroccion": 249, "brant": 249, "affinnih": 249, "wisnoski": 249, "zahid": 249, "shree": 249, "brazh": 249, "leapman": 249, "khmaladz": 249, "zuloaga": 249, "scimemi": 249, "circadian": [249, 376], "108255": 249, "mccolgan": 249, "kuokkanen": 249, "kempter": 249, "owl": 249, "00648": 249, "dipolar": 249, "e26106": 249, "26106": 249, "e1": 249, "e2": 249, "nature05523": 249, "mcdonnel": 249, "tuckwel": 249, "jost": 249, "ward": 249, "0954898x": 249, "990064": 249, "9269": 249, "00018": 249, "2937": 249, "2949": 249, "00671": 249, "878": 249, "888": 249, "1592": 249, "1604": 249, "thakor": 249, "1457": 249, "2004a": 249, "expert": 249, "622": 249, "richardson": 249, "mori": 249, "589": 249, "2004b": 249, "mctavish": 249, "meas": 249, "famular": 249, "gjorgjieva": 249, "12154": 249, "12170": 249, "3263": 249, "medan": 249, "sztarker": 249, "preuss": 249, "mauthner": 249, "689": 249, "jp274861": 249, "066012": 249, "359529": 249, "237172": 249, "medlock": 249, "sekiguchi": 249, "1199": 249, "mehaffei": 249, "9968": 249, "9977": 249, "workshop": 249, "3195555": 249, "3195556": 249, "517": 249, "clusteron": 249, "niebur": 249, "croft": 249, "ruderman": 249, "petsch": 249, "kearn": 249, "solla": 249, "1997c": 249, "4325": 249, "4334": 249, "melnick": 249, "santo": 249, "szokol": 249, "gelatinosa": 249, "646": 249, "ghezzi": 249, "046012": 249, "aabb7d": 249, "musial": 249, "ampar": 249, "1463": 249, "16829": 249, "16834": 249, "13552": 249, "13566": 249, "00075": 249, "muscarin": 249, "supraphysiolog": 249, "8512574": 249, "yousif": 249, "mesek": 249, "duch": 249, "90899": 249, "june": [249, 390], "a11": 249, "ludwig": 249, "hofmann": 249, "task3": 249, "1517": 249, "1529": 249, "wiendl": 249, "twik": 249, "task1": 249, "lymphocyt": 249, "effector": 249, "14559": 249, "14570": 249, "733": 249, "soldovieri": 249, "ambrosino": 249, "barres": 249, "cilio": 249, "taglialatela": 249, "genotyp": 249, "4386": 249, "4391": 249, "1216867110": 249, "maria": 249, "3782": 249, "3793": 249, "4423": 249, "lugli": 249, "bellini": 249, "giudic": 249, "ferrari": 249, "pascotto": 249, "neutral": 249, "sporad": 249, "benign": 249, "schubert": 249, "0291": 249, "michaelevski": 249, "lotan": 249, "syntaxin": 249, "494": 249, "michalikova": 249, "spikelet": 249, "1484": 249, "1495": 249, "00463": 249, "2403": 249, "schaffer": 249, "2703": 249, "2707": 249, "11138": 249, "fneur": 249, "00050": 249, "tulumello": 249, "8499": 249, "8504": 249, "1502513112": 249, "culotta": 249, "schizophren": 249, "552": 249, "1046": 249, "4145": 249, "4155": 249, "2005a": 249, "fnint": 249, "00122": 249, "2005b": 249, "inzirillo": 249, "messineo": 249, "cardaci": 249, "ayala": 249, "2754": 249, "2760": 249, "unsynchron": 249, "e36867": 249, "0036867": 249, "novara": 249, "magic": [249, 388], "362": 249, "leinekugel": 249, "1024": 249, "1031": 249, "13325": 249, "bologna": 249, "antonel": 249, "pezzoli": 249, "kali": 249, "e1006423": 249, "1006423": 249, "mikulov": 249, "siwani": 249, "bauer": 249, "pupe": 249, "kulland": 249, "3638": 249, "05907": 249, "mile": 249, "390": 249, "staff": 249, "amphibian": 249, "3171": 249, "3190": 249, "2084": 249, "minneci": 249, "dragicev": 249, "avossa": 249, "stratum": 249, "egfp": 249, "lenticular": 249, "fasciculu": 249, "1569": 249, "stereotact": 249, "neurosurg": 249, "miral": 249, "neuromuscular": 249, "732": 249, "mirzakhalili": 249, "557": 249, "cel": 249, "mishra": 249, "1346": 249, "00601": 249, "decorrel": 249, "23035": 249, "100007": 249, "crneur": 249, "mittal": 249, "00136": 249, "tsubo": 249, "okada": 249, "13802": 249, "13812": 249, "miyamura": 249, "hitomi": 249, "omiya": 249, "ujihara": 249, "kokabu": 249, "morimoto": 249, "ono": 249, "isoliquiritigenin": 249, "ingredi": 249, "glycyrrhiza": 249, "antinocicept": 249, "naunyn": 249, "schmiedeberg": 249, "967": 249, "s00210": 249, "02030": 249, "miyazaki": 249, "ceca": 249, "predominantli": 249, "9964": 249, "9976": 249, "mo": 249, "veto": 249, "2507": 249, "2532": 249, "moezzi": 249, "schaworonkow": 249, "plogmach": 249, "goldsworthi": 249, "hordacr": 249, "triesch": 249, "electromyograph": 249, "2541": 249, "00626": 249, "silicon": 249, "2240": 249, "2250": 249, "doreswami": 249, "aards": 249, "asamoah": 249, "brakspear": 249, "groot": 249, "slui": 249, "boudewijn": 249, "4839": 249, "4853": 249, "bhv188": 249, "mison": 249, "trimmer": 249, "t\u00f8nnesen": 249, "kuner": 249, "23196": 249, "srep23196": 249, "moldwin": 249, "perceptron": 249, "00033": 249, "molina": 249, "jentsch": 249, "ersoi": 249, "moolen": 249, "donato": 249, "heutink": 249, "cesar": 249, "microphysiolog": 249, "biofabr": 249, "5090": 249, "ac463b": 249, "mondrag\u00f3n": 249, "burgui\u00e8r": 249, "43253": 249, "srep43253": 249, "rahamimoff": 249, "martinu": 249, "nijhoff": 249, "ravassard": 249, "acharya": 249, "kee": 249, "vuong": 249, "35510": 249, "aaj1497": 249, "moortgat": 249, "984": 249, "synfir": 249, "294": 249, "kaka": 249, "ganjkhani": 249, "hajihasani": 249, "531": 249, "digiovanna": 249, "gait": 249, "814": 249, "828": 249, "ribeiro": 249, "453": 249, "s10571": 249, "0378": 249, "morel": 249, "0673": 249, "nonrandom": 249, "6179": 249, "6184": 249, "indirect": 249, "00625": 249, "kalra": 249, "1871": 249, "1881": 249, "mutalik": 249, "mosher": 249, "kami\u0144ski": 249, "mamelak": 249, "rutishaus": 249, "heartbeat": 249, "3536": 249, "3551": 249, "mou": 249, "trianti": 249, "thermoelectr": 249, "2194146": 249, "moubarak": 249, "dufour": 249, "5044": 249, "5063": 249, "2781": 249, "moulin": 249, "barbier": 249, "maillei": 249, "guillemaud": 249, "film": 249, "692": 249, "903522": 249, "mourdoukouta": 249, "adair": 249, "vagu": 249, "12706": 249, "sk_l": 249, "1285": 249, "1307": 249, "00169": 249, "1450": 249, "1467": 249, "00543": 249, "moyer": 249, "halterman": 249, "00152": 249, "3731": 249, "3748": 249, "panksepp": 249, "sorg": 249, "schl\u00fcter": 249, "dong": 249, "cocain": 249, "3689": 249, "3699": 249, "4063": 249, "036002": 249, "mukherje": 249, "1222": 249, "529": 249, "mukunda": 249, "2637": 249, "jp273482": 249, "bues": 249, "renew": 249, "2958": 249, "zadina": 249, "sawtel": 249, "179": 249, "1382": 249, "1392": 249, "m\u00fcllner": 249, "wierenga": 249, "bonhoeff": 249, "munro": 249, "plexu": 249, "2833": 249, "2852": 249, "00709": 249, "muras": 249, "lantz": 249, "higgin": 249, "quinlan": 249, "metalloproteinas": 249, "3477": 249, "s12035": 249, "9295": 249, "murbartian": 249, "3399": 249, "3407": 249, "10040": 249, "10051": 249, "fedorov": 249, "gies": 249, "ohno": 249, "1915": 249, "mushtaq": 249, "haq": 249, "marshal": 249, "zia": 249, "alam": 249, "hertel": 249, "awan": 249, "martinetz": 249, "2615": 249, "21655979": 249, "1936894": 249, "musselman": 249, "cariello": 249, "pelot": 249, "ascent": 249, "e1009285": 249, "1009285": 249, "mustaf\u00e1": 249, "raingo": 249, "ghrelin": 249, "722": 249, "01738": 249, "nusbaum": 249, "5053": 249, "5067": 249, "nadin": 249, "pfaffing": 249, "dipeptidyl": 249, "peptidas": 249, "8551": 249, "8565": 249, "5489": 249, "e60831": 249, "0060831": 249, "hagler": 249, "117467": 249, "burgess": 249, "luder": 249, "nakano": 249, "doya": 249, "00119": 249, "chattarji": 249, "stress": 249, "3070": 249, "3083": 249, "00913": 249, "deplet": 249, "033": 249, "5846": 249, "5850": 249, "1020": 249, "sepsi": 249, "961": 249, "25105": 249, "nataraj": 249, "roux": 249, "nahmani": 249, "lefort": 249, "turrigiano": 249, "depriv": 249, "nava": 249, "valero": 249, "jurado": 249, "sala": 249, "averkin": 249, "gambino": 249, "cid": 249, "prida": 249, "sublay": 249, "15840": 249, "todorov": 249, "pharmaceut": 249, "2189": 249, "2197": 249, "nenad": 249, "burdick": 249, "koren": 249, "11604": 249, "11620": 249, "0719": 249, "mea": 249, "9265": 249, "3809": 249, "3825": 249, "jp272022": 249, "6011": 249, "6024": 249, "3278": 249, "quantal": 249, "s1472": 249, "9288": 249, "neumaier": 249, "alpdogan": 249, "heschel": 249, "cav2": 249, "15210": 249, "202012585": 249, "nn1826": 249, "nevil": 249, "3716": 249, "chevtchenko": 249, "dye": 249, "3630": 249, "23901": 249, "3293": 249, "neco_a_00521": 249, "daniel": 249, "ja": 249, "hnn": 249, "51214": 249, "lakato": 249, "sanger": 249, "multitarget": 249, "dystonia": 249, "fphar": 249, "00157": 249, "ddmod": 249, "hilscher": 249, "skolnick": 249, "e76285": 249, "0076285": 249, "jacob": 249, "0253": 249, "sherif": 249, "11733": 249, "11743": 249, "0501": 249, "interict": 249, "discoordin": 249, "wnp": 249, "0b013e3181fe059": 249, "00019": [249, 344], "2011c": 249, "bulanova": 249, "zeki": 249, "2016c": 249, "endoplasm": [249, 368, 371], "reticulum": [249, 368, 371], "neco_a_00712": 249, "corticospin": 249, "00570": 249, "ng": 249, "volman": 249, "gibbon": 249, "phohomsiri": 249, "cui": 249, "swenson": 249, "stuhmil": 249, "concuss": 249, "kinemat": 249, "00269": 249, "trana": 249, "442": 249, "niculescu": 249, "hird": 249, "hornig": 249, "pong": 249, "erg": 249, "mglur1": 249, "16729": 249, "16740": 249, "5523": 249, "nie": 249, "tatsuno": 249, "2247": 249, "2293": 249, "neco_a_00633": 249, "niedringhau": 249, "conant": 249, "dzakpasu": 249, "e57144": 249, "0057144": 249, "sola": 249, "saftenku": 249, "00246": 249, "nigro": 249, "0972": 249, "5934": 249, "5937": 249, "6610903": 249, "nishino": 249, "cue": 249, "7153": 249, "7164": 249, "4398": 249, "amid": 249, "3792": 249, "11633": 249, "n\u00f6renberg": 249, "0910716107": 249, "mitochondria": [249, 368, 371], "9164": 249, "boyl": 249, "rossum": 249, "00105": 249, "neco_a_00705": 249, "halloran": 249, "e0230327": 249, "0230327": 249, "ohana": 249, "portner": 249, "e40601": 249, "0040601": 249, "ohura": 249, "0415": 249, "0254": 249, "ol\u00e1h": 249, "lukacsovich": 249, "winter": 249, "arszovszki": 249, "cck": 249, "auxiliari": 249, "58515": 249, "tarcsai": 249, "0059": 249, "olivar": 249, "thermoreceptor": 249, "bacigalupo": 249, "salgado": 249, "maidana": 249, "campo": 249, "e0139314": 249, "0139314": 249, "olted": 249, "186916": 249, "morkv": 249, "1171": 249, "849": 249, "00057": 249, "omori": 249, "aonishi": 249, "1125": 249, "2113": 249, "2136": 249, "ona": 249, "jodar": 249, "gerkau": 249, "sara": 249, "rose": 249, "381": 249, "opsal": 249, "canfield": 249, "bank": 249, "9441222": 249, "ordemann": 249, "apgar": 249, "brager": 249, "temporoammon": 249, "0082": 249, "belmont": 249, "viana": 249, "3009": 249, "3023": 249, "01033": 249, "soudri": 249, "e36670": 249, "0036670": 249, "ortner": 249, "kharitonova": 249, "duda": 249, "hess": 249, "pomberg": 249, "stefanova": 249, "pitterl": 249, "ciossek": 249, "oberach": 249, "draheim": 249, "kloppenburg": 249, "striessnig": 249, "affin": [249, 374], "isradipin": 249, "6761": 249, "6777": 249, "2946": 249, "ort": 249, "immagin": 249, "seddik": 249, "airault": 249, "raoui": 249, "najimi": 249, "trouslard": 249, "wanaverbecq": 249, "polycyst": 249, "kidnei": 249, "cerebrospin": 249, "5233": 249, "5244": 249, "0057": 249, "ostroumov": 249, "tridimension": 249, "372": 249, "osypenko": 249, "dovgan": 249, "kononenko": 249, "dromaretski": 249, "matvieienko": 249, "rybachuk": 249, "venkataraman": 249, "belan": 249, "dyt2": 249, "hippocalcin": 249, "autosom": 249, "recess": 249, "104529": 249, "otopalik": 249, "goeritz": 249, "sutton": 249, "brook": 249, "guerini": 249, "sloppi": 249, "crustacean": 249, "stomatogastr": 249, "e22352": 249, "22352": 249, "pipkin": 249, "e41728": 249, "41728": 249, "banghart": 249, "e23508": 249, "23508": 249, "ouanoun": 249, "baux": 249, "e12190": 249, "12190": 249, "overstreet": 249, "helm": 249, "tilleri": 249, "066016": 249, "ovsepian": 249, "berr": 249, "leari": 249, "dolli": 249, "nuclear": [249, 368], "1771": 249, "1791": 249, "249706": 249, "ozer": 249, "erkaymaz": 249, "uzuntarla": 249, "padamsei": 249, "katsanevaki": 249, "dupui": 249, "rochefort": 249, "food": 249, "scarciti": 249, "padmashri": 249, "mondal": 249, "rajan": 249, "kynuren": 249, "microcultur": 249, "paduraru": 249, "romanian": 249, "ac3dd8": 249, "farzad": 249, "43rd": 249, "6547": 249, "6550": 249, "9629884": 249, "3398": 249, "9176125": 249, "2548": 249, "2556": 249, "3027560": 249, "yue": 249, "5177": 249, "84437": 249, "2021c": 249, "gr\u00fcndemann": 249, "1709": 249, "188300": 249, "shai": 249, "reev": 249, "3646": 249, "6897": 249, "6903": 249, "scn8a": 249, "598": 249, "jp278952": 249, "papasavva": 249, "parrish": 249, "0387": 249, "kastellaki": 249, "1970": 249, "1983": 249, "00099": 249, "pfc": 249, "00161": 249, "e1003764": 249, "1003764": 249, "parashar": 249, "saha": 249, "bandyopadhyai": 249, "hillock": 249, "nitrogen": 249, "vacanc": 249, "magnetometri": 249, "s42005": 249, "parasuram": 249, "jphyspari": 249, "000481905": 249, "402": 249, "parekh": 249, "zona": 249, "incerta": 249, "2580": 249, "2596": 249, "00282": 249, "shekhar": 249, "santucci": 249, "redel": 249, "traub": 249, "mintz": 249, "nark": 249, "xia": 249, "fishman": 249, "fhf2": 249, "circul": 249, "1548": 249, "1161": 249, "circresaha": 249, "317349": 249, "ankl": 249, "0612": 249, "ash": 249, "smirnaki": 249, "5372": 249, "13029": 249, "richard": 249, "oligom": 249, "s12915": 249, "0732": 249, "cho": 249, "5607": 249, "e0225100": 249, "0225100": 249, "parker": 249, "laird": 249, "wah": 249, "cousin": 249, "bem": 249, "0006": 249, "obradov": 249, "hesam": 249, "shariati": 249, "gorman": 249, "karantoni": 249, "bickerstaff": 249, "pashut": 249, "magidov": 249, "porat": 249, "wolfu": 249, "perel": 249, "lavidor": 249, "yeshurun": 249, "00145": 249, "e1002022": 249, "1002022": 249, "barbosa": 249, "nav\u03b24": 249, "e0133485": 249, "0133485": 249, "1019": 249, "2756930": 249, "paucar": 249, "\u00e5gren": 249, "lissmat": 249, "bergend": 249, "\u00e5": 249, "weinberg": 249, "nilsson": 249, "savichetva": 249, "sahlholm": 249, "svenningsson": 249, "v374a": 249, "kcnd3": 249, "paroxysm": 249, "exacerb": 249, "e546": 249, "nxg": 249, "0000000000000546": 249, "outwardli": 249, "15341": 249, "15350": 249, "2747": 249, "pimashkin": 249, "504": 249, "1308388110": 249, "ncomms1202": 249, "french": 249, "vu": 249, "e37102": 249, "37102": 249, "hudmon": 249, "palmitoyl": 249, "myocyt": 249, "12035": 249, "ncomms12035": 249, "046022": 249, "aa6a5f": 249, "016007": 249, "aaeb0c": 249, "catheral": 249, "titu": 249, "henriquez": 249, "00315": 249, "comsol": 249, "046048": 249, "abadb5": 249, "5077": 249, "84503": 249, "016014": 249, "aa52d1": 249, "aman": 249, "postop": 249, "066020": 249, "aae12f": 249, "9710": 249, "042408": 249, "shimoura": 249, "rotstein": 249, "103135": 249, "5110033": 249, "pendyam": 249, "burgo": 249, "robl": 249, "sotr": 249, "bayon": 249, "quirk": 249, "prelimb": 249, "00961": 249, "toma": 249, "drangmeist": 249, "sciadv": 249, "abg4693": 249, "perg": 249, "balasubramanian": 249, "7928": 249, "pern\u00eda": 249, "goswami": 249, "stickler": 249, "fr\u00f6be": 249, "schl\u00f6gl": 249, "peron": 249, "krapp": 249, "retinotopi": 249, "830": 249, "842": 249, "perra": 249, "rapeaux": 249, "crucial": [249, 379], "depolaris": 249, "2214": 249, "8512759": 249, "perreault": 249, "raastad": 249, "perum": 249, "stratton": 249, "chandeli": 249, "109106": 249, "izad": 249, "tyler": 249, "petersson": 249, "2917": 249, "2925": 249, "08199": 249, "07791": 249, "petrini": 249, "ravasenga": 249, "succol": 249, "guazzi": 249, "barberi": 249, "gabaar": 249, "monoligand": 249, "1752": 249, "rigosa": 249, "giambattistelli": 249, "granata": 249, "pampaloni": 249, "guglielmelli": 249, "zollo": 249, "microneurographi": 249, "s12938": 249, "0659": 249, "39552": 249, "bytschok": 249, "042312": 249, "802": 249, "e1003928": 249, "1003928": 249, "pezo": 249, "00139": 249, "pfanzelt": 249, "rohregg": 249, "10349": 249, "10362": 249, "3368": 249, "gr\u00fcbl": 249, "schmuker": 249, "00011": 249, "pham": 249, "bridg": 249, "733155": 249, "militari": 249, "milm": 249, "usx202": 249, "phoka": 249, "e1000768": 249, "1000768": 249, "pimentel": 249, "moioli": 249, "araujo": 249, "ranieri": 249, "romero": 249, "broz": 249, "neuro4pd": 249, "640449": 249, "corneal": 249, "8177": 249, "8192": 249, "0654": 249, "pinotsi": 249, "pinto": 249, "fitzgerald": 249, "litvak": 249, "auksztulewicz": 249, "friston": 249, "canon": [249, 379], "causal": 249, "pissadaki": 249, "bolam": 249, "1740": 249, "reczko": 249, "e1001038": 249, "1001038": 249, "sliwa": 249, "vuksic": 249, "s40478": 249, "0285": 249, "2848": 249, "brannon": 249, "987": 249, "e0140254": 249, "0140254": 249, "9173": 249, "9184": 249, "0638": 249, "imperfect": 249, "distort": 249, "e19463": 249, "0019463": 249, "1277": 249, "5861": 249, "5876": 249, "4013": 249, "11891": 249, "11903": 249, "5250": 249, "poolo": 249, "767": 249, "rozsa": 249, "8436": 249, "ncomms9436": 249, "bhs320": 249, "portegi": 249, "elegan": 249, "0458": 249, "2544": 249, "postlethwait": 249, "steinert": 249, "579": 249, "potrusil": 249, "chacko": 249, "glueckert": 249, "tonotop": 249, "108001": 249, "pouill": 249, "intraglomerular": 249, "interglomerular": 249, "5965": 249, "5986": 249, "jp274408": 249, "watkinson": 249, "e00067": 249, "poulsen": 249, "abd1c1": 249, "meij": 249, "ab85b1": 249, "mouska": 249, "temido": 249, "ferreira": 249, "raj\u00e3o": 249, "saraiva": 249, "fernandez": 249, "salgueiro": 249, "gandin": 249, "barik": 249, "goutagni": 249, "bethu": 249, "bocklisch": 249, "curbi": 249, "526": 249, "1045": 249, "plemel": 249, "injur": 249, "5120": 249, "5125": 249, "0002": 249, "rymer": 249, "808": 249, "823": 249, "00510": 249, "hysteresi": 249, "1184": 249, "00850": 249, "pozzorini": 249, "mensi": 249, "naud": 249, "e1004275": 249, "1004275": 249, "presannan": 249, "rajendran": 249, "1375": 249, "lengthen": 249, "4743": 249, "4754": 249, "2076": 249, "anion": 249, "subvert": 249, "1744": 249, "8069": 249, "prime": 249, "pichon": 249, "probst": 249, "proddutur": 249, "elgamm": 249, "046109": 249, "4830138": 249, "psarrou": 249, "stefan": 249, "00287": 249, "e48517": 249, "0048517": 249, "roquea": 249, "e6970": 249, "0006970": 249, "qi": 249, "1579": 249, "bhu334": 249, "quindlen": 249, "stolarski": 249, "baroca": 249, "multiphys": 249, "pacinian": 249, "corpuscl": 249, "1039": 249, "c6ib00157b": 249, "hotek": 249, "mechanosens": 249, "skin": 249, "biomechan": 249, "mechanobiologi": 249, "s10237": 249, "bloom": 249, "vibrotactil": 249, "herbst": 249, "191439": 249, "rso": 249, "00203": 249, "enriquez": 249, "denton": 249, "kiehn": 249, "moder": 249, "10251": 249, "10256": 249, "1274": 249, "rabang": 249, "mgb": 249, "e29375": 249, "0029375": 249, "gardner": 249, "colliculu": 249, "rabinowitch": 249, "endur": 249, "yerm": 249, "slastic": 249, "13474": 249, "13484": 249, "2006a": 249, "2006b": 249, "radecki": 249, "meshkin": 249, "perrin": 249, "corticohippocamp": 249, "obiden": 249, "oligodendrogliopathi": 249, "16116": 249, "34414": 249, "radhakrishnan": 249, "nutakki": 249, "neurovascular": 249, "reato": 249, "arlotti": 249, "gasca": 249, "datta": 249, "2578": 249, "247171": 249, "e1002521": 249, "1002521": 249, "rajaram": 249, "fischl": 249, "mrowka": 249, "alexandrova": 249, "groth": 249, "0106": 249, "thankamani": 249, "nirmala": 249, "8125892": 249, "f\u00e9k\u00e9t\u00e9": 249, "benitez": 249, "boumedin": 249, "garrido": 249, "00388": 249, "colangelo": 249, "adaszewski": 249, "brukau": 249, "katkov": 249, "737": 249, "752": 249, "219576": 249, "ramo": 249, "escobar": 249, "mac\u00eda": 249, "multiobject": 249, "e2992": 249, "cnm": 249, "2992": 249, "ramracheya": 249, "chibalina": 249, "dou": 249, "moritoh": 249, "shigeto": 249, "braun": 249, "glp": 249, "glucagon": 249, "secret": [249, 379], "pancreat": 249, "e13852": 249, "13852": 249, "multifascicular": 249, "2837": 249, "2446761": 249, "baden": 249, "beren": 249, "2101": 249, "rane": 249, "1173": 249, "1760": 249, "sheth": 249, "icob": 249, "6178980": 249, "romano": 249, "elia": 249, "lone": 249, "marmoset": 249, "122548": 249, "122567": 249, "3108682": 249, "channelpedia": 249, "00036": 249, "constandin": 249, "3411": 249, "3414": 249, "7319125": 249, "11985": 249, "11990": 249, "badia": 249, "navarro": 249, "intrafascicular": 249, "2189021": 249, "2151878": 249, "5629": 249, "5652": 249, "239418": 249, "2313": 249, "2334": 249, "00846": 249, "channelostasi": 249, "e1787": 249, "e1796": 249, "1316599111": 249, "pared": 249, "leao": 249, "colling": 249, "jefferi": 249, "cjd": 249, "aldworth": 249, "53281": 249, "pymoos": 249, "moos": 249, "subblock": 249, "anesthesia": 249, "analgesia": 249, "recugnat": 249, "undurraga": 249, "spiral": 249, "612": 249, "3102129": 249, "reetz": 249, "stadler": 249, "strauss": 249, "interferon": 249, "s12974": 249, "0185": 249, "regev": 249, "degani": 249, "katzav": 249, "etzioni": 249, "siloni": 249, "alaimo": 249, "chikvashvili": 249, "villarroel": 249, "kcnq2": 249, "e6586": 249, "0006586": 249, "reich": 249, "steigerwald": 249, "sawalh": 249, "rees": 249, "johann": 249, "nickl": 249, "matthi": 249, "volkmann": 249, "acn3": 249, "survei": 249, "4346": 249, "4363": 249, "scolamiero": 249, "d\u0142otko": 249, "cliqu": 249, "caviti": 249, "reimer": 249, "staud": 249, "boucsein": 249, "0446": 249, "alevi": 249, "sprekel": 249, "e1009681": 249, "1009681": 249, "lengyel": 249, "remp": 249, "chopp": 249, "0089": 249, "reuveni": 249, "amitai": 249, "nonhomogen": 249, "hva": 249, "4609": 249, "4621": 249, "saar": 249, "e68131": 249, "0068131": 249, "chameh": 249, "sekul": 249, "valiant": 249, "bhaa261": 249, "richmond": 249, "gurnei": 249, "allerton": 249, "323": 249, "9208": 249, "rinker": 249, "fulmer": 249, "trantham": 249, "randal": 249, "chandler": 249, "mulholland": 249, "bxd": 249, "pharmacogenet": 249, "drink": 249, "ritzau": 249, "harada": 249, "eiler": 249, "ultrafast": 249, "trigemin": 249, "2110": 249, "ijms21124420": 249, "lavandero": 249, "hwang": 249, "trillo": 249, "phosphoryl": 249, "8475": 249, "8493": 249, "0345": 249, "rizou": 249, "prodromaki": 249, "microscal": 249, "025016": 249, "aaa0dd": 249, "locatelli": 249, "ponc": 249, "prestori": 249, "3873": 249, "83209": 249, "azad": 249, "pioneer": 249, "608": 249, "621": 249, "3248": 249, "electrosensori": 249, "mormyrid": 249, "2035": 249, "2047": 249, "anti": 249, "00156": 249, "symptomat": 249, "alzrt153": 249, "rogala": 249, "waleszczyk": 249, "l\u0119ski": 249, "wr\u00f3bel": 249, "perigenicul": 249, "0430": 249, "9441267": 249, "khz": 249, "jpain": 249, "akrouh": 249, "00165": 249, "romanenko": 249, "harvei": 249, "hool": 249, "radiat": 249, "trpv1": 249, "2331": 249, "2345": 249, "3641": 249, "9176570": 249, "romaro": 249, "najman": 249, "2032": 249, "neco_a_01400": 249, "romeni": 249, "3129": 249, "3153": 249, "s41596": 249, "0377": 249, "8359": 249, "8372": 249, "6161": 249, "ero": 249, "simplif": 249, "arxiv": 249, "00087v2": 249, "dean": 249, "porril": 249, "faithfulli": 249, "transmit": [249, 383], "00304": 249, "rothman": 249, "1015": 249, "1018": 249, "routh": 249, "2288": 249, "2302": 249, "00082": 249, "baumgardn": 249, "4431": 249, "4448": 249, "jp274258": 249, "rowan": 249, "tomassini": 249, "antonioni": 249, "daolio": 249, "buesser": 249, "delcanto": 249, "kamasawa": 249, "christi": 249, "symmetri": 249, "636": 249, "660": 249, "royeck": 249, "horstmann": 249, "reitz": 249, "2361": 249, "2380": 249, "royer": 249, "634": 249, "rudnicki": 249, "hemmert": 249, "entrain": 249, "globular": 249, "3665": 249, "2466": 249, "2003c": 249, "2003d": 249, "452": 249, "2315": 249, "shot": 249, "641": 249, "2146": 249, "2210": 249, "2922": 249, "2006c": 249, "trust": 249, "1966": 249, "pelleti": 249, "392": 249, "2805": 249, "2821": 249, "2884": 249, "awak": 249, "5280": 249, "5290": 249, "duboi": 249, "1426": 249, "neco_a_00278": 249, "ruff": 249, "legasto": 249, "stribbel": 249, "fehl": 249, "perinat": 249, "congenit": 249, "dysmyelin": 249, "11899": 249, "11915": 249, "1131": 249, "kozloski": 249, "e1007375": 249, "1007375": 249, "dragulji\u0107": 249, "0605": 249, "rumsei": 249, "2273": 249, "2280": 249, "2318": 249, "noisi": 249, "richter": 249, "levin": 249, "bliss": 249, "fusion": 249, "rusu": 249, "murakami": 249, "ruz": 249, "classifi": 249, "ryglewski": 249, "shal": 249, "3673": 249, "3688": 249, "00693": 249, "rzhepetskyi": 249, "lazniewska": 249, "blesneac": 249, "pamphlett": 249, "weiss": 249, "cacna1h": 249, "missens": 249, "1204497": 249, "sadashivaiah": 249, "sacr": 249, "guan": 249, "sarma": 249, "3868": 249, "3871": 249, "8037701": 249, "3525": 249, "3528": 249, "8512975": 249, "sacr\u00e9": 249, "0703": 249, "sadleir": 249, "woo": 249, "mreit": 249, "216": 249, "foutri": 249, "safaryan": 249, "degrad": [249, 286, 287, 368, 376, 378], "46550": 249, "srep46550": 249, "safiulina": 249, "caiati": 249, "sivakumaran": 249, "bisson": 249, "wolff": 249, "glomerulu": 249, "228": 249, "desmaison": 249, "charneau": 249, "lledo": 249, "4542": 249, "faramarzi": 249, "benal": 249, "girolamo": 249, "tonini": 249, "keirstead": 249, "microcoil": 249, "\u03bc": 249, "1910": 249, "ac4baf": 249, "sahin": 249, "1050": 249, "sailamul": 249, "paik": 249, "0657": 249, "saiz": 249, "speech": 249, "ab970d": 249, "werginz": 249, "771600": 249, "sakurai": 249, "serotonerg": 249, "1975": 249, "darghouth": 249, "salkim": 249, "shiraz": 249, "demosthen": 249, "neuroanatom": 249, "016006": 249, "ab3d94": 249, "aaeaad": 249, "wearabl": 249, "salvador": [249, 389], "basser": 249, "sulcal": 249, "022": 249, "samoudi": 249, "kampusch": 249, "tangh": 249, "sz\u00e9le": 249, "kaniusa": 249, "joseph": 249, "percutan": 249, "auricular": 249, "1772": 249, "1629": 249, "jalil": 249, "trigo": 249, "201511506": 249, "mari\u00f1o": 249, "canedo": 249, "cuneothalam": 249, "wake": 249, "cuneat": 249, "mira": 249, "pomata": 249, "rela": 249, "murer": 249, "6553": 249, "6564": 249, "6345": 249, "surki": 249, "leonard": 249, "laterodors": 249, "3111": 249, "sandstrom": 249, "friesen": 249, "reparameter": 249, "2550": 249, "907": 249, "sanjai": 249, "krothap": 249, "1336": 249, "1350": 249, "22440": 249, "santaniello": 249, "fiengo": 249, "glielmo": 249, "2081377": 249, "sprout": 249, "pajo": 249, "trpevski": 249, "stepaniuk": 249, "09546": 249, "derkach": 249, "e8047": 249, "0008047": 249, "balena": 249, "wolanski": 249, "dickson": 249, "woodin": 249, "713": 249, "carlen": 249, "saravanan": 249, "arabali": 249, "gootj": 249, "dreesbach": 249, "22429": 249, "hippounit": 249, "e1008114": 249, "1008114": 249, "sarid": 249, "interweav": 249, "16353": 249, "16358": 249, "intracolumnar": 249, "858": 249, "bht268": 249, "ghayoomi": 249, "alicea": 249, "curri": 249, "gerkin": 249, "gingel": 249, "gordon": 249, "hasani": 249, "khayrulin": 249, "lung": 249, "watt": 249, "openworm": 249, "caenorhabd": 249, "37310": 249, "rstb": 249, "0382": [249, 276], "22365": 249, "saudargien\u0117": 249, "jackeviciu": 249, "flicker": 249, "bard": 249, "kraev": 249, "medvedev": 249, "henneberg": 249, "disentangl": 249, "astrogli": 249, "05896": 249, "astroglia": 249, "20130614": 249, "0614": 249, "sylantyev": 249, "3143": 249, "3154": 249, "dem": 249, "brink": 249, "mattei": 249, "sharkovska": 249, "barthel": 249, "endesfeld": 249, "b\u00fchrer": 249, "hyperoxia": 249, "preterm": 249, "birth": 249, "14810": 249, "1242": 249, "198390": 249, "schierwagen": 249, "alp\u00e1r": 249, "g\u00e4rtner": 249, "clau": 249, "koester": 249, "chaotic": 249, "schmidt": 249, "uncertainti": 249, "2608925": 249, "1378": 249, "1387": 249, "2235835": 249, "1828": 249, "1839": 249, "2758324": 249, "1706": 249, "1718": 249, "hieber": 249, "bischofberg": 249, "10242": 249, "6335": 249, "8430": 249, "8441": 249, "1849": 249, "1857": 249, "150151": 249, "toleikyt": 249, "aitchison": 249, "1114": 249, "4582": 249, "fox": 249, "itani": 249, "golowasch": 249, "0338": 249, "00083": 249, "mizel": 249, "collman": 249, "brittain": 249, "bleckert": 249, "dorkenwald": 249, "macrina": 249, "zhuang": 249, "buchanan": 249, "takeno": 249, "torr": 249, "mahalingam": 249, "bumbarg": 249, "chartrand": 249, "kemnitz": 249, "silversmith": 249, "zung": 249, "zlateski": 249, "tartavul": 249, "popovych": 249, "froudaraki": 249, "suckow": 249, "tolia": 249, "seung": 249, "73783": 249, "schofield": 249, "7954": 249, "7962": 249, "schomburg": 249, "11798": 249, "11811": 249, "0656": 249, "westbrook": 249, "glomeruli": 249, "1202": 249, "schreglmann": 249, "peach": 249, "panella": 249, "boyden": 249, "rothwel": 249, "bhatia": 249, "20581": 249, "erchova": 249, "408": 249, "samengo": 249, "2239": 249, "knoflach": 249, "\u03b15": 249, "06004": 249, "5325": 249, "5337": 249, "scott": 249, "mathew": 249, "2039": 249, "2050": 249, "2385": 249, "scurfield": 249, "e0191106": 249, "0191106": 249, "scuri": 249, "cataldo": 249, "ristori": 249, "brunelli": 249, "seai": 249, "natan": 249, "geffen": 249, "sst": 249, "tone": 249, "9224": 249, "9235": 249, "0686": 249, "seeli": 249, "021906": 249, "seenivasan": 249, "033393": 249, "physrevresearch": 249, "230": 249, "untangl": 249, "sekuli\u0107": 249, "e106567": 249, "0106567": 249, "e22962": 249, "22962": 249, "00277": 249, "sengupta": 249, "7320267": 249, "sejp": 249, "40th": 249, "8513621": 249, "00731": 249, "senk": 249, "kuhlen": 249, "weyer": 249, "viola": 249, "senkow": 249, "psychophys": 249, "haptic": 249, "toh": 249, "2903500": 249, "e0128590": 249, "0128590": 249, "62016a": 249, "4618": 249, "7591756": 249, "skull": 249, "8037230": 249, "40612": 249, "srep40612": 249, "1945": 249, "9277": 249, "briggman": 249, "1099": 249, "058": 249, "shabestari": 249, "202110": 249, "biocas49922": 249, "9644995": 249, "6029": 249, "6038": 249, "220913": 249, "valencia": 249, "7869": 249, "7874": 249, "e1004090": 249, "1004090": 249, "00089": 249, "shao": 249, "tsao": 249, "2029": 249, "halvorsrud": 249, "734": 249, "sheasbi": 249, "1698": 249, "sheet": 249, "hajj": 249, "hereditari": 249, "lidocain": 249, "sheffield": 249, "2728": 249, "shehzad": 249, "bozku\u015f": 249, "3676582": 249, "3006": 249, "3020": 249, "1337": 249, "1349": 249, "pharmacotherapi": 249, "npj": 249, "s41537": 249, "00109": 249, "sheroziya": 249, "egorov": 249, "vollei": 249, "s11055": 249, "9229": 249, "sheynikhovich": 249, "otani": 249, "13914": 249, "13926": 249, "0466": 249, "shifman": 249, "elfenn": 249, "00035": 249, "shilyanski": 249, "karlsgodt": 249, "hardt": 249, "ehning": 249, "bearden": 249, "neurofibromin": 249, "13141": 249, "13146": 249, "1004829107": 249, "shimazaki": 249, "boccaccio": 249, "pinato": 249, "menini": 249, "murin": 249, "kamiji": 249, "girardi": 249, "schappo": 249, "2909": 249, "shinozaki": 249, "cateau": 249, "japan": 249, "044806": 249, "jpsj": 249, "shirinpour": 249, "hananeia": 249, "rosado": 249, "galani": 249, "opitz": 249, "1470": 249, "1482": [249, 342], "shirk": 249, "malinow": 249, "2682": 249, "respir": 249, "e0168356": 249, "0168356": 249, "rubinstein": 249, "duqu": 249, "haider": 249, "746": 249, "11453": 249, "11458": 249, "0702041104": 249, "shuman": 249, "aharoni": 249, "chavli": 249, "harlei": 249, "veter": 249, "mollinedo": 249, "gajat": 249, "pennington": 249, "taxidi": 249, "javaherian": 249, "kaba": 249, "rao": 249, "pandi": 249, "shtrahman": 249, "bakhurin": 249, "masmanidi": 249, "khakh": 249, "golshani": 249, "breakdown": 249, "0559": 249, "shvartsman": 249, "kotler": 249, "stoler": 249, "melam": 249, "2989": 249, "joel": 249, "1640": 249, "1644": 249, "e1002489": 249, "1002489": 249, "gottesman": 249, "ribbon": 249, "disynapt": 249, "474": 249, "nrn2864": 249, "metacontrast": 249, "psychologi": 249, "fpsyg": 249, "blink": 249, "byproduct": 249, "2042": 249, "consensu": 249, "e0180839": 249, "0180839": 249, "sinha": 249, "e2207": 249, "e2216": 249, "1419017112": 249, "\u0161i\u0161kov\u00e1": 249, "beutel": 249, "pitsch": 249, "kammer": 249, "sittl": 249, "schui": 249, "fleckenstein": 249, "grafe": 249, "anticanc": 249, "oxaliplatin": 249, "aggrav": 249, "neuropathi": 249, "6704": 249, "6709": 249, "1118058109": 249, "siu": 249, "hepatocyt": 249, "organogenesi": 249, "cancer": 249, "hypothes": 249, "doherti": 249, "fang": 249, "hovhannisyan": 249, "pearc20": 249, "juli": 249, "portland": 249, "3311790": 249, "3399621": 249, "astakhov": 249, "bandrowski": 249, "marton": 249, "993": 249, "skaar": 249, "e1007725": 249, "1007725": 249, "skach": 249, "conwai": 249, "blockag": 249, "18030": 249, "74891": 249, "056029": 249, "aad978": 249, "nature12600": 249, "softki": 249, "2820": 249, "2824": 249, "1736": 249, "1751": 249, "653": 249, "8978": 249, "18638": 249, "18643": 249, "huntsman": 249, "516": 249, "2000a": 249, "2000b": 249, "pangratz": 249, "fuehrer": 249, "4247": 249, "4255": 249, "3812": 249, "sokolova": 249, "vlkolinski": 249, "proton": 249, "rr13785": 249, "solbr\u00e5": 249, "bergersen": 249, "den": 249, "malth": 249, "s\u00f8renssen": 249, "kirchhoff": 249, "planck": 249, "e1006510": 249, "1006510": 249, "soldado": 249, "magran": 249, "brandalis": 249, "moulini": 249, "00506": 249, "cesana": 249, "electrorespons": 249, "00012": 249, "edelmann": 249, "le\u00dfmann": 249, "neurotroph": 249, "e1006975": 249, "1006975": 249, "smetter": 249, "1273": 249, "1283": 249, "hypox": 249, "somogyi": 249, "katonai": 249, "tg2576": 249, "unalt": 249, "rtg4510": 249, "tauopathi": 249, "721773": 249, "somogyvari": 249, "zalanyi": 249, "vdcc": 249, "tea": 249, "e57453": 249, "0057453": 249, "ashpol": 249, "shou": 249, "f1486": 249, "5139": 249, "235374": 249, "sotiropoulo": 249, "0537": 249, "neuralsyn": 249, "pronocicept": 249, "preval": 249, "1507": 249, "00440": 249, "spaak": 249, "zeitler": 249, "gielen": 249, "e45688": 249, "0045688": 249, "spampanato": 249, "2040": 249, "154": 249, "kearnei": 249, "haan": 249, "mcewen": 249, "macdonald": 249, "benna": 249, "montalenti": 249, "meisler": 249, "10022": 249, "10034": 249, "bruce": 249, "octopu": 249, "spera": 249, "unsworth": 249, "14311": 249, "nnw": 249, "linta": 249, "mesolimb": 249, "cannabi": 249, "addict": 249, "1369": 249, "00218": 249, "extrapyramid": 249, "ddr": 249, "21008": 249, "chirila": 249, "rager": 249, "863": 249, "spoleti": 249, "krashia": 249, "barbera": 249, "nobili": 249, "renzi": 249, "amelio": 249, "derail": 249, "113969": 249, "spratt": 249, "alexand": 249, "sahagun": 249, "kyoung": 249, "109483": 249, "clarkson": 249, "685": 249, "squair": 249, "gautier": 249, "mahe": 249, "soriano": 249, "bichat": 249, "incognito": 249, "sarafi": 249, "laskarato": 249, "bartholdi": 249, "demesmaek": 249, "komi": 249, "moerman": 249, "vaseghi": 249, "rosentret": 249, "ravier": 249, "mccracken": 249, "kang": 249, "vachicoura": 249, "jelescu": 249, "buschman": 249, "buse": 249, "denison": 249, "dukelow": 249, "charbonneau": 249, "rigbi": 249, "millar": 249, "barraud": 249, "bezard": 249, "neuroprosthet": 249, "baroreflex": 249, "haemodynam": 249, "308": 249, "03180": 249, "srikanth": 249, "0053": 249, "buss": 249, "santoro": 249, "takahashi": 249, "3276": 249, "2219": 249, "extrus": 249, "2195": 249, "2212": 249, "hilbert": 249, "quail": 249, "microclust": 249, "3229": 249, "3241": 249, "00546": 249, "1104": 249, "1112": 249, "2598": 249, "greger": 249, "krieger": 249, "litt": 249, "1464": 249, "1481": 249, "00643": 249, "2342": 249, "2357": 249, "bierwirth": 249, "stoenica": 249, "schuchmann": 249, "velman": 249, "br\u00e4uer": 249, "lehnardt": 249, "nitsch": 249, "budt": 249, "bhs305": 249, "stamboulian": 249, "platel": 249, "chabrol": 249, "duveau": 249, "roucard": 249, "depauli": 249, "mesiotempor": 249, "stasheff": 249, "steephen": 249, "3884": 249, "3897": 249, "hed": 249, "emot": 249, "affc": 249, "0161": 249, "stefano": 249, "cordella": 249, "gioi": 249, "769": 249, "772": 249, "9441187": 249, "29th": 249, "676": 249, "man47096": 249, "9223448": 249, "estabrook": 249, "mcgie": 249, "voluntari": 249, "reflex": 249, "0989": 249, "manwani": 249, "stelescu": 249, "sumegi": 249, "birinyi": 249, "rana": 249, "esculenta": 249, "stern": 249, "agudelo": 249, "toro": 249, "rotem": 249, "mose": 249, "neef": 249, "chronaxi": 249, "e0132577": 249, "0132577": 249, "sarkar": 249, "galor": 249, "mend": 249, "randolph": 249, "rouleau": 249, "bang": 249, "alda": 249, "marchetto": 249, "gage": 249, "lithium": 249, "nonrespons": 249, "ts65dn": 249, "tc1": 249, "trisom": 249, "ebiomedicin": 249, "1062": 249, "ebiom": 249, "sterratt": 249, "willishaw": 249, "ruler": 249, "e1002545": 249, "1002545": 249, "wespatat": 249, "tennigkeit": 249, "englitz": 249, "7886": 249, "7891": 249, "1305219110": 249, "1026": 249, "07146": 249, "00202": 249, "silicio": 249, "stimberg": 249, "packet": 249, "057": 249, "stockton": 249, "neuromanag": 249, "00024": 249, "9315": 249, "9337": 249, "stoke": 249, "isaacson": 249, "vyver": 249, "christen": 249, "lecchini": 249, "strube": 249, "saliba": 249, "penalba": 249, "eauclair": 249, "tractu": 249, "solitarii": 249, "1533": 249, "str\u00fcber": 249, "sauer": 249, "00936": 249, "3501": 249, "3510": 249, "masetto": 249, "237": 249, "00237": 249, "neurotrauma": 249, "1632": 249, "1089": 249, "6065": 249, "negrello": 249, "e1005754": 249, "1005754": 249, "e1004641": 249, "1004641": 249, "suleimanova": 249, "talanov": 249, "gafurov": 249, "gafarov": 249, "koroleva": 249, "virenqu": 249, "noe": 249, "mikhailov": 249, "nistri": 249, "giniatullin": 249, "immun": 249, "ht": 249, "mening": 249, "00135": 249, "maagdenberg": 249, "644047": 249, "sotayo": 249, "e04551": 249, "04551": 249, "2955": 249, "2973": 249, "00562": 249, "dietrich": 249, "ng2": 249, "00255": 249, "00226": 249, "peskin": 249, "tranchina": 249, "2593": 249, "2607": 249, "625": 249, "hilliard": 249, "tatter": 249, "1559": 249, "michaluk": 249, "homer": 249, "mglur": [249, 286], "niu": 249, "sharpen": 249, "1845": 249, "neill": 249, "4047": 249, "4062": 249, "jp279744": 249, "szalisznyo": 249, "duffau": 249, "smit": 249, "glioma": 249, "e69798": 249, "0069798": 249, "szegedi": 249, "paiz": 249, "baka": 249, "barz\u00f3": 249, "moln\u00e1r": 249, "tama": 249, "51691": 249, "szoboszlai": 249, "vervaek": 249, "1043": 249, "tajarenejad": 249, "ansari": 249, "yazdanfar": 249, "hamidi": 249, "thermoplasmon": 249, "hexagon": 249, "6013": 249, "6023": 249, "boe": 249, "438593": 249, "kawasaki": 249, "sato": 249, "matsumoto": 249, "saito": 249, "nakao": 249, "kaga": 249, "569": 249, "multipoint": 249, "ecj": 249, "10064": 249, "shiraishi": 249, "tal": 249, "bickel": 249, "leukhin": 249, "toschev": 249, "lavrov": 249, "bionanosci": 249, "649": 249, "s12668": 249, "00743": 249, "nakamura": 249, "e0226028": 249, "0226028": 249, "bartel": 249, "298": 249, "5573": 249, "5586": 249, "mittman": 249, "979": 249, "tejada": 249, "arisi": 249, "cairasco": 249, "epilepticu": 249, "e40726": 249, "0040726": 249, "newborn": 249, "e1003601": 249, "1003601": 249, "106841": 249, "yebeh": 249, "telenczuk": 249, "108871": 249, "tele\u0144czuk": 249, "0068": 249, "e0175362": 249, "0175362": 249, "jp279452": 249, "uncertainpi": 249, "connolli": 249, "endovascular": 249, "026011": 249, "zitella": 249, "tesfayesu": 249, "s157": 249, "s167": 249, "carbamazepin": 249, "phenytoin": 249, "12172": 249, "696": 249, "ranjith": 249, "arun": 249, "thome": 249, "yanez": 249, "engelhardt": 249, "draguhn": 249, "1418": 249, "201912442": 249, "1193": 249, "1215": 249, "thorbergsson": 249, "garwicz": 249, "schouenborg": 249, "3380": 249, "3383": 249, "6346690": 249, "e93779": 249, "0093779": 249, "thurbon": 249, "hofstett": 249, "2485": 249, "2502": 249, "tiesinga": 249, "jose": 249, "carbachol": 249, "tiganj": 249, "chevalli": 249, "monacelli": 249, "00009": 249, "b\u00f6rjesson": 249, "lundberg": 249, "elind": 249, "dampen": 249, "polyunsatur": 249, "fatti": 249, "e44388": 249, "0044388": 249, "hoberg": 249, "br\u00f8nnum": 249, "vittinghu": 249, "frahm": 249, "883": 249, "22061": 249, "obreja": 249, "schmelz": 249, "00777": 249, "tikidji": 249, "hamburyan": 249, "0464": 249, "leonik": 249, "strongli": 249, "00728": 249, "15682": 249, "15695": 249, "narayana": 249, "bozku": 249, "ghazawi": 249, "00046": 249, "josi": 249, "democrat": 249, "0075": 249, "1058": 249, "vesicular": 249, "disloc": 249, "00239": 249, "tinglei": 249, "1229": 249, "rout": 249, "subcort": 249, "septum": 249, "00147": 249, "tobin": 249, "e24838": 249, "24838": 249, "negahbani": 249, "fr\u00f6hlich": 249, "1029": 249, "00541": 249, "tominaga": 249, "ichikawa": 249, "tomko": 249, "7615": 249, "87002": 249, "jedli\u010dka": 249, "be\u0148u\u0161kov\u00e1": 249, "tomsett": 249, "ainsworth": 249, "thiel": 249, "sanayei": 249, "gieselmann": 249, "2333": 249, "2353": 249, "0793": 249, "toporikova": 249, "chacron": 249, "2287": 249, "wright": 249, "burster": 249, "711": 249, "0340": 249, "e1002580": 249, "1002580": 249, "00128": 249, "e1000932": 249, "1000932": 249, "13490": 249, "13495": 249, "toth": 249, "chebyshev": 249, "traboulsi": 249, "chevali": 249, "quignard": 249, "zinc": 249, "kupfer": 249, "fluoxetin": 249, "metabolit": 249, "norfluoxetin": 249, "1963": 249, "1968": 249, "ranta": 249, "cam": 249, "loui": 249, "dorr": 249, "00735": 249, "118953": 249, "minh": 249, "837": 249, "850": 249, "trapani": 249, "antonietti": 249, "9441383": 249, "trayn": 249, "zrenner": 249, "pbr": 249, "protti": 249, "e53357": 249, "0053357": 249, "14357": 249, "jointli": 249, "tsanov": 249, "chah": 249, "noor": 249, "egan": 249, "aggleton": 249, "erichsen": 249, "vann": 249, "mara": 249, "2316": 249, "00583": 249, "1076": 249, "2834": 249, "2845": 249, "tscherter": 249, "ivanova": 249, "markedli": 249, "1707": 249, "1724": 249, "203836": 249, "tseng": 249, "7165": 249, "7173": 249, "tsuchitani": 249, "tsutsui": 249, "oka": 249, "14519": 249, "14531": 249, "1251": 249, "tumulti": 249, "royster": 249, "columnar": 249, "022408": 249, "hare": 249, "priestlei": 249, "grosmark": 249, "ladow": 249, "zemelman": 249, "vasoact": 249, "intestin": 249, "polypeptid": 249, "tyurikova": 249, "mchugh": 249, "24150": 249, "dogma": 249, "3664": 249, "11537": 249, "uebach": 249, "dickhof": 249, "anticonvuls": 249, "8489": 249, "8501": 249, "1534": 249, "uhlirova": 249, "k\u0131l\u0131\u00e7": 249, "thunemann": 249, "saisan": 249, "sakad\u017ei\u0107": 249, "weldi": 249, "razoux": 249, "vandenbergh": 249, "ferri": 249, "nizar": 249, "sridhar": 249, "steed": 249, "abashin": 249, "fainman": 249, "masliah": 249, "boa": 249, "kleinfeld": 249, "buxton": 249, "e14315": 249, "14315": 249, "ujfalussi": 249, "multiplex": 249, "ullman": 249, "crete": 249, "kuroda": 249, "5024": 249, "5028": 249, "vabnick": 249, "risal": 249, "aberr": 249, "747": 249, "valent": 249, "romei": 249, "fadda": 249, "sterlini": 249, "fruscion": 249, "castroflorio": 249, "michetti": 249, "giansant": 249, "zara": 249, "corradi": 249, "fassio": 249, "prrt2": 249, "2033": 249, "bhy079": 249, "steen": 249, "tarnaud": 249, "holen": 249, "cathod": 249, "3287": 249, "2982271": 249, "varela": 249, "christianson": 249, "maier": 249, "12848": 249, "12853": 249, "2669": 249, "vasilkov": 249, "138104": 249, "physrevlett": 249, "vazquez": 249, "mendez": 249, "velden": 249, "hooft": 249, "chameau": 249, "ht3a": 249, "1521": 249, "1528": 249, "00829": 249, "velet": 249, "babic": 249, "balasingham": 249, "2129": 249, "2143": 249, "nonspik": 249, "rabbit": 249, "venkadesh": 249, "hamilton": 249, "e1007462": 249, "1007462": 249, "sanhueza": 249, "e85826": 249, "0085826": 249, "e1008087": 249, "1008087": 249, "verma": 249, "mudg": 249, "trevathan": 249, "shoffstal": 249, "dalrympl": 249, "796042": 249, "3305": 249, "3322": 249, "451": 249, "1624": 249, "1628": 249, "1215101": 249, "vetter": 249, "926": 249, "937": 249, "vierl": 249, "claassen": 249, "cardin": 249, "fnhum": 249, "00198": 249, "appps1": 249, "668948": 249, "fnagi": 249, "vitko": 249, "4844": 249, "4855": 249, "denerv": 249, "organotyp": 249, "e32883": 249, "0032883": 249, "vladimirov": 249, "tu": 249, "3435": 249, "3447": 249, "12342": 249, "vlasit": 249, "gainer": 249, "feller": 249, "volk": 249, "hume": 249, "shelburn": 249, "fitzpatrick": 249, "neuromusculoskelet": 249, "22983": 249, "02298": 249, "3250": 249, "00260": 249, "2646": 249, "2681": 249, "neco_a_00491": 249, "0515": 249, "perinod": 249, "swell": 249, "1003": 249, "00912": 249, "vyleta": 249, "loos": [249, 371], "665": 249, "1244811": 249, "se\u00e1\u00f1ez": 249, "caban": 249, "pirondini": 249, "vat": 249, "heimgartn": 249, "fodor": 249, "watrin": 249, "seguin": 249, "paol": 249, "keybu": 249, "schurch": 249, "pralong": 249, "becc": 249, "carda": 249, "zitzewitz": 249, "0649": 249, "walckier": 249, "thiran": 249, "monopolar": 249, "walsh": 249, "landman": 249, "hugh": 249, "026003": 249, "aa8b7c": 249, "sabottk": 249, "7674": 249, "7688": 249, "3165": 249, "1183108": 249, "mckinnon": 249, "prevertebr": 249, "paravertebr": 249, "ju": 249, "01616412": 249, "1110304": 249, "enjieu": 249, "kadji": 249, "kawashima": 249, "1807": 249, "1852": 249, "neco_a_00458": 249, "ipsilater": 249, "0300": 249, "delgutt": 249, "itd": 249, "00450": 249, "ou": 249, "3969": 249, "issn": 249, "1673": 249, "5374": 249, "s12264": 249, "isnn": 249, "zurada": 249, "yin": 249, "675": 249, "678": 249, "toprani": 249, "mitochondri": 249, "clearanc": 249, "secretori": 249, "ogura": 249, "8366": 249, "8371": 249, "oda": 249, "hindbrain": 249, "0249": 249, "8267": 249, "8277": 249, "jester": 249, "607": 249, "618": 249, "e11": 249, "0040011": 249, "eor": 249, "eigenanalysi": 249, "015013": 249, "wefelmey": 249, "9757": 249, "9762": 249, "1502902112": 249, "wehr": 249, "nature02116": 249, "planar": 249, "weidel": 249, "duart": 249, "music": 249, "00031": 249, "weissler": 249, "farah": 249, "shoham": 249, "photo": 249, "aa7805": 249, "weisz": 249, "glowatzki": 249, "2373": 249, "3428": 249, "weldai": 249, "shlifer": 249, "16157": 249, "16176": 249, "0712": 249, "weli": 249, "subiculum": 249, "1525": 249, "1594": 249, "01224": 249, "021902": 249, "120602": 249, "0436": 249, "wetmor": 249, "mukamel": 249, "schnitzer": 249, "2328": 249, "2347": 249, "wilj": 249, "biehl": 249, "keijzer": 249, "epithelium": 249, "despenza": 249, "luikart": 249, "hyperact": 249, "pten": 249, "943": 249, "wilm": 249, "schleimer": 249, "1032": 249, "13326": 249, "e1004768": 249, "1004768": 249, "mitchel": 249, "scaf": 249, "leaw": 249, "cromer": 249, "lerch": 249, "2661": 249, "2671": 249, "jci42219": 249, "weis": 249, "betaiv": 249, "spectrin": 249, "677": 249, "winograd": 249, "vive": 249, "7303": 249, "winslow": 249, "jou": 249, "wojtowicz": 249, "ledford": 249, "3138": 249, "3149": 249, "3110": 249, "wissmann": 249, "bildl": 249, "beyermann": 249, "kalbitz": 249, "bentrop": 249, "fakler": 249, "tandem": 249, "16142": 249, "16150": 249, "wittmeier": 249, "duffin": 249, "poon": 249, "handshak": 249, "18000": 249, "18005": 249, "wlodarczyk": 249, "doronin": 249, "00205": 249, "sz\u00e9keli": 249, "1021": 249, "benoit": 249, "marand": 249, "9080": 249, "9095": 249, "1767": 249, "billup": 249, "4868": 249, "4877": 249, "wongsarnpigoon": 249, "046009": 249, "woock": 249, "2047610": 249, "445601": 249, "8121": 249, "ac2a54": 249, "swindlehurst": 249, "dsp": 249, "271": 249, "kao": 249, "lo": [249, 286], "inwardli": 249, "kaohsiung": 249, "kjm": 249, "0585": 249, "wulff": 249, "ponomarenko": 249, "korotkova": 249, "bahner": 249, "wisden": 249, "3566": 249, "ellenberg": 249, "60936": 249, "boccalini": 249, "2587": 249, "neco_a_00788": 249, "0568": 249, "1759": 249, "1773": 249, "074": 249, "xiang": 249, "zhong": 249, "qin": 249, "noninvas": 249, "e0218293": 249, "0218293": 249, "xiumin": 249, "9252": 249, "cavied": 249, "quero": 249, "aguirr": 249, "cascad": 249, "wrachtrup": 249, "wavelet": 249, "spin": 249, "932016": 249, "xylouri": 249, "00094": 249, "yaeger": 249, "4741": 249, "4750": 249, "eabh0024": 249, "abh0024": 249, "okuda": 249, "3927": 249, "3938": 249, "2377": 249, "yamasaki": 249, "isokawa": 249, "ikeno": 249, "kanzaki": 249, "yamashita": 249, "sundaram": 249, "uchida": 249, "matsuo": 249, "ourep": 249, "photoelectr": 249, "polyethylen": 249, "abf892": 249, "blockad": 249, "046020": 249, "aac315": 249, "stephen": 249, "raja": 249, "aplin": 249, "fridman": 249, "eaaq1438": 249, "aaq1438": 249, "murrai": 249, "disinhibitori": 249, "12815": 249, "ncomms12815": 249, "pierr": 249, "clandinin": 249, "031": 249, "mazza": 249, "prevot": 249, "griffith": 249, "tripathi": 249, "sibil": 249, "110232": 249, "isopotenti": 249, "yau": 249, "flufenam": 249, "3869": 249, "3882": 249, "193037": 249, "13591": 249, "93114": 249, "17344": 249, "01221": 249, "056001": 249, "aacbff": 249, "6940": 249, "43460": 249, "e1007766": 249, "1007766": 249, "3056": 249, "3009293": 249, "che": 249, "3457": 249, "3471": 249, "2906114": 249, "3210": 249, "03547": 249, "yildirim": 249, "ozcan": 249, "turhan": 249, "kayikcioglu": 249, "friendli": [249, 371, 382], "congress": 249, "tiptekno": 249, "8596865": 249, "22373": 249, "ht1a": 249, "bhv245": 249, "yoo": 249, "canin": 249, "multicontact": 249, "flat": 249, "1163": 249, "s10103": 249, "stegen": 249, "veh": 249, "4213": 249, "4233": 249, "170746": 249, "belbut": 249, "baeta": 249, "petreanu": 249, "59551": 249, "lilli": 249, "denham": 249, "588881": 249, "2894410": 249, "2977": 249, "2980": 249, "8856799": 249, "1746": 249, "00891": 249, "swietek": 249, "4229": 249, "4314": 249, "bhv199": 249, "s13408": 249, "0017": 249, "397897": 249, "e1003014": 249, "1003014": 249, "unbalanc": 249, "13701": 249, "13713": 249, "1834": 249, "7260": 249, "zachari": 249, "dissanayak": 249, "owen": 249, "mason": 249, "zacksenhous": 249, "lso": 249, "3098": 249, "4715": 249, "1291": 249, "zaika": 249, "lara": 249, "hilgemann": 249, "shapiro": 249, "angiotensin": 249, "phosphatidylinositol": 249, "bisphosph": 249, "tolstykh": 249, "triphosph": [249, 371], "purinerg": 249, "p2y": 249, "8914": 249, "8926": 249, "036019": 249, "ab8fc4": 249, "kowalski": 249, "dimarco": 249, "13415": 249, "3410": 249, "zang": 249, "dieudonn\u00e9": 249, "1549": 249, "60692": 249, "resili": 249, "2105795118": 249, "inglebert": 249, "guignon": 249, "russier": 249, "eaay4313": 249, "aay4313": 249, "bias": 249, "zeldenrust": 249, "e1005960": 249, "1005960": 249, "zelechowski": 249, "00657": 249, "macewan": 249, "026009": 249, "aa9e96": 249, "612937": 249, "zenk": 249, "00076": 249, "zerlaut": 249, "e1005452": 249, "1005452": 249, "regim": 249, "3791": 249, "3808": 249, "jp272317": 249, "5460": 249, "5469": 249, "6220": 249, "fictiv": 249, "00763": 249, "066009": 249, "janik": 249, "00254": 249, "tongu": 249, "069": 249, "agarw": 249, "1035": 249, "s11071": 249, "hancock": 249, "e1009609": 249, "1009609": 249, "zhan": 249, "morphologci": 249, "00091": 249, "13592": 249, "13601": 249, "1817689116": 249, "1225": 249, "109125": 249, "e25382": 249, "25382": 249, "cragg": 249, "rectif": 249, "918": 249, "siri": 249, "pierc": 249, "rectum": 249, "bioengineering7040152": 249, "yuan": 249, "ginti": 249, "00010": 249, "chu": 249, "zhen": 249, "skf83959": 249, "pharmacologica": 249, "sinica": 249, "carnei": 249, "3046": 249, "ild": 249, "2355": 249, "2371": 249, "xue": 249, "702": 249, "1999a": 249, "1445": 249, "1999b": 249, "1999c": 249, "00250": 249, "zhuchkova": 249, "e78908": 249, "0078908": 249, "zhukov": 249, "kazakova": 249, "maksimov": 249, "ziegler": 249, "hosseini": 249, "varnamkhasti": 249, "corkin": 249, "912": 249, "zippo": 249, "biella": 249, "11543": 249, "srep11543": 249, "mohsenian": 249, "pahwa": 249, "gloeckner": 249, "pedunculopontin": 249, "045005": 249, "yager": 249, "hudson": 249, "brintz": 249, "pptg": 249, "blaich": 249, "rottmann": 249, "romanelli": 249, "urbano": 249, "hcn4": 249, "2291": 249, "2304": 249, "bhz047": 249, "heuermann": 249, "trip8b": 249, "1564": 249, "zomorrodi": 249, "ferecsko": 249, "kroeger": 249, "ventroposterolater": 249, "3541": 249, "3556": 249, "22413": 249, "bornat": 249, "saighi": 249, "renaud": 249, "zsiro": 249, "heidari": 249, "farina": 249, "nazarpour": 249, "magnetomyographi": 249, "2000185": 249, "admt": 249, "202000185": 249, "amaro": 249, "leung": 249, "zybura": 249, "baucum": 249, "rush": 249, "11845": 249, "11865": 249, "ra120": 249, "014062": 249, "e1002319": 249, "1002319": 249, "2656": 249, "3107": 249, "00085": 249, "freg": 258, "maxit": 258, "neuron_vector": 260, "add_recurs": 262, "nrn_option": 262, "3000": 262, "legacyi": 262, "codata2018": [262, 318, 349], "legacyn": 262, "nrnunits_modern": 262, "hname": [269, 289, 297, 382, 388], "node1d": [269, 286], "node3d": [269, 286], "nodeextracellular": [269, 286], "sbml": [269, 329], "lem": 271, "_ref_amp1": 276, "11g": 276, "9151": 276, "9987": 276, "57284e": 276, "08992e": 276, "2522": 276, "9181": 276, "9175": 276, "299966": 276, "28846": 276, "2775": 276, "299999": 276, "299544": 276, "8707": 276, "0352": 276, "0258": 276, "299976": 276, "8703": 276, "8677": 276, "299835": 276, "9246": 276, "8698": 276, "53006e": 276, "0116979": 276, "944": 276, "9218": 276, "88827e": 276, "000592712": 276, "5089": 276, "91897e": 276, "48624e": 276, "1456": 276, "4464": 276, "60753e": 276, "12119e": 276, "5259": 276, "0795": 276, "15519e": 276, "25541e": 276, "5135": 276, "4695": 276, "13443e": 276, "92656e": 276, "4725": 276, "47428e": 276, "86879e": 276, "3834": 276, "0853": 276, "29392e": 276, "51288e": 276, "4093": 276, "57826e": 276, "50748e": 276, "34836e": 276, "94783e": 276, "9618": 276, "2582": 276, "82874e": 276, "71847e": 276, "ncout": 276, "30m": 276, "ns2": 276, "nctrig": 276, "fake_output": 276, "spikeout": 276, "incom": 276, "tsp": 276, "fake_fir": 276, "my_cel": [276, 289, 382, 383], "e_stim": 276, "stim_tim": 276, "output_tim": 276, "stim_times_nc": 276, "output_times_nc": 276, "set_ytick": 276, "set_yticklabel": 276, "nstimuli": 276, "nevent": 276, "set_xlim": 276, "set_xlabel": [276, 383], "playground": [276, 367, 369, 370, 372, 373, 378], "gnabarh": 276, "nlayer_extracellular": [276, 388], "extcelln": 276, "mech1": [277, 278], "mech2": [277, 278], "_ref_nrnvar": 277, "_ref_ach_releas": [277, 278], "trpe": [277, 278], "discover": 277, "noop": 279, "py_cal": [279, 282, 298, 307, 349, 355, 362], "nameref": [279, 328], "mtype": 279, "file_nam": 279, "code_str": 279, "mpiabort_on_error": [280, 283, 294], "mpi_init": [280, 283], "py_allgath": [280, 283], "py_gath": [280, 283], "py_scatt": [280, 283], "py_broadcast": [280, 283], "nrncore_writ": [280, 283], "nrncore_run": [280, 283], "preseg": [280, 282], "postseg": [280, 282], "source_ref_v": 282, "1or0": 282, "183098861837907": 282, "bullet": 283, "single_run": 283, "myscript": 283, "neuron_init_mpi": 283, "testmpi": [283, 385], "oldflag": 283, "newflag": 283, "mpi_abort": [283, 294], "cleanli": [283, 289], "_ref_gnabar": 283, "intial": 283, "varialbl": 283, "beforehand": 283, "hoctoplevelinterpret": 283, "parcon": 283, "srcitem": 283, "gcd480afb": 283, "cd480afb": 283, "destlist_on_root": 283, "destitem_from_root": 283, "destitem": 283, "pyalltoal": 283, "requested_subworld_s": 283, "interleav": 283, "interspers": 283, "_ref_nsend": 283, "_ref_nrecv": 283, "_ref_nrecv_us": 283, "_ref_target_vari": 283, "append_files_dat": 283, "bbcore_mech": 283, "pointtyp": 283, "is_ion": [283, 388], "param_s": 283, "dparam_s": 283, "charge_if_ion": 283, "byteswap": 283, "endian": 283, "gidgroup": 283, "_1": 283, "_2": 283, "typcial": 283, "submodel": 283, "n_gidgroup": 283, "teardown": 283, "test_submodel": 283, "argstr": 283, "nrncore_arg": 283, "split_at": 284, "host_split_at": 284, "area_per_vol": 286, "perim_per_area": 286, "volume_fract": [286, 370, 375], "surface_fract": [286, 371], "neighbor_areas_fract": 286, "cross_area": 286, "surface_area": [286, 368], "on_cell_surfac": 286, "xlo": [286, 375], "ylo": [286, 375], "zlo": [286, 375], "xhi": [286, 375], "yhi": [286, 375], "zhi": [286, 375], "neumann": [286, 375], "obstacl": [286, 375], "ecs_boundary_condit": [286, 375], "magnesium": 286, "ontologi": 286, "substanc": [286, 371, 378], "bioport": 286, "er_calcium": 286, "nodes_on_dend": 286, "nodes_on_dend_cent": 286, "defined_on_region": 286, "region_list": 286, "represd": 286, "h2o": 286, "dimer": 286, "decompos": 286, "ext": 286, "mass_act": 286, "menten": [286, 368], "diamer": 286, "f_rate": [286, 368], "b_rate": 286, "degradation_switch": [286, 287, 378], "_ref_valu": [286, 375], "include_flux": 286, "value_to_grid": 286, "volumetr": 286, "0x0x0": 286, "mmol": 286, "millimol": 286, "ip3flux": 286, "_ref_ip3flux": 286, "metabotrop": 286, "rxdsection": 286, "_ref_molecul": 286, "mem": 286, "24458654944007166": 286, "n_gate": 286, "nsubseg": 286, "underestim": 286, "model_nam": 286, "save_st": 286, "restore_st": 286, "metadata": [286, 379], "gzip": 286, "compresss": 286, "compris": [287, 379], "quadrant": 287, "expr_with_sign": 287, "expr_to_get_sign": 287, "\u03c0": 287, "gauss": 287, "h\u00f4pital": 287, "_ref_triggervar": 288, "_ref_triggerthresh": 288, "methog": 288, "dict": [288, 387], "repr": 289, "itertool": 289, "_id": 289, "__repr__": [289, 382, 383, 384, 388], "s_": 289, "dend1": [289, 362], "dend2": [289, 362], "dend3": 289, "dend4": 289, "dend5": 289, "dend7": 289, "interp": 290, "allseg": [290, 337, 346, 362, 388], "4555": 290, "30934771": 290, "30279180612": 290, "7382": 290, "74273594": 290, "418069266033": 290, "115277459913": 290, "1761242": 290, "175549154338": 290, "0602716944253": 290, "6095124": 290, "0972361172657": 290, "0369644228403": 290, "15865": 290, "0429006": 290, "0619274567534": 290, "0249630339131": 290, "18692": 290, "4762889": 290, "0429453733627": 290, "0179823394497": 290, "21519": 290, "9096771": 290, "0315498128871": 290, "0135674734374": 290, "24347": 290, "3430653": 290, "0241667620512": 290, "0105992886138": 290, "27174": 290, "7764536": 290, "0191076887925": 290, "00850840017866": 290, "30002": 290, "2098418": 290, "0154886887932": 290, "00698028861454": 290, "setup_diam": 290, "print_stat": 290, "__main__": [290, 307, 382, 387], "zvec": 290, "_ref_z": 290, "segment1": 290, "segment2": 290, "diam_change_cnt": [290, 346], "python_iterable_of_sect": 291, "py_list": 291, "neccessari": 291, "my_iclamp": 293, "num_pts_3d": 293, "soma_id": 293, "exec": 294, "bewar": 294, "obj_nam": 294, "strref": [296, 307, 328], "my_str": [296, 387], "flip_funct": 297, "on_button_press": 297, "neuron_array_ref": 297, "vb1": 297, "vb2": 297, "show_all_s": 297, "all_iclamp": 298, "my_list": [298, 337, 387], "label_with_length": 298, "item_id": 298, "on_click": 298, "snape": 301, "python_func": [302, 343], "resultptr": 303, "nmenu": 305, "imenu": 305, "mywindow": 307, "mystat": 307, "myval": 307, "statepress": 307, "checkboxpress": 307, "numberset": 307, "this_modul": 307, "__name__": 307, "mutlipl": 307, "on_press": 307, "button_id": 307, "on_press3": 307, "obj_or_modul": 307, "action_fn": 307, "button_st": 307, "selected1": 307, "selected2": 307, "item_select": 307, "immut": [307, 341, 346, 379, 387], "ref_var": 307, "show_val": 307, "on_slid": 307, "val_str": 307, "valuepanel": 307, "init_v": [307, 368], "_val": 307, "_bounds_check": 307, "__lower_limit": 307, "__upper_limit": 307, "setter": 307, "new_val": [307, 322], "gna_hh": [307, 388], "nameerror": 311, "attributeerror": 311, "squiggl": 311, "obp": 311, "banana": 311, "unabl": 313, "tempoari": 313, "temp_file_nam": 313, "dispos": 313, "strptr": 313, "_ref_str": 313, "dirnam": 313, "r_open": [316, 317], "w_open": 317, "96485": 318, "3321233100141": 318, "3144626181532395": 318, "avogadro_const": [318, 388], "02214076e23": 318, "octob": [318, 349], "filterwarn": 318, "4j": 320, "1000001": 321, "99999": 321, "99999613071850035": 321, "00000133288267534": 321, "00000432481465396": 321, "ignore_return": 322, "__future__": 322, "print_funct": 322, "_ref_base10expon": 322, "highindex_ptr": 323, "mcellran4test": 323, "mcell_func": 323, "resync": 323, "mcell_func2": 323, "count_to_1": 324, "__call__": [324, 388], "print_i": 324, "3g": [324, 382], "rv": [324, 325], "set_index_then_doit": 325, "51709661466": 325, "485175784418": 325, "212032709823": 325, "503178330905": 325, "114339664628": 325, "28075206782": 325, "0578608361212": 325, "26376087479": 325, "291156947261": 325, "21937205675": 325, "409557452659": 325, "_ref_var": [325, 334], "nmod": 326, "abbrevi": 326, "str_type": 326, "var_refer": 326, "pylab": 326, "inp": 326, "pvec": 326, "stim_i": 326, "_ref_ina": [326, 373], "numerical_truth_valu": 326, "_ref_px": 326, "do_run": [326, 334], "pointer1": 326, "pointer2": 326, "pointern": 326, "mygui": 326, "name_str": 328, "5d": 328, "get_mech_glob": 328, "mech_glob": 328, "py_callback": 328, "_ref_g": 328, "has_membran": [328, 388], "_in": 328, "name_mech": 328, "name_strref": 328, "valus": 334, "curstr": 334, "outdat": 336, "datafil": 336, "neuronpython": 337, "manipulatesd": 337, "__nrnsec_0x7fa44eb70000": 337, "tree_sec": 337, "my_sec": 337, "pplist": 337, "300000011921": 339, "9876537323": 339, "xsquiggl": 340, "ssf": 340, "cow": 341, "5fb6a5cbbdb7": 342, "perf_count": [342, 361], "hhsim": 344, "9943": 344, "9917": 344, "6876": 344, "9008": 344, "5015": 344, "2226": 344, "9284": 344, "8921": 344, "8901": 344, "3462": 344, "3559": 344, "1873": 344, "0331": 344, "9538": 344, "varref1": 344, "varref2": 344, "singleton": 346, "_for": 346, "_state": 346, "ptr_var": 346, "states_copi": 346, "_ref_maxacor": 346, "visit": 346, "assert_whole_model_charge_conserv": 346, "total_imem": 346, "total_iclamp_cur": 346, "trueparentseg": [346, 388], "structure_change_count": 346, "intcnt": 346, "structure_change_cnt": 346, "diam_change_count": 346, "recalc_diam": 346, "extra_scatter_gath": 346, "nonvint": 346, "hello1": 346, "cort_sec": 346, "corticalcel": 346, "hello2": 346, "recording_callback": 346, "extra_scatter_gather_remov": 346, "gatherv": 347, "makegathervec": 347, "vplai": 347, "makevectorplai": 347, "makevecwrap": 347, "overriden": 350, "myadvanc": 350, "myinit": [350, 353], "get_stat": 351, "file_obj": 351, "_ref_vari": 355, "_ref_cai": [355, 374], "num_el": 355, "_ref_dbl": 355, "crossact": 355, "crossact_vflag1": 355, "say_hi": 355, "on_ev": 355, "event_typ": 355, "fa": 359, "graphics_object": 361, "cmap": 361, "jet": 361, "apical_dendrit": 361, "_ref_varnam": 361, "start_seg": 362, "stop_seg": 362, "bokeh": [362, 368, 369, 372, 373, 382, 387], "my_func": 362, "graph_object": [362, 369, 373], "kwarg1": 362, "val1": 362, "linewidth": 362, "bg": 362, "line_width": [362, 382, 387, 388], "greppabl": 365, "sha": 365, "ni_pci_6229": 365, "rtai": 365, "pci": 365, "6229": 365, "c46dbc7": 365, "bglcheckpoint": 365, "bglcheckpointinit": 365, "74d3db9": 365, "1415": 365, "e9ef741": 365, "nrn_realtim": 365, "d5f6139": 365, "1802": 365, "2f90f37": 365, "1869": 365, "8fecd77": 365, "1919": 365, "a5c36e9": 365, "1937": 365, "5a67957": 365, "tinyurl": [367, 369, 370, 372, 373, 378], "_ref_ui": 367, "plot_it": [367, 368, 377], "ca_init": 367, "u0": 367, "plot_\u03b1": 367, "\u03b1_init": 367, "legend": [367, 372, 382, 383], "my_\u03b1": 367, "wherein": 368, "actor": 368, "nabla": 368, "cdot": [368, 378], "laplacian": 368, "cartesian": 368, "u_": 368, "yy": 368, "fick": 368, "apical1": 368, "apical2": 368, "2345e": 368, "rate_f": 368, "rate_b": 368, "irrevers": 368, "cacl2_react": 368, "cacl2": 368, "\u03bcm2": [368, 371, 382], "k_f": 368, "cacl_2": 368, "mich": 368, "enzymatic_react": 368, "vmax": [368, 375], "km": 368, "enzymat": 368, "stoichiometri": 368, "simulaten": 368, "ip3_degrad": 368, "ip_3": 368, "gleak": [368, 371], "cyt_er_membran": [368, 371], "num_nod": 368, "ly": 368, "advance_a_bit": 368, "955556": 368, "977778": 368, "0222222": 368, "915565": 368, "957783": 368, "0422175": 368, "075": [368, 382], "879356": 368, "939678": 368, "0603222": 368, "846386": 368, "923193": 368, "0768069": 368, "816217": 368, "908108": 368, "0918917": 368, "691965": 368, "845982": 368, "154018": 368, "602562": 368, "801281": 368, "198719": 368, "535061": 368, "76753": 368, "23247": 368, "482188": 368, "741094": 368, "258906": 368, "43957": 368, "719785": 368, "280215": 368, "u_t": 368, "my_initi": [368, 370, 377], "bistable_react": 368, "subregion": 369, "initial_protein": 369, "active_region_valu": 369, "in_region": 369, "production_r": 369, "add_trac": [369, 373], "advance_count": 369, "update_layout": 369, "xaxis_titl": 369, "yaxis_titl": 369, "notebook_connect": [369, 370, 373], "importantli": 370, "tradit": [370, 379, 380], "ec": [370, 375], "assing": 370, "cng": [370, 375], "8b1290d5c8ab748dd6251be5bd46a4e3794d742f": [370, 375], "55074": 370, "54k": 370, "78k": 370, "stamp": [370, 388], "mb": 370, "nutrient": 370, "my_initial2": 370, "sequestr": 371, "calbindin": 371, "travers": 371, "har": 371, "sarco": 371, "serca": 371, "ryanoin": 371, "ryr": 371, "simplic": [371, 379], "cicr": 371, "wtihin": 371, "cadiff": 371, "ip3diff": 371, "cac_init": 371, "0e": 371, "ip3_init": 371, "gip3r": 371, "12040": 371, "gserca": 371, "3913": 371, "kserca": 371, "kip3": 371, "kact": 371, "ip3rtau": 371, "fe": 371, "sequest": 371, "cacyt_init": 371, "apolog": 371, "leloup": 372, "goldbet": 372, "gonz": 372, "neurospora": 372, "074873099129000948": 372, "biomodel": 372, "ebi": 372, "biomd0000000298": 372, "repeteadli": 372, "declare_paramet": 372, "declare_speci": 372, "vsp": 372, "vmp": 372, "kmp": 372, "kip": 372, "ksp": 372, "vdp": 372, "kdp": 372, "vst": [372, 379], "vmt": 372, "kmt": 372, "kst": 372, "vdt": 372, "kdt": 372, "kdc": 372, "kdn": 372, "k3": 372, "k4": 372, "kd": 372, "v1p": 372, "v1t": 372, "v2p": 372, "v2t": 372, "v3p": 372, "v3t": 372, "v4p": 372, "v4t": 372, "k1p": 372, "k1t": 372, "k2p": 372, "k2t": 372, "k3p": 372, "k3t": 372, "k4p": 372, "k4t": 372, "protien": 372, "mp": 372, "0614368": 372, "0169928": 372, "0141356": 372, "0860342": 372, "0217261": 372, "0213384": 372, "0145428": 372, "207614": 372, "34728": 372, "mttranscript": 372, "mptranscript": 372, "mtdegrad": 372, "mpdegrad": 372, "t0product": 372, "t0degrad": 372, "t1degrad": 372, "t2degrad": 372, "t2degradation_due_to_light": 372, "t0tot1": 372, "t1tot2": 372, "p0product": 372, "p0degrad": 372, "p1degrad": 372, "p2degrad": 372, "p0top1": 372, "p1top2": 372, "p2t2toc": 372, "ctocn": 372, "cdegrad": 372, "cndegrad": 372, "mpvec": 372, "cnvec": 372, "p0vec": 372, "p1vec": 372, "p2vec": 372, "cvec": 372, "pt": 372, "t_in_hour": 372, "make_subplot": 373, "na_vec": 373, "_ref_nai": 373, "update_yax": 373, "title_text": 373, "update_xax": 373, "lond": 373, "1952": 373, "sw": 373, "march": 373, "ncit": 373, "c17145": 373, "c17008": 373, "29103": 373, "q10": 373, "ef": 374, "venter": 374, "d9k": 374, "calbindin_0": 374, "rightleftharpoon": 374, "calbindin_1": 374, "calbindin_": 374, "cab2uf": 374, "ca_vec": 374, "buf_vec": 374, "_ref_bufi": 374, "steady_k": 375, "steady_k_mod": 375, "skmod": 375, "writelin": 375, "urllib": 375, "urlretriev": 375, "httpmessag": 375, "0x7f41ac80e8f0": 375, "runner": 375, "mod_func": 375, "ldflag": 375, "wl": 375, "rpath": 375, "libcurs": 375, "libform": 375, "extrema": 375, "my_xlo": 375, "my_ylo": 375, "my_zlo": 375, "my_xhi": 375, "my_yhi": 375, "my_zhi": 375, "proof": 375, "dz": 375, "poros": 375, "states3d": 375, "runsim": 375, "min_conc": 375, "max_conc": 375, "imshow": 375, "vmin": 375, "set_data": 375, "funcanim": 375, "init_func": 375, "to_html5_video": 375, "kecs_vec0": 375, "node_by_loc": 375, "node_by_ijk": 375, "stated3d": 375, "kecs_vec1": 375, "t_vec": [375, 377], "concent": 375, "line2d": 375, "0x7f4176c685b0": 375, "dirichlet": 375, "3mm": 375, "0008": 375, "kth": 375, "bmax": 375, "ak": 375, "10\u03bcm": 375, "nd": 375, "faction": 375, "238892": 375, "edema": 375, "ip3i": 377, "8250000000000064": 377, "ip3_vec": 377, "_ref_ip3i": [377, 378], "max_ip3": 377, "25437182627374194": 377, "2103198308254167": 377, "2m": 378, "ip3_conc": 378, "undergon": 379, "wit": 379, "profound": 379, "profession": 379, "opportun": 379, "becam": 379, "streamlin": 379, "mileston": 379, "tracker": 379, "svn": 379, "linu": 379, "torvald": 379, "quota": 379, "compromis": 379, "traceabl": 379, "ancestor": 379, "dag": 379, "nowadai": 379, "plumb": 379, "porcelain": 379, "amend": 379, "disastr": 379, "planner": 379, "fork": 379, "parti": 379, "steroid": 379, "filesystem": 379, "rev": 379, "diagram": [379, 384], "alert": 379, "irrecover": 379, "worthless": 379, "unwant": 379, "shortcom": 379, "iss53": 379, "c5": 379, "meantim": 379, "c4": 379, "delic": 379, "c6": 379, "concis": 379, "nobodi": [379, 380], "hell": 379, "disadvantag": 379, "buggi": 379, "untest": 379, "retest": 379, "moreov": 379, "suffer": 379, "unmerg": 379, "openstack": 379, "gitcommitmessag": 379, "nr": 379, "crawl": 379, "gerrit": 379, "tidi": 379, "cleanup": 379, "fulfil": [379, 380], "advertis": 379, "ui": 379, "complianc": 379, "breviti": 379, "hyphen": 379, "compli": 379, "postn": 379, "devn": 379, "epoch": 379, "terminologi": 379, "1950": 379, "verif": 379, "manufactur": 379, "industri": 379, "everydai": 379, "proprietari": 379, "freez": 379, "assur": 379, "dev1": [379, 380], "8a": [379, 380], "0a2": [379, 380], "0b": [379, 380], "0b2": [379, 380], "0rc": [379, 380], "advoc": [379, 380], "hardcod": 379, "nrn_version": 379, "whom": 379, "bump": 379, "backport": [379, 380], "cherri": [379, 380], "gitlabflow": 379, "mainlin": 379, "favour": 379, "blog": 379, "hotfix": [379, 380], "devis": [379, 380], "lightweight": [379, 380], "contributor": [379, 380], "exception": [379, 380], "dont": [379, 380], "v8": [379, 380], "ploscompbiol": 379, "1004668": 379, "intro": 379, "1x5snleax4qplcc4qmamwdvra5qrsuo": 379, "yxxkjhszrppy": 379, "semver": 379, "0440": 379, "enacadem": 379, "dic": 379, "nsf": 379, "enwiki": 379, "141478": 379, "guru99": 379, "demystifi": 379, "patrickporto": 379, "30d0aaee7bf": 379, "nvie": 379, "ee": [379, 380], "oneflow": 379, "endoflineblog": 379, "bitsnbit": 379, "eu": 379, "devop": 379, "viewfallbackfrom": 379, "devblog": 379, "oldnewth": 379, "20180312": 379, "98215": 379, "14th": 379, "fernando": 379, "pep": [380, 381], "gitlab": [380, 381], "gitlab_flow": 380, "guidelin": 381, "squash": 381, "rebas": 381, "footnot": 381, "mutlicompart": 382, "ballandstick": [382, 383, 384, 385], "boilerpl": 382, "0x7f082a037c10": 382, "friendlier": 382, "my_other_cel": 382, "_gid": [382, 383, 384, 385], "wonder": [382, 385], "00296377255506": 382, "ell": 382, "axis3dwithneuron": 382, "gui2": [382, 388], "diamter": 382, "mayavi": 382, "farad": [382, 383, 384], "_setup_morphologi": [382, 383, 384], "_setup_biophys": [382, 383, 384], "weren": 382, "paramat": 382, "density_mech": [382, 388], "startswith": [382, 388], "hocobjptr": [382, 388], "soma_v": [382, 383, 384, 385], "output_notebook": [382, 387, 388], "bokehj": [382, 387, 388], "x_axis_label": [382, 387, 388], "y_axis_label": [382, 387, 388], "legend_label": 382, "dend_v": [382, 383], "reassign": 382, "line_dash": 382, "neglig": 382, "ill": 382, "nth": [383, 384, 385], "_set_posit": [383, 384], "_rotate_z": [383, 384], "xprime": [383, 384], "yprime": [383, 384], "create_n_ballandstick": [383, 384], "okai": 383, "acquaint": 383, "syn_": 383, "recording_cel": 383, "syn_i": 383, "ax1": 383, "add_subplot": 383, "soma_plot": 383, "dend_plot": 383, "rev_plot": 383, "set_ylabel": 383, "set_xtick": 383, "ax2": 383, "syn_plot": 383, "seemingli": 383, "spike_tim": [383, 384, 385], "spike_times_vec": 383, "925000000099914": 383, "55000000010134": 383, "17500000010875": 383, "450000000099543": 383, "075000000102825": 383, "70000000011024": 383, "975000000099172": 383, "60000000010431": 383, "22500000011172": 383, "5000000000988": 383, "12500000010579": 383, "7500000001132": 383, "02500000009986": 383, "65000000010727": 383, "timeseri": [384, 385], "_spike_detector": [384, 385], "_nc": [384, 385], "stim_w": [384, 385], "stim_delai": [384, 385], "syn_w": [384, 385], "syn_delai": [384, 385], "_syn_w": [384, 385], "_syn_delai": [384, 385], "_create_cel": [384, 385], "_connect_cel": [384, 385], "_netstim": [384, 385], "_cell": 384, "shape_window": 384, "steadili": 384, "succinct": 385, "resembl": 385, "claim": 385, "_n": 385, "set_gid": 385, "gidlist": 385, "robin": 385, "source_gid": 385, "test_ring1": 385, "cell_to_plot": 385, "shut": 385, "test_ring2": 385, "local_data": 385, "all_data": 385, "process_data": 385, "exhaust": 387, "my_nam": 387, "my_ag": 387, "greet": 387, "isinst": 387, "my_valid_var": 387, "6666666666666667": 387, "postsynaptic_cel": 387, "the_old_list": 387, "list_a": 387, "list_b": 387, "confusing_list": 387, "abc": 387, "cell_part": 387, "part_num": 387, "x_val": 387, "y_val": 387, "my_tupl": 387, "curli": 387, "about_m": 387, "eye_color": 387, "hair_color": 387, "print_hello": 387, "my_print": 387, "the_arg": 387, "fib": 387, "multi_line_str": 387, "method_nam": 387, "first_nam": 387, "last_nam": 387, "phone": 387, "print_info": 387, "bob": 387, "joe": 387, "the_nam": 387, "__dict__": 387, "__weakref__": 387, "my_vec": 387, "gave": 387, "16534698": 387, "33069396": 387, "49604095": 387, "66138793": 387, "82673491": 387, "99208189": 387, "15742887": 387, "32277585": 387, "48812284": 387, "65346982": 387, "8188168": 387, "98416378": 387, "14951076": 387, "31485774": 387, "48020473": 387, "64555171": 387, "81089869": 387, "97624567": 387, "14159265": 387, "trig": 387, "00000000e": 387, "64594590e": 387, "24699469e": 387, "75947393e": 387, "14212713e": 387, "35723911e": 387, "37166478e": 387, "15773327e": 387, "69400266e": 387, "96584493e": 387, "22464680e": 387, "wb": [387, 388], "pickle_fil": 387, "rb": [387, 388], "contacts2": 387, "elem": 387, "worksheet": 388, "__version__": 388, "avaiabl": 388, "pts3d": 388, "hoc_internal_nam": 388, "__nrnsec_0x561e8a495be0": 388, "membranc": 388, "__class__": 388, "__contains__": 388, "__delattr__": 388, "__dir__": 388, "__doc__": 388, "__eq__": 388, "__format__": 388, "__ge__": 388, "__getattribute__": 388, "__gt__": 388, "__hash__": 388, "__init_subclass__": 388, "__iter__": 388, "__le__": 388, "__lt__": 388, "__module__": 388, "__ne__": 388, "__new__": 388, "__reduce__": 388, "__reduce_ex__": 388, "__setattr__": 388, "__sizeof__": 388, "__subclasshook__": 388, "is_pysec": 388, "textwrap": 388, "oclamp": 388, "ppshape": 388, "pointprocessmark": 388, "singlechan": 388, "tqueue": 388, "__abs__": 388, "__bool__": 388, "__delitem__": 388, "__len__": 388, "__mul__": 388, "__neg__": 388, "__next__": 388, "__pos__": 388, "__radd__": 388, "__rmul__": 388, "__rsub__": 388, "__rtruediv__": 388, "__setitem__": 388, "__setstate__": 388, "__sub__": 388, "__truediv__": 388, "_pysec": 388, "coreneuron_handl": 388, "default_dll_loaded_": 388, "dik_dv_": 388, "dina_dv_": 388, "e_fastpa": 388, "eps_intfire4": 388, "fsyng": 388, "fsyni": 388, "g_fastpa": 388, "hinf_hh": 388, "htau_hh": 388, "i_pa": 388, "ib_intfire4": 388, "install_vector_fit": 388, "keep_nseg_parm": 388, "ki0_k_ion": 388, "ko0_k_ion": 388, "libpython_path": 388, "mtau_hh": 388, "ninf_hh": 388, "nrn_get_config_kei": 388, "nrn_get_config_v": 388, "nrn_mallinfo": 388, "nrn_netrec_state_adjust": 388, "nrn_num_config_kei": 388, "nrn_shape_changed_": 388, "nrn_sparse_partran": 388, "nrnallpointmenu": 388, "nrnallsectionmenu": 388, "nrniv_bind_thread": 388, "ntau_hh": 388, "setdata_featur": 388, "setdata_pa": 388, "taueps_intfire4": 388, "vtrap_hh": 388, "xopen_broadcast_": 388, "inquir": 388, "childsect": 388, "parentsect": 388, "childend": 388, "prefac": 388, "propert": 388, "var_mech": 388, "javascript": 388, "panda": [388, 393], "writerow": 388, "spreadsheet": 388, "tnew": 388, "vnew": 388, "canew": 388, "ecosystem": 388, "p9": 388, "read_csv": 388, "ggplot": 388, "wilkinson": 388, "ae": 388, "geom_path": 388, "tnewp": 388, "vnewp": 388, "old_list": 388, "5h16m": 389, "youtub": [390, 391, 392, 393], "playlist": [390, 392, 393], "tech": 391, "welcom": 391, "speaker": 392, "taught": 392, "weekli": 393, "alarm": 393, "sqlite3": 393, "efel": 393, "electrophi": 393, "prerecord": 393, "mymodel": 393, "2488": 393}, "objects": {"": [[148, 0, 1, "", "APCount"], [148, 0, 1, "", "AlphaSynapse"], [216, 0, 1, "", "BBSaveState"], [217, 0, 1, "", "CVode"], [168, 0, 1, "", "Deck"], [142, 0, 1, "", "Electrode"], [148, 0, 1, "", "Exp2Syn"], [148, 0, 1, "", "ExpSyn"], [220, 0, 1, "", "FInitializeHandler"], [184, 0, 1, "", "File"], [192, 0, 1, "", "GUIMath"], [225, 0, 1, "", "Glyph"], [226, 0, 1, "", "Graph"], [168, 0, 1, "", "HBox"], [148, 0, 1, "", "IClamp"], [131, 0, 1, "", "Impedance"], [148, 0, 1, "", "IntFire1"], [148, 0, 1, "", "IntFire2"], [148, 0, 1, "", "IntFire4"], [145, 0, 1, "", "KSChan"], [145, 0, 1, "", "KSGate"], [145, 0, 1, "", "KSState"], [145, 0, 1, "", "KSTrans"], [161, 2, 1, "", "L"], [146, 0, 1, "", "LinearMechanism"], [169, 0, 1, "", "List"], [193, 0, 1, "", "Matrix"], [199, 0, 1, "", "MechanismStandard"], [151, 0, 1, "", "MechanismType"], [154, 0, 1, "", "NetCon"], [148, 0, 1, "", "NetStim"], [172, 0, 1, "", "PWManager"], [155, 0, 1, "", "ParallelContext"], [156, 0, 1, "", "ParallelNetManager"], [232, 0, 1, "", "PlotShape"], [204, 0, 1, "", "Pointer"], [205, 0, 1, "", "PtrVector"], [208, 0, 1, "", "PythonObject"], [161, 2, 1, "", "Ra"], [196, 0, 1, "", "Random"], [233, 0, 1, "", "RangeVarPlot"], [148, 0, 1, "", "SEClamp"], [222, 0, 1, "", "SaveState"], [173, 0, 1, "", "SectionBrowser"], [162, 0, 1, "", "SectionList"], [163, 0, 1, "", "SectionRef"], [234, 0, 1, "", "Shape"], [159, 0, 1, "", "StateTransitionEvent"], [211, 0, 1, "", "StringFunctions"], [174, 0, 1, "", "SymChooser"], [175, 0, 1, "", "TextEditor"], [214, 0, 1, "", "Timer"], [168, 0, 1, "", "VBox"], [148, 0, 1, "", "VClamp"], [177, 0, 1, "", "ValueFieldEditor"], [197, 0, 1, "", "Vector"], [213, 3, 1, "", "WinExec"], [191, 3, 1, "", "abs"], [182, 3, 1, "", "allobjects"], [182, 3, 1, "", "allobjectvars"], [161, 3, 1, "", "arc3d"], [161, 3, 1, "", "area"], [181, 3, 1, "", "argtype"], [191, 3, 1, "", "atan"], [191, 3, 1, "", "atan2"], [133, 3, 1, "", "attr_praxis"], [230, 3, 1, "", "axis"], [215, 3, 1, "", "batch_run"], [215, 3, 1, "", "batch_save"], [167, 3, 1, "", "boolean_dialog"], [220, 2, 1, "", "celsius"], [213, 3, 1, "", "chdir"], [220, 3, 1, "", "checkpoint"], [220, 2, 1, "", "clamp_resist"], [167, 3, 1, "", "continue_dialog"], [166, 3, 1, "", "coredump_on_error"], [191, 3, 1, "", "cos"], [161, 3, 1, "", "define_shape"], [160, 3, 1, "", "delete_section"], [161, 2, 1, "", "diam"], [161, 3, 1, "", "diam3d"], [161, 2, 1, "", "diam_changed"], [160, 3, 1, "", "disconnect"], [161, 3, 1, "", "distance"], [229, 3, 1, "", "doEvents"], [229, 3, 1, "", "doNotify"], [220, 2, 1, "", "dt"], [190, 3, 1, "", "eqinit"], [191, 3, 1, "", "erf"], [191, 3, 1, "", "erfc"], [166, 3, 1, "", "execerror"], [165, 3, 1, "", "execute"], [165, 3, 1, "", "execute1"], [191, 3, 1, "", "exp"], [220, 3, 1, "", "fadvance"], [157, 3, 1, "", "fclamp"], [157, 3, 1, "", "fclampi"], [157, 3, 1, "", "fclampv"], [220, 3, 1, "", "fcurrent"], [220, 3, 1, "", "finitialize"], [133, 3, 1, "", "fit_praxis"], [195, 2, 1, "", "float_epsilon"], [220, 3, 1, "", "fmatrix"], [176, 3, 1, "", "fmenu"], [188, 3, 1, "", "fprint"], [220, 3, 1, "", "frecord_init"], [187, 3, 1, "", "fscan"], [157, 3, 1, "", "fstim"], [157, 3, 1, "", "fstimi"], [161, 3, 1, "", "getSpineArea"], [213, 3, 1, "", "getcwd"], [187, 3, 1, "", "getstr"], [132, 3, 1, "", "ghk"], [230, 3, 1, "", "graph"], [230, 3, 1, "", "graphmode"], [206, 2, 1, "", "hoc_ac_"], [206, 2, 1, "", "hoc_cross_x_"], [206, 2, 1, "", "hoc_cross_y_"], [206, 2, 1, "", "hoc_obj_"], [182, 3, 1, "", "hoc_pointer_"], [186, 3, 1, "", "hoc_stdio"], [143, 3, 1, "", "hocmech"], [202, 3, 1, "", "init"], [220, 3, 1, "", "initnrn"], [191, 3, 1, "", "int"], [144, 3, 1, "", "ion_charge"], [144, 3, 1, "", "ion_register"], [144, 3, 1, "", "ion_style"], [160, 3, 1, "", "ismembrane"], [160, 3, 1, "", "issection"], [170, 3, 1, "", "ivoc_style"], [165, 3, 1, "", "load_file"], [165, 3, 1, "", "load_func"], [165, 3, 1, "", "load_proc"], [165, 3, 1, "", "load_template"], [191, 3, 1, "", "log"], [191, 3, 1, "", "log10"], [185, 3, 1, "", "lw"], [213, 3, 1, "", "machine_name"], [194, 3, 1, "", "mcell_ran4"], [194, 3, 1, "", "mcell_ran4_init"], [161, 3, 1, "", "n3d"], [182, 3, 1, "", "name_declared"], [132, 3, 1, "", "nernst"], [213, 3, 1, "", "neuronhome"], [166, 3, 1, "", "nrn_feenableexcept"], [213, 3, 1, "", "nrn_load_dll"], [171, 3, 1, "", "nrnglobalmechmenu"], [171, 3, 1, "", "nrnmechmenu"], [171, 3, 1, "", "nrnpointmenu"], [208, 3, 1, "", "nrnpython"], [171, 3, 1, "", "nrnsecmenu"], [213, 3, 1, "", "nrnversion"], [160, 2, 1, "", "nseg"], [181, 3, 1, "", "numarg"], [182, 3, 1, "", "object_id"], [182, 3, 1, "", "object_pop"], [182, 3, 1, "", "object_push"], [160, 3, 1, "", "parent_connection"], [160, 3, 1, "", "parent_node"], [160, 3, 1, "", "parent_section"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plotx"], [230, 3, 1, "", "ploty"], [230, 3, 1, "", "plt"], [164, 3, 1, "", "pop_section"], [223, 3, 1, "", "print_session"], [186, 3, 1, "", "printf"], [190, 3, 1, "", "prmat"], [157, 3, 1, "", "prstim"], [160, 3, 1, "", "psection"], [161, 3, 1, "", "pt3dadd"], [161, 3, 1, "", "pt3dchange"], [161, 3, 1, "", "pt3dclear"], [161, 3, 1, "", "pt3dconst"], [161, 3, 1, "", "pt3dinsert"], [161, 3, 1, "", "pt3dremove"], [161, 3, 1, "", "pt3dstyle"], [164, 3, 1, "", "push_section"], [133, 3, 1, "", "pval_praxis"], [170, 3, 1, "", "pwman_place"], [219, 3, 1, "", "quit"], [230, 3, 1, "", "regraph"], [219, 3, 1, "", "retrieveaudit"], [161, 3, 1, "", "ri"], [188, 3, 1, "", "ropen"], [223, 3, 1, "", "save_session"], [219, 3, 1, "", "saveaudit"], [160, 3, 1, "", "secname"], [220, 2, 1, "", "secondorder"], [160, 3, 1, "", "section_exists"], [160, 3, 1, "", "section_orientation"], [160, 3, 1, "", "section_owner"], [160, 3, 1, "", "sectionname"], [161, 3, 1, "", "setSpineArea"], [230, 3, 1, "", "setcolor"], [230, 3, 1, "", "settext"], [166, 3, 1, "", "show_errmess_always"], [213, 3, 1, "", "show_winio"], [191, 3, 1, "", "sin"], [190, 3, 1, "", "solve"], [161, 3, 1, "", "spine3d"], [212, 3, 1, "", "sprint"], [191, 3, 1, "", "sqrt"], [187, 3, 1, "", "sred"], [210, 3, 1, "", "sscanf"], [213, 3, 1, "", "startsw"], [133, 3, 1, "", "stop_praxis"], [220, 2, 1, "", "stoprun"], [213, 3, 1, "", "stopsw"], [212, 3, 1, "", "strcmp"], [167, 3, 1, "", "string_dialog"], [182, 3, 1, "", "symbols"], [213, 3, 1, "", "system"], [220, 2, 1, "", "t"], [191, 3, 1, "", "tanh"], [202, 2, 1, "", "this"], [203, 3, 1, "", "this_node"], [203, 3, 1, "", "this_section"], [160, 3, 1, "id0", "topology"], [178, 3, 1, "", "units"], [213, 3, 1, "", "unix_mac_pc"], [202, 3, 1, "", "unref"], [194, 3, 1, "", "use_mcell_ran4"], [170, 3, 1, "", "variable_domain"], [188, 3, 1, "", "wopen"], [161, 3, 1, "", "x3d"], [178, 3, 1, "", "xbutton"], [178, 3, 1, "", "xcheckbox"], [178, 3, 1, "", "xfixedvalue"], [178, 3, 1, "", "xlabel"], [178, 3, 1, "", "xmenu"], [188, 3, 1, "", "xopen"], [178, 3, 1, "", "xpanel"], [178, 3, 1, "", "xpvalue"], [178, 3, 1, "", "xradiobutton"], [187, 3, 1, "", "xred"], [178, 3, 1, "", "xslider"], [178, 3, 1, "", "xstatebutton"], [178, 3, 1, "", "xvalue"], [178, 3, 1, "", "xvarlabel"], [161, 3, 1, "", "y3d"], [161, 3, 1, "", "z3d"], [276, 4, 1, "", "APCount"], [276, 4, 1, "", "AlphaSynapse"], [345, 4, 1, "", "BBSaveState"], [346, 4, 1, "", "CVode"], [297, 4, 1, "", "Deck"], [270, 4, 1, "", "Electrode"], [276, 4, 1, "", "Exp2Syn"], [276, 4, 1, "", "ExpSyn"], [349, 4, 1, "", "FInitializeHandler"], [313, 4, 1, "", "File"], [321, 4, 1, "", "GUIMath"], [354, 4, 1, "", "Glyph"], [355, 4, 1, "", "Graph"], [297, 4, 1, "", "HBox"], [276, 4, 1, "", "IClamp"], [258, 4, 1, "", "Impedance"], [276, 4, 1, "", "IntFire1"], [276, 4, 1, "", "IntFire2"], [276, 4, 1, "", "IntFire4"], [273, 4, 1, "", "KSChan"], [273, 4, 1, "", "KSGate"], [273, 4, 1, "", "KSState"], [273, 4, 1, "", "KSTrans"], [290, 6, 1, "", "L"], [274, 4, 1, "", "LinearMechanism"], [298, 4, 1, "", "List"], [322, 4, 1, "", "Matrix"], [328, 4, 1, "", "MechanismStandard"], [279, 4, 1, "", "MechanismType"], [282, 4, 1, "", "NetCon"], [276, 4, 1, "", "NetStim"], [301, 4, 1, "", "PWManager"], [283, 4, 1, "", "ParallelContext"], [284, 4, 1, "", "ParallelNetManager"], [276, 4, 1, "", "PatternStim"], [361, 4, 1, "", "PlotShape"], [333, 4, 1, "", "Pointer"], [334, 4, 1, "", "PtrVector"], [337, 4, 1, "", "PythonObject"], [290, 6, 1, "", "Ra"], [325, 4, 1, "", "Random"], [362, 4, 1, "", "RangeVarPlot"], [276, 4, 1, "", "SEClamp"], [351, 4, 1, "", "SaveState"], [289, 4, 1, "", "Section"], [302, 4, 1, "", "SectionBrowser"], [291, 4, 1, "", "SectionList"], [292, 4, 1, "", "SectionRef"], [363, 4, 1, "", "Shape"], [288, 4, 1, "", "StateTransitionEvent"], [340, 4, 1, "", "StringFunctions"], [303, 4, 1, "", "SymChooser"], [304, 4, 1, "", "TextEditor"], [343, 4, 1, "", "Timer"], [297, 4, 1, "", "VBox"], [276, 4, 1, "", "VClamp"], [306, 4, 1, "", "ValueFieldEditor"], [326, 4, 1, "", "Vector"], [342, 8, 1, "", "WinExec"], [320, 8, 1, "", "abs"], [311, 8, 1, "", "allobjects"], [311, 8, 1, "", "allobjectvars"], [290, 8, 1, "", "arc3d"], [290, 8, 1, "", "area"], [310, 8, 1, "", "argtype"], [320, 8, 1, "", "atan"], [320, 8, 1, "", "atan2"], [260, 8, 1, "", "attr_praxis"], [359, 8, 1, "", "axis"], [344, 8, 1, "", "batch_run"], [344, 8, 1, "", "batch_save"], [296, 8, 1, "", "boolean_dialog"], [349, 6, 1, "", "celsius"], [342, 8, 1, "", "chdir"], [349, 8, 1, "", "checkpoint"], [349, 6, 1, "", "clamp_resist"], [296, 8, 1, "", "continue_dialog"], [295, 8, 1, "", "coredump_on_error"], [320, 8, 1, "", "cos"], [290, 8, 1, "", "define_shape"], [289, 8, 1, "", "delete_section"], [290, 6, 1, "", "diam"], [290, 8, 1, "", "diam3d"], [290, 6, 1, "", "diam_changed"], [289, 8, 1, "", "disconnect"], [290, 8, 1, "", "distance"], [358, 8, 1, "", "doEvents"], [358, 8, 1, "", "doNotify"], [349, 6, 1, "", "dt"], [319, 8, 1, "", "eqinit"], [320, 8, 1, "", "erf"], [320, 8, 1, "", "erfc"], [295, 8, 1, "", "execerror"], [294, 8, 1, "", "execute"], [294, 8, 1, "", "execute1"], [320, 8, 1, "", "exp"], [349, 8, 1, "", "fadvance"], [285, 8, 1, "", "fclamp"], [285, 8, 1, "", "fclampi"], [285, 8, 1, "", "fclampv"], [349, 8, 1, "", "fcurrent"], [349, 8, 1, "", "finitialize"], [260, 8, 1, "", "fit_praxis"], [324, 6, 1, "", "float_epsilon"], [349, 8, 1, "", "fmatrix"], [305, 8, 1, "", "fmenu"], [317, 8, 1, "", "fprint"], [349, 8, 1, "", "frecord_init"], [316, 8, 1, "", "fscan"], [285, 8, 1, "", "fstim"], [285, 8, 1, "", "fstimi"], [290, 8, 1, "", "getSpineArea"], [342, 8, 1, "", "getcwd"], [316, 8, 1, "", "getstr"], [259, 8, 1, "", "ghk"], [359, 8, 1, "", "graph"], [359, 8, 1, "", "graphmode"], [335, 6, 1, "", "hoc_ac_"], [335, 6, 1, "", "hoc_cross_x_"], [335, 6, 1, "", "hoc_cross_y_"], [335, 6, 1, "", "hoc_obj_"], [311, 8, 1, "", "hoc_pointer_"], [315, 8, 1, "", "hoc_stdout"], [331, 8, 1, "", "init"], [349, 8, 1, "", "initnrn"], [320, 8, 1, "", "int"], [272, 8, 1, "", "ion_charge"], [272, 8, 1, "", "ion_register"], [272, 8, 1, "", "ion_style"], [289, 8, 1, "", "ismembrane"], [289, 8, 1, "", "issection"], [299, 8, 1, "", "ivoc_style"], [294, 8, 1, "", "load_file"], [294, 8, 1, "", "load_func"], [294, 8, 1, "", "load_proc"], [294, 8, 1, "", "load_template"], [320, 8, 1, "", "log"], [320, 8, 1, "", "log10"], [314, 8, 1, "", "lw"], [342, 8, 1, "", "machine_name"], [271, 8, 1, "", "make_mechanism"], [271, 8, 1, "", "make_pointprocess"], [323, 8, 1, "", "mcell_ran4"], [323, 8, 1, "", "mcell_ran4_init"], [290, 8, 1, "", "n3d"], [311, 8, 1, "", "name_declared"], [259, 8, 1, "", "nernst"], [329, 9, 0, "-", "neuron"], [342, 8, 1, "", "neuronhome"], [295, 8, 1, "", "nrn_feenableexcept"], [342, 8, 1, "", "nrn_load_dll"], [300, 8, 1, "", "nrnglobalmechmenu"], [300, 8, 1, "", "nrnmechmenu"], [300, 8, 1, "", "nrnpointmenu"], [337, 8, 1, "", "nrnpython"], [300, 8, 1, "", "nrnsecmenu"], [349, 8, 1, "", "nrnunit_use_legacy"], [342, 8, 1, "", "nrnversion"], [310, 8, 1, "", "numarg"], [311, 8, 1, "", "object_id"], [311, 8, 1, "", "object_pop"], [311, 8, 1, "", "object_push"], [289, 8, 1, "", "parent_connection"], [289, 8, 1, "", "parent_node"], [289, 8, 1, "", "parent_section"], [359, 8, 1, "", "plot"], [359, 8, 1, "", "plotx"], [359, 8, 1, "", "ploty"], [359, 8, 1, "", "plt"], [293, 8, 1, "", "pop_section"], [352, 8, 1, "", "print_session"], [315, 8, 1, "", "printf"], [319, 8, 1, "", "prmat"], [285, 8, 1, "", "prstim"], [289, 8, 1, "", "psection"], [290, 8, 1, "", "pt3dadd"], [290, 8, 1, "", "pt3dchange"], [290, 8, 1, "", "pt3dclear"], [290, 8, 1, "", "pt3dconst"], [290, 8, 1, "", "pt3dinsert"], [290, 8, 1, "", "pt3dremove"], [290, 8, 1, "", "pt3dstyle"], [293, 8, 1, "", "push_section"], [260, 8, 1, "", "pval_praxis"], [299, 8, 1, "", "pwman_place"], [348, 8, 1, "", "quit"], [359, 8, 1, "", "regraph"], [348, 8, 1, "", "retrieveaudit"], [290, 8, 1, "", "ri"], [317, 8, 1, "id0", "ropen"], [352, 8, 1, "", "save_session"], [348, 8, 1, "", "saveaudit"], [289, 8, 1, "", "secname"], [349, 6, 1, "", "secondorder"], [289, 8, 1, "", "section_exists"], [289, 8, 1, "", "section_orientation"], [289, 8, 1, "", "section_owner"], [289, 8, 1, "", "sectionname"], [290, 8, 1, "", "setSpineArea"], [359, 8, 1, "", "setcolor"], [359, 8, 1, "", "settext"], [295, 8, 1, "", "show_errmess_always"], [342, 8, 1, "", "show_winio"], [320, 8, 1, "", "sin"], [319, 8, 1, "", "solve"], [290, 8, 1, "", "spine3d"], [341, 8, 1, "", "sprint"], [320, 8, 1, "", "sqrt"], [316, 8, 1, "", "sred"], [339, 8, 1, "", "sscanf"], [342, 8, 1, "", "startsw"], [260, 8, 1, "", "stop_praxis"], [349, 6, 1, "", "stoprun"], [342, 8, 1, "", "stopsw"], [341, 8, 1, "", "strcmp"], [296, 8, 1, "", "string_dialog"], [311, 8, 1, "", "symbols"], [342, 8, 1, "", "system"], [349, 6, 1, "", "t"], [320, 8, 1, "", "tanh"], [331, 6, 1, "", "this"], [332, 8, 1, "", "this_node"], [332, 8, 1, "", "this_section"], [289, 8, 1, "id0", "topology"], [307, 8, 1, "", "units"], [342, 8, 1, "", "unix_mac_pc"], [331, 8, 1, "", "unref"], [323, 8, 1, "", "use_mcell_ran4"], [299, 8, 1, "", "variable_domain"], [317, 8, 1, "", "wopen"], [290, 8, 1, "", "x3d"], [307, 8, 1, "", "xbutton"], [307, 8, 1, "", "xcheckbox"], [307, 8, 1, "", "xfixedvalue"], [307, 8, 1, "", "xlabel"], [307, 8, 1, "", "xmenu"], [317, 8, 1, "", "xopen"], [307, 8, 1, "", "xpanel"], [307, 8, 1, "", "xpvalue"], [307, 8, 1, "", "xradiobutton"], [316, 8, 1, "", "xred"], [307, 8, 1, "", "xslider"], [307, 8, 1, "", "xstatebutton"], [307, 8, 1, "", "xvalue"], [307, 8, 1, "", "xvarlabel"], [290, 8, 1, "", "y3d"], [290, 8, 1, "", "z3d"]], "BBSaveState": [[216, 1, 1, "", "ignore"], [216, 1, 1, "", "restore_test"], [216, 1, 1, "", "save_test"], [216, 1, 1, "", "vector_play_init"], [345, 5, 1, "", "ignore"], [345, 5, 1, "", "restore_test"], [345, 5, 1, "", "save_test"], [345, 5, 1, "", "vector_play_init"]], "CVode": [[217, 1, 1, "", "acor"], [217, 1, 1, "", "active"], [217, 1, 1, "", "atol"], [217, 1, 1, "", "atolscale"], [217, 1, 1, "", "cache_efficient"], [217, 1, 1, "", "condition_order"], [217, 1, 1, "", "current_method"], [217, 1, 1, "", "dae_init_dteps"], [217, 1, 1, "", "debug_event"], [217, 1, 1, "", "dstates"], [217, 1, 1, "", "error_weights"], [217, 1, 1, "", "event"], [217, 1, 1, "", "event_queue_info"], [217, 1, 1, "", "f"], [217, 1, 1, "", "fixed_step"], [217, 1, 1, "", "jacobian"], [217, 1, 1, "", "maxorder"], [217, 1, 1, "", "maxstep"], [217, 1, 1, "", "minstep"], [217, 1, 1, "", "netconlist"], [217, 1, 1, "", "order"], [217, 1, 1, "", "print_event_queue"], [217, 1, 1, "", "queue_mode"], [217, 1, 1, "", "re_init"], [217, 1, 1, "", "record"], [217, 1, 1, "", "record_remove"], [217, 1, 1, "", "rtol"], [217, 1, 1, "", "simgraph_remove"], [217, 1, 1, "", "solve"], [217, 1, 1, "", "spike_stat"], [217, 1, 1, "", "state_magnitudes"], [217, 1, 1, "", "statename"], [217, 1, 1, "", "states"], [217, 1, 1, "", "statistics"], [217, 1, 1, "", "stiff"], [217, 1, 1, "", "store_events"], [217, 1, 1, "", "use_daspk"], [217, 1, 1, "", "use_fast_imem"], [217, 1, 1, "", "use_local_dt"], [217, 1, 1, "", "use_long_double"], [217, 1, 1, "", "use_mxb"], [217, 1, 1, "", "ygather"], [217, 1, 1, "", "yscatter"], [346, 5, 1, "", "acor"], [346, 5, 1, "", "active"], [346, 5, 1, "", "atol"], [346, 5, 1, "", "atolscale"], [346, 5, 1, "", "cache_efficient"], [346, 5, 1, "", "condition_order"], [346, 5, 1, "", "current_method"], [346, 5, 1, "", "dae_init_dteps"], [346, 5, 1, "", "debug_event"], [346, 5, 1, "", "diam_change_count"], [346, 5, 1, "", "dstates"], [346, 5, 1, "", "error_weights"], [346, 5, 1, "", "event"], [346, 5, 1, "", "event_queue_info"], [346, 5, 1, "", "extra_scatter_gather"], [346, 5, 1, "", "extra_scatter_gather_remove"], [346, 5, 1, "", "f"], [346, 5, 1, "", "fixed_step"], [346, 5, 1, "", "jacobian"], [346, 5, 1, "", "maxorder"], [346, 5, 1, "", "maxstep"], [346, 5, 1, "", "minstep"], [346, 5, 1, "", "netconlist"], [346, 5, 1, "", "order"], [346, 5, 1, "", "print_event_queue"], [346, 5, 1, "", "queue_mode"], [346, 5, 1, "", "re_init"], [346, 5, 1, "", "record"], [346, 5, 1, "", "record_remove"], [346, 5, 1, "", "rtol"], [346, 5, 1, "", "simgraph_remove"], [346, 5, 1, "", "solve"], [346, 5, 1, "", "spike_stat"], [346, 5, 1, "", "state_magnitudes"], [346, 5, 1, "", "statename"], [346, 5, 1, "", "states"], [346, 5, 1, "", "statistics"], [346, 5, 1, "", "stiff"], [346, 5, 1, "", "store_events"], [346, 5, 1, "", "structure_change_count"], [346, 5, 1, "", "use_daspk"], [346, 5, 1, "", "use_fast_imem"], [346, 5, 1, "", "use_local_dt"], [346, 5, 1, "", "use_long_double"], [346, 5, 1, "", "use_mxb"], [346, 5, 1, "", "ygather"], [346, 5, 1, "", "yscatter"]], "Deck": [[168, 1, 1, "", "flip_to"], [168, 1, 1, "", "intercept"], [168, 1, 1, "", "map"], [168, 1, 1, "", "move_last"], [168, 1, 1, "", "remove"], [168, 1, 1, "", "remove_last"], [168, 1, 1, "", "save"], [168, 1, 1, "", "unmap"], [297, 5, 1, "", "flip_to"], [297, 5, 1, "", "intercept"], [297, 5, 1, "", "map"], [297, 5, 1, "", "move_last"], [297, 5, 1, "", "remove"], [297, 5, 1, "", "remove_last"], [297, 5, 1, "", "save"], [297, 5, 1, "", "unmap"]], "Electrode": [[142, 1, 1, "", "Holding"], [142, 1, 1, "", "IClamp"], [142, 1, 1, "", "Location"], [142, 1, 1, "", "Returnlevel"], [142, 1, 1, "", "Testlevel"], [142, 1, 1, "", "VClamp"], [142, 1, 1, "", "VClampFamily"], [142, 1, 1, "", "VClampigraph"], [142, 1, 1, "", "amp"], [142, 1, 1, "", "amp0"], [142, 1, 1, "", "del"], [142, 1, 1, "", "dur"], [142, 1, 1, "", "dur0"], [270, 5, 1, "", "Holding"], [270, 5, 1, "", "IClamp"], [270, 5, 1, "", "Location"], [270, 5, 1, "", "Returnlevel"], [270, 5, 1, "", "Testlevel"], [270, 5, 1, "", "VClamp"], [270, 5, 1, "", "VClampFamily"], [270, 5, 1, "", "VClampigraph"], [270, 5, 1, "", "amp"], [270, 5, 1, "", "amp0"], [270, 5, 1, "", "del"], [270, 5, 1, "", "dur"], [270, 5, 1, "", "dur0"]], "FInitializeHandler": [[220, 1, 1, "", "allprint"], [349, 5, 1, "", "allprint"]], "File": [[184, 1, 1, "", "aopen"], [184, 1, 1, "", "chooser"], [184, 1, 1, "", "close"], [184, 1, 1, "", "dir"], [184, 1, 1, "", "eof"], [184, 1, 1, "", "flush"], [184, 1, 1, "", "getname"], [184, 1, 1, "", "gets"], [184, 1, 1, "", "isopen"], [184, 1, 1, "", "mktemp"], [184, 1, 1, "", "printf"], [184, 1, 1, "", "ropen"], [184, 1, 1, "", "scanstr"], [184, 1, 1, "", "scanvar"], [184, 1, 1, "", "seek"], [184, 1, 1, "", "tell"], [184, 1, 1, "", "unlink"], [184, 1, 1, "", "vread"], [184, 1, 1, "", "vwrite"], [184, 1, 1, "", "wopen"], [184, 1, 1, "", "xopen"], [313, 5, 1, "", "aopen"], [313, 5, 1, "", "chooser"], [313, 5, 1, "", "close"], [313, 5, 1, "", "dir"], [313, 5, 1, "", "eof"], [313, 5, 1, "", "flush"], [313, 5, 1, "", "getname"], [313, 5, 1, "", "gets"], [313, 5, 1, "", "isopen"], [313, 5, 1, "", "mktemp"], [313, 5, 1, "", "printf"], [313, 5, 1, "", "ropen"], [313, 5, 1, "", "scanstr"], [313, 5, 1, "", "scanvar"], [313, 5, 1, "", "seek"], [313, 5, 1, "", "tell"], [313, 5, 1, "", "unlink"], [313, 5, 1, "", "vread"], [313, 5, 1, "", "vwrite"], [313, 5, 1, "", "wopen"], [313, 5, 1, "", "xopen"]], "GUIMath": [[192, 1, 1, "", "d2line"], [192, 1, 1, "", "d2line_seg"], [192, 1, 1, "", "feround"], [192, 1, 1, "", "inside"], [321, 5, 1, "", "d2line"], [321, 5, 1, "", "d2line_seg"], [321, 5, 1, "", "feround"], [321, 5, 1, "", "inside"]], "Glyph": [[225, 1, 1, "", "circle"], [225, 1, 1, "", "close_path"], [225, 1, 1, "", "control_point"], [225, 1, 1, "", "curve_to"], [225, 1, 1, "", "erase"], [225, 1, 1, "", "fill"], [225, 1, 1, "", "gif"], [225, 1, 1, "", "glyph"], [225, 1, 1, "", "label"], [225, 1, 1, "", "line_to"], [225, 1, 1, "", "move_to"], [225, 1, 1, "", "new_path"], [225, 1, 1, "", "stroke"], [354, 5, 1, "", "circle"], [354, 5, 1, "", "close"], [354, 5, 1, "", "cpt"], [354, 5, 1, "", "curve"], [354, 5, 1, "", "erase"], [354, 5, 1, "", "fill"], [354, 5, 1, "", "gif"], [354, 5, 1, "", "glyph"], [354, 5, 1, "", "l"], [354, 5, 1, "", "label"], [354, 5, 1, "", "m"], [354, 5, 1, "", "path"], [354, 5, 1, "", "s"]], "Graph": [[226, 1, 1, "", "addexpr"], [226, 1, 1, "", "addobject"], [226, 1, 1, "", "addvar"], [226, 1, 1, "", "align"], [226, 1, 1, "", "begin"], [226, 1, 1, "", "beginline"], [226, 1, 1, "", "brush"], [226, 1, 1, "", "color"], [226, 1, 1, "", "crosshair_action"], [226, 1, 1, "", "erase"], [226, 1, 1, "", "erase_all"], [226, 1, 1, "", "exec_menu"], [226, 1, 1, "", "family"], [226, 1, 1, "", "fastflush"], [226, 1, 1, "", "fixed"], [226, 1, 1, "", "flush"], [226, 1, 1, "", "getline"], [226, 1, 1, "", "gif"], [226, 1, 1, "", "glyph"], [226, 1, 1, "", "label"], [226, 1, 1, "", "line"], [226, 1, 1, "", "line_info"], [226, 1, 1, "", "mark"], [226, 1, 1, "", "menu_action"], [226, 1, 1, "", "menu_remove"], [226, 1, 1, "", "menu_tool"], [226, 1, 1, "", "plot"], [226, 1, 1, "", "printfile"], [226, 1, 1, "", "relative"], [226, 1, 1, "", "save_name"], [226, 1, 1, "", "simgraph"], [226, 1, 1, "", "size"], [226, 1, 1, "", "unmap"], [226, 1, 1, "", "vector"], [226, 1, 1, "", "vfixed"], [226, 1, 1, "", "view"], [226, 1, 1, "", "view_count"], [226, 1, 1, "", "view_info"], [226, 1, 1, "", "view_size"], [226, 1, 1, "", "xaxis"], [226, 1, 1, "", "xexpr"], [226, 1, 1, "", "yaxis"], [355, 5, 1, "", "addexpr"], [355, 5, 1, "", "addobject"], [355, 5, 1, "", "addvar"], [355, 5, 1, "", "align"], [355, 5, 1, "", "begin"], [355, 5, 1, "", "beginline"], [355, 5, 1, "", "brush"], [355, 5, 1, "", "color"], [355, 5, 1, "", "crosshair_action"], [355, 5, 1, "", "erase"], [355, 5, 1, "", "erase_all"], [355, 5, 1, "", "exec_menu"], [355, 5, 1, "", "family"], [355, 5, 1, "", "fastflush"], [355, 5, 1, "", "fixed"], [355, 5, 1, "", "flush"], [355, 5, 1, "", "getline"], [355, 5, 1, "", "gif"], [355, 5, 1, "", "glyph"], [355, 5, 1, "", "label"], [355, 5, 1, "", "line"], [355, 5, 1, "", "line_info"], [355, 5, 1, "", "mark"], [355, 5, 1, "", "menu_action"], [355, 5, 1, "", "menu_remove"], [355, 5, 1, "", "menu_tool"], [355, 5, 1, "", "plot"], [355, 5, 1, "", "printfile"], [355, 5, 1, "", "relative"], [355, 5, 1, "", "save_name"], [355, 5, 1, "", "simgraph"], [355, 5, 1, "", "size"], [355, 5, 1, "", "unmap"], [355, 5, 1, "", "vector"], [355, 5, 1, "", "vfixed"], [355, 5, 1, "", "view"], [355, 5, 1, "", "view_count"], [355, 5, 1, "", "view_info"], [355, 5, 1, "", "view_size"], [355, 5, 1, "", "xaxis"], [355, 5, 1, "", "xexpr"], [355, 5, 1, "", "yaxis"]], "Impedance": [[131, 1, 1, "", "compute"], [131, 1, 1, "", "deltafac"], [131, 1, 1, "", "input"], [131, 1, 1, "", "input_phase"], [131, 1, 1, "", "loc"], [131, 1, 1, "", "ratio"], [131, 1, 1, "", "transfer"], [131, 1, 1, "", "transfer_phase"], [258, 5, 1, "", "compute"], [258, 5, 1, "", "deltafac"], [258, 5, 1, "", "input"], [258, 5, 1, "", "input_phase"], [258, 5, 1, "", "loc"], [258, 5, 1, "", "ratio"], [258, 5, 1, "", "transfer"], [258, 5, 1, "", "transfer_phase"]], "KSChan": [[145, 1, 1, "", "add_hhstate"], [145, 1, 1, "", "add_ksstate"], [145, 1, 1, "", "add_transition"], [145, 1, 1, "", "erev"], [145, 1, 1, "", "gate"], [145, 1, 1, "", "gmax"], [145, 1, 1, "", "ion"], [145, 1, 1, "", "iv_type"], [145, 1, 1, "", "ligand"], [145, 1, 1, "", "name"], [145, 1, 1, "", "ngate"], [145, 1, 1, "", "nligand"], [145, 1, 1, "", "nstate"], [145, 1, 1, "", "ntrans"], [145, 1, 1, "", "pr"], [145, 1, 1, "", "remove_state"], [145, 1, 1, "", "remove_transition"], [145, 1, 1, "", "setstructure"], [145, 1, 1, "", "state"], [145, 1, 1, "", "trans"], [273, 5, 1, "", "add_hhstate"], [273, 5, 1, "", "add_ksstate"], [273, 5, 1, "", "add_transition"], [273, 5, 1, "", "erev"], [273, 5, 1, "", "gate"], [273, 5, 1, "", "gmax"], [273, 5, 1, "", "ion"], [273, 5, 1, "", "iv_type"], [273, 5, 1, "", "ligand"], [273, 5, 1, "", "name"], [273, 5, 1, "", "ngate"], [273, 5, 1, "", "nligand"], [273, 5, 1, "", "nstate"], [273, 5, 1, "", "ntrans"], [273, 5, 1, "", "pr"], [273, 5, 1, "", "remove_state"], [273, 5, 1, "", "remove_transition"], [273, 5, 1, "", "setstructure"], [273, 5, 1, "", "state"], [273, 5, 1, "", "trans"]], "KSGate": [[145, 1, 1, "", "index"], [145, 1, 1, "", "nstate"], [145, 1, 1, "", "power"], [145, 1, 1, "", "sindex"], [273, 5, 1, "", "index"], [273, 5, 1, "", "nstate"], [273, 5, 1, "", "power"], [273, 5, 1, "", "sindex"]], "KSState": [[145, 1, 1, "", "frac"], [145, 1, 1, "", "gate"], [145, 1, 1, "", "index"], [145, 1, 1, "", "name"], [273, 5, 1, "", "frac"], [273, 5, 1, "", "gate"], [273, 5, 1, "", "index"], [273, 5, 1, "", "name"]], "KSTrans": [[145, 1, 1, "", "ab"], [145, 1, 1, "", "f"], [145, 1, 1, "", "ftype"], [145, 1, 1, "", "index"], [145, 1, 1, "", "inftau"], [145, 1, 1, "", "ligand"], [145, 1, 1, "", "parm"], [145, 1, 1, "", "set_f"], [145, 1, 1, "", "src"], [145, 1, 1, "", "target"], [145, 1, 1, "", "type"], [273, 5, 1, "", "ab"], [273, 5, 1, "", "f"], [273, 5, 1, "", "ftype"], [273, 5, 1, "", "index"], [273, 5, 1, "", "inftau"], [273, 5, 1, "", "ligand"], [273, 5, 1, "", "parm"], [273, 5, 1, "", "set_f"], [273, 5, 1, "", "src"], [273, 5, 1, "", "target"], [273, 5, 1, "", "type"]], "List": [[169, 1, 1, "", "accept_action"], [169, 1, 1, "", "append"], [169, 1, 1, "", "browser"], [169, 1, 1, "", "count"], [169, 1, 1, "", "index"], [169, 1, 1, "", "insrt"], [169, 1, 1, "", "o"], [169, 1, 1, "", "object"], [169, 1, 1, "", "prepend"], [169, 1, 1, "", "remove"], [169, 1, 1, "", "remove_all"], [169, 1, 1, "", "scroll_pos"], [169, 1, 1, "", "select"], [169, 1, 1, "", "select_action"], [169, 1, 1, "", "selected"], [298, 5, 1, "", "accept_action"], [298, 5, 1, "", "append"], [298, 5, 1, "", "browser"], [298, 5, 1, "", "count"], [298, 5, 1, "", "index"], [298, 5, 1, "", "insrt"], [298, 5, 1, "", "o"], [298, 5, 1, "", "object"], [298, 5, 1, "", "prepend"], [298, 5, 1, "", "remove"], [298, 5, 1, "", "remove_all"], [298, 5, 1, "", "scroll_pos"], [298, 5, 1, "", "select"], [298, 5, 1, "", "select_action"], [298, 5, 1, "", "selected"]], "Matrix": [[193, 1, 1, "", "add"], [193, 1, 1, "", "bcopy"], [193, 1, 1, "", "c"], [193, 1, 1, "", "cholesky_factor"], [193, 1, 1, "", "det"], [193, 1, 1, "", "exp"], [193, 1, 1, "", "fprint"], [193, 1, 1, "", "from_vector"], [193, 1, 1, "", "getcol"], [193, 1, 1, "", "getdiag"], [193, 1, 1, "", "getrow"], [193, 1, 1, "", "getval"], [193, 1, 1, "", "ident"], [193, 1, 1, "", "inverse"], [193, 1, 1, "", "mulm"], [193, 1, 1, "", "muls"], [193, 1, 1, "", "mulv"], [193, 1, 1, "", "ncol"], [193, 1, 1, "", "nrow"], [193, 1, 1, "", "pow"], [193, 1, 1, "", "printf"], [193, 1, 1, "", "resize"], [193, 1, 1, "", "scanf"], [193, 1, 1, "", "setcol"], [193, 1, 1, "", "setdiag"], [193, 1, 1, "", "setrow"], [193, 1, 1, "", "setval"], [193, 1, 1, "", "solv"], [193, 1, 1, "", "spgetrowval"], [193, 1, 1, "", "sprowlen"], [193, 1, 1, "", "svd"], [193, 1, 1, "", "symmeig"], [193, 1, 1, "", "to_vector"], [193, 1, 1, "", "transpose"], [193, 2, 1, "", "x"], [193, 1, 1, "", "zero"], [322, 5, 1, "", "add"], [322, 5, 1, "", "bcopy"], [322, 5, 1, "", "c"], [322, 5, 1, "", "det"], [322, 5, 1, "", "exp"], [322, 5, 1, "", "fprint"], [322, 5, 1, "", "from_vector"], [322, 5, 1, "", "getcol"], [322, 5, 1, "", "getdiag"], [322, 5, 1, "", "getrow"], [322, 5, 1, "", "getval"], [322, 5, 1, "", "ident"], [322, 5, 1, "", "inverse"], [322, 5, 1, "", "mulm"], [322, 5, 1, "", "muls"], [322, 5, 1, "", "mulv"], [322, 5, 1, "", "ncol"], [322, 5, 1, "", "nrow"], [322, 5, 1, "", "pow"], [322, 5, 1, "", "printf"], [322, 5, 1, "", "resize"], [322, 5, 1, "", "scanf"], [322, 5, 1, "", "setcol"], [322, 5, 1, "", "setdiag"], [322, 5, 1, "", "setrow"], [322, 5, 1, "", "setval"], [322, 5, 1, "", "solv"], [322, 5, 1, "", "spgetrowval"], [322, 5, 1, "", "sprowlen"], [322, 5, 1, "", "svd"], [322, 5, 1, "", "symmeig"], [322, 5, 1, "", "to_vector"], [322, 5, 1, "", "transpose"], [322, 6, 1, "", "x"], [322, 5, 1, "", "zero"]], "MechanismStandard": [[199, 1, 1, "", "action"], [199, 1, 1, "", "count"], [199, 1, 1, "", "get"], [199, 1, 1, "", "in"], [199, 1, 1, "", "name"], [199, 1, 1, "", "out"], [199, 1, 1, "", "panel"], [199, 1, 1, "", "save"], [199, 1, 1, "", "set"], [328, 5, 1, "", "_in"], [328, 5, 1, "", "action"], [328, 5, 1, "", "count"], [328, 5, 1, "", "get"], [328, 5, 1, "", "name"], [328, 5, 1, "", "out"], [328, 5, 1, "", "panel"], [328, 5, 1, "", "save"], [328, 5, 1, "", "set"]], "MechanismType": [[151, 1, 1, "", "action"], [151, 1, 1, "", "count"], [151, 1, 1, "", "has_net_event"], [151, 1, 1, "", "internal_type"], [151, 1, 1, "", "is_artificial"], [151, 1, 1, "", "is_netcon_target"], [151, 1, 1, "", "make"], [151, 1, 1, "", "menu"], [151, 1, 1, "", "pp_begin"], [151, 1, 1, "", "pp_next"], [151, 1, 1, "", "remove"], [151, 1, 1, "", "select"], [151, 1, 1, "", "selected"], [279, 5, 1, "", "action"], [279, 5, 1, "", "code"], [279, 5, 1, "", "count"], [279, 5, 1, "", "file"], [279, 5, 1, "", "has_net_event"], [279, 5, 1, "", "internal_type"], [279, 5, 1, "", "is_artificial"], [279, 5, 1, "", "is_netcon_target"], [279, 5, 1, "", "make"], [279, 5, 1, "", "menu"], [279, 5, 1, "", "pp_begin"], [279, 5, 1, "", "pp_next"], [279, 5, 1, "", "remove"], [279, 5, 1, "", "select"], [279, 5, 1, "", "selected"]], "NetCon": [[154, 1, 1, "", "active"], [154, 2, 1, "", "delay"], [154, 1, 1, "", "event"], [154, 1, 1, "", "get_recordvec"], [154, 1, 1, "", "postcell"], [154, 1, 1, "", "postcelllist"], [154, 1, 1, "", "postloc"], [154, 1, 1, "", "pre"], [154, 1, 1, "", "precell"], [154, 1, 1, "", "precelllist"], [154, 1, 1, "", "prelist"], [154, 1, 1, "", "preloc"], [154, 1, 1, "", "record"], [154, 1, 1, "", "setpost"], [154, 1, 1, "", "srcgid"], [154, 1, 1, "", "syn"], [154, 1, 1, "", "synlist"], [154, 2, 1, "", "threshold"], [154, 1, 1, "", "valid"], [154, 1, 1, "", "wcnt"], [154, 2, 1, "", "weight"], [154, 2, 1, "", "x"], [282, 5, 1, "", "active"], [282, 6, 1, "", "delay"], [282, 5, 1, "", "event"], [282, 5, 1, "", "get_recordvec"], [282, 5, 1, "", "postcell"], [282, 5, 1, "", "postcelllist"], [282, 5, 1, "", "postloc"], [282, 5, 1, "", "postseg"], [282, 5, 1, "", "pre"], [282, 5, 1, "", "precell"], [282, 5, 1, "", "precelllist"], [282, 5, 1, "", "prelist"], [282, 5, 1, "", "preloc"], [282, 5, 1, "", "preseg"], [282, 5, 1, "", "record"], [282, 5, 1, "", "setpost"], [282, 5, 1, "", "srcgid"], [282, 5, 1, "", "syn"], [282, 5, 1, "", "synlist"], [282, 6, 1, "", "threshold"], [282, 5, 1, "", "valid"], [282, 5, 1, "", "wcnt"], [282, 6, 1, "", "weight"], [282, 6, 1, "", "x"]], "PWManager": [[172, 1, 1, "", "close"], [172, 1, 1, "", "count"], [172, 1, 1, "", "deco"], [172, 1, 1, "", "deiconify"], [172, 1, 1, "", "group"], [172, 1, 1, "", "hide"], [172, 1, 1, "", "iconify"], [172, 1, 1, "", "is_mapped"], [172, 1, 1, "", "landscape"], [172, 1, 1, "", "leader"], [172, 1, 1, "", "manager"], [172, 1, 1, "", "map"], [172, 1, 1, "", "name"], [172, 1, 1, "", "paper_place"], [172, 1, 1, "", "printfile"], [172, 1, 1, "", "save"], [172, 1, 1, "", "scale"], [172, 1, 1, "", "snap"], [172, 1, 1, "", "window_place"], [301, 5, 1, "", "close"], [301, 5, 1, "", "count"], [301, 5, 1, "", "deco"], [301, 5, 1, "", "deiconify"], [301, 5, 1, "", "group"], [301, 5, 1, "", "hide"], [301, 5, 1, "", "iconify"], [301, 5, 1, "", "is_mapped"], [301, 5, 1, "", "landscape"], [301, 5, 1, "", "leader"], [301, 5, 1, "", "manager"], [301, 5, 1, "", "map"], [301, 5, 1, "", "name"], [301, 5, 1, "", "paper_place"], [301, 5, 1, "", "printfile"], [301, 5, 1, "", "save"], [301, 5, 1, "", "scale"], [301, 5, 1, "", "snap"], [301, 5, 1, "", "window_place"]], "ParallelContext": [[155, 1, 1, "", "Threads"], [155, 1, 1, "", "allgather"], [155, 1, 1, "", "allreduce"], [155, 1, 1, "", "alltoall"], [155, 1, 1, "", "barrier"], [155, 1, 1, "", "broadcast"], [155, 1, 1, "", "cell"], [155, 1, 1, "", "context"], [155, 1, 1, "", "done"], [155, 1, 1, "", "dt"], [155, 1, 1, "", "event_time"], [155, 1, 1, "", "gid2cell"], [155, 1, 1, "", "gid2obj"], [155, 1, 1, "", "gid_clear"], [155, 1, 1, "", "gid_connect"], [155, 1, 1, "", "gid_exists"], [155, 1, 1, "", "id"], [155, 1, 1, "", "id_bbs"], [155, 1, 1, "", "id_world"], [155, 1, 1, "", "integ_time"], [155, 1, 1, "", "look"], [155, 1, 1, "", "look_take"], [155, 1, 1, "", "max_histogram"], [155, 1, 1, "", "mech_time"], [155, 1, 1, "", "multisplit"], [155, 1, 1, "", "nhost"], [155, 1, 1, "", "nhost_bbs"], [155, 1, 1, "", "nhost_world"], [155, 1, 1, "", "nthread"], [155, 1, 1, "", "outputcell"], [155, 1, 1, "", "pack"], [155, 1, 1, "", "partition"], [155, 1, 1, "", "post"], [155, 1, 1, "", "prcellstate"], [155, 1, 1, "", "psolve"], [155, 1, 1, "", "py_alltoall"], [155, 1, 1, "", "pyret"], [155, 1, 1, "", "retval"], [155, 1, 1, "", "runworker"], [155, 1, 1, "", "sec_in_thread"], [155, 1, 1, "", "send_time"], [155, 1, 1, "", "set_gid2node"], [155, 1, 1, "", "set_maxstep"], [155, 1, 1, "", "setup_transfer"], [155, 1, 1, "", "source_var"], [155, 1, 1, "", "spike_compress"], [155, 1, 1, "", "spike_record"], [155, 1, 1, "", "spike_statistics"], [155, 1, 1, "", "splitcell"], [155, 1, 1, "", "step_time"], [155, 1, 1, "", "step_wait"], [155, 1, 1, "", "submit"], [155, 1, 1, "", "subworlds"], [155, 1, 1, "", "t"], [155, 1, 1, "", "take"], [155, 1, 1, "", "target_var"], [155, 1, 1, "", "thread_busywait"], [155, 1, 1, "", "thread_ctime"], [155, 1, 1, "", "thread_how_many_proc"], [155, 1, 1, "", "thread_stat"], [155, 1, 1, "", "threshold"], [155, 1, 1, "", "time"], [155, 1, 1, "", "timeout"], [155, 1, 1, "", "unpack"], [155, 1, 1, "", "upkpyobj"], [155, 1, 1, "", "upkscalar"], [155, 1, 1, "", "upkstr"], [155, 1, 1, "", "upkvec"], [155, 1, 1, "", "userid"], [155, 1, 1, "", "vtransfer_time"], [155, 1, 1, "", "wait_time"], [155, 1, 1, "", "working"], [283, 5, 1, "", "Threads"], [283, 5, 1, "", "allgather"], [283, 5, 1, "", "allreduce"], [283, 5, 1, "", "alltoall"], [283, 5, 1, "", "barrier"], [283, 5, 1, "", "broadcast"], [283, 5, 1, "", "cell"], [283, 5, 1, "", "context"], [283, 5, 1, "", "done"], [283, 5, 1, "", "dt"], [283, 5, 1, "", "event_time"], [283, 5, 1, "", "gid2cell"], [283, 5, 1, "", "gid2obj"], [283, 5, 1, "", "gid_clear"], [283, 5, 1, "", "gid_connect"], [283, 5, 1, "", "gid_exists"], [283, 5, 1, "", "id"], [283, 5, 1, "", "id_bbs"], [283, 5, 1, "", "id_world"], [283, 5, 1, "", "integ_time"], [283, 5, 1, "", "look"], [283, 5, 1, "", "look_take"], [283, 5, 1, "", "max_histogram"], [283, 5, 1, "", "mech_time"], [283, 5, 1, "", "mpi_init"], [283, 5, 1, "", "mpiabort_on_error"], [283, 5, 1, "", "multisplit"], [283, 5, 1, "", "nhost"], [283, 5, 1, "", "nhost_bbs"], [283, 5, 1, "", "nhost_world"], [283, 5, 1, "", "nrncore_run"], [283, 5, 1, "", "nrncore_write"], [283, 5, 1, "", "nthread"], [283, 5, 1, "", "outputcell"], [283, 5, 1, "", "pack"], [283, 5, 1, "", "partition"], [283, 5, 1, "", "post"], [283, 5, 1, "", "prcellstate"], [283, 5, 1, "", "psolve"], [283, 5, 1, "", "py_allgather"], [283, 5, 1, "", "py_alltoall"], [283, 5, 1, "", "py_broadcast"], [283, 5, 1, "", "py_gather"], [283, 5, 1, "", "py_scatter"], [283, 5, 1, "", "pyret"], [283, 5, 1, "", "retval"], [283, 5, 1, "", "runworker"], [283, 5, 1, "", "sec_in_thread"], [283, 5, 1, "", "send_time"], [283, 5, 1, "", "set_gid2node"], [283, 5, 1, "", "set_maxstep"], [283, 5, 1, "", "setup_transfer"], [283, 5, 1, "", "source_var"], [283, 5, 1, "", "spike_compress"], [283, 5, 1, "", "spike_record"], [283, 5, 1, "", "spike_statistics"], [283, 5, 1, "", "splitcell"], [283, 5, 1, "", "step_time"], [283, 5, 1, "", "submit"], [283, 5, 1, "", "subworlds"], [283, 5, 1, "", "t"], [283, 5, 1, "", "take"], [283, 5, 1, "", "target_var"], [283, 5, 1, "", "thread_busywait"], [283, 5, 1, "", "thread_ctime"], [283, 5, 1, "", "thread_how_many_proc"], [283, 5, 1, "", "thread_stat"], [283, 5, 1, "", "threshold"], [283, 5, 1, "", "time"], [283, 5, 1, "", "timeout"], [283, 5, 1, "", "unpack"], [283, 5, 1, "", "upkpyobj"], [283, 5, 1, "", "upkscalar"], [283, 5, 1, "", "upkstr"], [283, 5, 1, "", "upkvec"], [283, 5, 1, "", "userid"], [283, 5, 1, "", "vtransfer_time"], [283, 5, 1, "", "wait_time"], [283, 5, 1, "", "working"]], "ParallelNetManager": [[156, 1, 1, "", "create_cell"], [156, 1, 1, "", "gatherspikes"], [156, 1, 1, "", "gid_exists"], [156, 1, 1, "", "nc_append"], [156, 1, 1, "", "pcontinue"], [156, 1, 1, "", "pinit"], [156, 1, 1, "", "prstat"], [156, 1, 1, "", "prun"], [156, 1, 1, "", "psolve"], [156, 1, 1, "", "register_cell"], [156, 1, 1, "", "round_robin"], [156, 1, 1, "", "set_gid2node"], [156, 1, 1, "", "spike_record"], [156, 1, 1, "", "splitcell"], [156, 1, 1, "", "want_all_spikes"], [284, 5, 1, "", "create_cell"], [284, 5, 1, "", "gatherspikes"], [284, 5, 1, "", "gid_exists"], [284, 5, 1, "", "nc_append"], [284, 5, 1, "", "pcontinue"], [284, 5, 1, "", "pinit"], [284, 5, 1, "", "prstat"], [284, 5, 1, "", "prun"], [284, 5, 1, "", "psolve"], [284, 5, 1, "", "register_cell"], [284, 5, 1, "", "round_robin"], [284, 5, 1, "", "set_gid2node"], [284, 5, 1, "", "spike_record"], [284, 5, 1, "", "splitcell"], [284, 5, 1, "", "want_all_spikes"]], "PlotShape": [[232, 1, 1, "", "beginline"], [232, 1, 1, "", "color"], [232, 1, 1, "", "color_all"], [232, 1, 1, "", "color_list"], [232, 1, 1, "", "colormap"], [232, 1, 1, "", "erase"], [232, 1, 1, "", "erase_all"], [232, 1, 1, "", "exec_menu"], [232, 1, 1, "", "fastflush"], [232, 1, 1, "", "flush"], [232, 1, 1, "", "hinton"], [232, 1, 1, "", "label"], [232, 1, 1, "", "len_scale"], [232, 1, 1, "", "line"], [232, 1, 1, "", "mark"], [232, 1, 1, "", "menu_action"], [232, 1, 1, "", "menu_tool"], [232, 1, 1, "", "nearest"], [232, 1, 1, "", "observe"], [232, 1, 1, "", "printfile"], [232, 1, 1, "", "push_selected"], [232, 1, 1, "", "rotate"], [232, 1, 1, "", "save_name"], [232, 1, 1, "", "scale"], [232, 1, 1, "", "show"], [232, 1, 1, "", "size"], [232, 1, 1, "", "unmap"], [232, 1, 1, "", "variable"], [232, 1, 1, "", "view"], [232, 1, 1, "", "view_count"], [361, 5, 1, "", "beginline"], [361, 5, 1, "", "color"], [361, 5, 1, "", "color_all"], [361, 5, 1, "", "color_list"], [361, 5, 1, "", "colormap"], [361, 5, 1, "", "erase"], [361, 5, 1, "", "erase_all"], [361, 5, 1, "", "exec_menu"], [361, 5, 1, "", "fastflush"], [361, 5, 1, "", "flush"], [361, 5, 1, "", "hinton"], [361, 5, 1, "", "label"], [361, 5, 1, "", "len_scale"], [361, 5, 1, "", "line"], [361, 5, 1, "", "mark"], [361, 5, 1, "", "menu_action"], [361, 5, 1, "", "menu_tool"], [361, 5, 1, "", "nearest"], [361, 5, 1, "", "observe"], [361, 5, 1, "", "plot"], [361, 5, 1, "", "printfile"], [361, 5, 1, "", "push_selected"], [361, 5, 1, "", "rotate"], [361, 5, 1, "", "save_name"], [361, 5, 1, "", "scale"], [361, 5, 1, "", "show"], [361, 5, 1, "", "size"], [361, 5, 1, "", "unmap"], [361, 5, 1, "", "variable"], [361, 5, 1, "", "view"], [361, 5, 1, "", "view_count"]], "Pointer": [[204, 1, 1, "", "assign"], [204, 1, 1, "", "s"], [204, 1, 1, "", "val"], [333, 5, 1, "", "assign"], [333, 5, 1, "", "s"], [333, 7, 1, "", "val"]], "PtrVector": [[205, 1, 1, "", "gather"], [205, 1, 1, "", "getval"], [205, 1, 1, "", "pset"], [205, 1, 1, "", "ptr_update_callback"], [205, 1, 1, "", "resize"], [205, 1, 1, "", "scatter"], [205, 1, 1, "", "setval"], [205, 1, 1, "", "size"], [334, 5, 1, "", "gather"], [334, 5, 1, "", "getval"], [334, 5, 1, "", "label"], [334, 5, 1, "", "plot"], [334, 5, 1, "", "pset"], [334, 5, 1, "", "ptr_update_callback"], [334, 5, 1, "", "resize"], [334, 5, 1, "", "scatter"], [334, 5, 1, "", "setval"], [334, 5, 1, "", "size"]], "Random": [[196, 1, 1, "", "ACG"], [196, 1, 1, "", "MCellRan4"], [196, 1, 1, "", "MLCG"], [196, 1, 1, "", "Random123"], [196, 1, 1, "", "Random123_globalindex"], [196, 1, 1, "", "binomial"], [196, 1, 1, "", "discunif"], [196, 1, 1, "", "erlang"], [196, 1, 1, "", "geometric"], [196, 1, 1, "", "hypergeo"], [196, 1, 1, "", "lognormal"], [196, 1, 1, "", "negexp"], [196, 1, 1, "", "normal"], [196, 1, 1, "", "play"], [196, 1, 1, "", "poisson"], [196, 1, 1, "", "repick"], [196, 1, 1, "", "seq"], [196, 1, 1, "", "uniform"], [196, 1, 1, "", "weibull"], [325, 5, 1, "", "ACG"], [325, 5, 1, "", "MCellRan4"], [325, 5, 1, "", "MLCG"], [325, 5, 1, "", "Random123"], [325, 5, 1, "", "Random123_globalindex"], [325, 5, 1, "", "binomial"], [325, 5, 1, "", "discunif"], [325, 5, 1, "", "erlang"], [325, 5, 1, "", "geometric"], [325, 5, 1, "", "hypergeo"], [325, 5, 1, "", "lognormal"], [325, 5, 1, "", "negexp"], [325, 5, 1, "", "normal"], [325, 5, 1, "", "play"], [325, 5, 1, "", "poisson"], [325, 5, 1, "", "repick"], [325, 5, 1, "", "seq"], [325, 5, 1, "", "uniform"], [325, 5, 1, "", "weibull"]], "RangeVarPlot": [[233, 1, 1, "", "begin"], [233, 1, 1, "", "color"], [233, 1, 1, "", "end"], [233, 1, 1, "", "from_vector"], [233, 1, 1, "", "left"], [233, 1, 1, "", "list"], [233, 1, 1, "", "origin"], [233, 1, 1, "", "right"], [233, 1, 1, "", "to_vector"], [362, 5, 1, "", "begin"], [362, 5, 1, "", "color"], [362, 5, 1, "", "end"], [362, 5, 1, "", "from_vector"], [362, 5, 1, "", "left"], [362, 5, 1, "", "list"], [362, 5, 1, "", "origin"], [362, 5, 1, "", "plot"], [362, 5, 1, "", "right"], [362, 5, 1, "", "to_vector"], [362, 5, 1, "", "vector"]], "SaveState": [[222, 1, 1, "", "fread"], [222, 1, 1, "", "fwrite"], [222, 1, 1, "", "restore"], [222, 1, 1, "", "save"], [222, 1, 1, "", "writehoc"], [351, 5, 1, "", "fread"], [351, 5, 1, "", "fwrite"], [351, 5, 1, "", "restore"], [351, 5, 1, "", "save"], [351, 5, 1, "", "writehoc"]], "SectionBrowser": [[173, 1, 1, "", "accept_action"], [173, 1, 1, "", "select"], [173, 1, 1, "", "select_action"], [302, 5, 1, "", "accept_action"], [302, 5, 1, "", "select"], [302, 5, 1, "", "select_action"]], "SectionList": [[162, 1, 1, "", "allroots"], [162, 1, 1, "", "append"], [162, 1, 1, "", "children"], [162, 1, 1, "", "printnames"], [162, 1, 1, "", "remove"], [162, 1, 1, "", "subtree"], [162, 1, 1, "", "unique"], [162, 1, 1, "", "wholetree"], [291, 5, 1, "", "allroots"], [291, 5, 1, "", "append"], [291, 5, 1, "", "children"], [291, 5, 1, "", "printnames"], [291, 5, 1, "", "remove"], [291, 5, 1, "", "subtree"], [291, 5, 1, "", "unique"], [291, 5, 1, "", "wholetree"]], "SectionRef": [[163, 1, 1, "", "child"], [163, 1, 1, "", "exists"], [163, 1, 1, "", "has_parent"], [163, 1, 1, "", "has_trueparent"], [163, 1, 1, "", "is_cas"], [163, 1, 1, "", "nchild"], [163, 1, 1, "", "parent"], [163, 1, 1, "", "root"], [163, 1, 1, "", "sec"], [163, 1, 1, "", "trueparent"], [292, 6, 1, "", "child"], [292, 5, 1, "", "exists"], [292, 5, 1, "", "has_parent"], [292, 5, 1, "", "has_trueparent"], [292, 5, 1, "", "is_cas"], [292, 5, 1, "", "nchild"], [292, 6, 1, "", "parent"], [292, 6, 1, "", "root"], [292, 6, 1, "", "sec"], [292, 6, 1, "", "trueparent"]], "Shape": [[234, 1, 1, "", "action"], [234, 1, 1, "", "beginline"], [234, 1, 1, "", "color"], [234, 1, 1, "", "color_all"], [234, 1, 1, "", "color_list"], [234, 1, 1, "", "erase"], [234, 1, 1, "", "erase_all"], [234, 1, 1, "", "exec_menu"], [234, 1, 1, "", "flush"], [234, 1, 1, "", "label"], [234, 1, 1, "", "len_scale"], [234, 1, 1, "", "line"], [234, 1, 1, "", "mark"], [234, 1, 1, "", "menu_action"], [234, 1, 1, "", "menu_tool"], [234, 1, 1, "", "nearest"], [234, 1, 1, "", "observe"], [234, 1, 1, "", "point_mark"], [234, 1, 1, "", "point_mark_remove"], [234, 1, 1, "", "printfile"], [234, 1, 1, "", "push_selected"], [234, 1, 1, "", "rotate"], [234, 1, 1, "", "save_name"], [234, 1, 1, "", "select"], [234, 1, 1, "", "show"], [234, 1, 1, "", "size"], [234, 1, 1, "", "unmap"], [234, 1, 1, "", "view"], [234, 1, 1, "", "view_count"], [363, 5, 1, "", "action"], [363, 5, 1, "", "beginline"], [363, 5, 1, "", "color"], [363, 5, 1, "", "color_all"], [363, 5, 1, "", "color_list"], [363, 5, 1, "", "erase"], [363, 5, 1, "", "erase_all"], [363, 5, 1, "", "exec_menu"], [363, 5, 1, "", "flush"], [363, 5, 1, "", "label"], [363, 5, 1, "", "len_scale"], [363, 5, 1, "", "line"], [363, 5, 1, "", "mark"], [363, 5, 1, "", "menu_action"], [363, 5, 1, "", "menu_tool"], [363, 5, 1, "", "nearest"], [363, 5, 1, "", "observe"], [363, 5, 1, "", "point_mark"], [363, 5, 1, "", "point_mark_remove"], [363, 5, 1, "", "printfile"], [363, 5, 1, "", "push_selected"], [363, 5, 1, "", "rotate"], [363, 5, 1, "", "save_name"], [363, 5, 1, "", "select"], [363, 5, 1, "", "show"], [363, 5, 1, "", "size"], [363, 5, 1, "", "unmap"], [363, 5, 1, "", "view"], [363, 5, 1, "", "view_count"]], "StateTransitionEvent": [[159, 1, 1, "", "state"], [159, 1, 1, "", "transition"], [288, 5, 1, "", "state"], [288, 5, 1, "", "transition"]], "StringFunctions": [[211, 1, 1, "", "alias"], [211, 1, 1, "", "alias_list"], [211, 1, 1, "", "head"], [211, 1, 1, "", "is_artificial"], [211, 1, 1, "", "is_name"], [211, 1, 1, "", "is_point_process"], [211, 1, 1, "", "left"], [211, 1, 1, "", "len"], [211, 1, 1, "", "references"], [211, 1, 1, "", "right"], [211, 1, 1, "", "substr"], [211, 1, 1, "", "tail"], [340, 5, 1, "", "alias"], [340, 5, 1, "", "alias_list"], [340, 5, 1, "", "head"], [340, 5, 1, "", "is_artificial"], [340, 5, 1, "", "is_name"], [340, 5, 1, "", "is_point_process"], [340, 5, 1, "", "left"], [340, 5, 1, "", "len"], [340, 5, 1, "", "references"], [340, 5, 1, "", "right"], [340, 5, 1, "", "substr"], [340, 5, 1, "", "tail"]], "SymChooser": [[174, 1, 1, "", "run"], [174, 1, 1, "", "text"], [303, 5, 1, "", "run"], [303, 5, 1, "", "text"]], "TextEditor": [[175, 1, 1, "", "map"], [175, 1, 1, "", "readonly"], [175, 1, 1, "", "text"], [304, 5, 1, "", "map"], [304, 5, 1, "", "readonly"], [304, 5, 1, "", "text"]], "Timer": [[214, 1, 1, "", "end"], [214, 1, 1, "", "seconds"], [214, 1, 1, "", "start"], [343, 5, 1, "", "end"], [343, 5, 1, "", "seconds"], [343, 5, 1, "", "start"]], "VBox": [[168, 1, 1, "", "adjust"], [168, 1, 1, "", "adjuster"], [168, 1, 1, "", "dialog"], [168, 1, 1, "", "dismiss_action"], [168, 1, 1, "", "full_request"], [168, 1, 1, "", "intercept"], [168, 1, 1, "", "ismapped"], [168, 1, 1, "", "map"], [168, 1, 1, "", "priority"], [168, 1, 1, "", "ref"], [168, 1, 1, "", "save"], [168, 1, 1, "", "size"], [168, 1, 1, "", "unmap"], [297, 5, 1, "", "adjust"], [297, 5, 1, "", "adjuster"], [297, 5, 1, "", "dialog"], [297, 5, 1, "", "dismiss_action"], [297, 5, 1, "", "full_request"], [297, 5, 1, "", "intercept"], [297, 5, 1, "", "ismapped"], [297, 5, 1, "", "map"], [297, 5, 1, "", "priority"], [297, 5, 1, "", "ref"], [297, 5, 1, "", "save"], [297, 5, 1, "", "size"], [297, 5, 1, "", "unmap"]], "ValueFieldEditor": [[177, 1, 1, "", "default"], [306, 5, 1, "", "default"]], "Vector": [[197, 1, 1, "", "abs"], [197, 1, 1, "", "add"], [197, 1, 1, "", "addrand"], [197, 1, 1, "", "append"], [197, 1, 1, "", "apply"], [197, 1, 1, "", "as_numpy"], [197, 1, 1, "", "at"], [197, 1, 1, "", "buffer_size"], [197, 1, 1, "", "c"], [197, 1, 1, "", "cl"], [197, 1, 1, "", "contains"], [197, 1, 1, "", "convlv"], [197, 1, 1, "", "copy"], [197, 1, 1, "", "correl"], [197, 1, 1, "", "deriv"], [197, 1, 1, "", "div"], [197, 1, 1, "", "dot"], [197, 1, 1, "", "eq"], [197, 1, 1, "", "fft"], [197, 1, 1, "", "fill"], [197, 1, 1, "", "filter"], [197, 1, 1, "", "fit"], [197, 1, 1, "", "floor"], [197, 1, 1, "", "fread"], [197, 1, 1, "", "from_double"], [197, 1, 1, "", "from_python"], [197, 1, 1, "", "fwrite"], [197, 1, 1, "", "get"], [197, 1, 1, "", "hist"], [197, 1, 1, "", "histogram"], [197, 1, 1, "", "ind"], [197, 1, 1, "", "index"], [197, 1, 1, "", "indgen"], [197, 1, 1, "", "indvwhere"], [197, 1, 1, "", "indwhere"], [197, 1, 1, "", "inf"], [197, 1, 1, "", "insrt"], [197, 1, 1, "", "integral"], [197, 1, 1, "", "interpolate"], [197, 1, 1, "", "label"], [197, 1, 1, "", "line"], [197, 1, 1, "", "log"], [197, 1, 1, "", "log10"], [197, 1, 1, "", "mag"], [197, 1, 1, "", "mark"], [197, 1, 1, "", "max"], [197, 1, 1, "", "max_ind"], [197, 1, 1, "", "mean"], [197, 1, 1, "", "meansqerr"], [197, 1, 1, "", "medfltr"], [197, 1, 1, "", "median"], [197, 1, 1, "", "min"], [197, 1, 1, "", "min_ind"], [197, 1, 1, "", "mul"], [197, 1, 1, "", "play"], [197, 1, 1, "", "play_remove"], [197, 1, 1, "", "plot"], [197, 1, 1, "", "ploterr"], [197, 1, 1, "", "pow"], [197, 1, 1, "", "printf"], [197, 1, 1, "", "psth"], [197, 1, 1, "", "rebin"], [197, 1, 1, "", "record"], [197, 1, 1, "", "reduce"], [197, 1, 1, "", "remove"], [197, 1, 1, "", "resample"], [197, 1, 1, "", "resize"], [197, 1, 1, "", "reverse"], [197, 1, 1, "", "rotate"], [197, 1, 1, "", "scale"], [197, 1, 1, "", "scanf"], [197, 1, 1, "", "scantil"], [197, 1, 1, "", "set"], [197, 1, 1, "", "setrand"], [197, 1, 1, "", "sin"], [197, 1, 1, "", "size"], [197, 1, 1, "", "smhist"], [197, 1, 1, "", "sort"], [197, 1, 1, "", "sortindex"], [197, 1, 1, "", "spctrm"], [197, 1, 1, "", "spikebin"], [197, 1, 1, "", "sqrt"], [197, 1, 1, "", "stderr"], [197, 1, 1, "", "stdev"], [197, 1, 1, "", "sub"], [197, 1, 1, "", "sum"], [197, 1, 1, "", "sumgauss"], [197, 1, 1, "", "sumsq"], [197, 1, 1, "", "tanh"], [197, 1, 1, "", "to_python"], [197, 1, 1, "", "trigavg"], [197, 1, 1, "", "var"], [197, 1, 1, "", "vread"], [197, 1, 1, "", "vwrite"], [197, 1, 1, "", "where"], [197, 2, 1, "", "x"], [326, 5, 1, "", "abs"], [326, 5, 1, "", "add"], [326, 5, 1, "", "addrand"], [326, 5, 1, "", "append"], [326, 5, 1, "", "apply"], [326, 5, 1, "", "as_numpy"], [326, 5, 1, "", "at"], [326, 5, 1, "", "buffer_size"], [326, 5, 1, "", "c"], [326, 5, 1, "", "cl"], [326, 5, 1, "", "contains"], [326, 5, 1, "", "convlv"], [326, 5, 1, "", "copy"], [326, 5, 1, "", "correl"], [326, 5, 1, "", "deriv"], [326, 5, 1, "", "div"], [326, 5, 1, "", "dot"], [326, 5, 1, "", "eq"], [326, 5, 1, "", "fft"], [326, 5, 1, "", "fill"], [326, 5, 1, "", "filter"], [326, 5, 1, "", "fit"], [326, 5, 1, "", "floor"], [326, 5, 1, "", "fread"], [326, 5, 1, "", "from_double"], [326, 5, 1, "", "from_python"], [326, 5, 1, "", "fwrite"], [326, 5, 1, "", "get"], [326, 5, 1, "", "hist"], [326, 5, 1, "", "histogram"], [326, 5, 1, "", "ind"], [326, 5, 1, "", "index"], [326, 5, 1, "", "indgen"], [326, 5, 1, "", "indvwhere"], [326, 5, 1, "", "indwhere"], [326, 5, 1, "", "inf"], [326, 5, 1, "", "insrt"], [326, 5, 1, "", "integral"], [326, 5, 1, "", "interpolate"], [326, 5, 1, "", "label"], [326, 5, 1, "", "line"], [326, 5, 1, "", "log"], [326, 5, 1, "", "log10"], [326, 5, 1, "", "mag"], [326, 5, 1, "", "mark"], [326, 5, 1, "", "max"], [326, 5, 1, "", "max_ind"], [326, 5, 1, "", "mean"], [326, 5, 1, "", "meansqerr"], [326, 5, 1, "", "medfltr"], [326, 5, 1, "", "median"], [326, 5, 1, "", "min"], [326, 5, 1, "", "min_ind"], [326, 5, 1, "", "mul"], [326, 5, 1, "", "play"], [326, 5, 1, "", "play_remove"], [326, 5, 1, "", "plot"], [326, 5, 1, "", "ploterr"], [326, 5, 1, "", "pow"], [326, 5, 1, "", "printf"], [326, 5, 1, "", "psth"], [326, 5, 1, "", "rebin"], [326, 5, 1, "", "record"], [326, 5, 1, "", "reduce"], [326, 5, 1, "", "remove"], [326, 5, 1, "", "resample"], [326, 5, 1, "", "resize"], [326, 5, 1, "", "reverse"], [326, 5, 1, "", "rotate"], [326, 5, 1, "", "scale"], [326, 5, 1, "", "scanf"], [326, 5, 1, "", "scantil"], [326, 5, 1, "", "set"], [326, 5, 1, "", "setrand"], [326, 5, 1, "", "sin"], [326, 5, 1, "", "size"], [326, 5, 1, "", "smhist"], [326, 5, 1, "", "sort"], [326, 5, 1, "", "sortindex"], [326, 5, 1, "", "spctrm"], [326, 5, 1, "", "spikebin"], [326, 5, 1, "", "sqrt"], [326, 5, 1, "", "stderr"], [326, 5, 1, "", "stdev"], [326, 5, 1, "", "sub"], [326, 5, 1, "", "sum"], [326, 5, 1, "", "sumgauss"], [326, 5, 1, "", "sumsq"], [326, 5, 1, "", "tanh"], [326, 5, 1, "", "to_python"], [326, 5, 1, "", "trigavg"], [326, 5, 1, "", "var"], [326, 5, 1, "", "vread"], [326, 5, 1, "", "vwrite"], [326, 5, 1, "", "where"], [326, 6, 1, "", "x"]], "neuron.h": [[208, 0, 1, "", "Section"], [208, 1, 1, "", "cas"], [337, 4, 1, "", "Section"], [337, 5, 1, "", "cas"]], "neuron.hoc": [[208, 0, 1, "", "HocObject"], [208, 1, 1, "", "execute"], [208, 1, 1, "", "hoc_ac"], [337, 4, 1, "", "HocObject"], [337, 5, 1, "", "execute"], [337, 5, 1, "", "hoc_ac"]], "pnt": [[148, 1, 1, "", "get_loc"], [148, 1, 1, "", "get_segment"], [148, 1, 1, "", "has_loc"], [148, 1, 1, "", "loc"], [276, 5, 1, "", "get_loc"], [276, 5, 1, "", "get_segment"], [276, 5, 1, "", "has_loc"], [276, 5, 1, "", "loc"]], "rxd": [[158, 0, 1, "", "Extracellular"], [158, 0, 1, "", "MultiCompartmentReaction"], [158, 0, 1, "", "Parameter"], [158, 0, 1, "", "Rate"], [158, 0, 1, "", "Reaction"], [158, 0, 1, "", "Region"], [158, 0, 1, "", "RxDException"], [158, 0, 1, "", "Species"], [158, 0, 1, "", "State"], [158, 3, 1, "", "nthread"], [158, 3, 1, "", "re_init"], [158, 3, 1, "", "set_solve_type"], [286, 4, 1, "", "DistributedBoundary"], [286, 4, 1, "", "Extracellular"], [286, 4, 1, "", "FixedCrossSection"], [286, 4, 1, "", "FixedPerimeter"], [286, 4, 1, "", "FractionalVolume"], [286, 4, 1, "", "MultiCompartmentReaction"], [286, 4, 1, "", "Parameter"], [286, 4, 1, "", "Rate"], [286, 4, 1, "", "Reaction"], [286, 4, 1, "", "Region"], [286, 4, 1, "", "RxDException"], [286, 4, 1, "", "ScalableBorder"], [286, 4, 1, "", "Shell"], [286, 4, 1, "", "Species"], [286, 4, 1, "", "State"], [286, 7, 1, "", "inside"], [286, 7, 1, "", "membrane"], [286, 8, 1, "", "nthread"], [286, 8, 1, "", "re_init"], [286, 8, 1, "", "set_solve_type"], [286, 11, 1, "", "v"]], "rxd.nodelist": [[158, 0, 1, "", "NodeList"], [286, 4, 1, "", "NodeList"]], "Section": [[289, 5, 1, "", "cell"], [289, 5, 1, "", "connect"], [289, 5, 1, "", "disconnect"], [289, 5, 1, "", "hname"], [289, 5, 1, "", "name"], [289, 6, 1, "", "nseg"], [289, 5, 1, "", "orientation"], [289, 5, 1, "", "parentseg"], [289, 5, 1, "", "subtree"], [289, 5, 1, "", "wholetree"]], "neuron": [[329, 10, 1, "", "HocError"], [329, 4, 1, "", "Wrapper"], [329, 8, 1, "", "format_exception"], [329, 8, 1, "", "init"], [329, 8, 1, "", "load_mechanisms"], [329, 8, 1, "", "new_hoc_class"], [329, 8, 1, "", "new_point_process"], [329, 8, 1, "", "nrn_dll"], [329, 8, 1, "", "nrn_dll_sym"], [329, 8, 1, "", "nrn_dll_sym_nt"], [329, 8, 1, "", "numpy_element_ref"], [329, 8, 1, "", "quit"], [329, 8, 1, "", "register_savestate"], [329, 8, 1, "", "run"], [329, 8, 1, "", "test"], [329, 8, 1, "", "test_rxd"], [329, 8, 1, "", "xopen"]], "rxd.Reaction": [[286, 11, 1, "", "b_rate"], [286, 11, 1, "", "f_rate"]], "rxd.Region": [[286, 11, 1, "", "geometry"], [286, 11, 1, "", "name"], [286, 11, 1, "", "nrn_region"], [286, 11, 1, "", "secs"]], "rxd.Species": [[286, 11, 1, "", "charge"], [286, 5, 1, "", "concentrations"], [286, 5, 1, "", "defined_on_region"], [286, 5, 1, "", "indices"], [286, 11, 1, "", "name"], [286, 11, 1, "", "nodes"], [286, 5, 1, "", "re_init"], [286, 11, 1, "", "regions"], [286, 11, 1, "", "states"]], "rxd.export": [[286, 8, 1, "", "sbml"]], "rxd.node": [[286, 4, 1, "", "Node"], [286, 4, 1, "", "Node1D"], [286, 4, 1, "", "Node3D"], [286, 4, 1, "", "NodeExtracellular"]], "rxd.node.Node": [[286, 11, 1, "", "_ref_concentration"], [286, 11, 1, "", "_ref_molecules"], [286, 11, 1, "", "_ref_value"], [286, 11, 1, "", "concentration"], [286, 11, 1, "", "d"], [286, 5, 1, "", "include_flux"], [286, 11, 1, "", "molecules"], [286, 11, 1, "", "region"], [286, 5, 1, "", "satisfies"], [286, 11, 1, "", "species"], [286, 11, 1, "", "value"], [286, 11, 1, "", "volume"], [286, 11, 1, "", "x3d"], [286, 11, 1, "", "y3d"], [286, 11, 1, "", "z3d"]], "rxd.node.Node1D": [[286, 5, 1, "", "satisfies"], [286, 11, 1, "", "sec"], [286, 11, 1, "", "segment"], [286, 11, 1, "", "surface_area"], [286, 11, 1, "", "x"]], "rxd.node.Node3D": [[286, 5, 1, "", "satisfies"], [286, 11, 1, "", "sec"], [286, 11, 1, "", "segment"], [286, 11, 1, "", "surface_area"]], "rxd.node.NodeExtracellular": [[286, 5, 1, "", "satisfies"]], "rxd.nodelist.NodeList": [[286, 11, 1, "", "_ref_concentration"], [286, 11, 1, "", "_ref_value"], [286, 11, 1, "", "concentration"], [286, 11, 1, "", "diff"], [286, 5, 1, "", "include_flux"], [286, 11, 1, "", "region"], [286, 11, 1, "", "segment"], [286, 11, 1, "", "species"], [286, 11, 1, "", "surface_area"], [286, 11, 1, "", "value"], [286, 5, 1, "", "value_to_grid"], [286, 11, 1, "", "volume"], [286, 11, 1, "", "x"]], "rxdmath": [[287, 8, 1, "", "acos"], [287, 8, 1, "", "acosh"], [287, 8, 1, "", "asin"], [287, 8, 1, "", "asinh"], [287, 8, 1, "", "atan"], [287, 8, 1, "", "atan2"], [287, 8, 1, "", "ceil"], [287, 8, 1, "", "copysign"], [287, 8, 1, "", "cos"], [287, 8, 1, "", "cosh"], [287, 8, 1, "", "degrees"], [287, 8, 1, "", "erf"], [287, 8, 1, "", "erfc"], [287, 8, 1, "", "exp"], [287, 8, 1, "", "expm1"], [287, 8, 1, "", "fabs"], [287, 8, 1, "", "factorial"], [287, 8, 1, "", "floor"], [287, 8, 1, "", "fmod"], [287, 8, 1, "", "gamma"], [287, 8, 1, "", "lgamma"], [287, 8, 1, "", "log"], [287, 8, 1, "", "log10"], [287, 8, 1, "", "log1p"], [287, 8, 1, "", "pow"], [287, 8, 1, "", "radians"], [287, 8, 1, "", "sin"], [287, 8, 1, "", "sinh"], [287, 8, 1, "", "sqrt"], [287, 8, 1, "", "tan"], [287, 8, 1, "", "tanh"], [287, 8, 1, "", "trunc"], [287, 8, 1, "", "vtrap"]]}, "objtypes": {"0": "hoc:class", "1": "hoc:method", "2": "hoc:data", "3": "hoc:function", "4": "py:class", "5": "py:method", "6": "py:data", "7": "py:attribute", "8": "py:function", "9": "py:module", "10": "py:exception", "11": "py:property"}, "objnames": {"0": ["hoc", "class", "HOC class"], "1": ["hoc", "method", "HOC method"], "2": ["hoc", "data", "HOC data"], "3": ["hoc", "function", "HOC function"], "4": ["py", "class", "Python class"], "5": ["py", "method", "Python method"], "6": ["py", "data", "Python data"], "7": ["py", "attribute", "Python attribute"], "8": ["py", "function", "Python function"], "9": ["py", "module", "Python module"], "10": ["py", "exception", "Python exception"], "11": ["py", "property", "Python property"]}, "titleterms": {"neuron": [0, 1, 3, 4, 9, 25, 26, 29, 38, 46, 47, 53, 54, 55, 58, 59, 71, 77, 78, 81, 84, 88, 93, 95, 113, 114, 115, 117, 121, 122, 135, 150, 161, 200, 224, 237, 242, 244, 245, 247, 248, 249, 263, 278, 290, 313, 329, 353, 369, 370, 373, 379, 380, 381, 382, 385, 388, 390, 392, 393], "document": [0, 121, 135, 263, 379], "onlin": [0, 389, 390, 392, 393], "local": [0, 3, 93, 149, 277, 369], "build": [0, 2, 8, 12, 224, 240, 242, 244, 245, 353, 383, 390, 392, 393], "setup": [0, 58, 369, 373], "faster": 0, "iter": [0, 181, 310, 387], "readthedoc": 0, "config": 0, "file": [0, 4, 8, 14, 28, 42, 47, 48, 61, 71, 81, 93, 94, 98, 114, 117, 119, 122, 184, 187, 188, 224, 228, 313, 316, 317, 353, 357, 373, 375], "handl": [0, 76, 158, 166, 286, 295], "rtd": 0, "leverag": 0, "conf": 0, "py": [0, 10, 13], "notebook": [0, 56], "execut": [0, 4, 52, 61, 62, 165, 213, 294, 342], "wheel": [0, 242, 244], "new": [0, 1, 28, 47, 71, 77, 78, 102, 114, 115, 202, 331, 390], "releas": [0, 379, 380, 381], "8": [1, 388], "2": [1, 38, 39, 41, 46, 48, 61, 62, 71, 75, 84, 89, 91, 101, 104, 106, 107, 112, 370, 383, 388, 392, 393], "1": [1, 38, 39, 41, 46, 48, 61, 62, 75, 89, 91, 99, 102, 103, 113, 370, 382, 388, 392, 393], "what": [1, 14, 25, 42, 46, 47, 71, 75, 81, 88, 91, 98, 104, 118, 119, 121, 388], "": [1, 25, 42, 46, 47, 58, 62, 71, 75, 81, 86, 88, 98, 101, 119, 122, 379, 388, 390], "bug": 1, "fix": [1, 42, 73, 81, 98, 119], "improv": 1, "other": [1, 3, 32, 37, 50, 71, 87, 88, 228, 247, 357, 379, 390], "chang": [1, 59, 71, 79, 87, 89, 91, 368, 379], "0": [1, 3, 48, 89, 93], "break": [1, 56], "deprec": [1, 93, 379, 380], "futur": [1, 84], "upgrad": 1, "step": [1, 7, 48, 61, 62, 71, 89, 91, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 116, 124, 224, 227, 251, 353, 356, 371, 388], "contributor": 1, "feedback": 1, "help": [1, 71, 228, 357, 388], "cmake": [2, 242], "option": [2, 3, 134, 158, 261, 286, 370], "introduct": [3, 31, 32, 33, 76, 83, 84, 149, 277, 368, 379, 387, 392], "gener": [3, 4, 32, 37, 51, 58, 71, 89, 91, 95, 107, 121, 128, 148, 149, 196, 227, 255, 276, 277, 325, 356, 383, 384, 392], "cmake_install_prefix": 3, "path": [3, 25, 213, 224, 342, 353], "where": [3, 71, 368], "nrn": 3, "should": [3, 29, 71], "instal": [3, 7, 58, 71, 77, 208, 237, 241, 242, 245], "cmake_build_typ": 3, "string": [3, 28, 210, 211, 212, 339, 340, 341, 387], "relwithdebinfo": 3, "ninja": 3, "interview": 3, "nrn_enable_interview": 3, "bool": 3, "ON": 3, "iv_dir": 3, "extern": [3, 150, 202, 278, 331], "iv_enable_shar": 3, "off": 3, "iv_enable_x11_dynam": 3, "iv_enable_x11_dynamic_make_head": 3, "mpi": [3, 35, 155, 239, 244, 283, 385], "nrn_enable_mpi": 3, "nrn_enable_mpi_dynam": 3, "nrn_mpi_dynam": 3, "python": [3, 46, 208, 236, 242, 244, 263, 337, 376, 386, 387, 388, 393], "nrn_enable_python": 3, "nrn_enable_python_dynam": 3, "nrn_python_dynam": 3, "python_execut": 3, "nrn_enable_module_instal": 3, "nrn_module_install_opt": 3, "home": 3, "usr": 3, "nrn_enable_rx3d": 3, "nrn_rx3d_opt_level": 3, "coreneuron": [3, 4, 6, 7, 8, 242], "nrn_enable_coreneuron": 3, "nrn_enable_mod_compat": 3, "occasion": 3, "us": [3, 14, 24, 28, 30, 31, 45, 46, 48, 49, 60, 61, 62, 71, 75, 77, 78, 81, 85, 87, 88, 89, 91, 98, 114, 116, 117, 118, 119, 120, 122, 134, 242, 244, 247, 249, 261, 370, 388, 390], "advanc": [3, 382], "cmake_c_compil": 3, "filepath": 3, "bin": [3, 76], "cc": 3, "cmake_cxx_compil": 3, "c": [3, 47, 57, 71, 93, 102, 105, 107], "nrn_enable_doc": 3, "nrn_extra_cxx_flag": 3, "nrn_extra_mech_cxx_flag": 3, "nrn_nmodl_cxx_flag": 3, "readline_root_dir": 3, "nrn_enable_test": 3, "nrn_enable_coverag": 3, "nrn_coverage_fil": 3, "nrn_cmake_format": 3, "nrn_clang_format": 3, "nrn_sanit": 3, "miscellan": [3, 54, 132, 171, 182, 195, 213, 224, 259, 300, 311, 324, 342, 353], "rare": [3, 134, 261], "specif": [3, 13, 61, 62, 89, 91, 116, 121, 135, 136, 141, 161, 263, 264, 269, 290, 371], "nrn_enable_discrete_event_observ": 3, "nrn_dynamic_units_use_legaci": 3, "nrn_enable_mech_dll_styl": 3, "nrn_enable_shar": 3, "nrn_enable_thread": 3, "nrn_use_rel_rpath": 3, "nrn_enable_backtrac": 3, "compat": 4, "unsupport": 4, "featur": [4, 122, 365], "mod": [4, 8, 29, 38, 71, 93, 117, 373], "thread": 4, "safe": 4, "tabl": [4, 149, 277], "usag": [4, 10, 13, 77, 149, 277], "With": 4, "gpu": [4, 53, 239, 242], "onli": 4, "explicit": 4, "ion": [4, 59, 144, 158, 272, 286, 373, 388, 393], "variabl": [4, 75, 76, 118, 206, 224, 262, 335, 353, 371, 373, 387, 388], "updat": [4, 58], "random": [4, 95, 196, 325, 393], "number": [4, 28, 54, 196, 325, 387], "random123": 4, "v": [4, 25, 61, 74, 379, 385], "mcellran4": 4, "memori": 4, "manag": [4, 34, 42, 62, 71, 91, 94, 98, 119, 139, 207, 219, 224, 228, 267, 336, 348, 353, 357, 379, 380], "pointer": [4, 93, 149, 150, 203, 204, 209, 277, 278, 332, 333, 338], "argument": [4, 54, 114, 115, 181, 310], "bbcore_read": 4, "bbcore_writ": 4, "have": [4, 28, 71], "question": [4, 14, 71], "exampl": [5, 46, 52, 58, 69, 70, 71, 72, 84, 207, 247, 336, 368, 371, 372, 373, 374, 376, 385], "get": [7, 24, 35, 45, 47, 54, 62, 71, 77, 78, 375, 388], "pip": 7, "from": [7, 29, 37, 71, 74, 94, 121, 161, 187, 290, 316, 375, 379, 380, 390], "sourc": [7, 10, 13, 37, 47, 52, 95, 242, 379], "compil": [7, 71, 117, 134, 261], "select": [7, 37, 42, 89, 98, 119, 164, 293], "instruct": [7, 238], "run": [8, 10, 11, 29, 53, 71, 88, 89, 91, 96, 97, 124, 129, 215, 224, 239, 242, 251, 256, 344, 353, 369, 372, 373, 382, 383, 388], "simul": [8, 13, 28, 30, 31, 32, 33, 36, 37, 44, 45, 51, 58, 59, 96, 97, 121, 135, 220, 237, 263, 349, 369, 372, 373, 382, 383, 388, 390, 393], "enabl": [8, 371], "artifici": [9, 32, 102, 113, 148, 276, 390], "cell": [9, 10, 11, 29, 32, 37, 45, 46, 60, 61, 62, 71, 75, 91, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 148, 276, 382, 383, 384, 388, 390, 392, 393], "batch": [10, 11, 215, 344, 392], "bulletin": [10, 11, 13], "board": [10, 11, 13], "parallel": [10, 11, 35, 155, 283, 385, 393], "physic": [10, 11, 24, 30, 31, 33, 36, 43, 44, 45, 46], "system": [10, 11, 24, 30, 31, 33, 36, 43, 44, 45, 46, 121, 122, 190, 213, 319, 342], "comput": [10, 11, 24, 30, 31, 35, 43, 45, 49, 69, 70, 121], "implement": [10, 11, 24, 29, 30, 31, 45, 46, 71, 90, 155, 283], "The": [10, 11, 25, 32, 37, 42, 43, 60, 76, 88, 90, 91, 94, 95, 98, 119, 121, 122, 236, 237, 369, 373, 382, 388], "model": [10, 11, 13, 24, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 58, 59, 61, 62, 69, 70, 71, 75, 81, 84, 90, 91, 95, 101, 114, 115, 116, 121, 122, 135, 136, 141, 149, 263, 264, 269, 277, 369, 373, 374, 379, 385, 392], "code": [10, 11, 13, 28, 32, 37, 46, 52, 61, 71, 95, 165, 236, 238, 294], "develop": [10, 11, 55, 121, 236, 240], "strategi": [10, 11, 61, 62, 91, 370], "initonerun": [10, 11, 13], "descript": [10, 13, 72, 89, 91, 149, 277], "initbats": [10, 11, 13], "initbatpar": [10, 11, 13], "thing": [10, 11, 40], "do": [10, 11, 28, 46, 54, 56, 59, 71, 88, 91, 117], "hoc": [11, 28, 29, 32, 37, 52, 61, 71, 76, 135, 143, 180, 181, 191, 201, 208, 271, 309, 310, 320, 330, 331, 337, 393], "label": [12, 79], "two": 12, "electrod": [12, 139, 142, 267, 270], "voltag": 12, "clamp": [12, 59, 71, 91], "linear": [12, 33, 149, 277], "circuit": [12, 33, 393], "builder": [12, 32, 33, 60, 85, 106, 107, 224, 353], "walkthrough": 13, "paramet": [13, 44, 84, 89, 91, 100, 101, 109, 111, 128, 149, 199, 200, 255, 277, 328, 329, 367, 371, 372, 384, 392], "instrument": [13, 239, 382], "control": [13, 58, 76, 121, 135, 185, 199, 220, 224, 263, 314, 328, 349, 353], "report": 13, "result": [13, 239, 382, 387, 388], "parallelcontext": [13, 155, 283], "cellbuild": [14, 37, 45, 61, 62, 137, 224, 265, 353], "overview": [14, 27, 81, 158, 161, 286, 290, 368, 369, 371, 373], "hint": [14, 89, 91], "start": [14, 24, 35, 45, 76, 77, 78, 117, 375], "save": [14, 29, 42, 45, 58, 61, 71, 98, 119, 215, 223, 224, 286, 344, 352, 353, 388], "your": [14, 28, 46, 49, 61, 236], "work": [14, 29, 47, 50, 54, 59, 88, 121, 122, 236], "check": [14, 54, 56], "you": [14, 28, 46, 50, 236], "answer": 14, "about": [14, 78, 91, 248], "session": [14, 42, 61, 71, 98, 119, 223, 228, 352, 357], "se": [14, 42, 71, 98, 119], "custom": [24, 87], "initi": [24, 52, 121, 149, 277, 367, 370, 373, 375, 393], "conceptu": [24, 30, 31, 43, 45, 69, 70, 90, 161, 290], "exercis": [24, 25, 26, 28, 29, 30, 31, 32, 37, 38, 39, 41, 43, 45, 47, 122, 382, 392, 393], "steadi": [24, 370], "state": [24, 44, 149, 277, 286, 370, 372], "special": 24, "credit": [24, 89], "electroton": [25, 71], "analysi": [25, 71, 123, 130, 135, 197, 250, 257, 263, 326, 392], "all": [25, 42, 58, 98, 119, 236], "thi": [25, 71, 89, 91, 102], "frequenc": [25, 224, 353], "tool": [25, 47, 71, 81, 88, 89, 91, 102, 122, 123, 125, 130, 136, 224, 250, 252, 257, 264, 353], "log": [25, 89], "A": [25, 47, 62, 90, 91, 99, 100, 102, 103, 106, 107, 108, 110, 121, 247, 374, 379, 383, 393], "x": [25, 35], "shape": [25, 47, 50, 71, 87, 161, 224, 234, 290, 353, 363], "cours": [26, 390, 392, 393], "task": 27, "detail": [27, 47, 90], "anyth": [28, 71], "explicitli": 28, "declar": [28, 54, 93, 372], "i": [28, 42, 46, 54, 59, 71, 88, 98, 117, 119, 121, 236, 388, 392], "assum": 28, "object": [28, 54, 182, 202, 311, 313, 331, 387], "oper": [28, 50, 379], "numer": [28, 39, 71, 158, 286, 390, 393], "function": [28, 53, 71, 76, 86, 89, 93, 100, 114, 115, 149, 158, 191, 203, 220, 224, 277, 286, 287, 293, 320, 332, 349, 353, 370, 372, 387, 388], "data": [28, 40, 47, 51, 71, 81, 89, 91, 161, 290, 368, 392], "type": [28, 32, 54, 61, 71, 93, 102, 103, 106, 387], "includ": [28, 149, 277], "vector": [28, 71, 197, 224, 326, 353], "graph": [28, 29, 71, 74, 87, 122, 224, 226, 228, 353, 355, 357], "list": [28, 71, 169, 298, 387], "after": [28, 150, 278], "creat": [28, 61, 62, 71, 87, 91, 94, 106, 107, 236, 379, 382, 388], "refer": [28, 41, 54, 84, 90, 121, 379, 380], "can": [28, 42, 71, 98, 102, 103, 104, 119], "point": [28, 148, 276], "old": 28, "an": [28, 47, 54, 58, 71, 81, 89, 91, 94, 104, 106, 107], "arrai": 28, "objref": [28, 202, 331], "block": [28, 114, 115], "condit": [28, 375], "procedur": [28, 29, 71, 76, 149, 277], "built": [28, 71, 86], "record": [28, 71, 372, 373, 375, 382, 383, 388], "analyz": [28, 46], "roll": 28, "own": [28, 46, 49, 236], "gui": [28, 29, 31, 60, 71, 81, 89, 102, 114, 123, 136, 179, 228, 236, 250, 264, 307, 308, 357, 390, 392, 393], "hopfield": 29, "brodi": 29, "synchron": [29, 158, 286], "sync": 29, "standard": [29, 186, 224, 315, 353], "intfir": 29, "eg": 29, "intfire1": 29, "intibfir": 29, "templat": 29, "network": [29, 32, 37, 69, 70, 75, 83, 85, 106, 107, 108, 110, 113, 121, 152, 155, 280, 283, 383, 384, 390, 392, 393], "how": [29, 42, 46, 54, 59, 71, 74, 75, 77, 78, 79, 80, 87, 94, 95, 98, 117, 119, 236, 245, 368], "gain": 29, "familiar": [29, 121], "increas": 29, "100": 29, "narrow": 29, "differ": [29, 68, 71, 239], "between": [29, 68, 71], "fast": [29, 379], "slow": 29, "so": 29, "make": [29, 45, 59, 71, 112, 113, 384, 387], "more": [29, 45, 388, 393], "them": [29, 71, 98, 119], "fire": [29, 107], "reduc": 29, "inhibit": 29, "demonstr": [29, 95], "synchroni": 29, "worsen": 29, "time": [29, 71, 91, 213, 236, 342, 371], "constant": [29, 149, 189, 277, 318], "beyond": 29, "displai": [29, 84, 224, 353, 387], "spike": [29, 71, 95, 96, 97, 102, 103, 107, 385, 390], "look": [29, 47, 58, 81, 228, 357], "like": [29, 47, 71, 81], "spikeplot1": 29, "measur": [29, 91], "interval2": 29, "ocomm": 29, "set": [29, 61, 62, 71, 91, 99, 108, 110, 170, 244, 247, 299, 387, 388], "period": 29, "randomli": 29, "rewir": 29, "assess": 29, "connect": [29, 32, 37, 108, 109, 110, 111, 150, 278, 382, 383], "anim": 29, "interact": 30, "hodgkin": [30, 158, 286], "huxlei": 30, "cabl": 30, "equat": 30, "defin": [32, 102, 103, 149, 158, 161, 277, 286, 290, 372, 382], "creation": [32, 37], "automat": [32, 37], "fly": 34, "mswin": 35, "mac": [35, 117, 242, 243, 392], "o": [35, 242], "linux": [35, 238, 242, 244, 392], "go": [35, 42, 75, 98, 119], "further": [35, 122], "multithread": 36, "paralel": 36, "readi": 37, "ball": [37, 45, 382, 383, 384, 385, 386], "stick": [37, 45, 61, 382, 383, 384, 385, 386], "synaps": [37, 104, 105, 383, 392], "stimul": [37, 382], "target": 37, "script": [38, 114, 247, 388, 390, 393], "3": [38, 39, 41, 46, 48, 56, 61, 62, 75, 89, 91, 100, 105, 108, 109, 110, 111, 161, 290, 370, 384, 388, 392], "4": [38, 39, 41, 46, 61, 62, 75, 89, 91, 116, 370, 385, 388], "5": [38, 39, 61, 62, 71, 74, 89, 91, 388, 392], "6": [38, 39, 61, 89, 91, 388, 392], "halfgap": 38, "method": [39, 388, 390, 393], "qualiti": 40, "issu": 40, "morphometr": [40, 47, 81], "import": [40, 47, 56, 200, 329, 369, 373, 387, 388, 392], "keep": 40, "mind": 40, "reaction": [41, 90, 158, 286, 368, 369, 372, 375, 376, 378, 390], "diffus": [41, 59, 158, 286, 368, 375, 376, 378, 390], "window": [42, 71, 94, 98, 119, 122, 224, 228, 231, 236, 242, 245, 353, 357, 360], "when": [42, 50, 71, 98, 119], "print": [42, 71, 94, 223, 228, 352, 357], "pfwm": 42, "wrong": [42, 98, 119], "inhomogen": [43, 375], "channel": [43, 59, 90, 147, 217, 275, 346, 373, 388, 393], "distribut": [43, 224, 242, 353], "discontinu": 44, "approxim": 45, "represent": [45, 46], "biolog": 45, "properti": [45, 63, 103, 293, 388], "retriev": [45, 98, 119, 228, 357], "experiment": [45, 89, 91], "rig": 45, "footnot": [45, 379], "asid": [45, 388], "modeldb": [46, 84, 390, 393], "moor": 46, "et": [46, 84], "al": [46, 84], "1983": 46, "yale": 46, "edu": 46, "9852": 46, "being": 46, "repres": [46, 150, 278], "purpos": [46, 121], "wa": 46, "examin": 46, "view": [46, 80, 89, 91, 357], "discov": 46, "underli": 46, "user": [46, 121], "interfac": [46, 121, 393], "anoth": 46, "mainen": 46, "sejnowski": 46, "1996": 46, "2488": 46, "reus": 46, "one": 46, "design": [46, 179, 308], "import3d": [47, 81], "b": [47, 62, 99, 100, 102, 103, 106, 107, 109, 111], "choos": [47, 81, 89, 91, 94], "read": [47, 71, 81, 150, 161, 187, 278, 290, 316, 368, 393], "let": [47, 58, 81], "see": [47, 71, 76, 81, 89, 91], "d": [47, 71, 102, 161, 290], "export": [47, 61, 81, 286], "e": [47, 71], "take": [47, 93], "f": 47, "zoom": [47, 81], "litmu": 47, "test": [47, 53, 89, 91, 242, 244, 384, 385], "complex": [47, 62], "architectur": [47, 108, 110], "quantit": 47, "anatomi": [47, 62], "caveat": 47, "nmodl": [48, 71, 77, 78, 86, 114, 149, 150, 277, 278, 370, 390], "neurosci": 49, "gatewai": 49, "nsg": 49, "portal": 49, "On": [49, 373], "plot": [50, 71, 75, 79, 87, 96, 97, 118, 124, 227, 230, 251, 356, 357, 359, 372, 373, 382, 383, 388, 392], "rotat": 50, "re": [50, 71], "done": [50, 71, 100], "deal": 51, "lot": 51, "comment": [51, 122, 149, 181, 277, 310], "suggest": 51, "interpret": [52, 76, 114, 121, 219, 348], "background": [52, 71, 87], "grammar": 52, "machin": [52, 213, 342], "printf": [52, 186, 315], "access": [53, 182, 184, 208, 311, 313, 337, 388], "resourc": [53, 286, 390], "manual": 53, "guid": [54, 82, 379], "pyobject": 54, "To": [54, 78], "wrap": [54, 390], "encapsul": 54, "derefer": 54, "exist": [54, 379], "valu": [54, 71, 89, 91, 228, 239, 357], "class": [54, 75, 102, 103, 105, 196, 204, 211, 325, 333, 340, 383, 384, 387], "hoccommand": 54, "tip": [54, 122], "rais": 54, "error": [54, 71, 76, 158, 166, 286, 295], "name": [54, 75, 76, 89, 91, 102, 200, 329], "intern": [54, 182, 311], "symbol": 54, "topic": 55, "bokeh": [56, 388], "seem": [56, 71], "doc": 56, "next": 56, "line": 56, "api": 57, "movi": 58, "matplotlib": [58, 388], "load": [58, 89, 91, 165, 294, 372, 382, 384, 388], "morphologi": [58, 59, 369, 372, 382, 393], "definit": [58, 93, 114, 115, 379], "imag": [58, 122, 244], "put": 58, "togeth": [58, 150, 278], "mp4": 58, "biologi": [59, 121], "faq": [59, 71, 242], "current": [59, 71, 91, 382], "puls": [59, 71], "experi": [59, 91, 122], "non": [59, 93], "behavior": 59, "cytosol": 59, "concentr": [59, 71, 217, 346, 367, 370], "respons": [59, 91], "activ": 59, "respond": 59, "tutori": [60, 85, 88, 89, 91, 112, 113, 115, 375, 376, 386, 389, 390, 392], "styliz": [61, 161, 290, 382], "figur": [61, 71, 122], "bring": [61, 89, 379], "up": [61, 62, 89, 91, 99, 108, 110, 122, 244, 247, 379, 388, 390], "specifi": [61, 62, 63, 71, 89, 91, 99, 100, 101, 102, 103, 104, 109, 111, 118, 158, 286, 382], "topologi": [61, 160, 289, 388], "subset": [61, 62, 99], "geometri": [61, 158, 161, 286, 290, 382], "biophys": [61, 62, 63, 75, 103, 121, 382, 388, 390], "continu": [61, 109, 111], "modular": 61, "program": [61, 76, 135, 202, 263, 331], "reusabl": 61, "alwai": 61, "configur": [61, 91], "spatial": [62, 121], "grid": 62, "parameter": [63, 224, 353], "variat": 63, "idraw": [68, 122, 228, 357], "coreldraw": 68, "hybrid": [69, 112], "simpl": [70, 247, 368], "frequent": 71, "ask": 71, "now": 71, "ve": 71, "best": [71, 379], "wai": [71, 184], "learn": [71, 78, 236], "m": [71, 103, 104, 105], "hard": 71, "why": [71, 88, 98, 119], "t": [71, 221, 236, 350], "text": [71, 176, 305], "copi": 71, "someth": 71, "than": 71, "membran": [71, 158, 286], "potenti": [71, 158, 286], "edit": [71, 76, 89, 122, 224, 353], "main": [71, 224, 353], "menu": [71, 128, 171, 176, 224, 228, 255, 300, 305, 353, 357], "construct": [71, 76, 83, 383], "odd": 71, "nseg": [71, 382], "good": 71, "stretegi": 71, "color": [71, 79, 87], "scale": [71, 89, 393], "messag": 71, "sai": 71, "too": 71, "big": 71, "foo": 71, "find": [71, 75], "version": [71, 379, 380], "mecan": 71, "fooba": 71, "need": [71, 81, 89, 91, 102, 103, 105, 106, 107, 108, 109, 110, 111], "translat": [71, 80, 228, 357], "its": [71, 369], "incompat": 71, "ar": [71, 93], "unit": [71, 114, 115, 149, 277, 372], "doe": [71, 88], "etc": [71, 147, 158, 275, 286], "field": [71, 170, 299], "doesn": 71, "ani": 71, "effect": [71, 384], "seclamp": 71, "vclamp": 71, "which": 71, "iclamp": [71, 91], "just": 71, "deliv": 71, "rectangular": 71, "waveform": 71, "produc": 71, "arbitrari": 71, "g": 71, "calcul": 71, "real": 71, "want": [71, 89], "sequenc": 71, "regular": 71, "interv": 71, "plai": [71, 224, 353], "overkil": 71, "send": 71, "event": [71, 217, 346, 390], "precalcul": 71, "drive": 71, "postsynapt": 71, "mechan": [71, 77, 78, 90, 121, 143, 148, 150, 208, 224, 271, 276, 278, 337, 353, 373, 388, 390], "binari": [71, 242, 243], "pclamp": 71, "exit": 71, "enter": 71, "oc": 71, "prompt": 71, "fiinitializehandl": 72, "syntax": [72, 76, 181, 310], "funni": 73, "ax": 73, "delet": [74, 94, 228, 357], "belong": 75, "proper": 75, "instanc": [75, 106, 128, 255], "section": [75, 161, 164, 231, 290, 293, 360, 382, 388], "neuronhom": 76, "cpu": [76, 242], "contain": 76, "interepret": 76, "stand": 76, "alon": 76, "keyword": [76, 201, 330], "introduc": 76, "nrnoc": 76, "express": [76, 158, 181, 286, 287, 310], "statement": [76, 149, 181, 277, 310], "flow": [76, 121, 379], "input": [76, 91, 96, 97, 102, 183, 312, 383], "output": [76, 94, 96, 97, 183, 186, 312, 315], "also": 76, "forum": 77, "basic": [77, 78, 135, 149, 158, 263, 277, 286, 371, 382, 386, 388, 392, 393], "add": [77, 78, 373, 390], "move": 79, "convert": 81, "we": [81, 89, 91, 102, 103, 105, 106, 107, 108, 109, 110, 111], "explor": [81, 384, 392], "problem": [81, 89, 91, 95], "out": [81, 186, 315], "modelview": 84, "compact": 84, "action": 84, "ca1": 84, "pyramid": 84, "layer": 84, "nn": 84, "subthreshold": 84, "synapt": [84, 90, 102, 109, 111, 383, 390], "summat": 84, "poirazi": 84, "2003": 84, "interoper": 84, "goal": 84, "summari": 84, "acknowledg": 84, "colormap": 87, "optim": [88, 89, 91, 133, 242, 260, 392], "call": [88, 213, 342], "multipl": [88, 89, 91, 224, 353], "fitter": [88, 89, 91, 224, 353], "realli": 88, "fit": [89, 91, 128, 224, 255, 353], "download": [89, 375], "give": [89, 91, 102], "our": [89, 106, 383], "form": 89, "adjust": [89, 91, 383], "constrain": [89, 91], "restrict": [89, 170, 299, 369], "space": [89, 158, 286], "criteria": 89, "satisfi": 89, "perform": [89, 91, 239], "mrf": [89, 91], "algorithm": [89, 91], "extra": [89, 129, 256], "scheme": [90, 224, 353, 379, 380], "bind": 90, "r": [90, 93], "dissoci": 90, "arc": 90, "gate": 90, "conserv": [90, 149, 277], "electr": 91, "unoptim": 91, "project": [91, 207, 336], "resist": 91, "multiplerunfitt": 91, "redraw": 91, "again": 91, "proxi": 91, "pitfal": 91, "minim": 91, "principl": 91, "dirti": 91, "contamin": 91, "earli": 91, "late": 91, "note": [91, 155, 283, 373], "adapt": [93, 390], "9": [93, 388, 392], "dev": 93, "legaci": 93, "pattern": 93, "invalid": 93, "implicit": 93, "convers": 93, "prototyp": 93, "incorrect": 93, "k": 93, "consid": 93, "overload": 93, "void": 93, "page": 94, "orient": [94, 202, 313, 331, 383], "posit": [94, 370, 383], "layout": [94, 168, 297], "area": 94, "resiz": 94, "content": 94, "postscript": [94, 122, 228, 357], "ascii": [94, 228, 357], "independ": [95, 121, 149, 227, 277, 356], "stream": 95, "solut": [95, 393], "outlin": [95, 112, 113], "train": [96, 97, 102, 107, 391], "group": [98, 119, 392], "subsetdomainiter": 99, "distanc": [99, 370], "metric": 99, "verifi": 100, "govern": 100, "repeat": 100, "until": 100, "vari": [101, 367], "suppli": [102, 103], "short": 102, "uniqu": 102, "integr": [102, 107, 121, 242, 390], "affer": [103, 107], "motoneuron": 103, "anatom": 103, "kind": 104, "attach": 104, "place": 105, "renshaw": 105, "each": [106, 107], "three": 106, "net": 112, "within": 114, "kinet": [114, 115, 149, 224, 277, 353], "under": 117, "maco": [117, 244], "d_lambda": 120, "rule": [120, 236], "flexibl": 121, "power": 121, "advantag": 121, "over": 121, "separ": 121, "pure": 121, "concern": 121, "idiom": 121, "effici": 121, "painless": 121, "tempor": 121, "discret": [121, 149, 277, 369], "conveni": 121, "graphic": 121, "extend": 121, "librari": [121, 369, 372, 373, 384], "enhanc": 121, "customiz": 121, "larg": 121, "base": [121, 143, 271], "support": [121, 242, 244], "avail": 121, "requir": [121, 379], "dress": 122, "public": [122, 202, 248, 249, 331], "latex": 122, "mswindow": 122, "functionfitt": [124, 251], "independentvar": [124, 227, 251, 356], "arg": [124, 251], "yexpr": [124, 251], "praxisfit": [124, 251], "stopatnextquadform": [124, 129, 251, 256], "watchthefit": [124, 251], "roughfit": [124, 129, 251, 256], "argvalu": [124, 251], "currentvaluesasdefault": [124, 129, 251, 256], "fittodata": [124, 251], "readdatafil": [124, 251], "commonfunctionalform": [124, 251], "fitcriterion": [124, 251], "parameterrangelimit": [124, 251], "dataweight": [124, 129, 251, 256], "saverestorefunct": [124, 251], "imped": [125, 131, 224, 252, 258, 353], "impshap": [125, 252], "impx": [126, 253], "logavsx": [126, 224, 253, 353], "impedanceratio": [127, 254], "mulrunfitt": [128, 255], "panel": [128, 228, 255, 357], "runfitt": [129, 256], "readdata": [129, 256], "variabletofit": [129, 256], "parameterstovari": [129, 256], "parameterrang": [129, 256], "changeparmfromlist": [129, 256], "removeparmfromlist": [129, 256], "saverestorefitparam": [129, 256], "numberofdataregion": [129, 256], "anothervariabletofit": [129, 256], "dofit": [129, 256], "singlerunfit": [129, 256], "bequiet": [129, 256], "programmat": [130, 141, 220, 257, 269, 349], "quick": [135, 263], "link": [135, 263], "visual": [135, 263, 369], "kineticbuild": [137, 265], "insert": [138, 224, 266, 353, 388], "pointmanag": [139, 267], "pointgroup": [139, 267], "viewer": [139, 224, 267, 353], "pointprocess": [139, 224, 267, 353], "pointprocessmanag": [139, 267], "pointprocessgroupmanag": [139, 267], "showmechan": [140, 268], "mechtyp": [140, 268], "kschan": [145, 273], "linearmechan": [146, 274], "dynam": [147, 165, 275, 294, 374, 387], "process": [148, 276], "languag": [149, 180, 208, 247, 277, 309, 337], "histori": [149, 277, 379], "rational": [149, 277], "paradigm": [149, 277], "titl": [149, 277], "assign": [149, 277], "breakpoint": [149, 277], "deriv": [149, 277], "net_rec": [149, 277], "watch": [149, 277], "constructor": [149, 277], "destructor": [149, 277], "nonlinear": [149, 190, 277, 319], "compart": [149, 277], "longitudinal_diffus": [149, 277], "function_t": [149, 277], "sweep": [149, 277], "conduct": [149, 277, 383], "while": [149, 277], "IF": [149, 277], "els": [149, 277, 387], "lag": [149, 277], "extens": [150, 278, 384], "suffix": [150, 278], "rang": [150, 278], "global": [150, 224, 278, 353], "nonspecific_curr": [150, 278], "electrode_curr": [150, 278], "useion": [150, 278], "write": [150, 188, 236, 278, 317], "valenc": [150, 278], "point_process": [150, 278], "bbcorepoint": [150, 278], "threadsaf": [150, 278], "befor": [150, 278], "for_netcon": [150, 278], "protect": [150, 278], "mutexlock": [150, 278], "mutexunlock": [150, 278], "commun": [150, 278, 385], "verbatim": [150, 246, 278], "mechanismtyp": [151, 279], "netcon": [154, 282], "subworld": [155, 283], "transfer": [155, 283], "parallelnetmanag": [156, 284], "obsolet": [157, 176, 185, 188, 203, 230, 285, 305, 314, 317, 332, 359], "stimuli": [157, 285], "domain": [158, 170, 286, 299], "intracellular": [158, 286], "region": [158, 286, 369, 371], "frankenhaus": [158, 286], "For": [158, 286, 387], "extracellular": [158, 286, 375], "protein": [158, 286, 372], "mathemat": [158, 198, 286, 287, 327], "rate": [158, 286, 287, 368], "manipul": [158, 211, 213, 286, 340, 342], "node": [158, 286, 368], "segment": [158, 164, 208, 286, 293, 337, 388], "statetransitionev": [159, 288], "3d": [161, 290], "sectionlist": [162, 291], "sectionref": [163, 292], "dot": [164, 293], "notat": [164, 293], "stack": 164, "default": [164, 228, 293, 357, 370], "dialog": [167, 296], "box": [167, 296], "style": [170, 299], "printwindowmanag": [170, 299], "placement": [170, 299], "pwmanag": [172, 301], "sectionbrows": [173, 302], "symchoos": [174, 303], "texteditor": [175, 304], "valuefieldeditor": [177, 306], "widget": [178, 307], "proc": [181, 310], "func": [181, 310], "obfunc": [181, 310], "debug": [182, 236, 239, 311], "namespac": [182, 311], "relat": [182, 286, 311], "recommend": 184, "plotter": [185, 314], "format": [186, 315], "redirect": [186, 315], "termin": [187, 316], "open": [188, 317], "solv": [190, 319], "common": [191, 320], "math": [191, 320, 368], "guimath": [192, 321], "matrix": [193, 322], "mcell_ran4": [194, 323], "pseudo": [196, 325], "fourier": [197, 326], "mechanismstandard": [199, 328], "sub": [200, 329], "packag": [200, 243, 329], "begintempl": [202, 331], "endtempl": [202, 331], "objectvar": [202, 331], "nullobject": [202, 331], "ptrvector": [205, 334], "predeclar": [206, 335], "util": [207, 336], "prjnrninit": [207, 336], "prjnrncmp": [207, 336], "prjnrnco": [207, 336], "prjnrnci": [207, 336], "prjnrnpr": [207, 336], "ivdialog": [207, 336], "pars": [210, 339], "sscanf": [210, 339], "stringfunct": [211, 340], "identif": [213, 342], "command": [213, 224, 342, 353], "timer": [214, 343], "job": [215, 344], "bbsavest": [216, 345], "cvode": [217, 346], "modeldescriptionissu": [217, 346], "famili": [218, 224, 347, 353], "execcommand": [218, 347], "gathervec": [218, 347], "vectorplai": [218, 347], "vecwrap": [218, 347], "finitializehandl": [220, 349], "runcontrol": [221, 350], "dt": [221, 350], "initrun": [221, 350], "init": [221, 350], "stop": [221, 350], "continuetil": [221, 350], "continuefor": [221, 350], "singlestep": [221, 350], "tstop": [221, 350], "plotsm": [221, 350], "quiet": [221, 350], "realtim": [221, 350], "savest": [222, 351], "loadsess": [224, 353], "loadhoc": [224, 353], "loaddll": [224, 353], "savesess": [224, 353], "workingdir": [224, 353], "recentdir": [224, 353], "quit": [224, 228, 353, 357], "singlecompart": [224, 353], "networkcel": [224, 353], "fromcellbuild": [224, 353], "artificialcel": [224, 353], "networkbuild": [224, 353], "usevariabledt": [224, 353], "localvariabledt": [224, 353], "absolutetoler": [224, 353], "homogen": [224, 353], "spec": [224, 353], "shapenam": [224, 353], "namevalu": [224, 353], "celsiu": [224, 353], "globalra": [224, 353], "archiv": [224, 353], "And": [224, 228, 353, 357], "hardcopi": [224, 353], "family1": [224, 353], "currentaxi": [224, 353], "stateaxi": [224, 353], "shapeplot": [224, 231, 353, 360], "vectormovi": [224, 353], "phaseplan": [224, 353], "grapher": [224, 227, 353, 356], "voltageaxi": [224, 353], "retrievefromfil": [224, 353], "gathervalu": [224, 353], "draw": [224, 353], "ungroup": [224, 353], "groupmanag": [224, 353], "glyph": [225, 354], "eraseal": [227, 356], "indepbegin": [227, 356], "xexpr": [227, 356], "feel": [228, 357], "scene": [228, 357], "view_equal_plot": 228, "zoomout10": [228, 357], "zoomin10": [228, 357], "newview": [228, 357], "zoominout": [228, 357], "roundview": [228, 357], "wholescen": [228, 357], "setview": [228, 357], "scene_equal_view": 228, "objectnam": [228, 357], "browser": [228, 357], "fieldeditor": [228, 357], "button": [228, 357], "valueeditor": [228, 357], "editor": [228, 357], "screenitem": [228, 357], "paperitem": [228, 357], "printtofil": [228, 357], "saveselect": [228, 357], "saveal": [228, 357], "selectprint": [228, 357], "windowtitlesprint": [228, 357], "virtualscreen": [228, 357], "landport": [228, 357], "trai": [228, 357], "crosshair": [228, 357], "plotwhat": [228, 231, 357, 360], "pickvector": [228, 357], "plotrang": [228, 357], "changecolor": [228, 357], "brush": [228, 357], "axistyp": [228, 357], "viewaxi": [228, 357], "newaxi": [228, 357], "viewbox": [228, 357], "keeplin": [228, 357], "familylabel": [228, 357], "eras": [228, 357], "movetext": [228, 231, 357, 360], "changetext": [228, 357], "notif": [229, 358], "plotshap": [231, 232, 360, 361], "rotate3d": [231, 360], "shapestyl": [231, 360], "variablescal": [231, 360], "timeplot": [231, 360], "spaceplot": [231, 360], "rangevarplot": [233, 362], "menuexplor": [235, 364], "pointprocessloc": [235, 364], "shapebrows": [235, 364], "don": 236, "bunch": 236, "onc": 236, "expect": 236, "everyth": 236, "first": [236, 383], "try": 236, "ii": [236, 392], "debugg": 236, "pdb": 236, "coverag": 238, "depend": [238, 242, 243], "simplifi": 238, "workflow": [238, 244], "diagnosi": 239, "segfault": 239, "crash": 239, "nan": 239, "inf": 239, "nhost": 239, "nthread": 239, "gdb": 239, "valgrind": 239, "sanit": 239, "threadsanit": 239, "tsan": 239, "profil": 239, "benchmark": 239, "subsystem": 242, "wsl": 242, "x86_64": [242, 243], "appl": [242, 243], "m1": [242, 243], "sign": 243, "notar": 243, "docker": 244, "push": 244, "dockerhub": 244, "launch": 244, "consider": 244, "bb5": 244, "publish": 244, "pypi": 244, "via": [244, 313, 383], "azur": 244, "circleci": 244, "nightli": 244, "pre": 245, "requisit": 245, "environ": [245, 262, 392], "julia": 247, "neuron_module_opt": 262, "nrnunit_use_legaci": 262, "sbml": 286, "restor": 286, "sec": 293, "remov": 365, "who": 368, "nodelist": 368, "abrupt": 368, "scalar": 368, "bistabl": 368, "wave": [368, 371], "part": [369, 392, 393], "rxd": [369, 373, 376, 392], "speci": [369, 371], "uniform": 370, "h": [370, 388], "calcium": 371, "concept": [371, 390, 393], "structur": 371, "circadian": 372, "rhythm": 372, "helper": 372, "clariti": 372, "combin": 373, "stimulu": [373, 388], "homeostat": 373, "lack": 373, "thereof": 373, "final": [373, 379, 380], "degrad": 374, "buffer": 374, "calbindin": 374, "d28k": 374, "singl": [375, 392], "voxel": 375, "boundari": 375, "anisotropi": 375, "tissu": 375, "characterist": 375, "ip3": 377, "demo": 377, "threshold": 378, "git": 379, "github": 379, "branch": [379, 393], "tag": 379, "checkout": 379, "stage": 379, "commit": 379, "reset": 379, "merg": 379, "squash": 379, "forward": 379, "rebas": 379, "practic": 379, "pull": 379, "request": 379, "date": 379, "review": 379, "convent": 379, "semant": 379, "pep": 379, "440": 379, "life": 379, "cycl": 379, "alpha": [379, 380], "beta": 379, "candid": 379, "WITH": 379, "gitlab": 379, "altern": 379, "guidelin": [379, 380], "contribut": [379, 380], "patch": [379, 380], "scm": 381, "studi": 382, "role": 382, "amplitud": 382, "both": 382, "dendrit": 382, "soma": 382, "ring": [383, 384], "netstim": 383, "serial": 385, "mode": 385, "back": 385, "gather": 385, "cast": 387, "arithmet": 387, "comparison": 387, "choic": 387, "comprehens": 387, "theori": [387, 392], "loop": 387, "dictionari": 387, "modul": [387, 388], "pickl": [387, 388], "psection": 388, "morpholog": 388, "dir": 388, "7": 388, "csv": 388, "json": 388, "cn": [389, 390], "2021": [389, 392, 393], "incf": 390, "2022": 390, "welcom": 390, "neuromorpho": 390, "org": 390, "trigger": 390, "transmiss": 390, "accuraci": 390, "stabil": 390, "speed": 390, "video": 391, "netpyn": 392, "tech": 392, "lectur": [392, 393], "spinal": 392, "cord": 392, "hand": 392, "driven": 392, "multiscal": 392, "virtual": 392, "06": 393, "03": 393, "q": 393, "08": 393, "10": 393, "15": 393, "ad": 393, "17": 393, "22": 393, "24": 393, "29": 393, "07": 393, "01": 393, "13": 393, "discuss": 393, "conclus": 393, "reproduc": 393, "20": 393, "27": 393, "spine": 393}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"NEURON Documentation": [[0, "neuron-documentation"]], "Online": [[0, "online"]], "Local build": [[0, "local-build"]], "Setup": [[0, "setup"]], "Building the documentation": [[0, "building-the-documentation"]], "Faster Local Iterations": [[0, "faster-local-iterations"]], "ReadTheDocs setup": [[0, "readthedocs-setup"]], "Config file": [[0, "config-file"]], "Documentation not handled by RTD": [[0, "documentation-not-handled-by-rtd"]], "Leveraging conf.py": [[0, "leveraging-conf-py"]], "Notebooks execution with neuron wheels": [[0, "notebooks-execution-with-neuron-wheels"]], "New release on RTD": [[0, "new-release-on-rtd"]], "NEURON 8.2": [[1, "neuron-8-2"]], "8.2.1": [[1, "id1"]], "What\u2019s New": [[1, "what-s-new"], [1, "id3"], [1, "id7"], [1, "id15"], [1, "id19"]], "Bug Fixes": [[1, "bug-fixes"], [1, "id4"], [1, "id9"], [1, "id13"], [1, "id16"], [1, "id22"]], "Improvements /  Other Changes": [[1, "improvements-other-changes"], [1, "id5"], [1, "id17"], [1, "id23"]], "8.2.0": [[1, "id2"]], "Breaking Changes": [[1, "breaking-changes"], [1, "id8"], [1, "id20"]], "Deprecations & future changes": [[1, "deprecations-future-changes"]], "Upgrade Steps": [[1, "upgrade-steps"], [1, "id11"], [1, "id24"]], "NEURON 8.1": [[1, "neuron-8-1"]], "8.1.0": [[1, "id6"]], "Deprecations": [[1, "deprecations"], [1, "id21"]], "Improvements / Other Changes": [[1, "id10"]], "NEURON 8.0": [[1, "neuron-8-0"]], "8.0.2": [[1, "id12"]], "8.0.1": [[1, "id14"]], "8.0.0": [[1, "id18"]], "Contributors": [[1, "contributors"]], "Feedback / Help": [[1, "feedback-help"]], "CMake Build Options": [[2, "cmake-build-options"]], "Introduction": [[3, "introduction"], [76, "introduction"], [84, "introduction"], [149, "introduction"], [277, "introduction"], [392, "introduction"]], "General options": [[3, "general-options"]], "CMAKE_INSTALL_PREFIX:PATH=<path-where-nrn-should-be-installed>": [[3, "cmake-install-prefix-path-path-where-nrn-should-be-installed"]], "CMAKE_BUILD_TYPE:STRING=RelWithDebInfo": [[3, "cmake-build-type-string-relwithdebinfo"]], "Ninja": [[3, "ninja"]], "InterViews options": [[3, "interviews-options"]], "NRN_ENABLE_INTERVIEWS:BOOL=ON": [[3, "nrn-enable-interviews-bool-on"]], "IV_DIR:PATH=<path-to-external-installation-of-interviews>": [[3, "iv-dir-path-path-to-external-installation-of-interviews"]], "IV_ENABLE_SHARED:BOOL=OFF": [[3, "iv-enable-shared-bool-off"]], "IV_ENABLE_X11_DYNAMIC:BOOL=OFF": [[3, "iv-enable-x11-dynamic-bool-off"]], "IV_ENABLE_X11_DYNAMIC_MAKE_HEADERS:BOOL=OFF": [[3, "iv-enable-x11-dynamic-make-headers-bool-off"]], "MPI options:": [[3, "mpi-options"]], "NRN_ENABLE_MPI:BOOL=ON": [[3, "nrn-enable-mpi-bool-on"]], "NRN_ENABLE_MPI_DYNAMIC:BOOL=OFF": [[3, "nrn-enable-mpi-dynamic-bool-off"]], "NRN_MPI_DYNAMIC:STRING=": [[3, "nrn-mpi-dynamic-string"]], "Python options:": [[3, "python-options"]], "NRN_ENABLE_PYTHON:BOOL=ON": [[3, "nrn-enable-python-bool-on"]], "NRN_ENABLE_PYTHON_DYNAMIC:BOOL=OFF": [[3, "nrn-enable-python-dynamic-bool-off"]], "NRN_PYTHON_DYNAMIC:STRING=": [[3, "nrn-python-dynamic-string"]], "PYTHON_EXECUTABLE:PATH=": [[3, "python-executable-path"]], "NRN_ENABLE_MODULE_INSTALL:BOOL=ON": [[3, "nrn-enable-module-install-bool-on"]], "NRN_MODULE_INSTALL_OPTIONS:STRING=\u2013home=/usr/local": [[3, "nrn-module-install-options-string-home-usr-local"]], "NRN_ENABLE_RX3D:BOOL=ON": [[3, "nrn-enable-rx3d-bool-on"]], "NRN_RX3D_OPT_LEVEL:STRING=0": [[3, "nrn-rx3d-opt-level-string-0"]], "CoreNEURON options:": [[3, "coreneuron-options"]], "NRN_ENABLE_CORENEURON:BOOL=OFF": [[3, "nrn-enable-coreneuron-bool-off"]], "NRN_ENABLE_MOD_COMPATIBILITY:BOOL=OFF": [[3, "nrn-enable-mod-compatibility-bool-off"]], "Other CoreNEURON options:": [[3, "other-coreneuron-options"]], "Occasionally useful advanced options:": [[3, "occasionally-useful-advanced-options"]], "CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc": [[3, "cmake-c-compiler-filepath-usr-bin-cc"]], "CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++": [[3, "cmake-cxx-compiler-filepath-usr-bin-c"]], "NRN_ENABLE_DOCS:BOOL=OFF": [[3, "nrn-enable-docs-bool-off"]], "NRN_EXTRA_CXX_FLAGS:STRING=\u201d\u201d": [[3, "nrn-extra-cxx-flags-string"]], "NRN_EXTRA_MECH_CXX_FLAGS:STRING=\u201d\u201d": [[3, "nrn-extra-mech-cxx-flags-string"]], "NRN_NMODL_CXX_FLAGS:STRING=\u201d\u201d": [[3, "nrn-nmodl-cxx-flags-string"]], "Readline_ROOT_DIR:PATH=/usr": [[3, "readline-root-dir-path-usr"]], "NRN_ENABLE_TESTS:BOOL=OFF": [[3, "nrn-enable-tests-bool-off"]], "NRN_ENABLE_COVERAGE:BOOL=OFF": [[3, "nrn-enable-coverage-bool-off"]], "NRN_COVERAGE_FILES:STRING=": [[3, "nrn-coverage-files-string"]], "NRN_CMAKE_FORMAT:BOOL=OFF": [[3, "nrn-cmake-format-bool-off"]], "NRN_CLANG_FORMAT:BOOL=OFF": [[3, "nrn-clang-format-bool-off"]], "NRN_SANITIZERS:STRING=": [[3, "nrn-sanitizers-string"]], "Miscellaneous Rarely used options specific to NEURON:": [[3, "miscellaneous-rarely-used-options-specific-to-neuron"]], "NRN_ENABLE_DISCRETE_EVENT_OBSERVER:BOOL=ON": [[3, "nrn-enable-discrete-event-observer-bool-on"]], "NRN_DYNAMIC_UNITS_USE_LEGACY:BOOL=OFF": [[3, "nrn-dynamic-units-use-legacy-bool-off"]], "NRN_ENABLE_MECH_DLL_STYLE:BOOL=ON": [[3, "nrn-enable-mech-dll-style-bool-on"]], "NRN_ENABLE_SHARED:BOOL=ON": [[3, "nrn-enable-shared-bool-on"]], "NRN_ENABLE_THREADS:BOOL=ON": [[3, "nrn-enable-threads-bool-on"]], "NRN_USE_REL_RPATH=OFF": [[3, "nrn-use-rel-rpath-off"]], "NRN_ENABLE_BACKTRACE:BOOL=OFF": [[3, "nrn-enable-backtrace-bool-off"]], "CoreNEURON Compatibility": [[4, "coreneuron-compatibility"]], "Unsupported Features": [[4, "unsupported-features"]], "MOD File Compatibility": [[4, "mod-file-compatibility"]], "Thread Safe MOD Files": [[4, "thread-safe-mod-files"]], "TABLE Usage With GPU Execution": [[4, "table-usage-with-gpu-execution"]], "NEURON Only MOD Files": [[4, "neuron-only-mod-files"]], "Explicit ION Variables Update": [[4, "explicit-ion-variables-update"]], "Random Number Generators: Random123 vs MCellRan4": [[4, "random-number-generators-random123-vs-mcellran4"]], "Memory Management for POINTER Variables": [[4, "memory-management-for-pointer-variables"]], "Arguments to bbcore_read and bbcore_write.": [[4, "id1"]], "Have a question?": [[4, "have-a-question"]], "Examples": [[5, "examples"], [72, "examples"], [207, "examples"], [336, "examples"], [368, "Examples"], [376, null]], "CoreNEURON": [[6, "coreneuron"]], "Getting CoreNEURON": [[7, "getting-coreneuron"]], "Installing with pip": [[7, "installing-with-pip"]], "Installing from source": [[7, "installing-from-source"]], "Compiler Selection": [[7, "compiler-selection"]], "Step-by-step instructions": [[7, "step-by-step-instructions"]], "Running a simulation": [[8, "running-a-simulation"]], "Building MOD files": [[8, "building-mod-files"]], "Enabling CoreNEURON": [[8, "enabling-coreneuron"]], "Artificial Cells in NEURON": [[9, "artificial-cells-in-neuron"]], "Batch runs with bulletin board parallelization": [[10, "batch-runs-with-bulletin-board-parallelization"], [11, "batch-runs-with-bulletin-board-parallelization"]], "Physical system": [[10, "physical-system"], [11, "physical-system"]], "Computational implementation": [[10, "computational-implementation"], [11, "computational-implementation"]], "The model cell": [[10, "the-model-cell"], [11, "the-model-cell"]], "Code development strategy": [[10, "code-development-strategy"], [11, "code-development-strategy"]], "initonerun.py": [[10, "initonerun-py"], [13, "initonerun-py"]], "Description": [[10, "description"], [10, "id1"], [10, "id4"], [13, "description"], [13, "id1"], [13, "id7"], [72, "description"], [72, "id2"]], "Usage": [[10, "usage"], [10, "id2"], [10, "id5"], [13, "usage"], [13, "id2"], [13, "id8"], [149, "usage"], [277, "usage"]], "Source": [[10, "source"], [10, "id3"], [10, "id6"], [13, "source"], [13, "id3"], [13, "id9"]], "initbatser.py": [[10, "initbatser-py"], [13, "initbatser-py"]], "initbatpar.py": [[10, "initbatpar-py"], [13, "initbatpar-py"]], "Things to do": [[10, "things-to-do"], [11, "things-to-do"]], "initonerun.hoc": [[11, "initonerun-hoc"]], "initbatser.hoc": [[11, "initbatser-hoc"]], "initbatpar.hoc": [[11, "initbatpar-hoc"]], "Building and labeling a two electrode voltage clamp with the Linear Circuit Builder": [[12, "building-and-labeling-a-two-electrode-voltage-clamp-with-the-linear-circuit-builder"]], "Bulletin board code walkthroughs": [[13, "bulletin-board-code-walkthroughs"]], "Code walkthrough": [[13, "code-walkthrough"], [13, "id4"], [13, "id10"]], "Simulation parameters": [[13, "simulation-parameters"], [13, "id5"]], "Model specification": [[13, "model-specification"]], "Instrumentation": [[13, "instrumentation"], [13, "id6"], [239, "instrumentation"], [382, "Instrumentation"]], "Simulation control and reporting of results": [[13, "simulation-control-and-reporting-of-results"]], "Simulation control": [[13, "simulation-control"], [13, "id11"]], "Reporting of results": [[13, "reporting-of-results"]], "ParallelContext": [[13, "parallelcontext"], [155, "parallelcontext"], [283, "parallelcontext"]], "CellBuilder Overview and Hints": [[14, "cellbuilder-overview-and-hints"]], "Starting the CellBuilder": [[14, "starting-the-cellbuilder"]], "Using the CellBuilder": [[14, "using-the-cellbuilder"], [45, "using-the-cellbuilder"]], "Saving your work": [[14, "saving-your-work"]], "Checking what you saved": [[14, "checking-what-you-saved"]], "Questions and answers about sessions and ses files": [[14, "questions-and-answers-about-sessions-and-ses-files"]], "Custom Initialization": [[24, "custom-initialization"]], "Physical System": [[24, "physical-system"], [30, "physical-system"], [31, "physical-system"], [33, "physical-system"], [36, "physical-system"], [36, "id1"], [43, "physical-system"], [44, "physical-system"], [45, "physical-system"]], "Conceptual Model": [[24, "conceptual-model"], [30, "conceptual-model"], [31, "conceptual-model"], [43, "conceptual-model"], [45, "conceptual-model"], [69, "conceptual-model"], [70, "conceptual-model"]], "Getting started": [[24, "getting-started"], [45, "getting-started"], [375, "Getting-started"]], "Computational implementation of the conceptual model": [[24, "computational-implementation-of-the-conceptual-model"], [30, "computational-implementation-of-the-conceptual-model"], [31, "computational-implementation-of-the-conceptual-model"], [45, "computational-implementation-of-the-conceptual-model"]], "Using the computational model": [[24, "using-the-computational-model"], [30, "using-the-computational-model"], [31, "using-the-computational-model"]], "Exercise: initializing to steady state": [[24, "exercise-initializing-to-steady-state"]], "\u201cSpecial credit\u201d Exercise": [[24, "special-credit-exercise"]], "Electrotonic Analysis with NEURON": [[25, "electrotonic-analysis-with-neuron"]], "What\u2019s all this, then?": [[25, "what-s-all-this-then"]], "Exercises": [[25, "exercises"], [28, "exercises"], [28, "id5"], [28, "id6"], [28, "id7"], [28, "id8"], [28, "id9"], [29, "exercises"], [30, "exercises"], [31, "exercises"], [45, "exercises"], [47, "exercises"], [392, "exercises"], [392, "id2"], [392, "id6"]], "The Frequency Tool": [[25, "the-frequency-tool"]], "The Path Tool": [[25, "the-path-tool"]], "The log(A) vs x tool": [[25, "the-log-a-vs-x-tool"]], "The Shape Tool": [[25, "the-shape-tool"]], "NEURON Course Exercises": [[26, "neuron-course-exercises"]], "Overview of the Tasks": [[27, "overview-of-the-tasks"]], "Details": [[27, "details"]], "HOC Exercises": [[28, "hoc-exercises"]], "Anything not explicitly declared is assumed to be a number": [[28, "anything-not-explicitly-declared-is-assumed-to-be-a-number"], [28, "id2"]], "Do you have anything to declare?: objects and strings": [[28, "do-you-have-anything-to-declare-objects-and-strings"], [28, "id3"]], "Operators and numerical functions": [[28, "operators-and-numerical-functions"], [28, "id4"]], "Data types: numbers, strings, and objects": [[28, "data-types-numbers-strings-and-objects"]], "Objects include vectors, graphs, lists, \u2026": [[28, "objects-include-vectors-graphs-lists"]], "After creating object reference, can use it to point a new or old object": [[28, "after-creating-object-reference-can-use-it-to-point-a-new-or-old-object"]], "Can create an array of objrefs": [[28, "can-create-an-array-of-objrefs"]], "Strings": [[28, "strings"], [212, "strings"], [341, "strings"]], "Blocks of code": [[28, "blocks-of-code"]], "Conditionals": [[28, "conditionals"]], "Procedures and functions": [[28, "procedures-and-functions"]], "Built-in object types: graphs, vectors, lists, files": [[28, "built-in-object-types-graphs-vectors-lists-files"]], "Graph": [[28, "graph"], [224, "graph"], [226, "graph"], [228, "graph"], [353, "graph"], [355, "graph"], [357, "graph"]], "Vector": [[28, "vector"], [197, "vector"], [224, "vector"], [326, "vector"], [353, "vector"]], "File": [[28, "file"], [224, "file"], [353, "file"]], "List": [[28, "list"], [169, "list"], [298, "list"]], "Simulation": [[28, "simulation"], [30, "simulation"], [31, "simulation"], [32, "simulation"], [32, "id1"], [33, "simulation"], [36, "simulation"], [36, "id3"], [37, "simulation"], [37, "id2"], [44, "simulation"], [45, "simulation"]], "Recording the simulation": [[28, "recording-the-simulation"]], "Graphing and analyzing data": [[28, "graphing-and-analyzing-data"]], "Roll your own GUI": [[28, "roll-your-own-gui"]], "Exercise": [[28, "exercise"], [122, "exercise"], [382, "Exercise"]], "Hopfield Brody synchronization (sync) model": [[29, "hopfield-brody-synchronization-sync-model"]], "Standard intfire implementation (eg IntFire1 from intfire1.mod))": [[29, "standard-intfire-implementation-eg-intfire1-from-intfire1-mod"]], "IntIbFire in sync model": [[29, "intibfire-in-sync-model"]], "Cell template": [[29, "cell-template"]], "Network": [[29, "network"]], "How it works": [[29, "how-it-works"]], "Exercises to gain familiarity with the model": [[29, "exercises-to-gain-familiarity-with-the-model"]], "Increase to 100 neurons and run.": [[29, "increase-to-100-neurons-and-run"]], "Narrow the difference between fast and slow cells so as to make more of them fire.": [[29, "narrow-the-difference-between-fast-and-slow-cells-so-as-to-make-more-of-them-fire"]], "Reduce the inhibition and demonstrate that synchrony worsens.": [[29, "reduce-the-inhibition-and-demonstrate-that-synchrony-worsens"]], "Increase cell time constant.": [[29, "increase-cell-time-constant"]], "Beyond the GUI \u2013 Saving and displaying spikes": [[29, "beyond-the-gui-saving-and-displaying-spikes"]], "Graph spike times \u2013 should look like SpikePlot1 graph": [[29, "graph-spike-times-should-look-like-spikeplot1-graph"]], "Synchronization measures": [[29, "synchronization-measures"]], "Procedure interval2() in ocomm.hoc sets cell periods randomly": [[29, "procedure-interval2-in-ocomm-hoc-sets-cell-periods-randomly"]], "Rewiring the network": [[29, "rewiring-the-network"]], "Assessing connectivity": [[29, "assessing-connectivity"]], "Graphing connectivity": [[29, "graphing-connectivity"]], "Animate": [[29, "animate"]], "Interactive Modeling": [[30, "interactive-modeling"]], "Hodgkin-Huxley cable equations": [[30, "hodgkin-huxley-cable-equations"]], "Introduction to the GUI": [[31, "introduction-to-the-gui"]], "Introduction to the Network Builder": [[32, "introduction-to-the-network-builder"]], "Model": [[32, "model"], [33, "model"], [36, "model"], [36, "id2"], [37, "model"], [44, "model"]], "Define artificial cell types": [[32, "define-artificial-cell-types"]], "Cell creation": [[32, "cell-creation"], [37, "cell-creation"]], "Connections": [[32, "connections"], [37, "connections"]], "Other Simulation Exercises": [[32, "other-simulation-exercises"], [37, "other-simulation-exercises"]], "The automatically generated hoc code": [[32, "the-automatically-generated-hoc-code"], [37, "the-automatically-generated-hoc-code"]], "Introduction to the Linear Circuit Builder": [[33, "introduction-to-the-linear-circuit-builder"]], "Managing Models on the Fly": [[34, "managing-models-on-the-fly"]], "Parallel Computing with MPI": [[35, "parallel-computing-with-mpi"]], "Getting Started": [[35, "getting-started"]], "MSWIN": [[35, "mswin"]], "Mac OS X and Linux": [[35, "mac-os-x-and-linux"]], "Going Further": [[35, "going-further"]], "Multithreaded paralellization": [[36, "multithreaded-paralellization"]], "Network ready cells from the CellBuilder": [[37, "network-ready-cells-from-the-cellbuilder"]], "Ball-Stick cell model": [[37, "ball-stick-cell-model"]], "Ball-Stick cell model with synapses": [[37, "ball-stick-cell-model-with-synapses"]], "Stimulators": [[37, "stimulators"]], "Select the source cell": [[37, "select-the-source-cell"]], "Select the target cell": [[37, "select-the-target-cell"]], "Select the synapse on the target cell": [[37, "select-the-synapse-on-the-target-cell"]], "NEURON scripting exercises": [[38, "neuron-scripting-exercises"]], "Exercise 1": [[38, "exercise-1"], [39, "exercise-1"], [41, "exercise-1"]], "Exercise 2": [[38, "exercise-2"], [39, "exercise-2"], [41, "exercise-2"]], "Exercise 3": [[38, "exercise-3"], [39, "exercise-3"], [41, "exercise-3"]], "Exercise 4": [[38, "exercise-4"], [39, "exercise-4"], [41, "exercise-4"]], "Exercise 5": [[38, "exercise-5"], [39, "exercise-5"]], "Exercise 6": [[38, "exercise-6"], [39, "exercise-6"]], "halfgap.mod": [[38, "halfgap-mod"]], "Numerical Methods Exercises": [[39, "numerical-methods-exercises"]], "Quality Issues with Morphometric Data": [[40, "quality-issues-with-morphometric-data"]], "Important things to keep in mind": [[40, "important-things-to-keep-in-mind"]], "Reaction-Diffusion Exercises": [[41, "reaction-diffusion-exercises"]], "References": [[41, "references"], [84, "references"], [121, "references"]], "Saving Windows": [[42, "saving-windows"]], "What is a session?": [[42, "what-is-a-session"], [98, "what-is-a-session"], [119, "what-is-a-session"]], "When (and how) to save all windows to a ses file": [[42, "when-and-how-to-save-all-windows-to-a-ses-file"]], "When (and how) to save selected windows": [[42, "when-and-how-to-save-selected-windows"]], "The Print & File Window Manager (PFWM)": [[42, "the-print-file-window-manager-pfwm"]], "What\u2019s in a ses file": [[42, "what-s-in-a-ses-file"], [98, "what-s-in-a-ses-file"], [119, "what-s-in-a-ses-file"]], "What can go wrong, and how to fix it": [[42, "what-can-go-wrong-and-how-to-fix-it"], [98, "what-can-go-wrong-and-how-to-fix-it"], [119, "what-can-go-wrong-and-how-to-fix-it"]], "Inhomogeneous Channel Distribution": [[43, "inhomogeneous-channel-distribution"]], "Computational Model": [[43, "computational-model"], [69, "computational-model"], [70, "computational-model"]], "The exercise": [[43, "the-exercise"]], "State and parameter discontinuities": [[44, "state-and-parameter-discontinuities"]], "Ball-and-stick approximation to cell": [[45, "ball-and-stick-approximation-to-cell"]], "Making the representation of the biological properties": [[45, "making-the-representation-of-the-biological-properties"]], "Using the representation of the biological properties": [[45, "using-the-representation-of-the-biological-properties"]], "Saving and Retrieving the Experimental Rig": [[45, "saving-and-retrieving-the-experimental-rig"]], "More Exercises": [[45, "more-exercises"]], "Footnotes and Asides": [[45, "footnotes-and-asides"]], "Using ModelDB with NEURON": [[46, "using-modeldb-with-neuron"]], "Example: Moore et al. 1983 modeldb.yale.edu/9852": [[46, "example-moore-et-al-1983-modeldb-yale-edu-9852"]], "1. What physical system is being represented, and for what purpose?": [[46, "what-physical-system-is-being-represented-and-for-what-purpose"], [46, "id2"]], "2. What is the representation of the physical system, and how was it implemented?": [[46, "what-is-the-representation-of-the-physical-system-and-how-was-it-implemented"], [46, "id4"]], "Using Python to Examine What\u2019s in the Model": [[46, "using-python-to-examine-what-s-in-the-model"]], "Using Model View to Discover What\u2019s in a Model": [[46, "using-model-view-to-discover-what-s-in-a-model"]], "Analyzing the Underlying Code": [[46, "analyzing-the-underlying-code"]], "3. What is the user interface, how was it implemented, and how do you use it?": [[46, "what-is-the-user-interface-how-was-it-implemented-and-how-do-you-use-it"], [46, "id5"]], "Another example: Mainen and Sejnowski 1996 modeldb.yale.edu/2488": [[46, "another-example-mainen-and-sejnowski-1996-modeldb-yale-edu-2488"]], "4. Reuse one of their cells in a model of your own design": [[46, "reuse-one-of-their-cells-in-a-model-of-your-own-design"]], "Working with Morphometric Data": [[47, "working-with-morphometric-data"]], "A. Get an Import3D tool.": [[47, "a-get-an-import3d-tool"]], "B. Choose a file to read.": [[47, "b-choose-a-file-to-read"]], "C. Let\u2019s see what it looks like.": [[47, "c-let-s-see-what-it-looks-like"]], "D. Exporting the model.": [[47, "d-exporting-the-model"]], "E. Take a new look at the shape in the Import3D tool.": [[47, "e-take-a-new-look-at-the-shape-in-the-import3d-tool"]], "F. Zooming in": [[47, "f-zooming-in"]], "A \u201clitmus test\u201d for models with complex architecture": [[47, "a-litmus-test-for-models-with-complex-architecture"]], "Quantitative tests of anatomy": [[47, "quantitative-tests-of-anatomy"]], "Detailed morphometric data: sources, caveats, and importing into NEURON": [[47, "detailed-morphometric-data-sources-caveats-and-importing-into-neuron"]], "Using NMODL files": [[48, "using-nmodl-files"]], "Step 0:": [[48, "step-0"]], "Step 1:": [[48, "step-1"]], "Step 2:": [[48, "step-2"]], "Step 3:": [[48, "step-3"]], "Using the Neuroscience Gateway (NSG) portal": [[49, "using-the-neuroscience-gateway-nsg-portal"]], "On your own computer:": [[49, "on-your-own-computer"]], "Using NSG:": [[49, "using-nsg"]], "Working with Shape Plots": [[50, "working-with-shape-plots"]], "Rotation": [[50, "rotation"]], "Other operations": [[50, "other-operations"]], "When you\u2019re done": [[50, "when-you-re-done"]], "Dealing with Simulations that Generate a lot of Data": [[51, "dealing-with-simulations-that-generate-a-lot-of-data"]], "Comments and suggestions": [[51, "comments-and-suggestions"]], "HOC Interpreter": [[52, "hoc-interpreter"]], "Background": [[52, "background"]], "Source Code": [[52, "source-code"]], "HOC Grammar": [[52, "hoc-grammar"]], "HOC Initialization": [[52, "hoc-initialization"]], "HOC Interpreter - executing the machine": [[52, "hoc-interpreter-executing-the-machine"]], "HOC Interpreter example - printf": [[52, "hoc-interpreter-example-printf"]], "Testing GPU functionality": [[53, "testing-gpu-functionality"]], "Accessing GPU resources": [[53, "accessing-gpu-resources"]], "Running NEURON tests": [[53, "running-neuron-tests"]], "Running tests manually": [[53, "running-tests-manually"]], "How-Do-I Guide": [[54, "how-do-i-guide"]], "Working with Object and PyObject": [[54, "working-with-object-and-pyobject"]], "To check if a NEURON object is wrapping a PyObject": [[54, "to-check-if-a-neuron-object-is-wrapping-a-pyobject"]], "To check if a PyObject is wrapping a NEURON object": [[54, "to-check-if-a-pyobject-is-wrapping-a-neuron-object"]], "To encapsulate a NEURON Object in a PyObject": [[54, "to-encapsulate-a-neuron-object-in-a-pyobject"]], "To encapsule a PyObject in a NEURON Object": [[54, "to-encapsule-a-pyobject-in-a-neuron-object"]], "To check if a PyObject is a number": [[54, "to-check-if-a-pyobject-is-a-number"]], "To reference a NEURON Object": [[54, "to-reference-a-neuron-object"]], "To dereference a NEURON Object": [[54, "to-dereference-a-neuron-object"]], "Arguments": [[54, "arguments"], [181, "arguments"], [310, "arguments"]], "Check for the existence of an argument": [[54, "check-for-the-existence-of-an-argument"]], "Check the type of an argument": [[54, "check-the-type-of-an-argument"]], "Get the value of an argument": [[54, "get-the-value-of-an-argument"]], "Classes": [[54, "classes"], [387, "Classes"]], "Declaring classes": [[54, "declaring-classes"]], "Object types": [[54, "object-types"]], "HocCommand objects": [[54, "hoccommand-objects"]], "Miscellaneous tips": [[54, "miscellaneous-tips"]], "Raising a NEURON error": [[54, "raising-a-neuron-error"]], "Checking if the name of an internal symbol": [[54, "checking-if-the-name-of-an-internal-symbol"]], "NEURON Development topics": [[55, "neuron-development-topics"]], "bokeh 3 seems to break docs notebooks": [[56, "bokeh-3-seems-to-break-docs-notebooks"]], "do not check import of next line": [[56, "do-not-check-import-of-next-line"]], "C/C++ API": [[57, "c-c-api"]], "Example of Generating a Movie": [[58, "example-of-generating-a-movie"]], "Install NEURON, update matplotlib": [[58, "install-neuron-update-matplotlib"]], "Load the morphology definition": [[58, "load-the-morphology-definition"]], "Setup the model": [[58, "setup-the-model"], [369, "Setup-the-model"], [373, "Setup-the-model"]], "Simulation control and image saving": [[58, "simulation-control-and-image-saving"]], "Put it all together into an MP4": [[58, "put-it-all-together-into-an-mp4"]], "Let\u2019s look at the MP4": [[58, "let-s-look-at-the-mp4"]], "Biology Modeling FAQ": [[59, "biology-modeling-faq"]], "How do I work with neuron morphologies?": [[59, "how-do-i-work-with-neuron-morphologies"]], "How do I simulate a current clamp pulse experiment?": [[59, "how-do-i-simulate-a-current-clamp-pulse-experiment"]], "How do I simulate a current clamp with non-pulse behavior?": [[59, "how-do-i-simulate-a-current-clamp-with-non-pulse-behavior"]], "How do I make cytosolic concentrations change in response to ion channel activity?": [[59, "how-do-i-make-cytosolic-concentrations-change-in-response-to-ion-channel-activity"]], "How do I make cytosolic concentrations diffuse and respond to ion channel activity?": [[59, "how-do-i-make-cytosolic-concentrations-diffuse-and-respond-to-ion-channel-activity"]], "Using the Cell Builder GUI": [[60, "using-the-cell-builder-gui"]], "The tutorials:": [[60, null], [88, null]], "Creating a stylized (\u201cstick-figure\u201d) model cell": [[61, "creating-a-stylized-stick-figure-model-cell"]], "Step 1. Bring up a CellBuilder": [[61, "step-1-bring-up-a-cellbuilder"]], "Step 2. Specify topology": [[61, "step-2-specify-topology"]], "Step 3. Specify subsets": [[61, "step-3-specify-subsets"]], "Step 4. Specify geometry": [[61, "step-4-specify-geometry"]], "Set up a strategy": [[61, "set-up-a-strategy"], [61, "id1"]], "Execute the strategy": [[61, "execute-the-strategy"], [61, "id2"]], "Step 5. Specify biophysics": [[61, "step-5-specify-biophysics"]], "Step 6. Use the model specification": [[61, "step-6-use-the-model-specification"]], "Using \u201cContinuous Create\u201d": [[61, "using-continuous-create"]], "Modular programming and reusable code": [[61, "modular-programming-and-reusable-code"]], "Exporting hoc code vs. saving a cell type": [[61, "exporting-hoc-code-vs-saving-a-cell-type"]], "Always save your configured CellBuilder to a session file": [[61, "always-save-your-configured-cellbuilder-to-a-session-file"]], "Managing a model cell with complex anatomy": [[62, "managing-a-model-cell-with-complex-anatomy"]], "Step 1: Get the cell\u2019s anatomy into a CellBuilder": [[62, "step-1-get-the-cell-s-anatomy-into-a-cellbuilder"]], "Step 2. Create subsets": [[62, "step-2-create-subsets"]], "Step 3. Specify the spatial grid": [[62, "step-3-specify-the-spatial-grid"]], "Step 4. Specify biophysics": [[62, "step-4-specify-biophysics"]], "A. Set up a strategy": [[62, "a-set-up-a-strategy"]], "B. Execute the strategy": [[62, "b-execute-the-strategy"]], "Step 5. Use the model specification": [[62, "step-5-use-the-model-specification"]], "Specifying parameterized variation of biophysical properties": [[63, "specifying-parameterized-variation-of-biophysical-properties"]], "Differences between idraw and CorelDraw": [[68, "differences-between-idraw-and-coreldraw"]], "Example of a Hybrid Network": [[69, "example-of-a-hybrid-network"]], "Example of a Simple Network": [[70, "example-of-a-simple-network"]], "Frequently asked questions (FAQ)": [[71, "frequently-asked-questions-faq"]], "Now that I\u2019ve installed NEURON, how do I run it?": [[71, "now-that-i-ve-installed-neuron-how-do-i-run-it"]], "What\u2019s the best way to learn how to use NEURON?": [[71, "what-s-the-best-way-to-learn-how-to-use-neuron"]], "How do I create a NEURON model?": [[71, "how-do-i-create-a-neuron-model"]], "Help! I\u2019m having a hard time implementing models!": [[71, "help-i-m-having-a-hard-time-implementing-models"]], "Why can\u2019t NEURON read the text file (or hoc file) that I created?": [[71, "why-can-t-neuron-read-the-text-file-or-hoc-file-that-i-created"]], "How do I print a hard copy of a NEURON window?": [[71, "how-do-i-print-a-hard-copy-of-a-neuron-window"]], "How do I plot something other than membrane potential?": [[71, "how-do-i-plot-something-other-than-membrane-potential"]], "How do I save and edit figures?": [[71, "how-do-i-save-and-edit-figures"]], "I\u2019ve used the NEURON Main Menu to construct and manage models. How can I save what I have done?": [[71, "i-ve-used-the-neuron-main-menu-to-construct-and-manage-models-how-can-i-save-what-i-have-done"]], "What is a ses (session) file? Can I edit it?": [[71, "what-is-a-ses-session-file-can-i-edit-it"]], "How do I use NEURON\u2019s tools for electrotonic analysis?": [[71, "how-do-i-use-neuron-s-tools-for-electrotonic-analysis"]], "Why should I use an odd value for nseg?": [[71, "why-should-i-use-an-odd-value-for-nseg"]], "What\u2019s a good stretegy for specifying nseg?": [[71, "what-s-a-good-stretegy-for-specifying-nseg"]], "How do I change the background color used in NEURON\u2019s shape plots and other graphs?": [[71, "how-do-i-change-the-background-color-used-in-neuron-s-shape-plots-and-other-graphs"]], "How do I change the color scale used in shape plots?": [[71, "how-do-i-change-the-color-scale-used-in-shape-plots"]], "I see an error message that says \u2026 procedure too big in ./foo.hoc \u2026": [[71, "i-see-an-error-message-that-says-procedure-too-big-in-foo-hoc"]], "Where can I find examples of mod files?": [[71, "where-can-i-find-examples-of-mod-files"]], "How do I compile mod files?": [[71, "how-do-i-compile-mod-files"]], "I can\u2019t get mod files to compile.": [[71, "i-can-t-get-mod-files-to-compile"]], "I installed a new version of NEURON, and now I see error messages like this: \u2018mecanisms fooba needs to be re-translated. its version 5.2 \u201cc\u201d code is incompatible with this neuron version\u2019.": [[71, "i-installed-a-new-version-of-neuron-and-now-i-see-error-messages-like-this-mecanisms-fooba-needs-to-be-re-translated-its-version-5-2-c-code-is-incompatible-with-this-neuron-version"]], "Is there a list of functions that are built into NMODL?": [[71, "is-there-a-list-of-functions-that-are-built-into-nmodl"]], "Is there a list of functions that are built into hoc?": [[71, "is-there-a-list-of-functions-that-are-built-into-hoc"]], "What units does NEURON use for current, concentration, etc.?": [[71, "what-units-does-neuron-use-for-current-concentration-etc"]], "When I type a new value into a numeric field, it doesn\u2019t seem to have any effect.": [[71, "when-i-type-a-new-value-into-a-numeric-field-it-doesn-t-seem-to-have-any-effect"]], "What is the difference between SEClamp and VClamp, and which should I use?": [[71, "what-is-the-difference-between-seclamp-and-vclamp-and-which-should-i-use"]], "SEClamp and IClamp just deliver rectangular step waveforms. How can I make them produce an arbitrary waveform, e.g. something that I calculated or recorded from a real cell?": [[71, "seclamp-and-iclamp-just-deliver-rectangular-step-waveforms-how-can-i-make-them-produce-an-arbitrary-waveform-e-g-something-that-i-calculated-or-recorded-from-a-real-cell"]], "I just want a current clamp that will deliver a sequence of current pulses at regular intervals. Vector play seems like overkill for this.": [[71, "i-just-want-a-current-clamp-that-will-deliver-a-sequence-of-current-pulses-at-regular-intervals-vector-play-seems-like-overkill-for-this"]], "I want a current clamp that will generate a pulse when I send it an event, or that I can use to produce pulses at precalculated times.": [[71, "i-want-a-current-clamp-that-will-generate-a-pulse-when-i-send-it-an-event-or-that-i-can-use-to-produce-pulses-at-precalculated-times"]], "I have a set of recorded or calculated spike times. How can I use these to drive a postsynaptic mechanism?": [[71, "i-have-a-set-of-recorded-or-calculated-spike-times-how-can-i-use-these-to-drive-a-postsynaptic-mechanism"]], "How can I read data from a binary PClamp file?": [[71, "how-can-i-read-data-from-a-binary-pclamp-file"]], "How do I exit NEURON? I\u2019m not using the GUI, and when I enter ^D at the oc> prompt it doesn\u2019t do anything?": [[71, "how-do-i-exit-neuron-i-m-not-using-the-gui-and-when-i-enter-d-at-the-oc-prompt-it-doesn-t-do-anything"]], "Is there a list of functions that are built into NEURON?": [[71, "is-there-a-list-of-functions-that-are-built-into-neuron"]], "FIinitializeHandler": [[72, "fiinitializehandler"]], "Syntax": [[72, "syntax"], [72, "id1"], [76, "syntax"]], "Fixing funny axes": [[73, "fixing-funny-axes"]], "How to delete v(.5) from the graph": [[74, "how-to-delete-v-5-from-the-graph"]], "How to plot variables that belong to biophysical cell models in a network": [[75, "how-to-plot-variables-that-belong-to-biophysical-cell-models-in-a-network"]], "Using Plot what? to find names": [[75, "using-plot-what-to-find-names"]], "1. Find the proper cell class": [[75, "find-the-proper-cell-class"]], "2. Find the proper instance of that class": [[75, "find-the-proper-instance-of-that-class"]], "3. Find the proper section": [[75, "find-the-proper-section"]], "4. Find the proper variable": [[75, "find-the-proper-variable"]], "What\u2019s going on": [[75, "what-s-going-on"]], "Hoc": [[76, "hoc"]], "The interpreter in $NEURONHOME/bin/$CPU": [[76, "the-interpreter-in-neuronhome-bin-cpu"]], "Constructing programs that contain the interepreter": [[76, "constructing-programs-that-contain-the-interepreter"]], "The stand-alone interpreter": [[76, "the-stand-alone-interpreter"]], "Starting the interpreter": [[76, "starting-the-interpreter"]], "Error handling": [[76, "error-handling"], [158, "error-handling"], [286, "error-handling"]], "Names": [[76, "names"]], "Keywords": [[76, "keywords"]], "Names introduced by nrnoc": [[76, "names-introduced-by-nrnoc"]], "Variables": [[76, "variables"]], "Expressions": [[76, "expressions"], [181, "expressions"], [310, "expressions"]], "Statements": [[76, "statements"], [181, "statements"], [310, "statements"]], "Control Flow": [[76, "control-flow"]], "Functions and Procedures": [[76, "functions-and-procedures"]], "Input and Output": [[76, "input-and-output"], [183, "input-and-output"], [312, "input-and-output"]], "Editing": [[76, "editing"]], "See Also": [[76, "see-also"]], "How to get started with NEURON": [[77, "how-to-get-started-with-neuron"], [78, "how-to-get-started-with-neuron"]], "Installation": [[77, "installation"], [208, "installation"], [237, "installation"], [241, "installation"]], "Forum": [[77, "forum"]], "Basic NEURON Usage": [[77, "basic-neuron-usage"]], "Using NMODL to add new mechanisms to NEURON": [[77, "using-nmodl-to-add-new-mechanisms-to-neuron"]], "To learn the basics about using NEURON:": [[78, "to-learn-the-basics-about-using-neuron"]], "To learn how to use NMODL to add new mechanisms to NEURON:": [[78, "to-learn-how-to-use-nmodl-to-add-new-mechanisms-to-neuron"]], "How to move the labels": [[79, "how-to-move-the-labels"]], "How to change the colors of the plots": [[79, "how-to-change-the-colors-of-the-plots"]], "How to translate the view": [[80, "how-to-translate-the-view"]], "Using the Import3D GUI": [[81, "using-the-import3d-gui"]], "Overview of the Import3D tool": [[81, "overview-of-the-import3d-tool"]], "Reading a morphometric data file and converting it to a NEURON model": [[81, "reading-a-morphometric-data-file-and-converting-it-to-a-neuron-model"]], "We need an Import3D tool.": [[81, "we-need-an-import3d-tool"]], "We need to choose a file to read.": [[81, "we-need-to-choose-a-file-to-read"]], "Let\u2019s see what it looks like.": [[81, "let-s-see-what-it-looks-like"]], "Exporting the model.": [[81, "exporting-the-model"]], "Exploring morphometric data and fixing problems": [[81, "exploring-morphometric-data-and-fixing-problems"]], "Zooming in and out": [[81, "zooming-in-and-out"]], "Guides": [[82, "guides"]], "Introduction to Network Construction": [[83, "introduction-to-network-construction"]], "ModelView: Compact display of parameters for NEURON models": [[84, "modelview-compact-display-of-parameters-for-neuron-models"]], "ModelView in action": [[84, "modelview-in-action"]], "Example: CA1 pyramidal neuron: as a 2-layer NN and subthreshold synaptic summation by Poirazi et al. 2003": [[84, "example-ca1-pyramidal-neuron-as-a-2-layer-nn-and-subthreshold-synaptic-summation-by-poirazi-et-al-2003"]], "ModelView and ModelDB": [[84, "modelview-and-modeldb"]], "ModelView and Interoperability Future Goals": [[84, "modelview-and-interoperability-future-goals"]], "Summary": [[84, "summary"]], "Acknowledgement": [[84, "acknowledgement"]], "Network Builder tutorials": [[85, "network-builder-tutorials"]], "Using the Network Builder": [[85, "using-the-network-builder"]], "NMODL\u2019s built-in functions": [[86, "nmodl-s-built-in-functions"]], "How to change the background color used in shape plots and other graphs": [[87, "how-to-change-the-background-color-used-in-shape-plots-and-other-graphs"]], "How create a custom colormap": [[87, "how-create-a-custom-colormap"]], "Using NEURON\u2019s Optimization Tools": [[88, "using-neuron-s-optimization-tools"]], "Why is it called \u201cMultiple Run Fitter,\u201d and what does it really do?": [[88, "why-is-it-called-multiple-run-fitter-and-what-does-it-really-do"]], "Other optimization tools that work with NEURON": [[88, "other-optimization-tools-that-work-with-neuron"]], "Tutorial 1 : Fitting a function to data": [[89, "tutorial-1-fitting-a-function-to-data"]], "Step 0. Download the data": [[89, "step-0-download-the-data"]], "Step 1. Bring up a Multiple Run Fitter": [[89, "step-1-bring-up-a-multiple-run-fitter"]], "We need the GUI tool for optimization problems.": [[89, "we-need-the-gui-tool-for-optimization-problems"]], "We need a tool for optimizing a function.": [[89, "we-need-a-tool-for-optimizing-a-function"]], "Give the Function Fitness Generator a descriptive name.": [[89, "give-the-function-fitness-generator-a-descriptive-name"]], "We need to see this Function Fitness Generator.": [[89, "we-need-to-see-this-function-fitness-generator"]], "Step 2. Load the Experimental Data into the Multiple Run Fitter": [[89, "step-2-load-the-experimental-data-into-the-multiple-run-fitter"]], "We need to load our data into the Function Fitness Generator.": [[89, "we-need-to-load-our-data-into-the-function-fitness-generator"]], "Step 3. Specify the function we want to optimize": [[89, "step-3-specify-the-function-we-want-to-optimize"]], "Selecting and Editing a Functional Form": [[89, "selecting-and-editing-a-functional-form"]], "Step 4. Specify the parameters that will be adjusted": [[89, "step-4-specify-the-parameters-that-will-be-adjusted"]], "Parameter specification": [[89, "parameter-specification"], [91, "parameter-specification"]], "Testing the Generator": [[89, "testing-the-generator"]], "Viewing (and changing) parameter values": [[89, "viewing-and-changing-parameter-values"], [91, "viewing-and-changing-parameter-values"]], "Constraining parameters": [[89, "constraining-parameters"], [91, "constraining-parameters"]], "Restricting parameter space": [[89, "restricting-parameter-space"]], "Log scaling": [[89, "log-scaling"]], "Step 5. Specify the criteria we want the function to satisfy": [[89, "step-5-specify-the-criteria-we-want-the-function-to-satisfy"]], "Step 6. Perform the optimization": [[89, "step-6-perform-the-optimization"], [91, "step-6-perform-the-optimization"]], "Test the MRF": [[89, "test-the-mrf"], [91, "test-the-mrf"]], "Choose and use an optimization algorithm": [[89, "choose-and-use-an-optimization-algorithm"], [91, "choose-and-use-an-optimization-algorithm"]], "\u201cExtra credit\u201d problem": [[89, "extra-credit-problem"]], "Hints": [[89, "hints"], [91, "hints"]], "Implementational Details of the Synaptic Mechanism": [[90, "implementational-details-of-the-synaptic-mechanism"]], "The conceptual model": [[90, "the-conceptual-model"]], "The reaction scheme": [[90, "the-reaction-scheme"]], "Binding of A to R": [[90, "binding-of-a-to-r"]], "Dissociation of ARc": [[90, "dissociation-of-arc"]], "Channel gating": [[90, "channel-gating"]], "Conservation": [[90, "conservation"]], "Reference": [[90, "reference"], [380, "reference"]], "Tutorial 2 : Fitting a model to data": [[91, "tutorial-2-fitting-a-model-to-data"]], "The problem": [[91, "the-problem"], [95, "the-problem"]], "The cell and the electrical measurements": [[91, "the-cell-and-the-electrical-measurements"]], "Step 1. Create an \u201cunoptimized\u201d model": [[91, "step-1-create-an-unoptimized-model"]], "Step 2. Set up a current clamp experiment on this model": [[91, "step-2-set-up-a-current-clamp-experiment-on-this-model"]], "Project management time!": [[91, "project-management-time"]], "What about input resistance?": [[91, "what-about-input-resistance"]], "Step 3. Configure a MultipleRunFitter to do a \u201crun fitness\u201d optimization": [[91, "step-3-configure-a-multiplerunfitter-to-do-a-run-fitness-optimization"]], "Create a Multiple Run Fitter.": [[91, "create-a-multiple-run-fitter"]], "We need a tool to perform a \u201crun fitness\u201d optimization.": [[91, "we-need-a-tool-to-perform-a-run-fitness-optimization"]], "Give the Run Fitness Generator a descriptive name.": [[91, "give-the-run-fitness-generator-a-descriptive-name"]], "We need to see this Run Fitness Generator.": [[91, "we-need-to-see-this-run-fitness-generator"]], "Redrawing the iclamp Run Fitness Generator": [[91, "redrawing-the-iclamp-run-fitness-generator"]], "Step 4. Load the Experimental Data into the iclamp Run Fitness Generator": [[91, "step-4-load-the-experimental-data-into-the-iclamp-run-fitness-generator"]], "Loading data into the Run Fitness Generator": [[91, "loading-data-into-the-run-fitness-generator"]], "Testing the Run Fitness Generator": [[91, "testing-the-run-fitness-generator"]], "Project management time again!": [[91, "project-management-time-again"]], "Step 5. Specify the parameters that will be adjusted": [[91, "step-5-specify-the-parameters-that-will-be-adjusted"]], "Proxy parameters": [[91, "proxy-parameters"]], "Testing the proxy parameters": [[91, "testing-the-proxy-parameters"]], "Using the proxy parameters": [[91, "using-the-proxy-parameters"]], "Problems and pitfalls": [[91, "problems-and-pitfalls"]], "A minimal principled strategy": [[91, "a-minimal-principled-strategy"]], "What about dirty data?": [[91, "what-about-dirty-data"]], "Contamination of the early response": [[91, "contamination-of-the-early-response"]], "Contamination of the late response": [[91, "contamination-of-the-late-response"]], "Notes": [[91, "notes"]], "Adapting MOD files for C++ with NEURON 9.0[.dev]": [[93, "adapting-mod-files-for-c-with-neuron-with-cpp-mechanisms"]], "Legacy patterns that are invalid C++": [[93, "legacy-patterns-that-are-invalid-c"]], "Implicit pointer type conversions": [[93, "implicit-pointer-type-conversions"]], "Local non-prototype function declarations": [[93, "local-non-prototype-function-declarations"]], "Function declarations with incorrect types": [[93, "function-declarations-with-incorrect-types"]], "K&R function definitions": [[93, "k-r-function-definitions"]], "Legacy patterns that are considered deprecated": [[93, "legacy-patterns-that-are-considered-deprecated"]], "Deprecated overloads taking void*": [[93, "deprecated-overloads-taking-void"]], "The Print & File Manager": [[94, "the-print-file-manager"]], "How to choose a window to be printed": [[94, "how-to-choose-a-window-to-be-printed"]], "Page orientation": [[94, "page-orientation"]], "Positioning a window in the layout area": [[94, "positioning-a-window-in-the-layout-area"]], "Resizing a window in the layout area": [[94, "resizing-a-window-in-the-layout-area"]], "Deleting a window from the layout area": [[94, "deleting-a-window-from-the-layout-area"]], "Printing the contents of the layout area": [[94, "printing-the-contents-of-the-layout-area"]], "Creating a PostScript output file": [[94, "creating-a-postscript-output-file"]], "Creating an ASCII output file": [[94, "creating-an-ascii-output-file"]], "Randomness in NEURON models": [[95, "randomness-in-neuron-models"]], "How to generate independent random spike streams": [[95, "how-to-generate-independent-random-spike-streams"]], "Source code that demonstrates the problem": [[95, "source-code-that-demonstrates-the-problem"]], "The solution": [[95, "the-solution"]], "Outline of the solution:": [[95, "outline-of-the-solution"]], "Source code that demonstrates the solution:": [[95, "source-code-that-demonstrates-the-solution"]], "Run a simulation and plot the input and output spike trains": [[96, "run-a-simulation-and-plot-the-input-and-output-spike-trains"], [97, "run-a-simulation-and-plot-the-input-and-output-spike-trains"]], "Using Session Files for Saving and Retrieving Windows": [[98, "using-session-files-for-saving-and-retrieving-windows"], [119, "using-session-files-for-saving-and-retrieving-windows"]], "How (and when) to save all windows to a ses file, and how to retrieve them": [[98, "how-and-when-to-save-all-windows-to-a-ses-file-and-how-to-retrieve-them"], [119, "how-and-when-to-save-all-windows-to-a-ses-file-and-how-to-retrieve-them"]], "How (and why) to save selected windows": [[98, "how-and-why-to-save-selected-windows"], [119, "how-and-why-to-save-selected-windows"]], "The Window Group Manager": [[98, "the-window-group-manager"], [119, "the-window-group-manager"]], "Step 1. Set up a SubsetDomainIterator": [[99, "step-1-set-up-a-subsetdomainiterator"]], "A. Specify the subset": [[99, "a-specify-the-subset"]], "B. Specify the distance metric": [[99, "b-specify-the-distance-metric"]], "Step 3. Specify and verify the functions that govern the parameters": [[100, "step-3-specify-and-verify-the-functions-that-govern-the-parameters"]], "A. Specifying a function": [[100, "a-specifying-a-function"]], "B. Verifying a function": [[100, "b-verifying-a-function"]], "Repeat until done": [[100, "repeat-until-done"]], "Step 2. Specify the model parameter(s) to be varied": [[101, "step-2-specify-the-model-parameter-s-to-be-varied"]], "Step 1. Define the types of cells": [[102, "step-1-define-the-types-of-cells"], [103, "step-1-define-the-types-of-cells"]], "A. We need the GUI tool for specifying new types of artificial cells.": [[102, "a-we-need-the-gui-tool-for-specifying-new-types-of-artificial-cells"]], "B. We need a class of cells that can supply spike trains.": [[102, "b-we-need-a-class-of-cells-that-can-supply-spike-trains"]], "C. We need to give this new cell class a short, unique name.": [[102, "c-we-need-to-give-this-new-cell-class-a-short-unique-name"]], "D. We need a class of cells that can integrate synaptic inputs.": [[102, "d-we-need-a-class-of-cells-that-can-integrate-synaptic-inputs"]], "A. We need a class of cells that can supply afferent spikes.": [[103, "a-we-need-a-class-of-cells-that-can-supply-afferent-spikes"]], "B. We need a \u201cmotoneuron\u201d or \u201cM cell\u201d class.": [[103, "b-we-need-a-motoneuron-or-m-cell-class"]], "1. Specifying the anatomical and biophysical properties of the M cell class": [[103, "specifying-the-anatomical-and-biophysical-properties-of-the-m-cell-class"]], "2. Specifying what kinds of synapses can be attached to an M cell": [[104, "specifying-what-kinds-of-synapses-can-be-attached-to-an-m-cell"]], "3. Placing synapses on the M cell": [[105, "placing-synapses-on-the-m-cell"]], "C. We need a \u201cRenshaw cell\u201d class.": [[105, "c-we-need-a-renshaw-cell-class"]], "Step 2. Create each cell in the network": [[106, "step-2-create-each-cell-in-the-network"], [107, "step-2-create-each-cell-in-the-network"]], "A. We need a Network Builder": [[106, "a-we-need-a-network-builder"]], "B. We need an instance of each of our three cell types.": [[106, "b-we-need-an-instance-of-each-of-our-three-cell-types"]], "A. We need a Network Builder.": [[107, "a-we-need-a-network-builder"]], "B. We need a cell to generate the afferent spike train.": [[107, "b-we-need-a-cell-to-generate-the-afferent-spike-train"]], "C. We need an integrate and fire cell.": [[107, "c-we-need-an-integrate-and-fire-cell"]], "Step 3. Connect the cells": [[108, "step-3-connect-the-cells"], [109, "step-3-connect-the-cells"], [110, "step-3-connect-the-cells"], [111, "step-3-connect-the-cells"]], "A. We need to set up the network architecture.": [[108, "a-we-need-to-set-up-the-network-architecture"], [110, "a-we-need-to-set-up-the-network-architecture"]], "Continued": [[109, "continued"]], "B. We need to specify the parameters of the synaptic connections.": [[109, "b-we-need-to-specify-the-parameters-of-the-synaptic-connections"], [111, "b-we-need-to-specify-the-parameters-of-the-synaptic-connections"]], "continued": [[111, "continued"]], "Tutorial 2 : Making Hybrid Nets": [[112, "tutorial-2-making-hybrid-nets"]], "Outline": [[112, "outline"], [113, "outline"]], "Tutorial 1: Making Networks of Artificial Neurons": [[113, "tutorial-1-making-networks-of-artificial-neurons"]], "Units used in NEURON": [[114, "units-used-in-neuron"]], "Scripting, the GUI, and the interpreter": [[114, "scripting-the-gui-and-the-interpreter"]], "Units within NMODL files": [[114, "units-within-nmodl-files"]], "Definition of new units": [[114, "definition-of-new-units"], [115, "definition-of-new-units"]], "Function and Argument units": [[114, "function-and-argument-units"], [115, "function-and-argument-units"]], "Units for KINETIC blocks": [[114, "units-for-kinetic-blocks"], [115, "units-for-kinetic-blocks"]], "Units in NEURON models": [[114, "units-in-neuron-models"], [115, "units-in-neuron-models"]], "UNITS Tutorial": [[115, "units-tutorial"]], "Step 4. Use the model specification": [[116, "step-4-use-the-model-specification"]], "Using NEURON on the Mac": [[117, "using-neuron-on-the-mac"]], "Under macOS, how do I compile mod files or start NEURON?": [[117, "under-macos-how-do-i-compile-mod-files-or-start-neuron"]], "Using \u201cPlot what?\u201d to Specify a Variable to be plotted": [[118, "using-plot-what-to-specify-a-variable-to-be-plotted"]], "Using the d_lambda Rule": [[120, "using-the-d-lambda-rule"]], "What is NEURON": [[121, "what-is-neuron"]], "A flexible and powerful simulator of neurons and networks": [[121, "a-flexible-and-powerful-simulator-of-neurons-and-networks"]], "Advantages over general-purpose simulators": [[121, "advantages-over-general-purpose-simulators"]], "Separates biology from purely computational concerns": [[121, "separates-biology-from-purely-computational-concerns"]], "Working with familiar idioms": [[121, "working-with-familiar-idioms"]], "Integrator-independent model specification": [[121, "integrator-independent-model-specification"]], "Efficient and painless spatial and temporal discretization": [[121, "efficient-and-painless-spatial-and-temporal-discretization"]], "Convenient user interface": [[121, "convenient-user-interface"]], "The interpreters": [[121, "the-interpreters"]], "The graphical user interface": [[121, "the-graphical-user-interface"]], "User-extendable library of biophysical mechanisms": [[121, "user-extendable-library-of-biophysical-mechanisms"]], "Enhancements for modeling networks": [[121, "enhancements-for-modeling-networks"]], "Customizable initialization and simulation flow control": [[121, "customizable-initialization-and-simulation-flow-control"]], "Large user base": [[121, "large-user-base"]], "Development, support, and documentation": [[121, "development-support-and-documentation"]], "Availability and system requirements": [[121, "availability-and-system-requirements"]], "Working with PostScript and idraw figures": [[122, "working-with-postscript-and-idraw-figures"]], "The system": [[122, "the-system"]], "The modeling experiment": [[122, "the-modeling-experiment"]], "Dressing up these figures for publication": [[122, "dressing-up-these-figures-for-publication"]], "Using features of NEURON\u2019s graph windows": [[122, "using-features-of-neuron-s-graph-windows"]], "Editing the image file": [[122, "editing-the-image-file"]], "Further comments": [[122, "further-comments"]], "idraw and LaTeX": [[122, "idraw-and-latex"]], "Tips and tools for MSWindows": [[122, "tips-and-tools-for-mswindows"]], "GUI Analysis Tools": [[123, "gui-analysis-tools"], [250, "gui-analysis-tools"]], "FunctionFitter": [[124, "functionfitter"], [251, "functionfitter"]], "Plot": [[124, "plot"], [227, "plot"], [251, "plot"], [356, "plot"], [372, "Plot"]], "Steps": [[124, "steps"], [227, "steps"], [251, "steps"], [356, "steps"]], "IndependentVar": [[124, "independentvar"], [227, "independentvar"], [251, "independentvar"], [356, "independentvar"]], "Args": [[124, "args"], [251, "args"]], "Yexpr": [[124, "yexpr"], [251, "yexpr"]], "PraxisFit": [[124, "praxisfit"], [251, "praxisfit"]], "StopAtNextQuadForm": [[124, "stopatnextquadform"], [251, "stopatnextquadform"]], "Running": [[124, "running"], [129, "running"], [251, "running"], [256, "running"]], "WatchTheFit": [[124, "watchthefit"], [251, "watchthefit"]], "RoughFit": [[124, "roughfit"], [251, "roughfit"]], "ArgValues": [[124, "argvalues"], [251, "argvalues"]], "CurrentValuesAsDefault": [[124, "currentvaluesasdefault"], [129, "currentvaluesasdefault"], [251, "currentvaluesasdefault"], [256, "currentvaluesasdefault"]], "FittoData": [[124, "fittodata"], [251, "fittodata"]], "ReadDataFile": [[124, "readdatafile"], [251, "readdatafile"]], "CommonFunctionalForms": [[124, "commonfunctionalforms"], [251, "commonfunctionalforms"]], "FitCriterion": [[124, "fitcriterion"], [251, "fitcriterion"]], "ParameterRangeLimits": [[124, "parameterrangelimits"], [251, "parameterrangelimits"]], "DataWeights": [[124, "dataweights"], [129, "dataweights"], [251, "dataweights"], [256, "dataweights"]], "SaveRestoreFunction": [[124, "saverestorefunction"], [251, "saverestorefunction"]], "Impedance Tools": [[125, "impedance-tools"], [252, "impedance-tools"]], "ImpShape": [[125, "impshape"], [252, "impshape"]], "Impx": [[126, "impx"], [253, "impx"]], "LogAvsX": [[126, "logavsx"], [224, "logavsx"], [253, "logavsx"], [353, "logavsx"]], "ImpedanceRatio": [[127, "impedanceratio"], [254, "impedanceratio"]], "MulRunFitter": [[128, "mulrunfitter"], [255, "mulrunfitter"]], "Parameters Menu": [[128, "parameters-menu"], [255, "parameters-menu"]], "Generators Menu": [[128, "generators-menu"], [255, "generators-menu"]], "Fitness menu of a Generator instance in the generator Panel": [[128, "fitness-menu-of-a-generator-instance-in-the-generator-panel"], [255, "fitness-menu-of-a-generator-instance-in-the-generator-panel"]], "RunFitter": [[129, "runfitter"], [256, "runfitter"]], "ReadData": [[129, "readdata"], [256, "readdata"]], "Variabletofit": [[129, "variabletofit"], [256, "variabletofit"]], "Parameterstovary": [[129, "parameterstovary"], [256, "parameterstovary"]], "Extras": [[129, "extras"], [256, "extras"]], "ParameterRanges": [[129, "parameterranges"], [256, "parameterranges"]], "Changeparmfromlist": [[129, "changeparmfromlist"], [256, "changeparmfromlist"]], "Removeparmfromlist": [[129, "removeparmfromlist"], [256, "removeparmfromlist"]], "SaveRestoreFitParams": [[129, "saverestorefitparams"], [256, "saverestorefitparams"]], "NumberOfDataRegions": [[129, "numberofdataregions"], [256, "numberofdataregions"]], "AnotherVariableToFit": [[129, "anothervariabletofit"], [256, "anothervariabletofit"]], "Dofit": [[129, "dofit"], [256, "dofit"]], "SingleRunFit": [[129, "singlerunfit"], [256, "singlerunfit"]], "StopatnextQuadForm": [[129, "stopatnextquadform"], [256, "stopatnextquadform"]], "Roughfit": [[129, "roughfit"], [256, "roughfit"]], "BeQuiet": [[129, "bequiet"], [256, "bequiet"]], "Programmatic Analysis Tools": [[130, "programmatic-analysis-tools"], [257, "programmatic-analysis-tools"]], "Impedance": [[131, "impedance"], [224, "impedance"], [258, "impedance"], [353, "impedance"]], "Miscellaneous": [[132, "miscellaneous"], [182, "miscellaneous"], [195, "miscellaneous"], [213, "miscellaneous"], [224, "miscellaneous"], [259, "miscellaneous"], [311, "miscellaneous"], [324, "miscellaneous"], [342, "miscellaneous"], [353, "miscellaneous"]], "Optimization": [[133, "optimization"], [260, "optimization"]], "Rarely Used Compilation Options": [[134, "rarely-used-compilation-options"], [261, "rarely-used-compilation-options"]], "NEURON HOC documentation": [[135, "neuron-hoc-documentation"]], "Quick Links": [[135, "quick-links"], [263, "quick-links"]], "Basic Programming": [[135, "basic-programming"], [263, "basic-programming"]], "Model Specification": [[135, "model-specification"], [263, "model-specification"]], "Simulation Control": [[135, "simulation-control"], [263, "simulation-control"]], "Visualization": [[135, "visualization"], [263, "visualization"]], "Analysis": [[135, "analysis"], [263, "analysis"]], "Model Specification GUI Tools": [[136, "model-specification-gui-tools"], [264, "model-specification-gui-tools"]], "CellBuilder": [[137, "cellbuilder"], [224, "cellbuilder"], [265, "cellbuilder"], [353, "cellbuilder"]], "KineticBuild": [[137, "kineticbuild"], [265, "kineticbuild"]], "Inserter": [[138, "inserter"], [224, "inserter"], [266, "inserter"], [353, "inserter"]], "Managers": [[139, "managers"], [224, "managers"], [267, "managers"], [353, "managers"]], "PointManager": [[139, "pointmanager"], [267, "pointmanager"]], "PointGroup": [[139, "pointgroup"], [267, "pointgroup"]], "Electrode": [[139, "electrode"], [142, "electrode"], [267, "electrode"], [270, "electrode"]], "Viewers": [[139, "viewers"], [224, "viewers"], [267, "viewers"], [353, "viewers"]], "PointProcesses": [[139, "pointprocesses"], [224, "pointprocesses"], [267, "pointprocesses"], [353, "pointprocesses"]], "PointProcessManager": [[139, "pointprocessmanager"], [267, "pointprocessmanager"]], "PointProcessGroupManager": [[139, "pointprocessgroupmanager"], [267, "pointprocessgroupmanager"]], "ShowMechanism": [[140, "showmechanism"], [268, "showmechanism"]], "MechType": [[140, "mechtype"], [268, "mechtype"]], "Programmatic Model Specification": [[141, "programmatic-model-specification"], [269, "programmatic-model-specification"]], "HOC-based Mechanisms": [[143, "hoc-based-mechanisms"], [271, "hoc-based-mechanisms"]], "Ions": [[144, "ions"], [272, "ions"]], "KSChan": [[145, "kschan"], [273, "kschan"]], "LinearMechanism": [[146, "linearmechanism"], [274, "linearmechanism"]], "Dynamics (Channels, etc\u2026)": [[147, "dynamics-channels-etc"], [275, "dynamics-channels-etc"]], "Point Processes and Artificial Cells": [[148, "point-processes-and-artificial-cells"], [276, "point-processes-and-artificial-cells"]], "General": [[148, "general"], [276, "general"]], "Mechanisms": [[148, "mechanisms"], [276, "mechanisms"]], "NMODL": [[149, "nmodl"], [277, "nmodl"]], "Model Description Language": [[149, "model-description-language"], [277, "model-description-language"]], "History": [[149, "history"], [277, "history"]], "Rationale": [[149, "rationale"], [277, "rationale"]], "General Paradigm": [[149, "general-paradigm"], [277, "general-paradigm"]], "Basic NMODL Statements": [[149, "basic-nmodl-statements"], [277, "basic-nmodl-statements"]], "TITLE": [[149, "title"], [277, "title"]], "COMMENT": [[149, "comment"], [277, "comment"]], "DEFINE": [[149, "define"], [277, "define"]], "UNITS": [[149, "units"], [277, "units"]], "PARAMETER": [[149, "parameter"], [277, "parameter"]], "STATE": [[149, "state"], [277, "state"]], "ASSIGNED": [[149, "assigned"], [277, "assigned"]], "CONSTANT": [[149, "constant"], [277, "constant"]], "LOCAL": [[149, "local"], [277, "local"]], "INDEPENDENT": [[149, "independent"], [277, "independent"]], "POINTER": [[149, "pointer"], [150, "pointer"], [277, "pointer"], [278, "pointer"]], "INCLUDE": [[149, "include"], [277, "include"]], "BREAKPOINT": [[149, "breakpoint"], [277, "breakpoint"]], "DERIVATIVE": [[149, "derivative"], [277, "derivative"]], "NET_RECEIVE": [[149, "net-receive"], [277, "net-receive"]], "WATCH": [[149, "watch"], [277, "watch"]], "CONSTRUCTOR": [[149, "constructor"], [277, "constructor"]], "DESTRUCTOR": [[149, "destructor"], [277, "destructor"]], "LINEAR": [[149, "linear"], [277, "linear"]], "NONLINEAR": [[149, "nonlinear"], [277, "nonlinear"]], "KINETIC": [[149, "kinetic"], [277, "kinetic"]], "CONSERVE": [[149, "conserve"], [277, "conserve"]], "COMPARTMENT": [[149, "compartment"], [277, "compartment"]], "LONGITUDINAL_DIFFUSION": [[149, "longitudinal-diffusion"], [277, "longitudinal-diffusion"]], "PROCEDURE": [[149, "procedure"], [277, "procedure"]], "FUNCTION": [[149, "function"], [277, "function"]], "TABLE": [[149, "table"], [277, "table"]], "INITIAL": [[149, "initial"], [277, "initial"]], "DISCRETE": [[149, "discrete"], [277, "discrete"]], "FUNCTION_TABLE": [[149, "function-table"], [277, "function-table"]], "SWEEP": [[149, "sweep"], [277, "sweep"]], "CONDUCTANCE": [[149, "conductance"], [277, "conductance"]], "WHILE": [[149, "while"], [277, "while"]], "IF / ELSE IF / ELSE": [[149, "if-else-if-else"], [277, "if-else-if-else"]], "LAG": [[149, "lag"], [277, "lag"]], "NEURON Extension to NMODL": [[150, "neuron-extension-to-nmodl"], [278, "neuron-extension-to-nmodl"]], "NEURON": [[150, "neuron"], [278, "neuron"]], "SUFFIX": [[150, "suffix"], [278, "suffix"]], "RANGE": [[150, "range"], [278, "range"]], "GLOBAL": [[150, "global"], [278, "global"]], "NONSPECIFIC_CURRENT": [[150, "nonspecific-current"], [278, "nonspecific-current"]], "ELECTRODE_CURRENT": [[150, "electrode-current"], [278, "electrode-current"]], "USEION": [[150, "useion"], [278, "useion"]], "READ": [[150, "read"], [278, "read"]], "WRITE": [[150, "write"], [278, "write"]], "VALENCE": [[150, "valence"], [278, "valence"]], "REPRESENTS": [[150, "represents"], [278, "represents"]], "POINT_PROCESS": [[150, "point-process"], [278, "point-process"]], "BBCOREPOINTER": [[150, "bbcorepointer"], [278, "bbcorepointer"]], "EXTERNAL": [[150, "external"], [278, "external"]], "THREADSAFE": [[150, "threadsafe"], [278, "threadsafe"]], "BEFORE": [[150, "before"], [278, "before"]], "AFTER": [[150, "after"], [278, "after"]], "FOR_NETCONS": [[150, "for-netcons"], [278, "for-netcons"]], "PROTECT": [[150, "protect"], [278, "protect"]], "MUTEXLOCK / MUTEXUNLOCK": [[150, "mutexlock-mutexunlock"], [278, "mutexlock-mutexunlock"]], "Connecting Mechanisms Together": [[150, "connecting-mechanisms-together"], [278, "connecting-mechanisms-together"]], "Pointer-Communication": [[150, "pointer-communication"], [278, "pointer-communication"]], "Verbatim": [[150, "verbatim"], [246, "verbatim"], [278, "verbatim"]], "MechanismType": [[151, "mechanismtype"], [279, "mechanismtype"]], "Networks": [[152, "networks"], [280, "networks"]], "NetCon": [[154, "netcon"], [282, "netcon"]], "Implementation Notes": [[155, "implementation-notes"], [283, "implementation-notes"]], "MPI": [[155, "mpi"], [283, "mpi"]], "SubWorld": [[155, "subworld"], [283, "subworld"]], "Parallel Network": [[155, "parallel-network"], [283, "parallel-network"]], "Parallel Transfer": [[155, "parallel-transfer"], [283, "parallel-transfer"]], "ParallelNetManager": [[156, "parallelnetmanager"], [284, "parallelnetmanager"]], "Obsolete Stimuli": [[157, "obsolete-stimuli"], [285, "obsolete-stimuli"]], "Basic Reaction-Diffusion": [[158, "basic-reaction-diffusion"], [286, "basic-reaction-diffusion"]], "Overview": [[158, "overview"], [286, "overview"], [368, "Overview"], [369, "Overview"], [371, "Overview"], [373, "Overview"]], "Specifying the domain": [[158, "specifying-the-domain"], [286, "specifying-the-domain"]], "Intracellular regions and regions in Frankenhauser-Hodgkin space": [[158, "intracellular-regions-and-regions-in-frankenhauser-hodgkin-space"], [286, "intracellular-regions-and-regions-in-frankenhauser-hodgkin-space"]], "For specifying the geometry": [[158, "for-specifying-the-geometry"], [286, "for-specifying-the-geometry"]], "Extracellular regions": [[158, "extracellular-regions"], [286, "extracellular-regions"]], "Defining proteins, ions, etc": [[158, "defining-proteins-ions-etc"], [286, "defining-proteins-ions-etc"]], "Defining reactions": [[158, "defining-reactions"], [286, "defining-reactions"]], "Mathematical functions for rate expressions": [[158, "mathematical-functions-for-rate-expressions"], [286, "mathematical-functions-for-rate-expressions"], [287, "mathematical-functions-for-rate-expressions"]], "Manipulating nodes": [[158, "manipulating-nodes"], [286, "manipulating-nodes"]], "Membrane potential": [[158, "membrane-potential"], [286, "membrane-potential"]], "Synchronization with segments": [[158, "synchronization-with-segments"], [286, "synchronization-with-segments"]], "Numerical options": [[158, "numerical-options"], [286, "numerical-options"]], "StateTransitionEvent": [[159, "statetransitionevent"], [288, "statetransitionevent"]], "Topology": [[160, "topology"], [289, "topology"]], "Conceptual Overview of Sections": [[161, "conceptual-overview-of-sections"], [290, "conceptual-overview-of-sections"]], "Geometry": [[161, "geometry"], [290, "geometry-geometry"]], "Stylized specification of geometry": [[161, "stylized-specification-of-geometry"], [290, "stylized-specification-of-geometry"]], "3-D specification of geometry": [[161, "d-specification-of-geometry"], [290, "d-specification-of-geometry"]], "Defining the 3D Shape": [[161, "defining-the-3d-shape"], [290, "defining-the-3d-shape"]], "Reading 3D Data from NEURON": [[161, "reading-3d-data-from-neuron"], [290, "reading-3d-data-from-neuron"]], "SectionList": [[162, "sectionlist"], [291, "sectionlist"]], "SectionRef": [[163, "sectionref"], [292, "sectionref"]], "Section and Segment Selection": [[164, "section-and-segment-selection"], [293, "section-and-segment-selection"]], "Dot notation": [[164, "dot-notation"]], "Stack of sections": [[164, "stack-of-sections"]], "Default section": [[164, "default-section"], [293, "default-section"]], "Dynamic Code Loading and Execution": [[165, "dynamic-code-loading-and-execution"], [294, "dynamic-code-loading-and-execution"]], "code-executing": [[165, "code-executing"], [294, "code-executing"]], "code-loading": [[165, "code-loading"], [294, "code-loading"]], "Error Handling": [[166, "error-handling"], [295, "error-handling"]], "Dialog Boxes": [[167, "dialog-boxes"], [296, "dialog-boxes"]], "Layout": [[168, "layout"], [297, "layout"]], "Style Settings": [[170, "style-settings"], [299, "style-settings"]], "Domain Restrictions for Fields": [[170, "domain-restrictions-for-fields"], [299, "domain-restrictions-for-fields"]], "PrintWindowManager Placement": [[170, "printwindowmanager-placement"], [299, "printwindowmanager-placement"]], "Miscellaneous Menus": [[171, "miscellaneous-menus"], [300, "miscellaneous-menus"]], "PWManager": [[172, "pwmanager"], [301, "pwmanager"]], "SectionBrowser": [[173, "sectionbrowser"], [302, "sectionbrowser"]], "SymChooser": [[174, "symchooser"], [303, "symchooser"]], "TextEditor": [[175, "texteditor"], [304, "texteditor"]], "Obsolete Text Menus": [[176, "obsolete-text-menus"], [305, "obsolete-text-menus"]], "ValueFieldEditor": [[177, "valuefieldeditor"], [306, "valuefieldeditor"]], "Widgets": [[178, "widgets"]], "GUI Design": [[179, "gui-design"], [308, "gui-design"]], "HOC Language": [[180, "hoc-language"], [309, "hoc-language"]], "HOC Syntax": [[181, "hoc-syntax"], [310, "hoc-syntax"]], "comments": [[181, "comments"], [310, "comments"]], "proc": [[181, "proc"], [310, "proc"]], "func": [[181, "func"], [310, "func"]], "obfunc": [[181, "obfunc"], [310, "obfunc"]], "iterator": [[181, "iterator"], [310, "iterator"]], "Debugging and Internals Access": [[182, "debugging-and-internals-access"], [311, "debugging-and-internals-access"]], "Namespace Related": [[182, "namespace-related"], [311, "namespace-related"]], "Object Related": [[182, "object-related"], [311, "object-related"]], "File Access (Recommended Way)": [[184, "file-access-recommended-way"]], "Plotter Control (obsolete)": [[185, "plotter-control-obsolete"], [314, "plotter-control-obsolete"]], "Printf (Formatted Output)": [[186, "printf-formatted-output"], [315, "printf-formatted-output"]], "Redirect Standard Out": [[186, "redirect-standard-out"], [315, "redirect-standard-out"]], "Read from Terminal and Files": [[187, "read-from-terminal-and-files"], [316, "read-from-terminal-and-files"]], "Open and Write to Files (Obsolete)": [[188, "open-and-write-to-files-obsolete"], [317, "open-and-write-to-files-obsolete"]], "Constants": [[189, "constants"], [318, "constants"]], "Solving Nonlinear Systems": [[190, "solving-nonlinear-systems"], [319, "solving-nonlinear-systems"]], "Common Math Functions (HOC)": [[191, "common-math-functions-hoc"], [320, "common-math-functions-hoc"]], "GUIMath": [[192, "guimath"], [321, "guimath"]], "Matrix": [[193, "matrix"], [322, "matrix"]], "mcell_ran4": [[194, "mcell-ran4"], [323, "mcell-ran4"]], "Pseudo-Random Number Generation": [[196, "pseudo-random-number-generation"], [325, "pseudo-random-number-generation"]], "Random Class": [[196, "random-class"], [325, "random-class"]], "Fourier Analysis": [[197, "fourier-analysis"], [326, "fourier-analysis"]], "Mathematics": [[198, "mathematics"], [327, "mathematics"]], "MechanismStandard (Parameter Control)": [[199, "mechanismstandard-parameter-control"], [328, "mechanismstandard-parameter-control"]], "neuron": [[200, "neuron"], [329, "neuron"]], "Important names and sub-packages": [[200, "important-names-and-sub-packages"], [329, "important-names-and-sub-packages"]], "Parameters": [[200, "parameters"], [200, "id1"], [329, "parameters"], [329, "id1"], [371, "Parameters"], [372, "Parameters"]], "HOC Keywords": [[201, "hoc-keywords"], [330, "hoc-keywords"]], "Object Oriented Programming": [[202, "object-oriented-programming"]], "begintemplate": [[202, "begintemplate"], [331, "begintemplate"]], "endtemplate": [[202, "endtemplate"], [331, "endtemplate"]], "objectvar": [[202, "objectvar"], [331, "objectvar"]], "objref": [[202, "objref"], [331, "objref"]], "public": [[202, "public"], [331, "public"]], "external": [[202, "external"], [331, "external"]], "new": [[202, "new"], [331, "new"]], "NULLobject": [[202, "nullobject"], [331, "nullobject"]], "Obsolete Pointer Functions": [[203, "obsolete-pointer-functions"], [332, "obsolete-pointer-functions"]], "Pointer Class": [[204, "pointer-class"], [333, "pointer-class"]], "PtrVector": [[205, "ptrvector"], [334, "ptrvector"]], "Predeclared Variables": [[206, "predeclared-variables"], [335, "predeclared-variables"]], "Project Management": [[207, "project-management"], [336, "project-management"]], "Utilities": [[207, "utilities"], [336, "utilities"]], "prjnrninit": [[207, "prjnrninit"], [336, "prjnrninit"]], "prjnrncmp": [[207, "prjnrncmp"], [336, "prjnrncmp"]], "prjnrnco": [[207, "prjnrnco"], [336, "prjnrnco"]], "prjnrnci": [[207, "prjnrnci"], [336, "prjnrnci"]], "prjnrnpr": [[207, "prjnrnpr"], [336, "prjnrnpr"]], "ivdialog": [[207, "ivdialog"], [336, "ivdialog"]], "Python Language": [[208, "python-language"], [337, "python-language"]], "Python Accessing HOC": [[208, "python-accessing-hoc"], [337, "python-accessing-hoc"]], "Segment": [[208, "segment"], [337, "segment"]], "Mechanism": [[208, "mechanism"], [337, "mechanism"]], "HOC accessing Python": [[208, "hoc-accessing-python"], [337, "hoc-accessing-python"]], "Pointers": [[209, "pointers"], [338, "pointers"]], "String Parsing (sscanf)": [[210, "string-parsing-sscanf"], [339, "string-parsing-sscanf"]], "StringFunctions (String Manipulation Class)": [[211, "stringfunctions-string-manipulation-class"], [340, "stringfunctions-string-manipulation-class"]], "System Calls": [[213, "system-calls"], [342, "system-calls"]], "Path Manipulation": [[213, "path-manipulation"], [342, "path-manipulation"]], "Machine Identification": [[213, "machine-identification"], [342, "machine-identification"]], "Execute a Command": [[213, "execute-a-command"], [342, "execute-a-command"]], "Timing": [[213, "timing"], [342, "timing"]], "Timer": [[214, "timer"], [343, "timer"]], "Running and Saving Batch Jobs": [[215, "running-and-saving-batch-jobs"], [344, "running-and-saving-batch-jobs"]], "BBSaveState": [[216, "bbsavestate"], [345, "bbsavestate"]], "CVode": [[217, "cvode"], [346, "cvode"]], "ModelDescriptionIssues": [[217, "modeldescriptionissues"], [346, "modeldescriptionissues"]], "Channels": [[217, "channels"], [346, "channels"]], "Concentrations": [[217, "concentrations"], [346, "concentrations"]], "Events": [[217, "events"], [346, "events"]], "Family": [[218, "family"], [224, "family"], [347, "family"], [353, "family"]], "ExecCommand": [[218, "execcommand"], [347, "execcommand"]], "GatherVec": [[218, "gathervec"], [347, "gathervec"]], "VectorPlay": [[218, "vectorplay"], [347, "vectorplay"]], "VecWrap": [[218, "vecwrap"], [347, "vecwrap"]], "Interpreter Management": [[219, "interpreter-management"], [348, "interpreter-management"]], "Programmatic Simulation Control": [[220, "programmatic-simulation-control"], [349, "programmatic-simulation-control"]], "Functions": [[220, "functions"], [349, "functions"], [387, "Functions"]], "FInitializeHandler": [[220, "finitializehandler"], [349, "finitializehandler"]], "RunControl": [[221, "runcontrol"], [350, "runcontrol"]], "t": [[221, "t"], [350, "t"]], "dt": [[221, "dt"], [350, "dt"]], "InitRun": [[221, "initrun"], [350, "initrun"]], "Init": [[221, "init"], [350, "init"]], "Stop": [[221, "stop"], [350, "stop"]], "Continuetil": [[221, "continuetil"], [350, "continuetil"]], "Continuefor": [[221, "continuefor"], [350, "continuefor"]], "SingleStep": [[221, "singlestep"], [350, "singlestep"]], "Tstop": [[221, "tstop"], [350, "tstop"]], "Plotsms": [[221, "plotsms"], [350, "plotsms"]], "Quiet": [[221, "quiet"], [350, "quiet"]], "RealTime": [[221, "realtime"], [350, "realtime"]], "SaveState": [[222, "savestate"], [351, "savestate"]], "Session Printing and Saving": [[223, "session-printing-and-saving"], [352, "session-printing-and-saving"]], "Standard Run Tools": [[224, "standard-run-tools"], [353, "standard-run-tools"]], "NEURON Main Menu": [[224, "neuron-main-menu"], [353, "neuron-main-menu"]], "LoadSession": [[224, "loadsession"], [353, "loadsession"]], "LoadHoc": [[224, "loadhoc"], [353, "loadhoc"]], "LoadDLL": [[224, "loaddll"], [353, "loaddll"]], "savesession": [[224, "savesession"], [353, "savesession"]], "workingdir": [[224, "workingdir"], [353, "workingdir"]], "recentdir": [[224, "recentdir"], [353, "recentdir"]], "Quit": [[224, "quit"], [228, "quit"], [353, "quit"], [357, "quit"]], "Edit": [[224, "edit"], [353, "edit"]], "Build": [[224, "build"], [353, "build"]], "singlecompartment": [[224, "singlecompartment"], [353, "singlecompartment"]], "NetworkCell": [[224, "networkcell"], [353, "networkcell"]], "FromCellBuilder": [[224, "fromcellbuilder"], [353, "fromcellbuilder"]], "ArtificialCell": [[224, "artificialcell"], [353, "artificialcell"]], "NetworkBuilder": [[224, "networkbuilder"], [353, "networkbuilder"]], "Tools": [[224, "tools"], [353, "tools"]], "Fitting": [[224, "fitting"], [353, "fitting"]], "Parameterized Function": [[224, "parameterized-function"], [353, "parameterized-function"]], "Run Fitter": [[224, "run-fitter"], [353, "run-fitter"]], "Multiple Run Fitter": [[224, "multiple-run-fitter"], [353, "multiple-run-fitter"]], "Run Control": [[224, "run-control"], [353, "run-control"]], "Variable Step Control": [[224, "variable-step-control"], [353, "variable-step-control"]], "Usevariabledt": [[224, "usevariabledt"], [353, "usevariabledt"]], "Localvariabledt": [[224, "localvariabledt"], [353, "localvariabledt"]], "AbsoluteTolerance": [[224, "absolutetolerance"], [353, "absolutetolerance"]], "Distributed Mechanisms": [[224, "distributed-mechanisms"], [353, "distributed-mechanisms"]], "Homogeneous Spec": [[224, "homogeneous-spec"], [353, "homogeneous-spec"]], "ShapeName": [[224, "shapename"], [353, "shapename"]], "NameValues": [[224, "namevalues"], [353, "namevalues"]], "Mechanisms Globals": [[224, "mechanisms-globals"], [353, "mechanisms-globals"]], "celsius": [[224, "celsius"], [353, "celsius"]], "globalRa": [[224, "globalra"], [353, "globalra"]], "Frequency": [[224, "frequency"], [353, "frequency"]], "Path": [[224, "path"], [353, "path"]], "Shape": [[224, "shape"], [234, "shape"], [353, "shape"], [363, "shape"]], "Archive And Hardcopy": [[224, "archive-and-hardcopy"], [353, "archive-and-hardcopy"]], "Family1": [[224, "family1"], [353, "family1"]], "Command": [[224, "command"], [353, "command"]], "Builders": [[224, "builders"], [353, "builders"]], "Kinetic Scheme Builder": [[224, "kinetic-scheme-builder"], [353, "kinetic-scheme-builder"]], "Currentaxis": [[224, "currentaxis"], [353, "currentaxis"]], "Stateaxis": [[224, "stateaxis"], [353, "stateaxis"]], "Shapeplot": [[224, "shapeplot"], [353, "shapeplot"]], "VectorMovie": [[224, "vectormovie"], [353, "vectormovie"]], "PhasePlane": [[224, "phaseplane"], [353, "phaseplane"]], "Grapher": [[224, "grapher"], [227, "grapher"], [353, "grapher"], [356, "grapher"]], "Voltageaxis": [[224, "voltageaxis"], [353, "voltageaxis"]], "Save to File": [[224, "save-to-file"], [353, "save-to-file"]], "RetrievefromFile": [[224, "retrievefromfile"], [353, "retrievefromfile"]], "GatherValues": [[224, "gathervalues"], [353, "gathervalues"]], "Play": [[224, "play"], [353, "play"]], "Display": [[224, "display"], [353, "display"]], "Draw": [[224, "draw"], [353, "draw"]], "Window": [[224, "window"], [353, "window"]], "Ungrouped": [[224, "ungrouped"], [353, "ungrouped"]], "GroupManager": [[224, "groupmanager"], [353, "groupmanager"]], "Glyph": [[225, "glyph"], [354, "glyph"]], "EraseAll": [[227, "eraseall"], [356, "eraseall"]], "Generator": [[227, "generator"], [356, "generator"]], "IndepBegin": [[227, "indepbegin"], [356, "indepbegin"]], "IndepEnd": [[227, "independ"], [356, "independ"]], "Xexpr": [[227, "xexpr"], [356, "xexpr"]], "GUI Look And Feel": [[228, "gui-look-and-feel"], [357, "gui-look-and-feel"]], "Scene": [[228, "scene"], [357, "scene"]], "View_equal_Plot": [[228, "view-equal-plot"]], "ZoomOut10": [[228, "zoomout10"], [357, "zoomout10"]], "ZoomIn10": [[228, "zoomin10"], [357, "zoomin10"]], "NewView": [[228, "newview"], [357, "newview"]], "ZoomInOut": [[228, "zoominout"], [357, "zoominout"]], "Translate": [[228, "translate"], [357, "translate"]], "RoundView": [[228, "roundview"], [357, "roundview"]], "WholeScene": [[228, "wholescene"], [357, "wholescene"]], "SetView": [[228, "setview"], [357, "setview"]], "Scene_equal_View": [[228, "scene-equal-view"]], "ObjectName": [[228, "objectname"], [357, "objectname"]], "Browser": [[228, "browser"], [357, "browser"]], "FieldEditor": [[228, "fieldeditor"], [357, "fieldeditor"]], "Panel": [[228, "panel"], [357, "panel"]], "Button": [[228, "button"], [357, "button"]], "Menu": [[228, "menu"], [357, "menu"]], "ValueEditor": [[228, "valueeditor"], [357, "valueeditor"]], "Default Value Editor": [[228, "default-value-editor"], [357, "default-value-editor"]], "Print & File Window Manager": [[228, "print-file-window-manager"], [357, "print-file-window-manager"]], "ScreenItem": [[228, "screenitem"], [357, "screenitem"]], "PaperItem": [[228, "paperitem"], [357, "paperitem"]], "Help": [[228, "help"], [357, "help"]], "Print": [[228, "print"], [357, "print"]], "PrintToFile": [[228, "printtofile"], [357, "printtofile"]], "PostScript": [[228, "postscript"], [357, "postscript"]], "Idraw": [[228, "idraw"], [357, "idraw"]], "Ascii": [[228, "ascii"], [357, "ascii"]], "Session": [[228, "session"], [357, "session"]], "Retrieve": [[228, "retrieve"], [357, "retrieve"]], "SaveSelected": [[228, "saveselected"], [357, "saveselected"]], "SaveAll": [[228, "saveall"], [357, "saveall"]], "Other": [[228, "other"], [357, "other"]], "SelectPrinter": [[228, "selectprinter"], [357, "selectprinter"]], "WindowTitlesPrinted": [[228, "windowtitlesprinted"], [357, "windowtitlesprinted"]], "VirtualScreen": [[228, "virtualscreen"], [357, "virtualscreen"]], "LandPort": [[228, "landport"], [357, "landport"]], "Tray": [[228, "tray"], [357, "tray"]], "Crosshair": [[228, "crosshair"], [357, "crosshair"]], "PlotWhat": [[228, "plotwhat"], [231, "plotwhat"], [357, "plotwhat"], [360, "plotwhat"]], "PickVector": [[228, "pickvector"], [357, "pickvector"]], "PlotRange": [[228, "plotrange"], [357, "plotrange"]], "ChangeColor-Brush": [[228, "changecolor-brush"], [357, "changecolor-brush"]], "AxisType": [[228, "axistype"], [357, "axistype"]], "ViewAxis": [[228, "viewaxis"], [357, "viewaxis"]], "NewAxis": [[228, "newaxis"], [357, "newaxis"]], "ViewBox": [[228, "viewbox"], [357, "viewbox"]], "KeepLines": [[228, "keeplines"], [357, "keeplines"]], "FamilyLabel": [[228, "familylabel"], [357, "familylabel"]], "Erase": [[228, "erase"], [357, "erase"]], "MoveText": [[228, "movetext"], [231, "movetext"], [357, "movetext"], [360, "movetext"]], "ChangeText": [[228, "changetext"], [357, "changetext"]], "Delete": [[228, "delete"], [357, "delete"]], "Notification": [[229, "notification"], [358, "notification"]], "Obsolete Plotting": [[230, "obsolete-plotting"], [359, "obsolete-plotting"]], "PlotShape Window": [[231, "plotshape-window"], [360, "plotshape-window"]], "Section": [[231, "section"], [360, "section"]], "Rotate3D": [[231, "rotate3d"], [360, "rotate3d"]], "ShapeStyle": [[231, "shapestyle"], [360, "shapestyle"]], "VariableScale": [[231, "variablescale"], [360, "variablescale"]], "TimePlot": [[231, "timeplot"], [360, "timeplot"]], "SpacePlot": [[231, "spaceplot"], [360, "spaceplot"]], "ShapePlot": [[231, "shapeplot"], [360, "shapeplot"]], "PlotShape": [[232, "plotshape"], [361, "plotshape"]], "RangeVarPlot": [[233, "rangevarplot"], [362, "rangevarplot"]], "MenuExplore": [[235, "menuexplore"], [364, "menuexplore"]], "PointProcessLocator": [[235, "pointprocesslocator"], [364, "pointprocesslocator"]], "ShapeBrowser": [[235, "shapebrowser"], [364, "shapebrowser"]], "How to develop and debug your own code": [[236, "how-to-develop-and-debug-your-own-code"]], "Rule I: Don\u2019t write a bunch of code (or create a bunch of GUI windows) all at once, and then expect everything to work the first time you try it.": [[236, "rule-i-don-t-write-a-bunch-of-code-or-create-a-bunch-of-gui-windows-all-at-once-and-then-expect-everything-to-work-the-first-time-you-try-it"]], "Rule II: Learn how to debug your own code.": [[236, "rule-ii-learn-how-to-debug-your-own-code"]], "The Python Debugger: pdb": [[236, "the-python-debugger-pdb"]], "The NEURON Simulator": [[237, "the-neuron-simulator"]], "Code Coverage": [[238, "code-coverage"]], "Dependencies (Linux)": [[238, "dependencies-linux"]], "Instructions": [[238, "instructions"]], "Simplified Workflow": [[238, "simplified-workflow"]], "Diagnosis and Debugging": [[239, "diagnosis-and-debugging"]], "Segfault and crash.": [[239, "segfault-and-crash"]], "NaN or Inf values": [[239, "nan-or-inf-values"]], "Different results with different nhost or nthread.": [[239, "different-results-with-different-nhost-or-nthread"]], "GDB": [[239, "gdb"]], "GDB and MPI": [[239, "gdb-and-mpi"]], "Valgrind": [[239, "valgrind"]], "Valgrind + gdb": [[239, "valgrind-gdb"]], "Sanitizers": [[239, "sanitizers"]], "ThreadSanitizer (TSAN)": [[239, "threadsanitizer-tsan"]], "Profiling and performance benchmarking": [[239, "profiling-and-performance-benchmarking"]], "Running benchmarks": [[239, "running-benchmarks"]], "Running GPU benchmarks": [[239, "running-gpu-benchmarks"]], "Developer Builds": [[240, "developer-builds"]], "Installing Binary Distribution": [[242, "installing-binary-distribution"]], "Mac OS": [[242, "mac-os"]], "Linux": [[242, "linux"], [242, "id1"], [244, "linux"]], "Windows": [[242, "windows"]], "Windows Subsystem for Linux (WSL) Python Wheel": [[242, "windows-subsystem-for-linux-wsl-python-wheel"]], "Installing Source Distributions": [[242, "installing-source-distributions"]], "Install Build Dependencies": [[242, "install-build-dependencies"]], "Mac OS - x86_64": [[242, "mac-os-x86-64"]], "Mac OS - Apple M1": [[242, "mac-os-apple-m1"]], "Install NEURON using CMake": [[242, "install-neuron-using-cmake"]], "Optimized CPU and GPU Support using CoreNEURON": [[242, "optimized-cpu-and-gpu-support-using-coreneuron"]], "Run integrated tests": [[242, "run-integrated-tests"]], "FAQs": [[242, "faqs"]], "Mac Binary Package (Apple M1 and Mac x86_64)": [[243, "mac-binary-package-apple-m1-and-mac-x86-64"]], "Dependencies": [[243, "dependencies"]], "Signing and Notarization": [[243, "signing-and-notarization"]], "Building Python Wheels": [[244, "building-python-wheels"]], "Linux wheels": [[244, "linux-wheels"]], "Setting up Docker": [[244, "setting-up-docker"]], "NEURON Docker Image Workflow": [[244, "neuron-docker-image-workflow"]], "Building the docker image": [[244, "building-the-docker-image"]], "Pushing to DockerHub": [[244, "pushing-to-dockerhub"]], "Using the docker image": [[244, "using-the-docker-image"]], "MPI support": [[244, "mpi-support"]], "macOS wheels": [[244, "macos-wheels"]], "Launch the wheel building": [[244, "launch-the-wheel-building"]], "macOS": [[244, "macos"]], "Testing the wheels": [[244, "testing-the-wheels"]], "MacOS considerations": [[244, "macos-considerations"]], "Testing on BB5": [[244, "testing-on-bb5"]], "Publishing the wheels on Pypi via Azure": [[244, "publishing-the-wheels-on-pypi-via-azure"]], "Publishing the wheels on Pypi via CircleCI": [[244, "publishing-the-wheels-on-pypi-via-circleci"]], "Nightly wheels": [[244, "nightly-wheels"]], "Windows build": [[245, "windows-build"]], "Pre-requisites": [[245, "pre-requisites"]], "Build Environment installation": [[245, "build-environment-installation"]], "How to build NEURON": [[245, "how-to-build-neuron"]], "Other scripting languages": [[247, "other-scripting-languages"]], "Setting up Julia for use with NEURON": [[247, "setting-up-julia-for-use-with-neuron"]], "A simple Julia example": [[247, "a-simple-julia-example"]], "Publications about NEURON": [[248, "publications-about-neuron"]], "Publications using NEURON": [[249, "publications-using-neuron"]], "Environment Variables": [[262, "environment-variables"]], "NEURON_MODULE_OPTIONS": [[262, "neuron-module-options"]], "NRNUNIT_USE_LEGACY": [[262, "nrnunit-use-legacy"]], "NEURON Python documentation": [[263, "neuron-python-documentation"]], "Related resources": [[286, "related-resources"]], "SBML Export": [[286, "sbml-export"]], "Saving and restoring state": [[286, "saving-and-restoring-state"]], "Dot notation for properties": [[293, "dot-notation-for-properties"]], "sec= for functions": [[293, "sec-for-functions"]], "GUI Widgets": [[307, "gui-widgets"]], "File Access (objected-oriented via NEURON)": [[313, "file-access-objected-oriented-via-neuron"]], "Object Oriented Programming in HOC": [[331, "object-oriented-programming-in-hoc"]], "View = Plot": [[357, "view-plot"]], "Scene = View": [[357, "scene-view"]], "Removed Features": [[365, "removed-features"], [365, "id9"]], "Varying initial concentrations and parameters": [[367, "Varying-initial-concentrations-and-parameters"]], "Reaction-diffusion introduction": [[368, "Reaction-diffusion-introduction"]], "Math": [[368, "Math"]], "Where": [[368, "Where"]], "Who": [[368, "Who"]], "How": [[368, "How"]], "Reading the data": [[368, "Reading-the-data"]], "NodeList": [[368, "NodeList"]], "Node": [[368, "Node"]], "Simple Reaction with Abrupt Change in Reaction Rate": [[368, "Simple-Reaction-with-Abrupt-Change-in-Reaction-Rate"]], "Scalar Bistable Wave": [[368, "Scalar-Bistable-Wave"]], "Restricting reactions to a part of a region": [[369, "Restricting-reactions-to-a-part-of-a-region"]], "Setup NEURON library and imports": [[369, "Setup-NEURON-library-and-imports"], [373, "Setup-NEURON-library-and-imports"]], "Morphology and discretization": [[369, "Morphology-and-discretization"]], "The rxd.Region": [[369, "The-rxd.Region"]], "The rxd.Species": [[369, "The-rxd.Species"]], "The rxd.Reaction and its localization": [[369, "The-rxd.Reaction-and-its-localization"]], "Run and visualize the simulation": [[369, "Run-and-visualize-the-simulation"]], "Initialization Strategies": [[370, "Initialization-Strategies"]], "Option 1: NEURON and NMODL defaults": [[370, "Option-1:-NEURON-and-NMODL-defaults"]], "Option 2: Uniform initial concentration": [[370, "Option-2:-Uniform-initial-concentration"]], "Option 3: Initializing to a function of position": [[370, "Option-3:-Initializing-to-a-function-of-position"]], "Using h.distance:": [[370, "Using-h.distance:"]], "Using position:": [[370, "Using-position:"]], "Option 4: to steady state": [[370, "Option-4:-to-steady-state"]], "Example: Calcium waves": [[371, "Example:-Calcium-waves"]], "Concept": [[371, "Concept"]], "Specification": [[371, "Specification"]], "Basic structure": [[371, "Basic-structure"]], "Enable variable time step": [[371, "Enable-variable-time-step"]], "Regions": [[371, "Regions"]], "Species": [[371, "Species"]], "Example: Circadian rhythm": [[372, "Example:-Circadian-rhythm"]], "Load libraries": [[372, "Load-libraries"]], "Units": [[372, "Units"]], "Helper functions for clarity": [[372, "Helper-functions-for-clarity"]], "Define the morphology": [[372, "Define-the-morphology"]], "Declaring proteins": [[372, "Declaring-proteins"]], "Reactions": [[372, "Reactions"]], "Record states": [[372, "Record-states"]], "Run the simulation": [[372, "Run-the-simulation"], [382, "Run-the-simulation"]], "Example: combining MOD file ion channels with rxd": [[373, "Example:-combining-MOD-file-ion-channels-with-rxd"]], "Add a stimulus": [[373, "Add-a-stimulus"]], "Setup recording variables": [[373, "Setup-recording-variables"]], "Initialize and run the simulation": [[373, "Initialize-and-run-the-simulation"]], "Plot it": [[373, "Plot-it"]], "Note: On homeostatic mechanisms or the lack thereof": [[373, "Note:-On-homeostatic-mechanisms-or-the-lack-thereof"]], "Finally: The mod file": [[373, "Finally:-The-mod-file"]], "Example: Degradable buffer": [[374, "Example:-Degradable-buffer"]], "Calbindin D28K dynamics": [[374, "Calbindin-D28K-dynamics"]], "A model": [[374, "A-model"]], "Extracellular reaction-diffusion tutorial": [[375, "Extracellular-reaction-diffusion-tutorial"]], "Download files": [[375, "Download-files"]], "Recording from a single voxel": [[375, "Recording-from-a-single-voxel"]], "Boundary conditions": [[375, "Boundary-conditions"]], "Extracellular reactions": [[375, "Extracellular-reactions"]], "Inhomogeneities": [[375, "Inhomogeneities"]], "Initial conditions": [[375, "Initial-conditions"]], "Anisotropy": [[375, "Anisotropy"]], "Tissue characteristics": [[375, "Tissue-characteristics"]], "Python RXD tutorials": [[376, "python-rxd-tutorials"]], "Reaction-diffusion": [[376, null]], "IP3 demo": [[377, "IP3-demo"]], "Reaction-diffusion thresholds": [[378, "Reaction-diffusion-thresholds"]], "NEURON Source and Release Management Guide": [[379, "neuron-source-and-release-management-guide"]], "INTRODUCTION": [[379, "introduction"]], "Definitions": [[379, "definitions"]], "GIT and GITHUB": [[379, "git-and-github"]], "Git Branches and Tags": [[379, "git-branches-and-tags"]], "GitHub": [[379, "github"]], "GIT OPERATIONS": [[379, "git-operations"]], "Checkout, Stage, Commit": [[379, "checkout-stage-commit"]], "Checkout & Reset": [[379, "checkout-reset"]], "Merging Branches": [[379, "merging-branches"]], "Merge \u2013squash": [[379, "merge-squash"]], "Fast-Forward merge": [[379, "fast-forward-merge"]], "Merge and Rebase": [[379, "merge-and-rebase"]], "BEST PRACTICES": [[379, "best-practices"]], "Creating Changes/Pull Requests": [[379, "creating-changes-pull-requests"]], "Bring up to date: Merge vs Rebase": [[379, "bring-up-to-date-merge-vs-rebase"]], "Reviewing": [[379, "reviewing"]], "CREATING RELEASES": [[379, "creating-releases"]], "NEURON\u2019s Release Requirements": [[379, "neuron-s-release-requirements"]], "VERSIONING SCHEMES": [[379, "versioning-schemes"]], "Existing Conventions": [[379, "existing-conventions"]], "Semantic Versioning": [[379, "semantic-versioning"]], "PEP 440": [[379, "pep-440"]], "Release Life Cycle: Alpha, Beta, Release Candidate": [[379, "release-life-cycle-alpha-beta-release-candidate"]], "A Versioning Scheme for NEURON": [[379, "a-versioning-scheme-for-neuron"]], "RELEASE MANAGEMENT WITH GIT": [[379, "release-management-with-git"]], "Git Branching Models": [[379, "git-branching-models"]], "GitHub Flow": [[379, "github-flow"]], "Git Flow": [[379, "git-flow"]], "GitLab Flow": [[379, "gitlab-flow"]], "Other Alternatives": [[379, "other-alternatives"]], "NEURON Release Management Guidelines": [[379, "neuron-release-management-guidelines"], [380, "neuron-release-management-guidelines"]], "Contributing": [[379, "contributing"], [380, "contributing"]], "Managing Releases": [[379, "managing-releases"], [380, "managing-releases"]], "From Alpha to Final Release": [[379, "from-alpha-to-final-release"], [380, "from-alpha-to-final-release"]], "Patch Releases": [[379, "patch-releases"], [380, "patch-releases"]], "Release Deprecation": [[379, "release-deprecation"], [380, "release-deprecation"]], "REFERENCES": [[379, "references"]], "DOCUMENT HISTORY": [[379, "document-history"]], "Footnotes": [[379, "footnotes"]], "NEURON Versioning and Release Guidelines": [[380, "neuron-versioning-and-release-guidelines"]], "Release Versioning": [[380, "release-versioning"]], "Versioning Scheme": [[380, "versioning-scheme"]], "NEURON SCM and Release": [[381, "neuron-scm-and-release"]], "Ball and stick 1: Basic cell": [[382, "Ball-and-stick-1:-Basic-cell"]], "Load NEURON": [[382, "Load-NEURON"]], "Defining the cell morphology": [[382, "Defining-the-cell-morphology"]], "Create the sections": [[382, "Create-the-sections"]], "Connect the sections": [[382, "Connect-the-sections"]], "Define stylized geometry": [[382, "Define-stylized-geometry"]], "Specify biophysics": [[382, "Specify-biophysics"]], "Stimulation": [[382, "Stimulation"]], "Recording": [[382, "Recording"], [383, "Recording"]], "Plot the results": [[382, "Plot-the-results"]], "Simulation studies": [[382, "Simulation-studies"]], "Role of current amplitude": [[382, "Role-of-current-amplitude"]], "Plotting both the dendrite and the soma": [[382, "Plotting-both-the-dendrite-and-the-soma"]], "The role of nseg": [[382, "The-role-of-nseg"]], "Advanced exercise": [[382, "Advanced-exercise"]], "Ball and stick 2: Build a ring network of ball-and-stick cells": [[383, "Ball-and-stick-2:-Build-a-ring-network-of-ball-and-stick-cells"]], "Generic cell class": [[383, "Generic-cell-class"]], "Adjusting position and orientation": [[383, "Adjusting-position-and-orientation"]], "Construct and position our cells": [[383, "Construct-and-position-our-cells"]], "A first synapse, and input via a NetStim": [[383, "A-first-synapse,-and-input-via-a-NetStim"]], "Running and plotting a simulation": [[383, "Running-and-plotting-a-simulation"]], "Simulating": [[383, "Simulating"]], "Plotting": [[383, "Plotting"]], "Recording synaptic conductance": [[383, "Recording-synaptic-conductance"]], "Connecting the cells": [[383, "Connecting-the-cells"]], "Ball and stick 3: Extensible network of cells": [[384, "Ball-and-stick-3:-Extensible-network-of-cells"]], "Loading libraries": [[384, "Loading-libraries"]], "Generic Cell class": [[384, "Generic-Cell-class"]], "Make a Ring class": [[384, "Make-a-Ring-class"]], "Test the network": [[384, "Test-the-network"]], "Explore effects of parameters": [[384, "Explore-effects-of-parameters"]], "Ball and stick 4: Parallel vs serial mode": [[385, "Ball-and-stick-4:-Parallel-vs-serial-mode"]], "Parallel communication in NEURON": [[385, "Parallel-communication-in-NEURON"]], "Test MPI and Parallel NEURON": [[385, "Test-MPI-and-Parallel-NEURON"]], "Back to the example": [[385, "Back-to-the-example"]], "Test the model": [[385, "Test-the-model"]], "Gathering spikes": [[385, "Gathering-spikes"]], "Python tutorials": [[386, "python-tutorials"]], "Basic tutorials": [[386, null]], "Ball and Stick tutorial": [[386, null]], "Introduction to Python": [[387, "Introduction-to-Python"]], "Displaying results": [[387, "Displaying-results"]], "Variables: Strings, numbers, and dynamic type casting": [[387, "Variables:-Strings,-numbers,-and-dynamic-type-casting"]], "Arithmetic: +, -, *, /, **, % and comparisons": [[387, "Arithmetic:-+,--,-*,-/,-**,-%-and-comparisons"]], "Making choices: if, else": [[387, "Making-choices:-if,-else"]], "Lists": [[387, "Lists"]], "List comprehensions (set theory)": [[387, "List-comprehensions-(set-theory)"]], "For loops and iterators": [[387, "For-loops-and-iterators"]], "Dictionaries": [[387, "Dictionaries"]], "Importing modules": [[387, "Importing-modules"]], "Pickling objects": [[387, "Pickling-objects"]], "Scripting NEURON basics": [[388, "Scripting-NEURON-basics"]], "What is NEURON?": [[388, "What-is-NEURON?"]], "Step 1: Import the neuron module into Python": [[388, "Step-1:-Import-the-neuron-module-into-Python"]], "Step 2: Create a cell": [[388, "Step-2:-Create-a-cell"]], "Aside 1: NEURON\u2019s h.topology function": [[388, "Aside-1:-NEURON\u2019s-h.topology-function"]], "Aside 2: The psection method": [[388, "Aside-2:-The-psection-method"]], "Step 3: Set the cell\u2019s morphological properties": [[388, "Step-3:-Set-the-cell\u2019s-morphological-properties"]], "Aside 3: Python\u2019s dir function": [[388, "Aside-3:-Python\u2019s-dir-function"]], "Aside 4: Getting more help": [[388, "Aside-4:-Getting-more-help"]], "Biophysical mechanisms": [[388, "Biophysical-mechanisms"]], "Step 4: Insert ion channels": [[388, "Step-4:-Insert-ion-channels"]], "Aside 5: Sections and segments": [[388, "Aside-5:-Sections-and-segments"]], "Aside 6: Accessing segment variables": [[388, "Aside-6:-Accessing-segment-variables"]], "Step 5: Insert a stimulus": [[388, "Step-5:-Insert-a-stimulus"]], "Step 6: Set up recording variables": [[388, "Step-6:-Set-up-recording-variables"]], "Step 7: Run the simulation": [[388, "Step-7:-Run-the-simulation"]], "Step 8: Plot the results": [[388, "Step-8:-Plot-the-results"]], "Using bokeh": [[388, "Using-bokeh"]], "Using matplotlib": [[388, "Using-matplotlib"]], "Step 9: Saving and loading results": [[388, "Step-9:-Saving-and-loading-results"]], "CSV": [[388, "CSV"]], "JSON": [[388, "JSON"]], "Pickles": [[388, "Pickles"]], "CNS 2021 Online Tutorial": [[389, "cns-2021-online-tutorial"]], "INCF/CNS 2022 Online Tutorial": [[390, "incf-cns-2022-online-tutorial"]], "Course Welcome": [[390, "course-welcome"]], "NEURON concepts": [[390, "neuron-concepts"]], "Using NEURON\u2019s GUI to build and simulate cells": [[390, "using-neuron-s-gui-to-build-and-simulate-cells"]], "Using NMODL to add new biophysical mechanisms": [[390, "using-nmodl-to-add-new-biophysical-mechanisms"]], "Using resources from ModelDB and NeuroMorpho.Org": [[390, "using-resources-from-modeldb-and-neuromorpho-org"]], "Networks: spike-triggered synaptic transmission, events, and artificial cells": [[390, "networks-spike-triggered-synaptic-transmission-events-and-artificial-cells"]], "Numerical Methods: accuracy, stability, speed": [[390, "numerical-methods-accuracy-stability-speed"]], "Scripting NEURON": [[390, "scripting-neuron"]], "Numerical methods: adaptive integration": [[390, "numerical-methods-adaptive-integration"]], "Reaction-diffusion simulations": [[390, "reaction-diffusion-simulations"]], "Other resources and wrap-up": [[390, "other-resources-and-wrap-up"]], "Training videos": [[391, "training-videos"]], "NetPyNE 2021 Online Course": [[392, "netpyne-2021-online-course"]], "Course introduction": [[392, "course-introduction"]], "Single neuron theory I": [[392, "single-neuron-theory-i"]], "General tech basics": [[392, "general-tech-basics"]], "NEURON basics": [[392, "neuron-basics"]], "Lecture": [[392, "lecture"], [392, "id1"], [392, "id5"], [392, "id7"]], "Group 1": [[392, "group-1"], [392, "id3"]], "Group 2": [[392, "group-2"], [392, "id4"]], "Single neuron theory II": [[392, "single-neuron-theory-ii"]], "NEURON RxD": [[392, "neuron-rxd"]], "Network and synapse theory": [[392, "network-and-synapse-theory"]], "Networks in NEURON exercises": [[392, "networks-in-neuron-exercises"]], "NetPyNE GUI": [[392, "netpyne-gui"]], "Tutorials 1 and 2: Spinal cord": [[392, "tutorials-1-and-2-spinal-cord"]], "Tutorial 3": [[392, "tutorial-3"]], "Tutorial 2: spinal cord": [[392, "tutorial-2-spinal-cord"]], "Tutorials 3-5": [[392, "tutorials-3-5"]], "Tutorials 6 and 9": [[392, "tutorials-6-and-9"]], "NetPyNE analysis and plotting": [[392, "netpyne-analysis-and-plotting"]], "NetPyNE cell imports": [[392, "netpyne-cell-imports"]], "Hands-on": [[392, "hands-on"]], "Building data driven multiscale models": [[392, "building-data-driven-multiscale-models"]], "Parameter exploration and optimization": [[392, "parameter-exploration-and-optimization"]], "Part 1": [[392, "part-1"]], "Part 2": [[392, "part-2"]], "NetPyNE and RxD": [[392, "netpyne-and-rxd"]], "NetPyNE hands on batches": [[392, "netpyne-hands-on-batches"]], "NetPyNE virtual environments on mac and linux": [[392, "netpyne-virtual-environments-on-mac-and-linux"]], "NEURON 2021 Online Course": [[393, "neuron-2021-online-course"]], "Basic Concepts and GUI": [[393, "basic-concepts-and-gui"]], "Lecture 2021-06-03": [[393, "lecture-2021-06-03"]], "Q & A 2021-06-08": [[393, "q-a-2021-06-08"]], "Branched cells": [[393, "branched-cells"]], "Lecture 2021-06-10": [[393, "lecture-2021-06-10"]], "Q & A part 1 2021-06-15": [[393, "q-a-part-1-2021-06-15"]], "Q & A part 2 2021-06-15": [[393, "q-a-part-2-2021-06-15"]], "Adding ion channels": [[393, "adding-ion-channels"]], "Lecture 2021-06-17": [[393, "lecture-2021-06-17"]], "Q & A 2021-06-22": [[393, "q-a-2021-06-22"]], "Python scripting": [[393, "python-scripting"]], "2021-06-24": [[393, "id1"]], "2021-06-29": [[393, "id2"]], "2021-07-01": [[393, "id3"]], "Scripting and Morphologies 2021-07-06": [[393, "scripting-and-morphologies-2021-07-06"]], "Networks and numerical methods": [[393, "networks-and-numerical-methods"]], "2021-07-08": [[393, "id4"]], "Parallel NEURON simulations 2021-07-13": [[393, "parallel-neuron-simulations-2021-07-13"]], "Network exercise solutions and discussion 2021-07-15": [[393, "network-exercise-solutions-and-discussion-2021-07-15"]], "Parallel simulation conclusion, reproducible randomness, more numerical methods 2021-07-20": [[393, "parallel-simulation-conclusion-reproducible-randomness-more-numerical-methods-2021-07-20"]], "ModelDB exercises 2021-07-27": [[393, "modeldb-exercises-2021-07-27"]], "Scaling, spines, and reading HOC 2021-07-29": [[393, "scaling-spines-and-reading-hoc-2021-07-29"]], "Building GUI interfaces, Initialization, and Circuits 2021-08-03": [[393, "building-gui-interfaces-initialization-and-circuits-2021-08-03"]]}, "indexentries": {"mulrunfitter": [[128, "index-0"], [255, "index-0"]], "impedance (hoc built-in class)": [[131, "Impedance"]], "compute() (hoc impedance method)": [[131, "Impedance.compute"]], "deltafac() (hoc impedance method)": [[131, "Impedance.deltafac"]], "input() (hoc impedance method)": [[131, "Impedance.input"]], "input_phase() (hoc impedance method)": [[131, "Impedance.input_phase"]], "loc() (hoc impedance method)": [[131, "Impedance.loc"]], "ratio() (hoc impedance method)": [[131, "Impedance.ratio"]], "transfer() (hoc impedance method)": [[131, "Impedance.transfer"]], "transfer_phase() (hoc impedance method)": [[131, "Impedance.transfer_phase"]], "hoc built-in function": [[132, "ghk"], [132, "nernst"], [133, "attr_praxis"], [133, "fit_praxis"], [133, "pval_praxis"], [133, "stop_praxis"], [143, "hocmech"], [144, "ion_charge"], [144, "ion_register"], [144, "ion_style"], [157, "fclamp"], [157, "fclampi"], [157, "fclampv"], [157, "fstim"], [157, "fstimi"], [157, "prstim"], [158, "rxd.nthread"], [158, "rxd.re_init"], [158, "rxd.set_solve_type"], [160, "delete_section"], [160, "disconnect"], [160, "id0"], [160, "ismembrane"], [160, "issection"], [160, "parent_connection"], [160, "parent_node"], [160, "parent_section"], [160, "psection"], [160, "secname"], [160, "section_exists"], [160, "section_orientation"], [160, "section_owner"], [160, "sectionname"], [161, "arc3d"], [161, "area"], [161, "define_shape"], [161, "diam3d"], [161, "distance"], [161, "getSpineArea"], [161, "n3d"], [161, "pt3dadd"], [161, "pt3dchange"], [161, "pt3dclear"], [161, "pt3dconst"], [161, "pt3dinsert"], [161, "pt3dremove"], [161, "pt3dstyle"], [161, "ri"], [161, "setSpineArea"], [161, "spine3d"], [161, "x3d"], [161, "y3d"], [161, "z3d"], [164, "pop_section"], [164, "push_section"], [165, "execute"], [165, "execute1"], [165, "load_file"], [165, "load_func"], [165, "load_proc"], [165, "load_template"], [166, "coredump_on_error"], [166, "execerror"], [166, "nrn_feenableexcept"], [166, "show_errmess_always"], [167, "boolean_dialog"], [167, "continue_dialog"], [167, "string_dialog"], [170, "ivoc_style"], [170, "pwman_place"], [170, "variable_domain"], [171, "nrnglobalmechmenu"], [171, "nrnmechmenu"], [171, "nrnpointmenu"], [171, "nrnsecmenu"], [176, "fmenu"], [178, "units"], [178, "xbutton"], [178, "xcheckbox"], [178, "xfixedvalue"], [178, "xlabel"], [178, "xmenu"], [178, "xpanel"], [178, "xpvalue"], [178, "xradiobutton"], [178, "xslider"], [178, "xstatebutton"], [178, "xvalue"], [178, "xvarlabel"], [181, "argtype"], [181, "numarg"], [182, "allobjects"], [182, "allobjectvars"], [182, "hoc_pointer_"], [182, "name_declared"], [182, "object_id"], [182, "object_pop"], [182, "object_push"], [182, "symbols"], [185, "lw"], [186, "hoc_stdio"], [186, "printf"], [187, "fscan"], [187, "getstr"], [187, "sred"], [187, "xred"], [188, "fprint"], [188, "ropen"], [188, "wopen"], [188, "xopen"], [190, "eqinit"], [190, "prmat"], [190, "solve"], [191, "abs"], [191, "atan"], [191, "atan2"], [191, "cos"], [191, "erf"], [191, "erfc"], [191, "exp"], [191, "int"], [191, "log"], [191, "log10"], [191, "sin"], [191, "sqrt"], [191, "tanh"], [194, "mcell_ran4"], [194, "mcell_ran4_init"], [194, "use_mcell_ran4"], [202, "init"], [202, "unref"], [203, "this_node"], [203, "this_section"], [208, "nrnpython"], [210, "sscanf"], [212, "sprint"], [212, "strcmp"], [213, "WinExec"], [213, "chdir"], [213, "getcwd"], [213, "machine_name"], [213, "neuronhome"], [213, "nrn_load_dll"], [213, "nrnversion"], [213, "show_winio"], [213, "startsw"], [213, "stopsw"], [213, "system"], [213, "unix_mac_pc"], [215, "batch_run"], [215, "batch_save"], [219, "quit"], [219, "retrieveaudit"], [219, "saveaudit"], [220, "checkpoint"], [220, "fadvance"], [220, "fcurrent"], [220, "finitialize"], [220, "fmatrix"], [220, "frecord_init"], [220, "initnrn"], [223, "print_session"], [223, "save_session"], [229, "doEvents"], [229, "doNotify"], [230, "axis"], [230, "graph"], [230, "graphmode"], [230, "plot"], [230, "plotx"], [230, "ploty"], [230, "plt"], [230, "regraph"], [230, "setcolor"], [230, "settext"]], "ghk()": [[132, "ghk"], [259, "ghk"]], "nernst()": [[132, "nernst"], [259, "nernst"]], "attr_praxis()": [[133, "attr_praxis"], [260, "attr_praxis"]], "fit_praxis()": [[133, "fit_praxis"], [260, "fit_praxis"]], "pval_praxis()": [[133, "pval_praxis"], [260, "pval_praxis"]], "stop_praxis()": [[133, "stop_praxis"], [260, "stop_praxis"]], "electrode (hoc built-in class)": [[142, "Electrode"]], "holding() (hoc electrode method)": [[142, "Electrode.Holding"]], "iclamp() (hoc electrode method)": [[142, "Electrode.IClamp"]], "location() (hoc electrode method)": [[142, "Electrode.Location"]], "returnlevel() (hoc electrode method)": [[142, "Electrode.Returnlevel"]], "testlevel() (hoc electrode method)": [[142, "Electrode.Testlevel"]], "vclamp() (hoc electrode method)": [[142, "Electrode.VClamp"]], "vclampfamily() (hoc electrode method)": [[142, "Electrode.VClampFamily"]], "vclampigraph() (hoc electrode method)": [[142, "Electrode.VClampigraph"]], "amp() (hoc electrode method)": [[142, "Electrode.amp"]], "amp0() (hoc electrode method)": [[142, "Electrode.amp0"]], "del() (hoc electrode method)": [[142, "Electrode.del"]], "dur() (hoc electrode method)": [[142, "Electrode.dur"]], "dur0() (hoc electrode method)": [[142, "Electrode.dur0"]], "hocmech()": [[143, "hocmech"]], "ion_charge()": [[144, "ion_charge"], [272, "ion_charge"]], "ion_register()": [[144, "ion_register"], [272, "ion_register"]], "ion_style()": [[144, "ion_style"], [272, "ion_style"]], "kschan (hoc built-in class)": [[145, "KSChan"]], "ksgate (hoc built-in class)": [[145, "KSGate"]], "ksstate (hoc built-in class)": [[145, "KSState"]], "kstrans (hoc built-in class)": [[145, "KSTrans"]], "ab() (hoc kstrans method)": [[145, "KSTrans.ab"]], "add_hhstate() (hoc kschan method)": [[145, "KSChan.add_hhstate"]], "add_ksstate() (hoc kschan method)": [[145, "KSChan.add_ksstate"]], "add_transition() (hoc kschan method)": [[145, "KSChan.add_transition"]], "erev() (hoc kschan method)": [[145, "KSChan.erev"]], "f() (hoc kstrans method)": [[145, "KSTrans.f"]], "frac() (hoc ksstate method)": [[145, "KSState.frac"]], "ftype() (hoc kstrans method)": [[145, "KSTrans.ftype"]], "gate() (hoc kschan method)": [[145, "KSChan.gate"]], "gate() (hoc ksstate method)": [[145, "KSState.gate"]], "gmax() (hoc kschan method)": [[145, "KSChan.gmax"]], "index() (hoc ksgate method)": [[145, "KSGate.index"]], "index() (hoc ksstate method)": [[145, "KSState.index"]], "index() (hoc kstrans method)": [[145, "KSTrans.index"]], "inftau() (hoc kstrans method)": [[145, "KSTrans.inftau"]], "ion() (hoc kschan method)": [[145, "KSChan.ion"]], "iv_type() (hoc kschan method)": [[145, "KSChan.iv_type"]], "ligand() (hoc kschan method)": [[145, "KSChan.ligand"]], "ligand() (hoc kstrans method)": [[145, "KSTrans.ligand"]], "name() (hoc kschan method)": [[145, "KSChan.name"]], "name() (hoc ksstate method)": [[145, "KSState.name"]], "ngate() (hoc kschan method)": [[145, "KSChan.ngate"]], "nligand() (hoc kschan method)": [[145, "KSChan.nligand"]], "nstate() (hoc kschan method)": [[145, "KSChan.nstate"]], "nstate() (hoc ksgate method)": [[145, "KSGate.nstate"]], "ntrans() (hoc kschan method)": [[145, "KSChan.ntrans"]], "parm() (hoc kstrans method)": [[145, "KSTrans.parm"]], "power() (hoc ksgate method)": [[145, "KSGate.power"]], "pr() (hoc kschan method)": [[145, "KSChan.pr"]], "remove_state() (hoc kschan method)": [[145, "KSChan.remove_state"]], "remove_transition() (hoc kschan method)": [[145, "KSChan.remove_transition"]], "set_f() (hoc kstrans method)": [[145, "KSTrans.set_f"]], "setstructure() (hoc kschan method)": [[145, "KSChan.setstructure"]], "sindex() (hoc ksgate method)": [[145, "KSGate.sindex"]], "src() (hoc kstrans method)": [[145, "KSTrans.src"]], "state() (hoc kschan method)": [[145, "KSChan.state"]], "target() (hoc kstrans method)": [[145, "KSTrans.target"]], "trans() (hoc kschan method)": [[145, "KSChan.trans"]], "type() (hoc kstrans method)": [[145, "KSTrans.type"]], "linearmechanism (hoc built-in class)": [[146, "LinearMechanism"]], "apcount (hoc built-in class)": [[148, "APCount"]], "alphasynapse (hoc built-in class)": [[148, "AlphaSynapse"]], "exp2syn (hoc built-in class)": [[148, "Exp2Syn"]], "expsyn (hoc built-in class)": [[148, "ExpSyn"]], "iclamp (hoc built-in class)": [[148, "IClamp"]], "intfire1 (hoc built-in class)": [[148, "IntFire1"]], "intfire2 (hoc built-in class)": [[148, "IntFire2"]], "intfire4 (hoc built-in class)": [[148, "IntFire4"]], "netstim (hoc built-in class)": [[148, "NetStim"]], "seclamp (hoc built-in class)": [[148, "SEClamp"]], "vclamp (hoc built-in class)": [[148, "VClamp"]], "capacitance (mechanism)": [[148, "index-1"], [276, "index-1"]], "extracellular (mechanism)": [[148, "index-5"], [276, "index-5"]], "fastpas (mechanism)": [[148, "index-4"], [276, "index-4"]], "get_loc() (hoc pnt method)": [[148, "pnt.get_loc"]], "get_segment() (hoc pnt method)": [[148, "pnt.get_segment"]], "has_loc() (hoc pnt method)": [[148, "pnt.has_loc"]], "hh (mechanism)": [[148, "index-2"], [276, "index-2"]], "loc() (hoc pnt method)": [[148, "pnt.loc"]], "pas (mechanism)": [[148, "index-3"], [276, "index-3"]], "setdata (mechanism)": [[148, "index-0"], [276, "index-0"]], "mechanismtype (hoc built-in class)": [[151, "MechanismType"]], "action() (hoc mechanismtype method)": [[151, "MechanismType.action"]], "count() (hoc mechanismtype method)": [[151, "MechanismType.count"]], "has_net_event() (hoc mechanismtype method)": [[151, "MechanismType.has_net_event"]], "internal_type() (hoc mechanismtype method)": [[151, "MechanismType.internal_type"]], "is_artificial() (hoc mechanismtype method)": [[151, "MechanismType.is_artificial"]], "is_netcon_target() (hoc mechanismtype method)": [[151, "MechanismType.is_netcon_target"]], "make() (hoc mechanismtype method)": [[151, "MechanismType.make"]], "menu() (hoc mechanismtype method)": [[151, "MechanismType.menu"]], "pp_begin() (hoc mechanismtype method)": [[151, "MechanismType.pp_begin"]], "pp_next() (hoc mechanismtype method)": [[151, "MechanismType.pp_next"]], "remove() (hoc mechanismtype method)": [[151, "MechanismType.remove"]], "select() (hoc mechanismtype method)": [[151, "MechanismType.select"]], "selected() (hoc mechanismtype method)": [[151, "MechanismType.selected"]], "netcon (hoc built-in class)": [[154, "NetCon"]], "netcon.delay (hoc built-in variable)": [[154, "NetCon.delay"]], "netcon.threshold (hoc built-in variable)": [[154, "NetCon.threshold"]], "netcon.weight (hoc built-in variable)": [[154, "NetCon.weight"]], "netcon.x (hoc built-in variable)": [[154, "NetCon.x"]], "active() (hoc netcon method)": [[154, "NetCon.active"]], "event() (hoc netcon method)": [[154, "NetCon.event"]], "get_recordvec() (hoc netcon method)": [[154, "NetCon.get_recordvec"]], "postcell() (hoc netcon method)": [[154, "NetCon.postcell"]], "postcelllist() (hoc netcon method)": [[154, "NetCon.postcelllist"]], "postloc() (hoc netcon method)": [[154, "NetCon.postloc"]], "pre() (hoc netcon method)": [[154, "NetCon.pre"]], "precell() (hoc netcon method)": [[154, "NetCon.precell"]], "precelllist() (hoc netcon method)": [[154, "NetCon.precelllist"]], "prelist() (hoc netcon method)": [[154, "NetCon.prelist"]], "preloc() (hoc netcon method)": [[154, "NetCon.preloc"]], "record() (hoc netcon method)": [[154, "NetCon.record"]], "setpost() (hoc netcon method)": [[154, "NetCon.setpost"]], "srcgid() (hoc netcon method)": [[154, "NetCon.srcgid"]], "syn() (hoc netcon method)": [[154, "NetCon.syn"]], "synlist() (hoc netcon method)": [[154, "NetCon.synlist"]], "valid() (hoc netcon method)": [[154, "NetCon.valid"]], "wcnt() (hoc netcon method)": [[154, "NetCon.wcnt"]], "parallelcontext (hoc built-in class)": [[155, "ParallelContext"]], "threads() (hoc parallelcontext method)": [[155, "ParallelContext.Threads"]], "allgather() (hoc parallelcontext method)": [[155, "ParallelContext.allgather"]], "allreduce() (hoc parallelcontext method)": [[155, "ParallelContext.allreduce"]], "alltoall() (hoc parallelcontext method)": [[155, "ParallelContext.alltoall"]], "barrier() (hoc parallelcontext method)": [[155, "ParallelContext.barrier"]], "broadcast() (hoc parallelcontext method)": [[155, "ParallelContext.broadcast"]], "cell() (hoc parallelcontext method)": [[155, "ParallelContext.cell"]], "context() (hoc parallelcontext method)": [[155, "ParallelContext.context"]], "done() (hoc parallelcontext method)": [[155, "ParallelContext.done"]], "dt() (hoc parallelcontext method)": [[155, "ParallelContext.dt"]], "event_time() (hoc parallelcontext method)": [[155, "ParallelContext.event_time"]], "gid2cell() (hoc parallelcontext method)": [[155, "ParallelContext.gid2cell"]], "gid2obj() (hoc parallelcontext method)": [[155, "ParallelContext.gid2obj"]], "gid_clear() (hoc parallelcontext method)": [[155, "ParallelContext.gid_clear"]], "gid_connect() (hoc parallelcontext method)": [[155, "ParallelContext.gid_connect"]], "gid_exists() (hoc parallelcontext method)": [[155, "ParallelContext.gid_exists"]], "id() (hoc parallelcontext method)": [[155, "ParallelContext.id"]], "id_bbs() (hoc parallelcontext method)": [[155, "ParallelContext.id_bbs"]], "id_world() (hoc parallelcontext method)": [[155, "ParallelContext.id_world"]], "integ_time() (hoc parallelcontext method)": [[155, "ParallelContext.integ_time"]], "look() (hoc parallelcontext method)": [[155, "ParallelContext.look"]], "look_take() (hoc parallelcontext method)": [[155, "ParallelContext.look_take"]], "max_histogram() (hoc parallelcontext method)": [[155, "ParallelContext.max_histogram"]], "mech_time() (hoc parallelcontext method)": [[155, "ParallelContext.mech_time"]], "multisplit() (hoc parallelcontext method)": [[155, "ParallelContext.multisplit"]], "nhost() (hoc parallelcontext method)": [[155, "ParallelContext.nhost"]], "nhost_bbs() (hoc parallelcontext method)": [[155, "ParallelContext.nhost_bbs"]], "nhost_world() (hoc parallelcontext method)": [[155, "ParallelContext.nhost_world"]], "nthread() (hoc parallelcontext method)": [[155, "ParallelContext.nthread"]], "outputcell() (hoc parallelcontext method)": [[155, "ParallelContext.outputcell"]], "pack() (hoc parallelcontext method)": [[155, "ParallelContext.pack"]], "partition() (hoc parallelcontext method)": [[155, "ParallelContext.partition"]], "post() (hoc parallelcontext method)": [[155, "ParallelContext.post"]], "prcellstate() (hoc parallelcontext method)": [[155, "ParallelContext.prcellstate"]], "psolve() (hoc parallelcontext method)": [[155, "ParallelContext.psolve"]], "py_alltoall() (hoc parallelcontext method)": [[155, "ParallelContext.py_alltoall"]], "pyret() (hoc parallelcontext method)": [[155, "ParallelContext.pyret"]], "retval() (hoc parallelcontext method)": [[155, "ParallelContext.retval"]], "runworker() (hoc parallelcontext method)": [[155, "ParallelContext.runworker"]], "sec_in_thread() (hoc parallelcontext method)": [[155, "ParallelContext.sec_in_thread"]], "send_time() (hoc parallelcontext method)": [[155, "ParallelContext.send_time"]], "set_gid2node() (hoc parallelcontext method)": [[155, "ParallelContext.set_gid2node"]], "set_maxstep() (hoc parallelcontext method)": [[155, "ParallelContext.set_maxstep"]], "setup_transfer() (hoc parallelcontext method)": [[155, "ParallelContext.setup_transfer"]], "source_var() (hoc parallelcontext method)": [[155, "ParallelContext.source_var"]], "spike_compress() (hoc parallelcontext method)": [[155, "ParallelContext.spike_compress"]], "spike_record() (hoc parallelcontext method)": [[155, "ParallelContext.spike_record"]], "spike_statistics() (hoc parallelcontext method)": [[155, "ParallelContext.spike_statistics"]], "splitcell() (hoc parallelcontext method)": [[155, "ParallelContext.splitcell"]], "step_time() (hoc parallelcontext method)": [[155, "ParallelContext.step_time"]], "step_wait() (hoc parallelcontext method)": [[155, "ParallelContext.step_wait"]], "submit() (hoc parallelcontext method)": [[155, "ParallelContext.submit"]], "subworlds() (hoc parallelcontext method)": [[155, "ParallelContext.subworlds"]], "t() (hoc parallelcontext method)": [[155, "ParallelContext.t"]], "take() (hoc parallelcontext method)": [[155, "ParallelContext.take"]], "target_var() (hoc parallelcontext method)": [[155, "ParallelContext.target_var"]], "thread_busywait() (hoc parallelcontext method)": [[155, "ParallelContext.thread_busywait"]], "thread_ctime() (hoc parallelcontext method)": [[155, "ParallelContext.thread_ctime"]], "thread_how_many_proc() (hoc parallelcontext method)": [[155, "ParallelContext.thread_how_many_proc"]], "thread_stat() (hoc parallelcontext method)": [[155, "ParallelContext.thread_stat"]], "threshold() (hoc parallelcontext method)": [[155, "ParallelContext.threshold"]], "time() (hoc parallelcontext method)": [[155, "ParallelContext.time"]], "timeout() (hoc parallelcontext method)": [[155, "ParallelContext.timeout"]], "unpack() (hoc parallelcontext method)": [[155, "ParallelContext.unpack"]], "upkpyobj() (hoc parallelcontext method)": [[155, "ParallelContext.upkpyobj"]], "upkscalar() (hoc parallelcontext method)": [[155, "ParallelContext.upkscalar"]], "upkstr() (hoc parallelcontext method)": [[155, "ParallelContext.upkstr"]], "upkvec() (hoc parallelcontext method)": [[155, "ParallelContext.upkvec"]], "userid() (hoc parallelcontext method)": [[155, "ParallelContext.userid"]], "vtransfer_time() (hoc parallelcontext method)": [[155, "ParallelContext.vtransfer_time"]], "wait_time() (hoc parallelcontext method)": [[155, "ParallelContext.wait_time"]], "working() (hoc parallelcontext method)": [[155, "ParallelContext.working"]], "parallelnetmanager (hoc built-in class)": [[156, "ParallelNetManager"]], "create_cell() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.create_cell"]], "gatherspikes() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.gatherspikes"]], "gid_exists() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.gid_exists"]], "nc_append() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.nc_append"]], "pcontinue() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.pcontinue"]], "pinit() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.pinit"]], "prstat() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.prstat"]], "prun() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.prun"]], "psolve() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.psolve"]], "register_cell() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.register_cell"]], "round_robin() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.round_robin"]], "set_gid2node() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.set_gid2node"]], "spike_record() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.spike_record"]], "splitcell() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.splitcell"]], "want_all_spikes() (hoc parallelnetmanager method)": [[156, "ParallelNetManager.want_all_spikes"]], "fclamp()": [[157, "fclamp"], [285, "fclamp"]], "fclampi()": [[157, "fclampi"], [285, "fclampi"]], "fclampv()": [[157, "fclampv"], [285, "fclampv"]], "fstim()": [[157, "fstim"], [285, "fstim"]], "fstimi()": [[157, "fstimi"], [285, "fstimi"]], "prstim()": [[157, "prstim"], [285, "prstim"]], "geometry (rxd.region property)": [[158, "rxd.Region.geometry"], [286, "rxd.Region.geometry"]], "name (rxd.region property)": [[158, "rxd.Region.name"], [286, "rxd.Region.name"]], "nrn_region (rxd.region property)": [[158, "rxd.Region.nrn_region"], [286, "rxd.Region.nrn_region"]], "rxd.extracellular (hoc built-in class)": [[158, "rxd.Extracellular"]], "rxd.multicompartmentreaction (hoc built-in class)": [[158, "rxd.MultiCompartmentReaction"]], "rxd.parameter (hoc built-in class)": [[158, "rxd.Parameter"]], "rxd.rate (hoc built-in class)": [[158, "rxd.Rate"]], "rxd.reaction (hoc built-in class)": [[158, "rxd.Reaction"]], "rxd.region (hoc built-in class)": [[158, "rxd.Region"]], "rxd.rxdexception (hoc built-in class)": [[158, "rxd.RxDException"]], "rxd.species (hoc built-in class)": [[158, "rxd.Species"]], "rxd.state (hoc built-in class)": [[158, "rxd.State"]], "rxd.nodelist.nodelist (hoc built-in class)": [[158, "rxd.nodelist.NodeList"]], "rxd.nthread()": [[158, "rxd.nthread"], [286, "rxd.nthread"]], "rxd.re_init()": [[158, "rxd.re_init"], [286, "rxd.re_init"]], "rxd.set_solve_type()": [[158, "rxd.set_solve_type"], [286, "rxd.set_solve_type"]], "secs (rxd.region property)": [[158, "rxd.Region.secs"], [286, "rxd.Region.secs"]], "v (rxd property)": [[158, "rxd.v"], [286, "rxd.v"]], "statetransitionevent (hoc built-in class)": [[159, "StateTransitionEvent"]], "state() (hoc statetransitionevent method)": [[159, "StateTransitionEvent.state"]], "transition() (hoc statetransitionevent method)": [[159, "StateTransitionEvent.transition"]], "connect (keyword)": [[160, "index-1"]], "create (keyword)": [[160, "index-0"]], "delete_section()": [[160, "delete_section"], [289, "delete_section"]], "disconnect()": [[160, "disconnect"], [289, "disconnect"]], "ismembrane()": [[160, "ismembrane"], [289, "ismembrane"]], "issection()": [[160, "issection"], [289, "issection"]], "nseg (hoc built-in variable)": [[160, "nseg"]], "parent_connection()": [[160, "parent_connection"], [289, "parent_connection"]], "parent_node()": [[160, "parent_node"], [289, "parent_node"]], "parent_section()": [[160, "parent_section"], [289, "parent_section"]], "psection()": [[160, "psection"], [289, "psection"]], "secname()": [[160, "secname"], [289, "secname"]], "section_exists()": [[160, "section_exists"], [289, "section_exists"]], "section_orientation()": [[160, "section_orientation"], [289, "section_orientation"]], "section_owner()": [[160, "section_owner"], [289, "section_owner"]], "sectionname()": [[160, "sectionname"], [289, "sectionname"]], "topology()": [[160, "id0"], [289, "id0"]], "l (hoc built-in variable)": [[161, "L"]], "ra (hoc built-in variable)": [[161, "Ra"]], "arc3d()": [[161, "arc3d"], [290, "arc3d"]], "area()": [[161, "area"], [290, "area"]], "define_shape()": [[161, "define_shape"], [290, "define_shape"]], "diam (hoc built-in variable)": [[161, "diam"]], "diam3d()": [[161, "diam3d"], [290, "diam3d"]], "diam_changed (hoc built-in variable)": [[161, "diam_changed"]], "distance()": [[161, "distance"], [290, "distance"]], "getspinearea()": [[161, "getSpineArea"], [290, "getSpineArea"]], "n3d()": [[161, "n3d"], [290, "n3d"]], "pt3dadd()": [[161, "pt3dadd"], [290, "pt3dadd"]], "pt3dchange()": [[161, "pt3dchange"], [290, "pt3dchange"]], "pt3dclear()": [[161, "pt3dclear"], [290, "pt3dclear"]], "pt3dconst()": [[161, "pt3dconst"], [290, "pt3dconst"]], "pt3dinsert()": [[161, "pt3dinsert"], [290, "pt3dinsert"]], "pt3dremove()": [[161, "pt3dremove"], [290, "pt3dremove"]], "pt3dstyle()": [[161, "pt3dstyle"], [290, "pt3dstyle"]], "ri()": [[161, "ri"], [290, "ri"]], "setspinearea()": [[161, "setSpineArea"], [290, "setSpineArea"]], "spine3d()": [[161, "spine3d"], [290, "spine3d"]], "x3d()": [[161, "x3d"], [290, "x3d"]], "y3d()": [[161, "y3d"], [290, "y3d"]], "z3d()": [[161, "z3d"], [290, "z3d"]], "sectionlist (hoc built-in class)": [[162, "SectionList"]], "allroots() (hoc sectionlist method)": [[162, "SectionList.allroots"]], "append() (hoc sectionlist method)": [[162, "SectionList.append"]], "children() (hoc sectionlist method)": [[162, "SectionList.children"]], "printnames() (hoc sectionlist method)": [[162, "SectionList.printnames"]], "remove() (hoc sectionlist method)": [[162, "SectionList.remove"]], "subtree() (hoc sectionlist method)": [[162, "SectionList.subtree"]], "unique() (hoc sectionlist method)": [[162, "SectionList.unique"]], "wholetree() (hoc sectionlist method)": [[162, "SectionList.wholetree"]], "sectionref (hoc built-in class)": [[163, "SectionRef"]], "child() (hoc sectionref method)": [[163, "SectionRef.child"]], "exists() (hoc sectionref method)": [[163, "SectionRef.exists"]], "has_parent() (hoc sectionref method)": [[163, "SectionRef.has_parent"]], "has_trueparent() (hoc sectionref method)": [[163, "SectionRef.has_trueparent"]], "is_cas() (hoc sectionref method)": [[163, "SectionRef.is_cas"]], "nchild() (hoc sectionref method)": [[163, "SectionRef.nchild"]], "parent() (hoc sectionref method)": [[163, "SectionRef.parent"]], "root() (hoc sectionref method)": [[163, "SectionRef.root"]], "sec() (hoc sectionref method)": [[163, "SectionRef.sec"]], "trueparent() (hoc sectionref method)": [[163, "SectionRef.trueparent"]], "access (keyword)": [[164, "index-0"]], "forall (keyword)": [[164, "index-1"]], "forsec (keyword)": [[164, "index-3"]], "ifsec (keyword)": [[164, "index-2"]], "pop_section()": [[164, "pop_section"], [293, "pop_section"]], "push_section()": [[164, "push_section"], [293, "push_section"]], "execute()": [[165, "execute"], [294, "execute"]], "execute1()": [[165, "execute1"], [294, "execute1"]], "load_file()": [[165, "load_file"], [294, "load_file"]], "load_func()": [[165, "load_func"], [294, "load_func"]], "load_proc()": [[165, "load_proc"], [294, "load_proc"]], "load_template()": [[165, "load_template"], [294, "load_template"]], "coredump_on_error()": [[166, "coredump_on_error"], [295, "coredump_on_error"]], "execerror()": [[166, "execerror"], [295, "execerror"]], "nrn_feenableexcept()": [[166, "nrn_feenableexcept"], [295, "nrn_feenableexcept"]], "show_errmess_always()": [[166, "show_errmess_always"], [295, "show_errmess_always"]], "boolean_dialog()": [[167, "boolean_dialog"], [296, "boolean_dialog"]], "continue_dialog()": [[167, "continue_dialog"], [296, "continue_dialog"]], "string_dialog()": [[167, "string_dialog"], [296, "string_dialog"]], "deck (hoc built-in class)": [[168, "Deck"]], "hbox (hoc built-in class)": [[168, "HBox"]], "vbox (hoc built-in class)": [[168, "VBox"]], "adjust() (hoc vbox method)": [[168, "VBox.adjust"]], "adjuster() (hoc vbox method)": [[168, "VBox.adjuster"]], "dialog() (hoc vbox method)": [[168, "VBox.dialog"]], "dismiss_action() (hoc vbox method)": [[168, "VBox.dismiss_action"]], "flip_to() (hoc deck method)": [[168, "Deck.flip_to"]], "full_request() (hoc vbox method)": [[168, "VBox.full_request"]], "intercept() (hoc deck method)": [[168, "Deck.intercept"]], "intercept() (hoc vbox method)": [[168, "VBox.intercept"]], "ismapped() (hoc vbox method)": [[168, "VBox.ismapped"]], "map() (hoc deck method)": [[168, "Deck.map"]], "map() (hoc vbox method)": [[168, "VBox.map"]], "move_last() (hoc deck method)": [[168, "Deck.move_last"]], "priority() (hoc vbox method)": [[168, "VBox.priority"]], "ref() (hoc vbox method)": [[168, "VBox.ref"]], "remove() (hoc deck method)": [[168, "Deck.remove"]], "remove_last() (hoc deck method)": [[168, "Deck.remove_last"]], "save() (hoc deck method)": [[168, "Deck.save"]], "save() (hoc vbox method)": [[168, "VBox.save"]], "size() (hoc vbox method)": [[168, "VBox.size"]], "unmap() (hoc deck method)": [[168, "Deck.unmap"]], "unmap() (hoc vbox method)": [[168, "VBox.unmap"]], "list (hoc built-in class)": [[169, "List"]], "accept_action() (hoc list method)": [[169, "List.accept_action"]], "append() (hoc list method)": [[169, "List.append"]], "browser() (hoc list method)": [[169, "List.browser"]], "count() (hoc list method)": [[169, "List.count"]], "index() (hoc list method)": [[169, "List.index"]], "insrt() (hoc list method)": [[169, "List.insrt"]], "o() (hoc list method)": [[169, "List.o"]], "object() (hoc list method)": [[169, "List.object"]], "prepend() (hoc list method)": [[169, "List.prepend"]], "remove() (hoc list method)": [[169, "List.remove"]], "remove_all() (hoc list method)": [[169, "List.remove_all"]], "scroll_pos() (hoc list method)": [[169, "List.scroll_pos"]], "select() (hoc list method)": [[169, "List.select"]], "select_action() (hoc list method)": [[169, "List.select_action"]], "selected() (hoc list method)": [[169, "List.selected"]], "ivoc_style()": [[170, "ivoc_style"], [299, "ivoc_style"]], "pwman_place()": [[170, "pwman_place"], [299, "pwman_place"]], "variable_domain()": [[170, "variable_domain"], [299, "variable_domain"]], "nrnglobalmechmenu()": [[171, "nrnglobalmechmenu"], [300, "nrnglobalmechmenu"]], "nrnmechmenu()": [[171, "nrnmechmenu"], [300, "nrnmechmenu"]], "nrnpointmenu()": [[171, "nrnpointmenu"], [300, "nrnpointmenu"]], "nrnsecmenu()": [[171, "nrnsecmenu"], [300, "nrnsecmenu"]], "pwmanager (hoc built-in class)": [[172, "PWManager"]], "close() (hoc pwmanager method)": [[172, "PWManager.close"]], "count() (hoc pwmanager method)": [[172, "PWManager.count"]], "deco() (hoc pwmanager method)": [[172, "PWManager.deco"]], "deiconify() (hoc pwmanager method)": [[172, "PWManager.deiconify"]], "group() (hoc pwmanager method)": [[172, "PWManager.group"]], "hide() (hoc pwmanager method)": [[172, "PWManager.hide"]], "iconify() (hoc pwmanager method)": [[172, "PWManager.iconify"]], "is_mapped() (hoc pwmanager method)": [[172, "PWManager.is_mapped"]], "landscape() (hoc pwmanager method)": [[172, "PWManager.landscape"]], "leader() (hoc pwmanager method)": [[172, "PWManager.leader"]], "manager() (hoc pwmanager method)": [[172, "PWManager.manager"]], "map() (hoc pwmanager method)": [[172, "PWManager.map"]], "name() (hoc pwmanager method)": [[172, "PWManager.name"]], "paper_place() (hoc pwmanager method)": [[172, "PWManager.paper_place"]], "printfile() (hoc pwmanager method)": [[172, "PWManager.printfile"]], "save() (hoc pwmanager method)": [[172, "PWManager.save"]], "scale() (hoc pwmanager method)": [[172, "PWManager.scale"]], "snap() (hoc pwmanager method)": [[172, "PWManager.snap"]], "window_place() (hoc pwmanager method)": [[172, "PWManager.window_place"]], "sectionbrowser (hoc built-in class)": [[173, "SectionBrowser"]], "accept_action() (hoc sectionbrowser method)": [[173, "SectionBrowser.accept_action"]], "select() (hoc sectionbrowser method)": [[173, "SectionBrowser.select"]], "select_action() (hoc sectionbrowser method)": [[173, "SectionBrowser.select_action"]], "symchooser (hoc built-in class)": [[174, "SymChooser"]], "run() (hoc symchooser method)": [[174, "SymChooser.run"]], "text() (hoc symchooser method)": [[174, "SymChooser.text"]], "texteditor (hoc built-in class)": [[175, "TextEditor"]], "map() (hoc texteditor method)": [[175, "TextEditor.map"]], "readonly() (hoc texteditor method)": [[175, "TextEditor.readonly"]], "text() (hoc texteditor method)": [[175, "TextEditor.text"]], "fmenu()": [[176, "fmenu"], [305, "fmenu"]], "valuefieldeditor (hoc built-in class)": [[177, "ValueFieldEditor"]], "default() (hoc valuefieldeditor method)": [[177, "ValueFieldEditor.default"]], "units()": [[178, "units"], [307, "units"]], "xbutton()": [[178, "xbutton"], [307, "xbutton"]], "xcheckbox()": [[178, "xcheckbox"], [307, "xcheckbox"]], "xfixedvalue()": [[178, "xfixedvalue"], [307, "xfixedvalue"]], "xlabel()": [[178, "xlabel"], [307, "xlabel"]], "xmenu()": [[178, "xmenu"], [307, "xmenu"]], "xpanel()": [[178, "xpanel"], [307, "xpanel"]], "xpvalue()": [[178, "xpvalue"], [307, "xpvalue"]], "xradiobutton()": [[178, "xradiobutton"], [307, "xradiobutton"]], "xslider()": [[178, "xslider"], [307, "xslider"]], "xstatebutton()": [[178, "xstatebutton"], [307, "xstatebutton"]], "xvalue()": [[178, "xvalue"], [307, "xvalue"]], "xvarlabel()": [[178, "xvarlabel"], [307, "xvarlabel"]], "argtype()": [[181, "argtype"], [310, "argtype"]], "arguments": [[181, "index-8"], [310, "index-8"]], "comments": [[181, "index-1"], [310, "index-1"]], "expression": [[181, "index-2"], [310, "index-2"]], "func": [[181, "index-5"], [310, "index-5"]], "iterator": [[181, "index-7"], [310, "index-7"]], "numarg()": [[181, "numarg"], [310, "numarg"]], "obfunc": [[181, "index-6"], [310, "index-6"]], "proc": [[181, "index-4"], [310, "index-4"]], "statement": [[181, "index-3"], [310, "index-3"]], "syntax (hoc)": [[181, "index-0"], [310, "index-0"]], "allobjects()": [[182, "allobjects"], [311, "allobjects"]], "allobjectvars()": [[182, "allobjectvars"], [311, "allobjectvars"]], "hoc_pointer_()": [[182, "hoc_pointer_"], [311, "hoc_pointer_"]], "name_declared()": [[182, "name_declared"], [311, "name_declared"]], "object_id()": [[182, "object_id"], [311, "object_id"]], "object_pop()": [[182, "object_pop"], [311, "object_pop"]], "object_push()": [[182, "object_push"], [311, "object_push"]], "symbols()": [[182, "symbols"], [311, "symbols"]], "file (hoc built-in class)": [[184, "File"]], "aopen() (hoc file method)": [[184, "File.aopen"]], "chooser() (hoc file method)": [[184, "File.chooser"]], "close() (hoc file method)": [[184, "File.close"]], "dir() (hoc file method)": [[184, "File.dir"]], "eof() (hoc file method)": [[184, "File.eof"]], "flush() (hoc file method)": [[184, "File.flush"]], "getname() (hoc file method)": [[184, "File.getname"]], "gets() (hoc file method)": [[184, "File.gets"]], "isopen() (hoc file method)": [[184, "File.isopen"]], "mktemp() (hoc file method)": [[184, "File.mktemp"]], "printf() (hoc file method)": [[184, "File.printf"]], "ropen() (hoc file method)": [[184, "File.ropen"]], "scanstr() (hoc file method)": [[184, "File.scanstr"]], "scanvar() (hoc file method)": [[184, "File.scanvar"]], "seek() (hoc file method)": [[184, "File.seek"]], "tell() (hoc file method)": [[184, "File.tell"]], "unlink() (hoc file method)": [[184, "File.unlink"]], "vread() (hoc file method)": [[184, "File.vread"]], "vwrite() (hoc file method)": [[184, "File.vwrite"]], "wopen() (hoc file method)": [[184, "File.wopen"]], "xopen() (hoc file method)": [[184, "File.xopen"]], "lw()": [[185, "lw"], [314, "lw"]], "hoc_stdio()": [[186, "hoc_stdio"]], "printf()": [[186, "printf"], [315, "printf"]], "fscan()": [[187, "fscan"], [316, "fscan"]], "getstr()": [[187, "getstr"], [316, "getstr"]], "sred()": [[187, "sred"], [316, "sred"]], "xred()": [[187, "xred"], [316, "xred"]], "fprint()": [[188, "fprint"], [317, "fprint"]], "ropen()": [[188, "ropen"], [317, "id0"]], "wopen()": [[188, "wopen"], [317, "wopen"]], "xopen()": [[188, "xopen"], [317, "xopen"]], "eqinit()": [[190, "eqinit"], [319, "eqinit"]], "prmat()": [[190, "prmat"], [319, "prmat"]], "solve()": [[190, "solve"], [319, "solve"]], "abs()": [[191, "abs"], [320, "abs"]], "atan()": [[191, "atan"], [320, "atan"]], "atan2()": [[191, "atan2"], [320, "atan2"]], "cos()": [[191, "cos"], [320, "cos"]], "erf()": [[191, "erf"], [320, "erf"]], "erfc()": [[191, "erfc"], [320, "erfc"]], "exp()": [[191, "exp"], [320, "exp"]], "int()": [[191, "int"], [320, "int"]], "log()": [[191, "log"], [320, "log"]], "log10()": [[191, "log10"], [320, "log10"]], "sin()": [[191, "sin"], [320, "sin"]], "sqrt()": [[191, "sqrt"], [320, "sqrt"]], "tanh()": [[191, "tanh"], [320, "tanh"]], "guimath (hoc built-in class)": [[192, "GUIMath"]], "d2line() (hoc guimath method)": [[192, "GUIMath.d2line"]], "d2line_seg() (hoc guimath method)": [[192, "GUIMath.d2line_seg"]], "feround() (hoc guimath method)": [[192, "GUIMath.feround"]], "inside() (hoc guimath method)": [[192, "GUIMath.inside"]], "matrix (hoc built-in class)": [[193, "Matrix"]], "matrix.x (hoc built-in variable)": [[193, "Matrix.x"]], "add() (hoc matrix method)": [[193, "Matrix.add"]], "bcopy() (hoc matrix method)": [[193, "Matrix.bcopy"]], "c() (hoc matrix method)": [[193, "Matrix.c"]], "cholesky_factor() (hoc matrix method)": [[193, "Matrix.cholesky_factor"]], "det() (hoc matrix method)": [[193, "Matrix.det"]], "exp() (hoc matrix method)": [[193, "Matrix.exp"]], "fprint() (hoc matrix method)": [[193, "Matrix.fprint"]], "from_vector() (hoc matrix method)": [[193, "Matrix.from_vector"]], "getcol() (hoc matrix method)": [[193, "Matrix.getcol"]], "getdiag() (hoc matrix method)": [[193, "Matrix.getdiag"]], "getrow() (hoc matrix method)": [[193, "Matrix.getrow"]], "getval() (hoc matrix method)": [[193, "Matrix.getval"]], "ident() (hoc matrix method)": [[193, "Matrix.ident"]], "inverse() (hoc matrix method)": [[193, "Matrix.inverse"]], "mulm() (hoc matrix method)": [[193, "Matrix.mulm"]], "muls() (hoc matrix method)": [[193, "Matrix.muls"]], "mulv() (hoc matrix method)": [[193, "Matrix.mulv"]], "ncol() (hoc matrix method)": [[193, "Matrix.ncol"]], "nrow() (hoc matrix method)": [[193, "Matrix.nrow"]], "pow() (hoc matrix method)": [[193, "Matrix.pow"]], "printf() (hoc matrix method)": [[193, "Matrix.printf"]], "resize() (hoc matrix method)": [[193, "Matrix.resize"]], "scanf() (hoc matrix method)": [[193, "Matrix.scanf"]], "setcol() (hoc matrix method)": [[193, "Matrix.setcol"]], "setdiag() (hoc matrix method)": [[193, "Matrix.setdiag"]], "setrow() (hoc matrix method)": [[193, "Matrix.setrow"]], "setval() (hoc matrix method)": [[193, "Matrix.setval"]], "solv() (hoc matrix method)": [[193, "Matrix.solv"]], "spgetrowval() (hoc matrix method)": [[193, "Matrix.spgetrowval"]], "sprowlen() (hoc matrix method)": [[193, "Matrix.sprowlen"]], "svd() (hoc matrix method)": [[193, "Matrix.svd"]], "symmeig() (hoc matrix method)": [[193, "Matrix.symmeig"]], "to_vector() (hoc matrix method)": [[193, "Matrix.to_vector"]], "transpose() (hoc matrix method)": [[193, "Matrix.transpose"]], "zero() (hoc matrix method)": [[193, "Matrix.zero"]], "mcell_ran4()": [[194, "mcell_ran4"], [323, "mcell_ran4"]], "mcell_ran4_init()": [[194, "mcell_ran4_init"], [323, "mcell_ran4_init"]], "use_mcell_ran4()": [[194, "use_mcell_ran4"], [323, "use_mcell_ran4"]], "float_epsilon (hoc built-in variable)": [[195, "float_epsilon"]], "acg() (hoc random method)": [[196, "Random.ACG"]], "mcellran4() (hoc random method)": [[196, "Random.MCellRan4"]], "mlcg() (hoc random method)": [[196, "Random.MLCG"]], "random (hoc built-in class)": [[196, "Random"]], "random123() (hoc random method)": [[196, "Random.Random123"]], "random123_globalindex() (hoc random method)": [[196, "Random.Random123_globalindex"]], "binomial() (hoc random method)": [[196, "Random.binomial"]], "discunif() (hoc random method)": [[196, "Random.discunif"]], "erlang() (hoc random method)": [[196, "Random.erlang"]], "geometric() (hoc random method)": [[196, "Random.geometric"]], "hypergeo() (hoc random method)": [[196, "Random.hypergeo"]], "lognormal() (hoc random method)": [[196, "Random.lognormal"]], "negexp() (hoc random method)": [[196, "Random.negexp"]], "normal() (hoc random method)": [[196, "Random.normal"]], "play() (hoc random method)": [[196, "Random.play"]], "poisson() (hoc random method)": [[196, "Random.poisson"]], "repick() (hoc random method)": [[196, "Random.repick"]], "seq() (hoc random method)": [[196, "Random.seq"]], "uniform() (hoc random method)": [[196, "Random.uniform"]], "weibull() (hoc random method)": [[196, "Random.weibull"]], "vector (hoc built-in class)": [[197, "Vector"]], "vector.x (hoc built-in variable)": [[197, "Vector.x"]], "abs() (hoc vector method)": [[197, "Vector.abs"]], "add() (hoc vector method)": [[197, "Vector.add"]], "addrand() (hoc vector method)": [[197, "Vector.addrand"]], "append() (hoc vector method)": [[197, "Vector.append"]], "apply() (hoc vector method)": [[197, "Vector.apply"]], "as_numpy() (hoc vector method)": [[197, "Vector.as_numpy"]], "at() (hoc vector method)": [[197, "Vector.at"]], "buffer_size() (hoc vector method)": [[197, "Vector.buffer_size"]], "c() (hoc vector method)": [[197, "Vector.c"]], "cl() (hoc vector method)": [[197, "Vector.cl"]], "contains() (hoc vector method)": [[197, "Vector.contains"]], "convlv() (hoc vector method)": [[197, "Vector.convlv"]], "copy() (hoc vector method)": [[197, "Vector.copy"]], "correl() (hoc vector method)": [[197, "Vector.correl"]], "deriv() (hoc vector method)": [[197, "Vector.deriv"]], "div() (hoc vector method)": [[197, "Vector.div"]], "dot() (hoc vector method)": [[197, "Vector.dot"]], "eq() (hoc vector method)": [[197, "Vector.eq"]], "fft() (hoc vector method)": [[197, "Vector.fft"]], "fill() (hoc vector method)": [[197, "Vector.fill"]], "filter() (hoc vector method)": [[197, "Vector.filter"]], "fit() (hoc vector method)": [[197, "Vector.fit"]], "floor() (hoc vector method)": [[197, "Vector.floor"]], "fread() (hoc vector method)": [[197, "Vector.fread"]], "from_double() (hoc vector method)": [[197, "Vector.from_double"]], "from_python() (hoc vector method)": [[197, "Vector.from_python"]], "fwrite() (hoc vector method)": [[197, "Vector.fwrite"]], "get() (hoc vector method)": [[197, "Vector.get"]], "hist() (hoc vector method)": [[197, "Vector.hist"]], "histogram() (hoc vector method)": [[197, "Vector.histogram"]], "ind() (hoc vector method)": [[197, "Vector.ind"]], "index() (hoc vector method)": [[197, "Vector.index"]], "indgen() (hoc vector method)": [[197, "Vector.indgen"]], "indvwhere() (hoc vector method)": [[197, "Vector.indvwhere"]], "indwhere() (hoc vector method)": [[197, "Vector.indwhere"]], "inf() (hoc vector method)": [[197, "Vector.inf"]], "insrt() (hoc vector method)": [[197, "Vector.insrt"]], "integral() (hoc vector method)": [[197, "Vector.integral"]], "interpolate() (hoc vector method)": [[197, "Vector.interpolate"]], "label() (hoc vector method)": [[197, "Vector.label"]], "line() (hoc vector method)": [[197, "Vector.line"]], "log() (hoc vector method)": [[197, "Vector.log"]], "log10() (hoc vector method)": [[197, "Vector.log10"]], "mag() (hoc vector method)": [[197, "Vector.mag"]], "mark() (hoc vector method)": [[197, "Vector.mark"]], "max() (hoc vector method)": [[197, "Vector.max"]], "max_ind() (hoc vector method)": [[197, "Vector.max_ind"]], "mean() (hoc vector method)": [[197, "Vector.mean"]], "meansqerr() (hoc vector method)": [[197, "Vector.meansqerr"]], "medfltr() (hoc vector method)": [[197, "Vector.medfltr"]], "median() (hoc vector method)": [[197, "Vector.median"]], "min() (hoc vector method)": [[197, "Vector.min"]], "min_ind() (hoc vector method)": [[197, "Vector.min_ind"]], "mul() (hoc vector method)": [[197, "Vector.mul"]], "play() (hoc vector method)": [[197, "Vector.play"]], "play_remove() (hoc vector method)": [[197, "Vector.play_remove"]], "plot() (hoc vector method)": [[197, "Vector.plot"]], "ploterr() (hoc vector method)": [[197, "Vector.ploterr"]], "pow() (hoc vector method)": [[197, "Vector.pow"]], "printf() (hoc vector method)": [[197, "Vector.printf"]], "psth() (hoc vector method)": [[197, "Vector.psth"]], "rebin() (hoc vector method)": [[197, "Vector.rebin"]], "record() (hoc vector method)": [[197, "Vector.record"]], "reduce() (hoc vector method)": [[197, "Vector.reduce"]], "remove() (hoc vector method)": [[197, "Vector.remove"]], "resample() (hoc vector method)": [[197, "Vector.resample"]], "resize() (hoc vector method)": [[197, "Vector.resize"]], "reverse() (hoc vector method)": [[197, "Vector.reverse"]], "rotate() (hoc vector method)": [[197, "Vector.rotate"]], "scale() (hoc vector method)": [[197, "Vector.scale"]], "scanf() (hoc vector method)": [[197, "Vector.scanf"]], "scantil() (hoc vector method)": [[197, "Vector.scantil"]], "set() (hoc vector method)": [[197, "Vector.set"]], "setrand() (hoc vector method)": [[197, "Vector.setrand"]], "sin() (hoc vector method)": [[197, "Vector.sin"]], "size() (hoc vector method)": [[197, "Vector.size"]], "smhist() (hoc vector method)": [[197, "Vector.smhist"]], "sort() (hoc vector method)": [[197, "Vector.sort"]], "sortindex() (hoc vector method)": [[197, "Vector.sortindex"]], "spctrm() (hoc vector method)": [[197, "Vector.spctrm"]], "spikebin() (hoc vector method)": [[197, "Vector.spikebin"]], "sqrt() (hoc vector method)": [[197, "Vector.sqrt"]], "stderr() (hoc vector method)": [[197, "Vector.stderr"]], "stdev() (hoc vector method)": [[197, "Vector.stdev"]], "sub() (hoc vector method)": [[197, "Vector.sub"]], "sum() (hoc vector method)": [[197, "Vector.sum"]], "sumgauss() (hoc vector method)": [[197, "Vector.sumgauss"]], "sumsq() (hoc vector method)": [[197, "Vector.sumsq"]], "tanh() (hoc vector method)": [[197, "Vector.tanh"]], "to_python() (hoc vector method)": [[197, "Vector.to_python"]], "trigavg() (hoc vector method)": [[197, "Vector.trigavg"]], "var() (hoc vector method)": [[197, "Vector.var"]], "vread() (hoc vector method)": [[197, "Vector.vread"]], "vwrite() (hoc vector method)": [[197, "Vector.vwrite"]], "where() (hoc vector method)": [[197, "Vector.where"]], "mechanismstandard (hoc built-in class)": [[199, "MechanismStandard"]], "action() (hoc mechanismstandard method)": [[199, "MechanismStandard.action"]], "count() (hoc mechanismstandard method)": [[199, "MechanismStandard.count"]], "get() (hoc mechanismstandard method)": [[199, "MechanismStandard.get"]], "in() (hoc mechanismstandard method)": [[199, "MechanismStandard.in"]], "name() (hoc mechanismstandard method)": [[199, "MechanismStandard.name"]], "out() (hoc mechanismstandard method)": [[199, "MechanismStandard.out"]], "panel() (hoc mechanismstandard method)": [[199, "MechanismStandard.panel"]], "save() (hoc mechanismstandard method)": [[199, "MechanismStandard.save"]], "set() (hoc mechanismstandard method)": [[199, "MechanismStandard.set"]], "hocerror": [[200, "neuron.HocError"], [329, "neuron.HocError"]], "wrapper (class in neuron)": [[200, "neuron.Wrapper"], [329, "neuron.Wrapper"]], "format_exception() (in module neuron)": [[200, "neuron.format_exception"], [329, "neuron.format_exception"]], "init() (in module neuron)": [[200, "neuron.init"], [329, "neuron.init"]], "load_mechanisms() (in module neuron)": [[200, "neuron.load_mechanisms"], [329, "neuron.load_mechanisms"]], "module": [[200, "module-neuron"], [329, "module-neuron"]], "neuron": [[200, "module-neuron"], [329, "module-neuron"]], "new_hoc_class() (in module neuron)": [[200, "neuron.new_hoc_class"], [329, "neuron.new_hoc_class"]], "new_point_process() (in module neuron)": [[200, "neuron.new_point_process"], [329, "neuron.new_point_process"]], "nrn_dll() (in module neuron)": [[200, "neuron.nrn_dll"], [329, "neuron.nrn_dll"]], "nrn_dll_sym() (in module neuron)": [[200, "neuron.nrn_dll_sym"], [329, "neuron.nrn_dll_sym"]], "nrn_dll_sym_nt() (in module neuron)": [[200, "neuron.nrn_dll_sym_nt"], [329, "neuron.nrn_dll_sym_nt"]], "numpy_element_ref() (in module neuron)": [[200, "neuron.numpy_element_ref"], [329, "neuron.numpy_element_ref"]], "quit() (in module neuron)": [[200, "neuron.quit"], [329, "neuron.quit"]], "register_savestate() (in module neuron)": [[200, "neuron.register_savestate"], [329, "neuron.register_savestate"]], "run() (in module neuron)": [[200, "neuron.run"], [329, "neuron.run"]], "test() (in module neuron)": [[200, "neuron.test"], [329, "neuron.test"]], "test_rxd() (in module neuron)": [[200, "neuron.test_rxd"], [329, "neuron.test_rxd"]], "xopen() (in module neuron)": [[200, "neuron.xopen"], [329, "neuron.xopen"]], "break (keyword)": [[201, "index-2"], [330, "index-2"]], "continue (keyword)": [[201, "index-3"], [330, "index-3"]], "debug (keyword)": [[201, "index-12"], [330, "index-12"]], "delete (keyword)": [[201, "index-10"], [330, "index-10"]], "depvar (keyword)": [[201, "index-14"], [330, "index-14"]], "double (keyword)": [[201, "index-13"], [330, "index-13"]], "else (keyword)": [[201, "index-6"], [330, "index-6"]], "eqn (keyword)": [[201, "index-15"], [330, "index-15"]], "for (keyword)": [[201, "index-8"], [330, "index-8"]], "help (keyword)": [[201, "index-0"], [330, "index-0"]], "if (keyword)": [[201, "index-5"], [330, "index-5"]], "insert (keyword)": [[201, "index-20"], [330, "index-20"]], "local (keyword)": [[201, "index-16"], [330, "index-16"]], "localobj (keyword)": [[201, "index-17"], [330, "index-17"]], "print (keyword)": [[201, "index-9"], [330, "index-9"]], "read (keyword)": [[201, "index-11"], [330, "index-11"]], "return (keyword)": [[201, "index-1"], [330, "index-1"]], "setpointer (keyword)": [[201, "index-19"], [330, "index-19"]], "stop (keyword)": [[201, "index-4"], [330, "index-4"]], "strdef (keyword)": [[201, "index-18"], [330, "index-18"]], "uninsert (keyword)": [[201, "index-21"], [330, "index-21"]], "while (keyword)": [[201, "index-7"], [330, "index-7"]], "nullobject": [[202, "index-7"], [331, "index-7"]], "begintemplate (keyword)": [[202, "index-0"], [331, "index-0"]], "endtemplate (keyword)": [[202, "index-1"], [331, "index-1"]], "external (keyword)": [[202, "index-5"], [331, "index-5"]], "init()": [[202, "init"], [331, "init"]], "new (keyword)": [[202, "index-6"], [331, "index-6"]], "objectvar (keyword)": [[202, "index-2"], [331, "index-2"]], "objref (keyword)": [[202, "index-3"], [331, "index-3"]], "public (keyword)": [[202, "index-4"], [331, "index-4"]], "this (hoc built-in variable)": [[202, "this"]], "unref()": [[202, "unref"], [331, "unref"]], "this_node()": [[203, "this_node"], [332, "this_node"]], "this_section()": [[203, "this_section"], [332, "this_section"]], "pointer (hoc built-in class)": [[204, "Pointer"]], "assign() (hoc pointer method)": [[204, "Pointer.assign"]], "s() (hoc pointer method)": [[204, "Pointer.s"]], "val() (hoc pointer method)": [[204, "Pointer.val"]], "ptrvector (hoc built-in class)": [[205, "PtrVector"]], "gather() (hoc ptrvector method)": [[205, "PtrVector.gather"]], "getval() (hoc ptrvector method)": [[205, "PtrVector.getval"]], "pset() (hoc ptrvector method)": [[205, "PtrVector.pset"]], "ptr_update_callback() (hoc ptrvector method)": [[205, "PtrVector.ptr_update_callback"]], "resize() (hoc ptrvector method)": [[205, "PtrVector.resize"]], "scatter() (hoc ptrvector method)": [[205, "PtrVector.scatter"]], "setval() (hoc ptrvector method)": [[205, "PtrVector.setval"]], "size() (hoc ptrvector method)": [[205, "PtrVector.size"]], "hoc_ac_ (hoc built-in variable)": [[206, "hoc_ac_"]], "hoc_cross_x_ (hoc built-in variable)": [[206, "hoc_cross_x_"]], "hoc_cross_y_ (hoc built-in variable)": [[206, "hoc_cross_y_"]], "hoc_obj_ (hoc built-in variable)": [[206, "hoc_obj_"]], "pythonobject (hoc built-in class)": [[208, "PythonObject"]], "cas() (hoc neuron.h method)": [[208, "neuron.h.cas"]], "execute() (hoc neuron.hoc method)": [[208, "neuron.hoc.execute"]], "hoc_ac() (hoc neuron.hoc method)": [[208, "neuron.hoc.hoc_ac"]], "neuron.h.section (hoc built-in class)": [[208, "neuron.h.Section"]], "neuron.hoc.hocobject (hoc built-in class)": [[208, "neuron.hoc.HocObject"]], "nrnpython()": [[208, "nrnpython"], [337, "nrnpython"]], "sscanf()": [[210, "sscanf"], [339, "sscanf"]], "stringfunctions (hoc built-in class)": [[211, "StringFunctions"]], "alias() (hoc stringfunctions method)": [[211, "StringFunctions.alias"]], "alias_list() (hoc stringfunctions method)": [[211, "StringFunctions.alias_list"]], "head() (hoc stringfunctions method)": [[211, "StringFunctions.head"]], "is_artificial() (hoc stringfunctions method)": [[211, "StringFunctions.is_artificial"]], "is_name() (hoc stringfunctions method)": [[211, "StringFunctions.is_name"]], "is_point_process() (hoc stringfunctions method)": [[211, "StringFunctions.is_point_process"]], "left() (hoc stringfunctions method)": [[211, "StringFunctions.left"]], "len() (hoc stringfunctions method)": [[211, "StringFunctions.len"]], "references() (hoc stringfunctions method)": [[211, "StringFunctions.references"]], "right() (hoc stringfunctions method)": [[211, "StringFunctions.right"]], "substr() (hoc stringfunctions method)": [[211, "StringFunctions.substr"]], "tail() (hoc stringfunctions method)": [[211, "StringFunctions.tail"]], "sprint()": [[212, "sprint"], [341, "sprint"]], "strcmp()": [[212, "strcmp"], [341, "strcmp"]], "winexec()": [[213, "WinExec"], [342, "WinExec"]], "chdir()": [[213, "chdir"], [342, "chdir"]], "getcwd()": [[213, "getcwd"], [342, "getcwd"]], "machine_name()": [[213, "machine_name"], [342, "machine_name"]], "neuronhome()": [[213, "neuronhome"], [342, "neuronhome"]], "nrn_load_dll()": [[213, "nrn_load_dll"], [342, "nrn_load_dll"]], "nrnversion()": [[213, "nrnversion"], [342, "nrnversion"]], "show_winio()": [[213, "show_winio"], [342, "show_winio"]], "startsw()": [[213, "startsw"], [342, "startsw"]], "stopsw()": [[213, "stopsw"], [342, "stopsw"]], "system()": [[213, "system"], [342, "system"]], "unix_mac_pc()": [[213, "unix_mac_pc"], [342, "unix_mac_pc"]], "timer (hoc built-in class)": [[214, "Timer"]], "end() (hoc timer method)": [[214, "Timer.end"]], "seconds() (hoc timer method)": [[214, "Timer.seconds"]], "start() (hoc timer method)": [[214, "Timer.start"]], "batch_run()": [[215, "batch_run"], [344, "batch_run"]], "batch_save()": [[215, "batch_save"], [344, "batch_save"]], "bbsavestate (hoc built-in class)": [[216, "BBSaveState"]], "ignore() (hoc bbsavestate method)": [[216, "BBSaveState.ignore"]], "restore_test() (hoc bbsavestate method)": [[216, "BBSaveState.restore_test"]], "save_test() (hoc bbsavestate method)": [[216, "BBSaveState.save_test"]], "vector_play_init() (hoc bbsavestate method)": [[216, "BBSaveState.vector_play_init"]], "cvode (hoc built-in class)": [[217, "CVode"]], "acor() (hoc cvode method)": [[217, "CVode.acor"]], "active() (hoc cvode method)": [[217, "CVode.active"]], "atol() (hoc cvode method)": [[217, "CVode.atol"]], "atolscale() (hoc cvode method)": [[217, "CVode.atolscale"]], "cache_efficient() (hoc cvode method)": [[217, "CVode.cache_efficient"]], "condition_order() (hoc cvode method)": [[217, "CVode.condition_order"]], "current_method() (hoc cvode method)": [[217, "CVode.current_method"]], "dae_init_dteps() (hoc cvode method)": [[217, "CVode.dae_init_dteps"]], "debug_event() (hoc cvode method)": [[217, "CVode.debug_event"]], "dstates() (hoc cvode method)": [[217, "CVode.dstates"]], "error_weights() (hoc cvode method)": [[217, "CVode.error_weights"]], "event() (hoc cvode method)": [[217, "CVode.event"]], "event_queue_info() (hoc cvode method)": [[217, "CVode.event_queue_info"]], "f() (hoc cvode method)": [[217, "CVode.f"]], "fixed_step() (hoc cvode method)": [[217, "CVode.fixed_step"]], "jacobian() (hoc cvode method)": [[217, "CVode.jacobian"]], "maxorder() (hoc cvode method)": [[217, "CVode.maxorder"]], "maxstep() (hoc cvode method)": [[217, "CVode.maxstep"]], "minstep() (hoc cvode method)": [[217, "CVode.minstep"]], "netconlist() (hoc cvode method)": [[217, "CVode.netconlist"]], "order() (hoc cvode method)": [[217, "CVode.order"]], "print_event_queue() (hoc cvode method)": [[217, "CVode.print_event_queue"]], "queue_mode() (hoc cvode method)": [[217, "CVode.queue_mode"]], "re_init() (hoc cvode method)": [[217, "CVode.re_init"]], "record() (hoc cvode method)": [[217, "CVode.record"]], "record_remove() (hoc cvode method)": [[217, "CVode.record_remove"]], "rtol() (hoc cvode method)": [[217, "CVode.rtol"]], "simgraph_remove() (hoc cvode method)": [[217, "CVode.simgraph_remove"]], "solve() (hoc cvode method)": [[217, "CVode.solve"]], "spike_stat() (hoc cvode method)": [[217, "CVode.spike_stat"]], "state_magnitudes() (hoc cvode method)": [[217, "CVode.state_magnitudes"]], "statename() (hoc cvode method)": [[217, "CVode.statename"]], "states() (hoc cvode method)": [[217, "CVode.states"]], "statistics() (hoc cvode method)": [[217, "CVode.statistics"]], "stiff() (hoc cvode method)": [[217, "CVode.stiff"]], "store_events() (hoc cvode method)": [[217, "CVode.store_events"]], "use_daspk() (hoc cvode method)": [[217, "CVode.use_daspk"]], "use_fast_imem() (hoc cvode method)": [[217, "CVode.use_fast_imem"]], "use_local_dt() (hoc cvode method)": [[217, "CVode.use_local_dt"]], "use_long_double() (hoc cvode method)": [[217, "CVode.use_long_double"]], "use_mxb() (hoc cvode method)": [[217, "CVode.use_mxb"]], "ygather() (hoc cvode method)": [[217, "CVode.ygather"]], "yscatter() (hoc cvode method)": [[217, "CVode.yscatter"]], "makefamily (hoc function)": [[218, "index-0"], [347, "index-0"]], "quit()": [[219, "quit"], [348, "quit"]], "retrieveaudit()": [[219, "retrieveaudit"], [348, "retrieveaudit"]], "saveaudit()": [[219, "saveaudit"], [348, "saveaudit"]], "finitializehandler (hoc built-in class)": [[220, "FInitializeHandler"]], "allprint() (hoc finitializehandler method)": [[220, "FInitializeHandler.allprint"]], "celsius (hoc built-in variable)": [[220, "celsius"]], "checkpoint()": [[220, "checkpoint"], [349, "checkpoint"]], "clamp_resist (hoc built-in variable)": [[220, "clamp_resist"]], "dt (hoc built-in variable)": [[220, "dt"]], "fadvance()": [[220, "fadvance"], [349, "fadvance"]], "fcurrent()": [[220, "fcurrent"], [349, "fcurrent"]], "finitialize()": [[220, "finitialize"], [349, "finitialize"]], "fmatrix()": [[220, "fmatrix"], [349, "fmatrix"]], "frecord_init()": [[220, "frecord_init"], [349, "frecord_init"]], "initnrn()": [[220, "initnrn"], [349, "initnrn"]], "secondorder (hoc built-in variable)": [[220, "secondorder"]], "stoprun (hoc built-in variable)": [[220, "stoprun"]], "t (hoc built-in variable)": [[220, "t"]], "savestate (hoc built-in class)": [[222, "SaveState"]], "fread() (hoc savestate method)": [[222, "SaveState.fread"]], "fwrite() (hoc savestate method)": [[222, "SaveState.fwrite"]], "restore() (hoc savestate method)": [[222, "SaveState.restore"]], "save() (hoc savestate method)": [[222, "SaveState.save"]], "writehoc() (hoc savestate method)": [[222, "SaveState.writehoc"]], "print_session()": [[223, "print_session"], [352, "print_session"]], "save_session()": [[223, "save_session"], [352, "save_session"]], "glyph (hoc built-in class)": [[225, "Glyph"]], "circle() (hoc glyph method)": [[225, "Glyph.circle"]], "close_path() (hoc glyph method)": [[225, "Glyph.close_path"]], "control_point() (hoc glyph method)": [[225, "Glyph.control_point"]], "curve_to() (hoc glyph method)": [[225, "Glyph.curve_to"]], "erase() (hoc glyph method)": [[225, "Glyph.erase"]], "fill() (hoc glyph method)": [[225, "Glyph.fill"]], "gif() (hoc glyph method)": [[225, "Glyph.gif"]], "glyph() (hoc glyph method)": [[225, "Glyph.glyph"]], "label() (hoc glyph method)": [[225, "Glyph.label"]], "line_to() (hoc glyph method)": [[225, "Glyph.line_to"]], "move_to() (hoc glyph method)": [[225, "Glyph.move_to"]], "new_path() (hoc glyph method)": [[225, "Glyph.new_path"]], "stroke() (hoc glyph method)": [[225, "Glyph.stroke"]], "graph (hoc built-in class)": [[226, "Graph"]], "addexpr() (hoc graph method)": [[226, "Graph.addexpr"]], "addobject() (hoc graph method)": [[226, "Graph.addobject"]], "addvar() (hoc graph method)": [[226, "Graph.addvar"]], "align() (hoc graph method)": [[226, "Graph.align"]], "begin() (hoc graph method)": [[226, "Graph.begin"]], "beginline() (hoc graph method)": [[226, "Graph.beginline"]], "brush() (hoc graph method)": [[226, "Graph.brush"]], "color() (hoc graph method)": [[226, "Graph.color"]], "crosshair_action() (hoc graph method)": [[226, "Graph.crosshair_action"]], "erase() (hoc graph method)": [[226, "Graph.erase"]], "erase_all() (hoc graph method)": [[226, "Graph.erase_all"]], "exec_menu() (hoc graph method)": [[226, "Graph.exec_menu"]], "family() (hoc graph method)": [[226, "Graph.family"]], "fastflush() (hoc graph method)": [[226, "Graph.fastflush"]], "fixed() (hoc graph method)": [[226, "Graph.fixed"]], "flush() (hoc graph method)": [[226, "Graph.flush"]], "getline() (hoc graph method)": [[226, "Graph.getline"]], "gif() (hoc graph method)": [[226, "Graph.gif"]], "glyph() (hoc graph method)": [[226, "Graph.glyph"]], "label() (hoc graph method)": [[226, "Graph.label"]], "line() (hoc graph method)": [[226, "Graph.line"]], "line_info() (hoc graph method)": [[226, "Graph.line_info"]], "mark() (hoc graph method)": [[226, "Graph.mark"]], "menu_action() (hoc graph method)": [[226, "Graph.menu_action"]], "menu_remove() (hoc graph method)": [[226, "Graph.menu_remove"]], "menu_tool() (hoc graph method)": [[226, "Graph.menu_tool"]], "plot() (hoc graph method)": [[226, "Graph.plot"]], "printfile() (hoc graph method)": [[226, "Graph.printfile"]], "relative() (hoc graph method)": [[226, "Graph.relative"]], "save_name() (hoc graph method)": [[226, "Graph.save_name"]], "simgraph() (hoc graph method)": [[226, "Graph.simgraph"]], "size() (hoc graph method)": [[226, "Graph.size"]], "unmap() (hoc graph method)": [[226, "Graph.unmap"]], "vector() (hoc graph method)": [[226, "Graph.vector"]], "vfixed() (hoc graph method)": [[226, "Graph.vfixed"]], "view() (hoc graph method)": [[226, "Graph.view"]], "view_count() (hoc graph method)": [[226, "Graph.view_count"]], "view_info() (hoc graph method)": [[226, "Graph.view_info"]], "view_size() (hoc graph method)": [[226, "Graph.view_size"]], "xaxis() (hoc graph method)": [[226, "Graph.xaxis"]], "xexpr() (hoc graph method)": [[226, "Graph.xexpr"]], "yaxis() (hoc graph method)": [[226, "Graph.yaxis"]], "doevents()": [[229, "doEvents"], [358, "doEvents"]], "donotify()": [[229, "doNotify"], [358, "doNotify"]], "axis()": [[230, "axis"], [359, "axis"]], "graph()": [[230, "graph"], [359, "graph"]], "graphmode()": [[230, "graphmode"], [359, "graphmode"]], "plot()": [[230, "plot"], [359, "plot"]], "plotx()": [[230, "plotx"], [359, "plotx"]], "ploty()": [[230, "ploty"], [359, "ploty"]], "plt()": [[230, "plt"], [359, "plt"]], "regraph()": [[230, "regraph"], [359, "regraph"]], "setcolor()": [[230, "setcolor"], [359, "setcolor"]], "settext()": [[230, "settext"], [359, "settext"]], "plotshape (hoc built-in class)": [[232, "PlotShape"]], "beginline() (hoc plotshape method)": [[232, "PlotShape.beginline"]], "color() (hoc plotshape method)": [[232, "PlotShape.color"]], "color_all() (hoc plotshape method)": [[232, "PlotShape.color_all"]], "color_list() (hoc plotshape method)": [[232, "PlotShape.color_list"]], "colormap() (hoc plotshape method)": [[232, "PlotShape.colormap"]], "erase() (hoc plotshape method)": [[232, "PlotShape.erase"]], "erase_all() (hoc plotshape method)": [[232, "PlotShape.erase_all"]], "exec_menu() (hoc plotshape method)": [[232, "PlotShape.exec_menu"]], "fastflush() (hoc plotshape method)": [[232, "PlotShape.fastflush"]], "flush() (hoc plotshape method)": [[232, "PlotShape.flush"]], "hinton() (hoc plotshape method)": [[232, "PlotShape.hinton"]], "label() (hoc plotshape method)": [[232, "PlotShape.label"]], "len_scale() (hoc plotshape method)": [[232, "PlotShape.len_scale"]], "line() (hoc plotshape method)": [[232, "PlotShape.line"]], "mark() (hoc plotshape method)": [[232, "PlotShape.mark"]], "menu_action() (hoc plotshape method)": [[232, "PlotShape.menu_action"]], "menu_tool() (hoc plotshape method)": [[232, "PlotShape.menu_tool"]], "nearest() (hoc plotshape method)": [[232, "PlotShape.nearest"]], "observe() (hoc plotshape method)": [[232, "PlotShape.observe"]], "printfile() (hoc plotshape method)": [[232, "PlotShape.printfile"]], "push_selected() (hoc plotshape method)": [[232, "PlotShape.push_selected"]], "rotate() (hoc plotshape method)": [[232, "PlotShape.rotate"]], "save_name() (hoc plotshape method)": [[232, "PlotShape.save_name"]], "scale() (hoc plotshape method)": [[232, "PlotShape.scale"]], "show() (hoc plotshape method)": [[232, "PlotShape.show"]], "size() (hoc plotshape method)": [[232, "PlotShape.size"]], "unmap() (hoc plotshape method)": [[232, "PlotShape.unmap"]], "variable() (hoc plotshape method)": [[232, "PlotShape.variable"]], "view() (hoc plotshape method)": [[232, "PlotShape.view"]], "view_count() (hoc plotshape method)": [[232, "PlotShape.view_count"]], "rangevarplot (hoc built-in class)": [[233, "RangeVarPlot"]], "begin() (hoc rangevarplot method)": [[233, "RangeVarPlot.begin"]], "color() (hoc rangevarplot method)": [[233, "RangeVarPlot.color"]], "end() (hoc rangevarplot method)": [[233, "RangeVarPlot.end"]], "from_vector() (hoc rangevarplot method)": [[233, "RangeVarPlot.from_vector"]], "left() (hoc rangevarplot method)": [[233, "RangeVarPlot.left"]], "list() (hoc rangevarplot method)": [[233, "RangeVarPlot.list"]], "origin() (hoc rangevarplot method)": [[233, "RangeVarPlot.origin"]], "right() (hoc rangevarplot method)": [[233, "RangeVarPlot.right"]], "to_vector() (hoc rangevarplot method)": [[233, "RangeVarPlot.to_vector"]], "shape (hoc built-in class)": [[234, "Shape"]], "action() (hoc shape method)": [[234, "Shape.action"]], "beginline() (hoc shape method)": [[234, "Shape.beginline"]], "color() (hoc shape method)": [[234, "Shape.color"]], "color_all() (hoc shape method)": [[234, "Shape.color_all"]], "color_list() (hoc shape method)": [[234, "Shape.color_list"]], "erase() (hoc shape method)": [[234, "Shape.erase"]], "erase_all() (hoc shape method)": [[234, "Shape.erase_all"]], "exec_menu() (hoc shape method)": [[234, "Shape.exec_menu"]], "flush() (hoc shape method)": [[234, "Shape.flush"]], "label() (hoc shape method)": [[234, "Shape.label"]], "len_scale() (hoc shape method)": [[234, "Shape.len_scale"]], "line() (hoc shape method)": [[234, "Shape.line"]], "mark() (hoc shape method)": [[234, "Shape.mark"]], "menu_action() (hoc shape method)": [[234, "Shape.menu_action"]], "menu_tool() (hoc shape method)": [[234, "Shape.menu_tool"]], "nearest() (hoc shape method)": [[234, "Shape.nearest"]], "observe() (hoc shape method)": [[234, "Shape.observe"]], "point_mark() (hoc shape method)": [[234, "Shape.point_mark"]], "point_mark_remove() (hoc shape method)": [[234, "Shape.point_mark_remove"]], "printfile() (hoc shape method)": [[234, "Shape.printfile"]], "push_selected() (hoc shape method)": [[234, "Shape.push_selected"]], "rotate() (hoc shape method)": [[234, "Shape.rotate"]], "save_name() (hoc shape method)": [[234, "Shape.save_name"]], "select() (hoc shape method)": [[234, "Shape.select"]], "show() (hoc shape method)": [[234, "Shape.show"]], "size() (hoc shape method)": [[234, "Shape.size"]], "unmap() (hoc shape method)": [[234, "Shape.unmap"]], "view() (hoc shape method)": [[234, "Shape.view"]], "view_count() (hoc shape method)": [[234, "Shape.view_count"]], "menuexpore (hoc class)": [[235, "index-0"], [364, "index-0"]], "pointprocesslocator (hoc class)": [[235, "index-1"], [364, "index-1"]], "impedance (built-in class)": [[258, "Impedance"]], "compute() (impedance method)": [[258, "Impedance.compute"]], "deltafac() (impedance method)": [[258, "Impedance.deltafac"]], "input() (impedance method)": [[258, "Impedance.input"]], "input_phase() (impedance method)": [[258, "Impedance.input_phase"]], "loc() (impedance method)": [[258, "Impedance.loc"]], "ratio() (impedance method)": [[258, "Impedance.ratio"]], "transfer() (impedance method)": [[258, "Impedance.transfer"]], "transfer_phase() (impedance method)": [[258, "Impedance.transfer_phase"]], "built-in function": [[259, "ghk"], [259, "nernst"], [260, "attr_praxis"], [260, "fit_praxis"], [260, "pval_praxis"], [260, "stop_praxis"], [271, "make_mechanism"], [271, "make_pointprocess"], [272, "ion_charge"], [272, "ion_register"], [272, "ion_style"], [285, "fclamp"], [285, "fclampi"], [285, "fclampv"], [285, "fstim"], [285, "fstimi"], [285, "prstim"], [286, "rxd.export.sbml"], [286, "rxd.nthread"], [286, "rxd.re_init"], [286, "rxd.set_solve_type"], [287, "rxdmath.acos"], [287, "rxdmath.acosh"], [287, "rxdmath.asin"], [287, "rxdmath.asinh"], [287, "rxdmath.atan"], [287, "rxdmath.atan2"], [287, "rxdmath.ceil"], [287, "rxdmath.copysign"], [287, "rxdmath.cos"], [287, "rxdmath.cosh"], [287, "rxdmath.degrees"], [287, "rxdmath.erf"], [287, "rxdmath.erfc"], [287, "rxdmath.exp"], [287, "rxdmath.expm1"], [287, "rxdmath.fabs"], [287, "rxdmath.factorial"], [287, "rxdmath.floor"], [287, "rxdmath.fmod"], [287, "rxdmath.gamma"], [287, "rxdmath.lgamma"], [287, "rxdmath.log"], [287, "rxdmath.log10"], [287, "rxdmath.log1p"], [287, "rxdmath.pow"], [287, "rxdmath.radians"], [287, "rxdmath.sin"], [287, "rxdmath.sinh"], [287, "rxdmath.sqrt"], [287, "rxdmath.tan"], [287, "rxdmath.tanh"], [287, "rxdmath.trunc"], [287, "rxdmath.vtrap"], [289, "delete_section"], [289, "disconnect"], [289, "id0"], [289, "ismembrane"], [289, "issection"], [289, "parent_connection"], [289, "parent_node"], [289, "parent_section"], [289, "psection"], [289, "secname"], [289, "section_exists"], [289, "section_orientation"], [289, "section_owner"], [289, "sectionname"], [290, "arc3d"], [290, "area"], [290, "define_shape"], [290, "diam3d"], [290, "distance"], [290, "getSpineArea"], [290, "n3d"], [290, "pt3dadd"], [290, "pt3dchange"], [290, "pt3dclear"], [290, "pt3dconst"], [290, "pt3dinsert"], [290, "pt3dremove"], [290, "pt3dstyle"], [290, "ri"], [290, "setSpineArea"], [290, "spine3d"], [290, "x3d"], [290, "y3d"], [290, "z3d"], [293, "pop_section"], [293, "push_section"], [294, "execute"], [294, "execute1"], [294, "load_file"], [294, "load_func"], [294, "load_proc"], [294, "load_template"], [295, "coredump_on_error"], [295, "execerror"], [295, "nrn_feenableexcept"], [295, "show_errmess_always"], [296, "boolean_dialog"], [296, "continue_dialog"], [296, "string_dialog"], [299, "ivoc_style"], [299, "pwman_place"], [299, "variable_domain"], [300, "nrnglobalmechmenu"], [300, "nrnmechmenu"], [300, "nrnpointmenu"], [300, "nrnsecmenu"], [305, "fmenu"], [307, "units"], [307, "xbutton"], [307, "xcheckbox"], [307, "xfixedvalue"], [307, "xlabel"], [307, "xmenu"], [307, "xpanel"], [307, "xpvalue"], [307, "xradiobutton"], [307, "xslider"], [307, "xstatebutton"], [307, "xvalue"], [307, "xvarlabel"], [310, "argtype"], [310, "numarg"], [311, "allobjects"], [311, "allobjectvars"], [311, "hoc_pointer_"], [311, "name_declared"], [311, "object_id"], [311, "object_pop"], [311, "object_push"], [311, "symbols"], [314, "lw"], [315, "hoc_stdout"], [315, "printf"], [316, "fscan"], [316, "getstr"], [316, "sred"], [316, "xred"], [317, "fprint"], [317, "id0"], [317, "wopen"], [317, "xopen"], [319, "eqinit"], [319, "prmat"], [319, "solve"], [320, "abs"], [320, "atan"], [320, "atan2"], [320, "cos"], [320, "erf"], [320, "erfc"], [320, "exp"], [320, "int"], [320, "log"], [320, "log10"], [320, "sin"], [320, "sqrt"], [320, "tanh"], [323, "mcell_ran4"], [323, "mcell_ran4_init"], [323, "use_mcell_ran4"], [331, "init"], [331, "unref"], [332, "this_node"], [332, "this_section"], [337, "nrnpython"], [339, "sscanf"], [341, "sprint"], [341, "strcmp"], [342, "WinExec"], [342, "chdir"], [342, "getcwd"], [342, "machine_name"], [342, "neuronhome"], [342, "nrn_load_dll"], [342, "nrnversion"], [342, "show_winio"], [342, "startsw"], [342, "stopsw"], [342, "system"], [342, "unix_mac_pc"], [344, "batch_run"], [344, "batch_save"], [348, "quit"], [348, "retrieveaudit"], [348, "saveaudit"], [349, "checkpoint"], [349, "fadvance"], [349, "fcurrent"], [349, "finitialize"], [349, "fmatrix"], [349, "frecord_init"], [349, "initnrn"], [349, "nrnunit_use_legacy"], [352, "print_session"], [352, "save_session"], [358, "doEvents"], [358, "doNotify"], [359, "axis"], [359, "graph"], [359, "graphmode"], [359, "plot"], [359, "plotx"], [359, "ploty"], [359, "plt"], [359, "regraph"], [359, "setcolor"], [359, "settext"]], "electrode (built-in class)": [[270, "Electrode"]], "holding() (electrode method)": [[270, "Electrode.Holding"]], "iclamp() (electrode method)": [[270, "Electrode.IClamp"]], "location() (electrode method)": [[270, "Electrode.Location"]], "returnlevel() (electrode method)": [[270, "Electrode.Returnlevel"]], "testlevel() (electrode method)": [[270, "Electrode.Testlevel"]], "vclamp() (electrode method)": [[270, "Electrode.VClamp"]], "vclampfamily() (electrode method)": [[270, "Electrode.VClampFamily"]], "vclampigraph() (electrode method)": [[270, "Electrode.VClampigraph"]], "amp() (electrode method)": [[270, "Electrode.amp"]], "amp0() (electrode method)": [[270, "Electrode.amp0"]], "del() (electrode method)": [[270, "Electrode.del"]], "dur() (electrode method)": [[270, "Electrode.dur"]], "dur0() (electrode method)": [[270, "Electrode.dur0"]], "make_mechanism()": [[271, "make_mechanism"]], "make_pointprocess()": [[271, "make_pointprocess"]], "kschan (built-in class)": [[273, "KSChan"]], "ksgate (built-in class)": [[273, "KSGate"]], "ksstate (built-in class)": [[273, "KSState"]], "kstrans (built-in class)": [[273, "KSTrans"]], "ab() (kstrans method)": [[273, "KSTrans.ab"]], "add_hhstate() (kschan method)": [[273, "KSChan.add_hhstate"]], "add_ksstate() (kschan method)": [[273, "KSChan.add_ksstate"]], "add_transition() (kschan method)": [[273, "KSChan.add_transition"]], "erev() (kschan method)": [[273, "KSChan.erev"]], "f() (kstrans method)": [[273, "KSTrans.f"]], "frac() (ksstate method)": [[273, "KSState.frac"]], "ftype() (kstrans method)": [[273, "KSTrans.ftype"]], "gate() (kschan method)": [[273, "KSChan.gate"]], "gate() (ksstate method)": [[273, "KSState.gate"]], "gmax() (kschan method)": [[273, "KSChan.gmax"]], "index() (ksgate method)": [[273, "KSGate.index"]], "index() (ksstate method)": [[273, "KSState.index"]], "index() (kstrans method)": [[273, "KSTrans.index"]], "inftau() (kstrans method)": [[273, "KSTrans.inftau"]], "ion() (kschan method)": [[273, "KSChan.ion"]], "iv_type() (kschan method)": [[273, "KSChan.iv_type"]], "ligand() (kschan method)": [[273, "KSChan.ligand"]], "ligand() (kstrans method)": [[273, "KSTrans.ligand"]], "name() (kschan method)": [[273, "KSChan.name"]], "name() (ksstate method)": [[273, "KSState.name"]], "ngate() (kschan method)": [[273, "KSChan.ngate"]], "nligand() (kschan method)": [[273, "KSChan.nligand"]], "nstate() (kschan method)": [[273, "KSChan.nstate"]], "nstate() (ksgate method)": [[273, "KSGate.nstate"]], "ntrans() (kschan method)": [[273, "KSChan.ntrans"]], "parm() (kstrans method)": [[273, "KSTrans.parm"]], "power() (ksgate method)": [[273, "KSGate.power"]], "pr() (kschan method)": [[273, "KSChan.pr"]], "remove_state() (kschan method)": [[273, "KSChan.remove_state"]], "remove_transition() (kschan method)": [[273, "KSChan.remove_transition"]], "set_f() (kstrans method)": [[273, "KSTrans.set_f"]], "setstructure() (kschan method)": [[273, "KSChan.setstructure"]], "sindex() (ksgate method)": [[273, "KSGate.sindex"]], "src() (kstrans method)": [[273, "KSTrans.src"]], "state() (kschan method)": [[273, "KSChan.state"]], "target() (kstrans method)": [[273, "KSTrans.target"]], "trans() (kschan method)": [[273, "KSChan.trans"]], "type() (kstrans method)": [[273, "KSTrans.type"]], "linearmechanism (built-in class)": [[274, "LinearMechanism"]], "apcount (built-in class)": [[276, "APCount"]], "alphasynapse (built-in class)": [[276, "AlphaSynapse"]], "exp2syn (built-in class)": [[276, "Exp2Syn"]], "expsyn (built-in class)": [[276, "ExpSyn"]], "iclamp (built-in class)": [[276, "IClamp"]], "intfire1 (built-in class)": [[276, "IntFire1"]], "intfire2 (built-in class)": [[276, "IntFire2"]], "intfire4 (built-in class)": [[276, "IntFire4"]], "netstim (built-in class)": [[276, "NetStim"]], "patternstim (built-in class)": [[276, "PatternStim"]], "seclamp (built-in class)": [[276, "SEClamp"]], "vclamp (built-in class)": [[276, "VClamp"]], "get_loc() (pnt method)": [[276, "pnt.get_loc"]], "get_segment() (pnt method)": [[276, "pnt.get_segment"]], "has_loc() (pnt method)": [[276, "pnt.has_loc"]], "loc() (pnt method)": [[276, "pnt.loc"]], "mechanismtype (built-in class)": [[279, "MechanismType"]], "action() (mechanismtype method)": [[279, "MechanismType.action"]], "code() (mechanismtype method)": [[279, "MechanismType.code"]], "count() (mechanismtype method)": [[279, "MechanismType.count"]], "file() (mechanismtype method)": [[279, "MechanismType.file"]], "has_net_event() (mechanismtype method)": [[279, "MechanismType.has_net_event"]], "internal_type() (mechanismtype method)": [[279, "MechanismType.internal_type"]], "is_artificial() (mechanismtype method)": [[279, "MechanismType.is_artificial"]], "is_netcon_target() (mechanismtype method)": [[279, "MechanismType.is_netcon_target"]], "make() (mechanismtype method)": [[279, "MechanismType.make"]], "menu() (mechanismtype method)": [[279, "MechanismType.menu"]], "pp_begin() (mechanismtype method)": [[279, "MechanismType.pp_begin"]], "pp_next() (mechanismtype method)": [[279, "MechanismType.pp_next"]], "remove() (mechanismtype method)": [[279, "MechanismType.remove"]], "select() (mechanismtype method)": [[279, "MechanismType.select"]], "selected() (mechanismtype method)": [[279, "MechanismType.selected"]], "netcon (built-in class)": [[282, "NetCon"]], "netcon.delay (built-in variable)": [[282, "NetCon.delay"]], "netcon.threshold (built-in variable)": [[282, "NetCon.threshold"]], "netcon.weight (built-in variable)": [[282, "NetCon.weight"]], "netcon.x (built-in variable)": [[282, "NetCon.x"]], "active() (netcon method)": [[282, "NetCon.active"]], "event() (netcon method)": [[282, "NetCon.event"]], "get_recordvec() (netcon method)": [[282, "NetCon.get_recordvec"]], "postcell() (netcon method)": [[282, "NetCon.postcell"]], "postcelllist() (netcon method)": [[282, "NetCon.postcelllist"]], "postloc() (netcon method)": [[282, "NetCon.postloc"]], "postseg() (netcon method)": [[282, "NetCon.postseg"]], "pre() (netcon method)": [[282, "NetCon.pre"]], "precell() (netcon method)": [[282, "NetCon.precell"]], "precelllist() (netcon method)": [[282, "NetCon.precelllist"]], "prelist() (netcon method)": [[282, "NetCon.prelist"]], "preloc() (netcon method)": [[282, "NetCon.preloc"]], "preseg() (netcon method)": [[282, "NetCon.preseg"]], "record() (netcon method)": [[282, "NetCon.record"]], "setpost() (netcon method)": [[282, "NetCon.setpost"]], "srcgid() (netcon method)": [[282, "NetCon.srcgid"]], "syn() (netcon method)": [[282, "NetCon.syn"]], "synlist() (netcon method)": [[282, "NetCon.synlist"]], "valid() (netcon method)": [[282, "NetCon.valid"]], "wcnt() (netcon method)": [[282, "NetCon.wcnt"]], "parallelcontext (built-in class)": [[283, "ParallelContext"]], "threads() (parallelcontext method)": [[283, "ParallelContext.Threads"]], "allgather() (parallelcontext method)": [[283, "ParallelContext.allgather"]], "allreduce() (parallelcontext method)": [[283, "ParallelContext.allreduce"]], "alltoall() (parallelcontext method)": [[283, "ParallelContext.alltoall"]], "barrier() (parallelcontext method)": [[283, "ParallelContext.barrier"]], "broadcast() (parallelcontext method)": [[283, "ParallelContext.broadcast"]], "cell() (parallelcontext method)": [[283, "ParallelContext.cell"]], "context() (parallelcontext method)": [[283, "ParallelContext.context"]], "done() (parallelcontext method)": [[283, "ParallelContext.done"]], "dt() (parallelcontext method)": [[283, "ParallelContext.dt"]], "event_time() (parallelcontext method)": [[283, "ParallelContext.event_time"]], "gid2cell() (parallelcontext method)": [[283, "ParallelContext.gid2cell"]], "gid2obj() (parallelcontext method)": [[283, "ParallelContext.gid2obj"]], "gid_clear() (parallelcontext method)": [[283, "ParallelContext.gid_clear"]], "gid_connect() (parallelcontext method)": [[283, "ParallelContext.gid_connect"]], "gid_exists() (parallelcontext method)": [[283, "ParallelContext.gid_exists"]], "id() (parallelcontext method)": [[283, "ParallelContext.id"]], "id_bbs() (parallelcontext method)": [[283, "ParallelContext.id_bbs"]], "id_world() (parallelcontext method)": [[283, "ParallelContext.id_world"]], "integ_time() (parallelcontext method)": [[283, "ParallelContext.integ_time"]], "look() (parallelcontext method)": [[283, "ParallelContext.look"]], "look_take() (parallelcontext method)": [[283, "ParallelContext.look_take"]], "max_histogram() (parallelcontext method)": [[283, "ParallelContext.max_histogram"]], "mech_time() (parallelcontext method)": [[283, "ParallelContext.mech_time"]], "mpi_init() (parallelcontext method)": [[283, "ParallelContext.mpi_init"]], "mpiabort_on_error() (parallelcontext method)": [[283, "ParallelContext.mpiabort_on_error"]], "multisplit() (parallelcontext method)": [[283, "ParallelContext.multisplit"]], "nhost() (parallelcontext method)": [[283, "ParallelContext.nhost"]], "nhost_bbs() (parallelcontext method)": [[283, "ParallelContext.nhost_bbs"]], "nhost_world() (parallelcontext method)": [[283, "ParallelContext.nhost_world"]], "nrncore_run() (parallelcontext method)": [[283, "ParallelContext.nrncore_run"]], "nrncore_write() (parallelcontext method)": [[283, "ParallelContext.nrncore_write"]], "nthread() (parallelcontext method)": [[283, "ParallelContext.nthread"]], "outputcell() (parallelcontext method)": [[283, "ParallelContext.outputcell"]], "pack() (parallelcontext method)": [[283, "ParallelContext.pack"]], "partition() (parallelcontext method)": [[283, "ParallelContext.partition"]], "post() (parallelcontext method)": [[283, "ParallelContext.post"]], "prcellstate() (parallelcontext method)": [[283, "ParallelContext.prcellstate"]], "psolve() (parallelcontext method)": [[283, "ParallelContext.psolve"]], "py_allgather() (parallelcontext method)": [[283, "ParallelContext.py_allgather"]], "py_alltoall() (parallelcontext method)": [[283, "ParallelContext.py_alltoall"]], "py_broadcast() (parallelcontext method)": [[283, "ParallelContext.py_broadcast"]], "py_gather() (parallelcontext method)": [[283, "ParallelContext.py_gather"]], "py_scatter() (parallelcontext method)": [[283, "ParallelContext.py_scatter"]], "pyret() (parallelcontext method)": [[283, "ParallelContext.pyret"]], "retval() (parallelcontext method)": [[283, "ParallelContext.retval"]], "runworker() (parallelcontext method)": [[283, "ParallelContext.runworker"]], "sec_in_thread() (parallelcontext method)": [[283, "ParallelContext.sec_in_thread"]], "send_time() (parallelcontext method)": [[283, "ParallelContext.send_time"]], "set_gid2node() (parallelcontext method)": [[283, "ParallelContext.set_gid2node"]], "set_maxstep() (parallelcontext method)": [[283, "ParallelContext.set_maxstep"]], "setup_transfer() (parallelcontext method)": [[283, "ParallelContext.setup_transfer"]], "source_var() (parallelcontext method)": [[283, "ParallelContext.source_var"]], "spike_compress() (parallelcontext method)": [[283, "ParallelContext.spike_compress"]], "spike_record() (parallelcontext method)": [[283, "ParallelContext.spike_record"]], "spike_statistics() (parallelcontext method)": [[283, "ParallelContext.spike_statistics"]], "splitcell() (parallelcontext method)": [[283, "ParallelContext.splitcell"]], "step_time() (parallelcontext method)": [[283, "ParallelContext.step_time"]], "submit() (parallelcontext method)": [[283, "ParallelContext.submit"]], "subworlds() (parallelcontext method)": [[283, "ParallelContext.subworlds"]], "t() (parallelcontext method)": [[283, "ParallelContext.t"]], "take() (parallelcontext method)": [[283, "ParallelContext.take"]], "target_var() (parallelcontext method)": [[283, "ParallelContext.target_var"]], "thread_busywait() (parallelcontext method)": [[283, "ParallelContext.thread_busywait"]], "thread_ctime() (parallelcontext method)": [[283, "ParallelContext.thread_ctime"]], "thread_how_many_proc() (parallelcontext method)": [[283, "ParallelContext.thread_how_many_proc"]], "thread_stat() (parallelcontext method)": [[283, "ParallelContext.thread_stat"]], "threshold() (parallelcontext method)": [[283, "ParallelContext.threshold"]], "time() (parallelcontext method)": [[283, "ParallelContext.time"]], "timeout() (parallelcontext method)": [[283, "ParallelContext.timeout"]], "unpack() (parallelcontext method)": [[283, "ParallelContext.unpack"]], "upkpyobj() (parallelcontext method)": [[283, "ParallelContext.upkpyobj"]], "upkscalar() (parallelcontext method)": [[283, "ParallelContext.upkscalar"]], "upkstr() (parallelcontext method)": [[283, "ParallelContext.upkstr"]], "upkvec() (parallelcontext method)": [[283, "ParallelContext.upkvec"]], "userid() (parallelcontext method)": [[283, "ParallelContext.userid"]], "vtransfer_time() (parallelcontext method)": [[283, "ParallelContext.vtransfer_time"]], "wait_time() (parallelcontext method)": [[283, "ParallelContext.wait_time"]], "working() (parallelcontext method)": [[283, "ParallelContext.working"]], "parallelnetmanager (built-in class)": [[284, "ParallelNetManager"]], "create_cell() (parallelnetmanager method)": [[284, "ParallelNetManager.create_cell"]], "gatherspikes() (parallelnetmanager method)": [[284, "ParallelNetManager.gatherspikes"]], "gid_exists() (parallelnetmanager method)": [[284, "ParallelNetManager.gid_exists"]], "nc_append() (parallelnetmanager method)": [[284, "ParallelNetManager.nc_append"]], "pcontinue() (parallelnetmanager method)": [[284, "ParallelNetManager.pcontinue"]], "pinit() (parallelnetmanager method)": [[284, "ParallelNetManager.pinit"]], "prstat() (parallelnetmanager method)": [[284, "ParallelNetManager.prstat"]], "prun() (parallelnetmanager method)": [[284, "ParallelNetManager.prun"]], "psolve() (parallelnetmanager method)": [[284, "ParallelNetManager.psolve"]], "register_cell() (parallelnetmanager method)": [[284, "ParallelNetManager.register_cell"]], "round_robin() (parallelnetmanager method)": [[284, "ParallelNetManager.round_robin"]], "set_gid2node() (parallelnetmanager method)": [[284, "ParallelNetManager.set_gid2node"]], "spike_record() (parallelnetmanager method)": [[284, "ParallelNetManager.spike_record"]], "splitcell() (parallelnetmanager method)": [[284, "ParallelNetManager.splitcell"]], "want_all_spikes() (parallelnetmanager method)": [[284, "ParallelNetManager.want_all_spikes"]], "_ref_concentration (rxd.node.node property)": [[286, "rxd.node.Node._ref_concentration"]], "_ref_concentration (rxd.nodelist.nodelist property)": [[286, "rxd.nodelist.NodeList._ref_concentration"]], "_ref_molecules (rxd.node.node property)": [[286, "rxd.node.Node._ref_molecules"]], "_ref_value (rxd.node.node property)": [[286, "rxd.node.Node._ref_value"]], "_ref_value (rxd.nodelist.nodelist property)": [[286, "rxd.nodelist.NodeList._ref_value"]], "b_rate (rxd.reaction property)": [[286, "rxd.Reaction.b_rate"]], "charge (rxd.species property)": [[286, "rxd.Species.charge"]], "concentration (rxd.node.node property)": [[286, "rxd.node.Node.concentration"]], "concentration (rxd.nodelist.nodelist property)": [[286, "rxd.nodelist.NodeList.concentration"]], "concentrations() (rxd.species method)": [[286, "rxd.Species.concentrations"]], "d (rxd.node.node property)": [[286, "rxd.node.Node.d"]], "defined_on_region() (rxd.species method)": [[286, "rxd.Species.defined_on_region"]], "diff (rxd.nodelist.nodelist property)": [[286, "rxd.nodelist.NodeList.diff"]], "f_rate (rxd.reaction property)": [[286, "rxd.Reaction.f_rate"]], "include_flux() (rxd.node.node method)": [[286, "rxd.node.Node.include_flux"]], "include_flux() (rxd.nodelist.nodelist method)": [[286, "rxd.nodelist.NodeList.include_flux"]], "indices() (rxd.species method)": [[286, "rxd.Species.indices"]], "inside (rxd attribute)": [[286, "rxd.inside"]], "membrane (rxd attribute)": [[286, "rxd.membrane"]], "molecules (rxd.node.node property)": [[286, "rxd.node.Node.molecules"]], "name (rxd.species property)": [[286, "rxd.Species.name"]], "nodes (rxd.species property)": [[286, "rxd.Species.nodes"]], "re_init() (rxd.species method)": [[286, "rxd.Species.re_init"]], "region (rxd.node.node property)": [[286, "rxd.node.Node.region"]], "region (rxd.nodelist.nodelist property)": [[286, "rxd.nodelist.NodeList.region"]], "regions (rxd.species property)": [[286, "rxd.Species.regions"]], "rxd.distributedboundary (built-in class)": [[286, "rxd.DistributedBoundary"]], "rxd.extracellular (built-in class)": [[286, "rxd.Extracellular"]], "rxd.fixedcrosssection (built-in class)": [[286, "rxd.FixedCrossSection"]], "rxd.fixedperimeter (built-in class)": [[286, "rxd.FixedPerimeter"]], "rxd.fractionalvolume (built-in class)": [[286, "rxd.FractionalVolume"]], "rxd.multicompartmentreaction (built-in class)": [[286, "rxd.MultiCompartmentReaction"]], "rxd.parameter (built-in class)": [[286, "rxd.Parameter"]], "rxd.rate (built-in class)": [[286, "rxd.Rate"]], "rxd.reaction (built-in class)": [[286, "rxd.Reaction"]], "rxd.region (built-in class)": [[286, "rxd.Region"]], "rxd.rxdexception (built-in class)": [[286, "rxd.RxDException"]], "rxd.scalableborder (built-in class)": [[286, "rxd.ScalableBorder"]], "rxd.shell (built-in class)": [[286, "rxd.Shell"]], "rxd.species (built-in class)": [[286, "rxd.Species"]], "rxd.state (built-in class)": [[286, "rxd.State"]], "rxd.export.sbml()": [[286, "rxd.export.sbml"]], "rxd.node.node (built-in class)": [[286, "rxd.node.Node"]], "rxd.node.node1d (built-in class)": [[286, "rxd.node.Node1D"]], "rxd.node.node3d (built-in class)": [[286, "rxd.node.Node3D"]], "rxd.node.nodeextracellular (built-in class)": [[286, "rxd.node.NodeExtracellular"]], "rxd.nodelist.nodelist (built-in class)": [[286, "rxd.nodelist.NodeList"]], "satisfies() (rxd.node.node method)": [[286, "rxd.node.Node.satisfies"]], "satisfies() (rxd.node.node1d method)": [[286, "rxd.node.Node1D.satisfies"]], "satisfies() (rxd.node.node3d method)": [[286, "rxd.node.Node3D.satisfies"]], "satisfies() (rxd.node.nodeextracellular method)": [[286, "rxd.node.NodeExtracellular.satisfies"]], "sec (rxd.node.node1d property)": [[286, "rxd.node.Node1D.sec"]], "sec (rxd.node.node3d property)": [[286, "rxd.node.Node3D.sec"]], "segment (rxd.node.node1d property)": [[286, "rxd.node.Node1D.segment"]], "segment (rxd.node.node3d property)": [[286, "rxd.node.Node3D.segment"]], "segment (rxd.nodelist.nodelist property)": [[286, "rxd.nodelist.NodeList.segment"]], "species (rxd.node.node property)": [[286, "rxd.node.Node.species"]], "species (rxd.nodelist.nodelist property)": [[286, "rxd.nodelist.NodeList.species"]], "states (rxd.species property)": [[286, "rxd.Species.states"]], "surface_area (rxd.node.node1d property)": [[286, "rxd.node.Node1D.surface_area"]], "surface_area (rxd.node.node3d property)": [[286, "rxd.node.Node3D.surface_area"]], "surface_area (rxd.nodelist.nodelist property)": [[286, "rxd.nodelist.NodeList.surface_area"]], "value (rxd.node.node property)": [[286, "rxd.node.Node.value"]], "value (rxd.nodelist.nodelist property)": [[286, "rxd.nodelist.NodeList.value"]], "value_to_grid() (rxd.nodelist.nodelist method)": [[286, "rxd.nodelist.NodeList.value_to_grid"]], "volume (rxd.node.node property)": [[286, "rxd.node.Node.volume"]], "volume (rxd.nodelist.nodelist property)": [[286, "rxd.nodelist.NodeList.volume"]], "x (rxd.node.node1d property)": [[286, "rxd.node.Node1D.x"]], "x (rxd.nodelist.nodelist property)": [[286, "rxd.nodelist.NodeList.x"]], "x3d (rxd.node.node property)": [[286, "rxd.node.Node.x3d"]], "y3d (rxd.node.node property)": [[286, "rxd.node.Node.y3d"]], "z3d (rxd.node.node property)": [[286, "rxd.node.Node.z3d"]], "rxdmath.acos()": [[287, "rxdmath.acos"]], "rxdmath.acosh()": [[287, "rxdmath.acosh"]], "rxdmath.asin()": [[287, "rxdmath.asin"]], "rxdmath.asinh()": [[287, "rxdmath.asinh"]], "rxdmath.atan()": [[287, "rxdmath.atan"]], "rxdmath.atan2()": [[287, "rxdmath.atan2"]], "rxdmath.ceil()": [[287, "rxdmath.ceil"]], "rxdmath.copysign()": [[287, "rxdmath.copysign"]], "rxdmath.cos()": [[287, "rxdmath.cos"]], "rxdmath.cosh()": [[287, "rxdmath.cosh"]], "rxdmath.degrees()": [[287, "rxdmath.degrees"]], "rxdmath.erf()": [[287, "rxdmath.erf"]], "rxdmath.erfc()": [[287, "rxdmath.erfc"]], "rxdmath.exp()": [[287, "rxdmath.exp"]], "rxdmath.expm1()": [[287, "rxdmath.expm1"]], "rxdmath.fabs()": [[287, "rxdmath.fabs"]], "rxdmath.factorial()": [[287, "rxdmath.factorial"]], "rxdmath.floor()": [[287, "rxdmath.floor"]], "rxdmath.fmod()": [[287, "rxdmath.fmod"]], "rxdmath.gamma()": [[287, "rxdmath.gamma"]], "rxdmath.lgamma()": [[287, "rxdmath.lgamma"]], "rxdmath.log()": [[287, "rxdmath.log"]], "rxdmath.log10()": [[287, "rxdmath.log10"]], "rxdmath.log1p()": [[287, "rxdmath.log1p"]], "rxdmath.pow()": [[287, "rxdmath.pow"]], "rxdmath.radians()": [[287, "rxdmath.radians"]], "rxdmath.sin()": [[287, "rxdmath.sin"]], "rxdmath.sinh()": [[287, "rxdmath.sinh"]], "rxdmath.sqrt()": [[287, "rxdmath.sqrt"]], "rxdmath.tan()": [[287, "rxdmath.tan"]], "rxdmath.tanh()": [[287, "rxdmath.tanh"]], "rxdmath.trunc()": [[287, "rxdmath.trunc"]], "rxdmath.vtrap()": [[287, "rxdmath.vtrap"]], "statetransitionevent (built-in class)": [[288, "StateTransitionEvent"]], "state() (statetransitionevent method)": [[288, "StateTransitionEvent.state"]], "transition() (statetransitionevent method)": [[288, "StateTransitionEvent.transition"]], "section (built-in class)": [[289, "Section"]], "section.nseg (built-in variable)": [[289, "Section.nseg"]], "cell() (section method)": [[289, "Section.cell"]], "connect() (section method)": [[289, "Section.connect"]], "disconnect() (section method)": [[289, "Section.disconnect"]], "hname() (section method)": [[289, "Section.hname"]], "name() (section method)": [[289, "Section.name"]], "orientation() (section method)": [[289, "Section.orientation"]], "parentseg() (section method)": [[289, "Section.parentseg"]], "subtree() (section method)": [[289, "Section.subtree"]], "wholetree() (section method)": [[289, "Section.wholetree"]], "l (built-in variable)": [[290, "L"]], "ra (built-in variable)": [[290, "Ra"]], "diam (built-in variable)": [[290, "diam"]], "diam_changed (built-in variable)": [[290, "diam_changed"]], "sectionlist (built-in class)": [[291, "SectionList"]], "allroots() (sectionlist method)": [[291, "SectionList.allroots"]], "append() (sectionlist method)": [[291, "SectionList.append"]], "children() (sectionlist method)": [[291, "SectionList.children"]], "printnames() (sectionlist method)": [[291, "SectionList.printnames"]], "remove() (sectionlist method)": [[291, "SectionList.remove"]], "subtree() (sectionlist method)": [[291, "SectionList.subtree"]], "unique() (sectionlist method)": [[291, "SectionList.unique"]], "wholetree() (sectionlist method)": [[291, "SectionList.wholetree"]], "sectionref (built-in class)": [[292, "SectionRef"]], "sectionref.child (built-in variable)": [[292, "SectionRef.child"]], "sectionref.parent (built-in variable)": [[292, "SectionRef.parent"]], "sectionref.root (built-in variable)": [[292, "SectionRef.root"]], "sectionref.sec (built-in variable)": [[292, "SectionRef.sec"]], "sectionref.trueparent (built-in variable)": [[292, "SectionRef.trueparent"]], "exists() (sectionref method)": [[292, "SectionRef.exists"]], "has_parent() (sectionref method)": [[292, "SectionRef.has_parent"]], "has_trueparent() (sectionref method)": [[292, "SectionRef.has_trueparent"]], "is_cas() (sectionref method)": [[292, "SectionRef.is_cas"]], "nchild() (sectionref method)": [[292, "SectionRef.nchild"]], "deck (built-in class)": [[297, "Deck"]], "hbox (built-in class)": [[297, "HBox"]], "vbox (built-in class)": [[297, "VBox"]], "adjust() (vbox method)": [[297, "VBox.adjust"]], "adjuster() (vbox method)": [[297, "VBox.adjuster"]], "dialog() (vbox method)": [[297, "VBox.dialog"]], "dismiss_action() (vbox method)": [[297, "VBox.dismiss_action"]], "flip_to() (deck method)": [[297, "Deck.flip_to"]], "full_request() (vbox method)": [[297, "VBox.full_request"]], "intercept() (deck method)": [[297, "Deck.intercept"]], "intercept() (vbox method)": [[297, "VBox.intercept"]], "ismapped() (vbox method)": [[297, "VBox.ismapped"]], "map() (deck method)": [[297, "Deck.map"]], "map() (vbox method)": [[297, "VBox.map"]], "move_last() (deck method)": [[297, "Deck.move_last"]], "priority() (vbox method)": [[297, "VBox.priority"]], "ref() (vbox method)": [[297, "VBox.ref"]], "remove() (deck method)": [[297, "Deck.remove"]], "remove_last() (deck method)": [[297, "Deck.remove_last"]], "save() (deck method)": [[297, "Deck.save"]], "save() (vbox method)": [[297, "VBox.save"]], "size() (vbox method)": [[297, "VBox.size"]], "unmap() (deck method)": [[297, "Deck.unmap"]], "unmap() (vbox method)": [[297, "VBox.unmap"]], "list (built-in class)": [[298, "List"]], "accept_action() (list method)": [[298, "List.accept_action"]], "append() (list method)": [[298, "List.append"]], "browser() (list method)": [[298, "List.browser"]], "count() (list method)": [[298, "List.count"]], "index() (list method)": [[298, "List.index"]], "insrt() (list method)": [[298, "List.insrt"]], "o() (list method)": [[298, "List.o"]], "object() (list method)": [[298, "List.object"]], "prepend() (list method)": [[298, "List.prepend"]], "remove() (list method)": [[298, "List.remove"]], "remove_all() (list method)": [[298, "List.remove_all"]], "scroll_pos() (list method)": [[298, "List.scroll_pos"]], "select() (list method)": [[298, "List.select"]], "select_action() (list method)": [[298, "List.select_action"]], "selected() (list method)": [[298, "List.selected"]], "pwmanager (built-in class)": [[301, "PWManager"]], "close() (pwmanager method)": [[301, "PWManager.close"]], "count() (pwmanager method)": [[301, "PWManager.count"]], "deco() (pwmanager method)": [[301, "PWManager.deco"]], "deiconify() (pwmanager method)": [[301, "PWManager.deiconify"]], "group() (pwmanager method)": [[301, "PWManager.group"]], "hide() (pwmanager method)": [[301, "PWManager.hide"]], "iconify() (pwmanager method)": [[301, "PWManager.iconify"]], "is_mapped() (pwmanager method)": [[301, "PWManager.is_mapped"]], "landscape() (pwmanager method)": [[301, "PWManager.landscape"]], "leader() (pwmanager method)": [[301, "PWManager.leader"]], "manager() (pwmanager method)": [[301, "PWManager.manager"]], "map() (pwmanager method)": [[301, "PWManager.map"]], "name() (pwmanager method)": [[301, "PWManager.name"]], "paper_place() (pwmanager method)": [[301, "PWManager.paper_place"]], "printfile() (pwmanager method)": [[301, "PWManager.printfile"]], "save() (pwmanager method)": [[301, "PWManager.save"]], "scale() (pwmanager method)": [[301, "PWManager.scale"]], "snap() (pwmanager method)": [[301, "PWManager.snap"]], "window_place() (pwmanager method)": [[301, "PWManager.window_place"]], "sectionbrowser (built-in class)": [[302, "SectionBrowser"]], "accept_action() (sectionbrowser method)": [[302, "SectionBrowser.accept_action"]], "select() (sectionbrowser method)": [[302, "SectionBrowser.select"]], "select_action() (sectionbrowser method)": [[302, "SectionBrowser.select_action"]], "symchooser (built-in class)": [[303, "SymChooser"]], "run() (symchooser method)": [[303, "SymChooser.run"]], "text() (symchooser method)": [[303, "SymChooser.text"]], "texteditor (built-in class)": [[304, "TextEditor"]], "map() (texteditor method)": [[304, "TextEditor.map"]], "readonly() (texteditor method)": [[304, "TextEditor.readonly"]], "text() (texteditor method)": [[304, "TextEditor.text"]], "valuefieldeditor (built-in class)": [[306, "ValueFieldEditor"]], "default() (valuefieldeditor method)": [[306, "ValueFieldEditor.default"]], "file (built-in class)": [[313, "File"]], "aopen() (file method)": [[313, "File.aopen"]], "chooser() (file method)": [[313, "File.chooser"]], "close() (file method)": [[313, "File.close"]], "dir() (file method)": [[313, "File.dir"]], "eof() (file method)": [[313, "File.eof"]], "flush() (file method)": [[313, "File.flush"]], "getname() (file method)": [[313, "File.getname"]], "gets() (file method)": [[313, "File.gets"]], "isopen() (file method)": [[313, "File.isopen"]], "mktemp() (file method)": [[313, "File.mktemp"]], "printf() (file method)": [[313, "File.printf"]], "ropen() (file method)": [[313, "File.ropen"]], "scanstr() (file method)": [[313, "File.scanstr"]], "scanvar() (file method)": [[313, "File.scanvar"]], "seek() (file method)": [[313, "File.seek"]], "tell() (file method)": [[313, "File.tell"]], "unlink() (file method)": [[313, "File.unlink"]], "vread() (file method)": [[313, "File.vread"]], "vwrite() (file method)": [[313, "File.vwrite"]], "wopen() (file method)": [[313, "File.wopen"]], "xopen() (file method)": [[313, "File.xopen"]], "hoc_stdout()": [[315, "hoc_stdout"]], "guimath (built-in class)": [[321, "GUIMath"]], "d2line() (guimath method)": [[321, "GUIMath.d2line"]], "d2line_seg() (guimath method)": [[321, "GUIMath.d2line_seg"]], "feround() (guimath method)": [[321, "GUIMath.feround"]], "inside() (guimath method)": [[321, "GUIMath.inside"]], "matrix (built-in class)": [[322, "Matrix"]], "matrix.x (built-in variable)": [[322, "Matrix.x"]], "add() (matrix method)": [[322, "Matrix.add"]], "bcopy() (matrix method)": [[322, "Matrix.bcopy"]], "c() (matrix method)": [[322, "Matrix.c"]], "det() (matrix method)": [[322, "Matrix.det"]], "exp() (matrix method)": [[322, "Matrix.exp"]], "fprint() (matrix method)": [[322, "Matrix.fprint"]], "from_vector() (matrix method)": [[322, "Matrix.from_vector"]], "getcol() (matrix method)": [[322, "Matrix.getcol"]], "getdiag() (matrix method)": [[322, "Matrix.getdiag"]], "getrow() (matrix method)": [[322, "Matrix.getrow"]], "getval() (matrix method)": [[322, "Matrix.getval"]], "ident() (matrix method)": [[322, "Matrix.ident"]], "inverse() (matrix method)": [[322, "Matrix.inverse"]], "mulm() (matrix method)": [[322, "Matrix.mulm"]], "muls() (matrix method)": [[322, "Matrix.muls"]], "mulv() (matrix method)": [[322, "Matrix.mulv"]], "ncol() (matrix method)": [[322, "Matrix.ncol"]], "nrow() (matrix method)": [[322, "Matrix.nrow"]], "pow() (matrix method)": [[322, "Matrix.pow"]], "printf() (matrix method)": [[322, "Matrix.printf"]], "resize() (matrix method)": [[322, "Matrix.resize"]], "scanf() (matrix method)": [[322, "Matrix.scanf"]], "setcol() (matrix method)": [[322, "Matrix.setcol"]], "setdiag() (matrix method)": [[322, "Matrix.setdiag"]], "setrow() (matrix method)": [[322, "Matrix.setrow"]], "setval() (matrix method)": [[322, "Matrix.setval"]], "solv() (matrix method)": [[322, "Matrix.solv"]], "spgetrowval() (matrix method)": [[322, "Matrix.spgetrowval"]], "sprowlen() (matrix method)": [[322, "Matrix.sprowlen"]], "svd() (matrix method)": [[322, "Matrix.svd"]], "symmeig() (matrix method)": [[322, "Matrix.symmeig"]], "to_vector() (matrix method)": [[322, "Matrix.to_vector"]], "transpose() (matrix method)": [[322, "Matrix.transpose"]], "zero() (matrix method)": [[322, "Matrix.zero"]], "float_epsilon (built-in variable)": [[324, "float_epsilon"]], "acg() (random method)": [[325, "Random.ACG"]], "mcellran4() (random method)": [[325, "Random.MCellRan4"]], "mlcg() (random method)": [[325, "Random.MLCG"]], "random (built-in class)": [[325, "Random"]], "random123() (random method)": [[325, "Random.Random123"]], "random123_globalindex() (random method)": [[325, "Random.Random123_globalindex"]], "binomial() (random method)": [[325, "Random.binomial"]], "discunif() (random method)": [[325, "Random.discunif"]], "erlang() (random method)": [[325, "Random.erlang"]], "geometric() (random method)": [[325, "Random.geometric"]], "hypergeo() (random method)": [[325, "Random.hypergeo"]], "lognormal() (random method)": [[325, "Random.lognormal"]], "negexp() (random method)": [[325, "Random.negexp"]], "normal() (random method)": [[325, "Random.normal"]], "play() (random method)": [[325, "Random.play"]], "poisson() (random method)": [[325, "Random.poisson"]], "repick() (random method)": [[325, "Random.repick"]], "seq() (random method)": [[325, "Random.seq"]], "uniform() (random method)": [[325, "Random.uniform"]], "weibull() (random method)": [[325, "Random.weibull"]], "vector (built-in class)": [[326, "Vector"]], "vector.x (built-in variable)": [[326, "Vector.x"]], "abs() (vector method)": [[326, "Vector.abs"]], "add() (vector method)": [[326, "Vector.add"]], "addrand() (vector method)": [[326, "Vector.addrand"]], "append() (vector method)": [[326, "Vector.append"]], "apply() (vector method)": [[326, "Vector.apply"]], "as_numpy() (vector method)": [[326, "Vector.as_numpy"]], "at() (vector method)": [[326, "Vector.at"]], "buffer_size() (vector method)": [[326, "Vector.buffer_size"]], "c() (vector method)": [[326, "Vector.c"]], "cl() (vector method)": [[326, "Vector.cl"]], "contains() (vector method)": [[326, "Vector.contains"]], "convlv() (vector method)": [[326, "Vector.convlv"]], "copy() (vector method)": [[326, "Vector.copy"]], "correl() (vector method)": [[326, "Vector.correl"]], "deriv() (vector method)": [[326, "Vector.deriv"]], "div() (vector method)": [[326, "Vector.div"]], "dot() (vector method)": [[326, "Vector.dot"]], "eq() (vector method)": [[326, "Vector.eq"]], "fft() (vector method)": [[326, "Vector.fft"]], "fill() (vector method)": [[326, "Vector.fill"]], "filter() (vector method)": [[326, "Vector.filter"]], "fit() (vector method)": [[326, "Vector.fit"]], "floor() (vector method)": [[326, "Vector.floor"]], "fread() (vector method)": [[326, "Vector.fread"]], "from_double() (vector method)": [[326, "Vector.from_double"]], "from_python() (vector method)": [[326, "Vector.from_python"]], "fwrite() (vector method)": [[326, "Vector.fwrite"]], "get() (vector method)": [[326, "Vector.get"]], "hist() (vector method)": [[326, "Vector.hist"]], "histogram() (vector method)": [[326, "Vector.histogram"]], "ind() (vector method)": [[326, "Vector.ind"]], "index() (vector method)": [[326, "Vector.index"]], "indgen() (vector method)": [[326, "Vector.indgen"]], "indvwhere() (vector method)": [[326, "Vector.indvwhere"]], "indwhere() (vector method)": [[326, "Vector.indwhere"]], "inf() (vector method)": [[326, "Vector.inf"]], "insrt() (vector method)": [[326, "Vector.insrt"]], "integral() (vector method)": [[326, "Vector.integral"]], "interpolate() (vector method)": [[326, "Vector.interpolate"]], "label() (vector method)": [[326, "Vector.label"]], "line() (vector method)": [[326, "Vector.line"]], "log() (vector method)": [[326, "Vector.log"]], "log10() (vector method)": [[326, "Vector.log10"]], "mag() (vector method)": [[326, "Vector.mag"]], "mark() (vector method)": [[326, "Vector.mark"]], "max() (vector method)": [[326, "Vector.max"]], "max_ind() (vector method)": [[326, "Vector.max_ind"]], "mean() (vector method)": [[326, "Vector.mean"]], "meansqerr() (vector method)": [[326, "Vector.meansqerr"]], "medfltr() (vector method)": [[326, "Vector.medfltr"]], "median() (vector method)": [[326, "Vector.median"]], "min() (vector method)": [[326, "Vector.min"]], "min_ind() (vector method)": [[326, "Vector.min_ind"]], "mul() (vector method)": [[326, "Vector.mul"]], "play() (vector method)": [[326, "Vector.play"]], "play_remove() (vector method)": [[326, "Vector.play_remove"]], "plot() (vector method)": [[326, "Vector.plot"]], "ploterr() (vector method)": [[326, "Vector.ploterr"]], "pow() (vector method)": [[326, "Vector.pow"]], "printf() (vector method)": [[326, "Vector.printf"]], "psth() (vector method)": [[326, "Vector.psth"]], "rebin() (vector method)": [[326, "Vector.rebin"]], "record() (vector method)": [[326, "Vector.record"]], "reduce() (vector method)": [[326, "Vector.reduce"]], "remove() (vector method)": [[326, "Vector.remove"]], "resample() (vector method)": [[326, "Vector.resample"]], "resize() (vector method)": [[326, "Vector.resize"]], "reverse() (vector method)": [[326, "Vector.reverse"]], "rotate() (vector method)": [[326, "Vector.rotate"]], "scale() (vector method)": [[326, "Vector.scale"]], "scanf() (vector method)": [[326, "Vector.scanf"]], "scantil() (vector method)": [[326, "Vector.scantil"]], "set() (vector method)": [[326, "Vector.set"]], "setrand() (vector method)": [[326, "Vector.setrand"]], "sin() (vector method)": [[326, "Vector.sin"]], "size() (vector method)": [[326, "Vector.size"]], "smhist() (vector method)": [[326, "Vector.smhist"]], "sort() (vector method)": [[326, "Vector.sort"]], "sortindex() (vector method)": [[326, "Vector.sortindex"]], "spctrm() (vector method)": [[326, "Vector.spctrm"]], "spikebin() (vector method)": [[326, "Vector.spikebin"]], "sqrt() (vector method)": [[326, "Vector.sqrt"]], "stderr() (vector method)": [[326, "Vector.stderr"]], "stdev() (vector method)": [[326, "Vector.stdev"]], "sub() (vector method)": [[326, "Vector.sub"]], "sum() (vector method)": [[326, "Vector.sum"]], "sumgauss() (vector method)": [[326, "Vector.sumgauss"]], "sumsq() (vector method)": [[326, "Vector.sumsq"]], "tanh() (vector method)": [[326, "Vector.tanh"]], "to_python() (vector method)": [[326, "Vector.to_python"]], "trigavg() (vector method)": [[326, "Vector.trigavg"]], "var() (vector method)": [[326, "Vector.var"]], "vread() (vector method)": [[326, "Vector.vread"]], "vwrite() (vector method)": [[326, "Vector.vwrite"]], "where() (vector method)": [[326, "Vector.where"]], "mechanismstandard (built-in class)": [[328, "MechanismStandard"]], "_in() (mechanismstandard method)": [[328, "MechanismStandard._in"]], "action() (mechanismstandard method)": [[328, "MechanismStandard.action"]], "count() (mechanismstandard method)": [[328, "MechanismStandard.count"]], "get() (mechanismstandard method)": [[328, "MechanismStandard.get"]], "name() (mechanismstandard method)": [[328, "MechanismStandard.name"]], "out() (mechanismstandard method)": [[328, "MechanismStandard.out"]], "panel() (mechanismstandard method)": [[328, "MechanismStandard.panel"]], "save() (mechanismstandard method)": [[328, "MechanismStandard.save"]], "set() (mechanismstandard method)": [[328, "MechanismStandard.set"]], "this (built-in variable)": [[331, "this"]], "pointer (built-in class)": [[333, "Pointer"]], "assign() (pointer method)": [[333, "Pointer.assign"]], "s() (pointer method)": [[333, "Pointer.s"]], "val (pointer attribute)": [[333, "Pointer.val"]], "ptrvector (built-in class)": [[334, "PtrVector"]], "gather() (ptrvector method)": [[334, "PtrVector.gather"]], "getval() (ptrvector method)": [[334, "PtrVector.getval"]], "label() (ptrvector method)": [[334, "PtrVector.label"]], "plot() (ptrvector method)": [[334, "PtrVector.plot"]], "pset() (ptrvector method)": [[334, "PtrVector.pset"]], "ptr_update_callback() (ptrvector method)": [[334, "PtrVector.ptr_update_callback"]], "resize() (ptrvector method)": [[334, "PtrVector.resize"]], "scatter() (ptrvector method)": [[334, "PtrVector.scatter"]], "setval() (ptrvector method)": [[334, "PtrVector.setval"]], "size() (ptrvector method)": [[334, "PtrVector.size"]], "hoc_ac_ (built-in variable)": [[335, "hoc_ac_"]], "hoc_cross_x_ (built-in variable)": [[335, "hoc_cross_x_"]], "hoc_cross_y_ (built-in variable)": [[335, "hoc_cross_y_"]], "hoc_obj_ (built-in variable)": [[335, "hoc_obj_"]], "pythonobject (built-in class)": [[337, "PythonObject"]], "cas() (neuron.h method)": [[337, "neuron.h.cas"]], "execute() (neuron.hoc method)": [[337, "neuron.hoc.execute"]], "hoc_ac() (neuron.hoc method)": [[337, "neuron.hoc.hoc_ac"]], "neuron.h.section (built-in class)": [[337, "neuron.h.Section"]], "neuron.hoc.hocobject (built-in class)": [[337, "neuron.hoc.HocObject"]], "stringfunctions (built-in class)": [[340, "StringFunctions"]], "alias() (stringfunctions method)": [[340, "StringFunctions.alias"]], "alias_list() (stringfunctions method)": [[340, "StringFunctions.alias_list"]], "head() (stringfunctions method)": [[340, "StringFunctions.head"]], "is_artificial() (stringfunctions method)": [[340, "StringFunctions.is_artificial"]], "is_name() (stringfunctions method)": [[340, "StringFunctions.is_name"]], "is_point_process() (stringfunctions method)": [[340, "StringFunctions.is_point_process"]], "left() (stringfunctions method)": [[340, "StringFunctions.left"]], "len() (stringfunctions method)": [[340, "StringFunctions.len"]], "references() (stringfunctions method)": [[340, "StringFunctions.references"]], "right() (stringfunctions method)": [[340, "StringFunctions.right"]], "substr() (stringfunctions method)": [[340, "StringFunctions.substr"]], "tail() (stringfunctions method)": [[340, "StringFunctions.tail"]], "timer (built-in class)": [[343, "Timer"]], "end() (timer method)": [[343, "Timer.end"]], "seconds() (timer method)": [[343, "Timer.seconds"]], "start() (timer method)": [[343, "Timer.start"]], "bbsavestate (built-in class)": [[345, "BBSaveState"]], "ignore() (bbsavestate method)": [[345, "BBSaveState.ignore"]], "restore_test() (bbsavestate method)": [[345, "BBSaveState.restore_test"]], "save_test() (bbsavestate method)": [[345, "BBSaveState.save_test"]], "vector_play_init() (bbsavestate method)": [[345, "BBSaveState.vector_play_init"]], "cvode (built-in class)": [[346, "CVode"]], "acor() (cvode method)": [[346, "CVode.acor"]], "active() (cvode method)": [[346, "CVode.active"]], "atol() (cvode method)": [[346, "CVode.atol"]], "atolscale() (cvode method)": [[346, "CVode.atolscale"]], "cache_efficient() (cvode method)": [[346, "CVode.cache_efficient"]], "condition_order() (cvode method)": [[346, "CVode.condition_order"]], "current_method() (cvode method)": [[346, "CVode.current_method"]], "dae_init_dteps() (cvode method)": [[346, "CVode.dae_init_dteps"]], "debug_event() (cvode method)": [[346, "CVode.debug_event"]], "diam_change_count() (cvode method)": [[346, "CVode.diam_change_count"]], "dstates() (cvode method)": [[346, "CVode.dstates"]], "error_weights() (cvode method)": [[346, "CVode.error_weights"]], "event() (cvode method)": [[346, "CVode.event"]], "event_queue_info() (cvode method)": [[346, "CVode.event_queue_info"]], "extra_scatter_gather() (cvode method)": [[346, "CVode.extra_scatter_gather"]], "extra_scatter_gather_remove() (cvode method)": [[346, "CVode.extra_scatter_gather_remove"]], "f() (cvode method)": [[346, "CVode.f"]], "fixed_step() (cvode method)": [[346, "CVode.fixed_step"]], "jacobian() (cvode method)": [[346, "CVode.jacobian"]], "maxorder() (cvode method)": [[346, "CVode.maxorder"]], "maxstep() (cvode method)": [[346, "CVode.maxstep"]], "minstep() (cvode method)": [[346, "CVode.minstep"]], "netconlist() (cvode method)": [[346, "CVode.netconlist"]], "order() (cvode method)": [[346, "CVode.order"]], "print_event_queue() (cvode method)": [[346, "CVode.print_event_queue"]], "queue_mode() (cvode method)": [[346, "CVode.queue_mode"]], "re_init() (cvode method)": [[346, "CVode.re_init"]], "record() (cvode method)": [[346, "CVode.record"]], "record_remove() (cvode method)": [[346, "CVode.record_remove"]], "rtol() (cvode method)": [[346, "CVode.rtol"]], "simgraph_remove() (cvode method)": [[346, "CVode.simgraph_remove"]], "solve() (cvode method)": [[346, "CVode.solve"]], "spike_stat() (cvode method)": [[346, "CVode.spike_stat"]], "state_magnitudes() (cvode method)": [[346, "CVode.state_magnitudes"]], "statename() (cvode method)": [[346, "CVode.statename"]], "states() (cvode method)": [[346, "CVode.states"]], "statistics() (cvode method)": [[346, "CVode.statistics"]], "stiff() (cvode method)": [[346, "CVode.stiff"]], "store_events() (cvode method)": [[346, "CVode.store_events"]], "structure_change_count() (cvode method)": [[346, "CVode.structure_change_count"]], "use_daspk() (cvode method)": [[346, "CVode.use_daspk"]], "use_fast_imem() (cvode method)": [[346, "CVode.use_fast_imem"]], "use_local_dt() (cvode method)": [[346, "CVode.use_local_dt"]], "use_long_double() (cvode method)": [[346, "CVode.use_long_double"]], "use_mxb() (cvode method)": [[346, "CVode.use_mxb"]], "ygather() (cvode method)": [[346, "CVode.ygather"]], "yscatter() (cvode method)": [[346, "CVode.yscatter"]], "finitializehandler (built-in class)": [[349, "FInitializeHandler"]], "allprint() (finitializehandler method)": [[349, "FInitializeHandler.allprint"]], "celsius (built-in variable)": [[349, "celsius"]], "clamp_resist (built-in variable)": [[349, "clamp_resist"]], "dt (built-in variable)": [[349, "dt"]], "nrnunit_use_legacy()": [[349, "nrnunit_use_legacy"]], "secondorder (built-in variable)": [[349, "secondorder"]], "stoprun (built-in variable)": [[349, "stoprun"]], "t (built-in variable)": [[349, "t"]], "savestate (built-in class)": [[351, "SaveState"]], "fread() (savestate method)": [[351, "SaveState.fread"]], "fwrite() (savestate method)": [[351, "SaveState.fwrite"]], "restore() (savestate method)": [[351, "SaveState.restore"]], "save() (savestate method)": [[351, "SaveState.save"]], "writehoc() (savestate method)": [[351, "SaveState.writehoc"]], "glyph (built-in class)": [[354, "Glyph"]], "circle() (glyph method)": [[354, "Glyph.circle"]], "close() (glyph method)": [[354, "Glyph.close"]], "cpt() (glyph method)": [[354, "Glyph.cpt"]], "curve() (glyph method)": [[354, "Glyph.curve"]], "erase() (glyph method)": [[354, "Glyph.erase"]], "fill() (glyph method)": [[354, "Glyph.fill"]], "gif() (glyph method)": [[354, "Glyph.gif"]], "glyph() (glyph method)": [[354, "Glyph.glyph"]], "l() (glyph method)": [[354, "Glyph.l"]], "label() (glyph method)": [[354, "Glyph.label"]], "m() (glyph method)": [[354, "Glyph.m"]], "path() (glyph method)": [[354, "Glyph.path"]], "s() (glyph method)": [[354, "Glyph.s"]], "graph (built-in class)": [[355, "Graph"]], "addexpr() (graph method)": [[355, "Graph.addexpr"]], "addobject() (graph method)": [[355, "Graph.addobject"]], "addvar() (graph method)": [[355, "Graph.addvar"]], "align() (graph method)": [[355, "Graph.align"]], "begin() (graph method)": [[355, "Graph.begin"]], "beginline() (graph method)": [[355, "Graph.beginline"]], "brush() (graph method)": [[355, "Graph.brush"]], "color() (graph method)": [[355, "Graph.color"]], "crosshair_action() (graph method)": [[355, "Graph.crosshair_action"]], "erase() (graph method)": [[355, "Graph.erase"]], "erase_all() (graph method)": [[355, "Graph.erase_all"]], "exec_menu() (graph method)": [[355, "Graph.exec_menu"]], "family() (graph method)": [[355, "Graph.family"]], "fastflush() (graph method)": [[355, "Graph.fastflush"]], "fixed() (graph method)": [[355, "Graph.fixed"]], "flush() (graph method)": [[355, "Graph.flush"]], "getline() (graph method)": [[355, "Graph.getline"]], "gif() (graph method)": [[355, "Graph.gif"]], "glyph() (graph method)": [[355, "Graph.glyph"]], "label() (graph method)": [[355, "Graph.label"]], "line() (graph method)": [[355, "Graph.line"]], "line_info() (graph method)": [[355, "Graph.line_info"]], "mark() (graph method)": [[355, "Graph.mark"]], "menu_action() (graph method)": [[355, "Graph.menu_action"]], "menu_remove() (graph method)": [[355, "Graph.menu_remove"]], "menu_tool() (graph method)": [[355, "Graph.menu_tool"]], "plot() (graph method)": [[355, "Graph.plot"]], "printfile() (graph method)": [[355, "Graph.printfile"]], "relative() (graph method)": [[355, "Graph.relative"]], "save_name() (graph method)": [[355, "Graph.save_name"]], "simgraph() (graph method)": [[355, "Graph.simgraph"]], "size() (graph method)": [[355, "Graph.size"]], "unmap() (graph method)": [[355, "Graph.unmap"]], "vector() (graph method)": [[355, "Graph.vector"]], "vfixed() (graph method)": [[355, "Graph.vfixed"]], "view() (graph method)": [[355, "Graph.view"]], "view_count() (graph method)": [[355, "Graph.view_count"]], "view_info() (graph method)": [[355, "Graph.view_info"]], "view_size() (graph method)": [[355, "Graph.view_size"]], "xaxis() (graph method)": [[355, "Graph.xaxis"]], "xexpr() (graph method)": [[355, "Graph.xexpr"]], "yaxis() (graph method)": [[355, "Graph.yaxis"]], "plotshape (built-in class)": [[361, "PlotShape"]], "beginline() (plotshape method)": [[361, "PlotShape.beginline"]], "color() (plotshape method)": [[361, "PlotShape.color"]], "color_all() (plotshape method)": [[361, "PlotShape.color_all"]], "color_list() (plotshape method)": [[361, "PlotShape.color_list"]], "colormap() (plotshape method)": [[361, "PlotShape.colormap"]], "erase() (plotshape method)": [[361, "PlotShape.erase"]], "erase_all() (plotshape method)": [[361, "PlotShape.erase_all"]], "exec_menu() (plotshape method)": [[361, "PlotShape.exec_menu"]], "fastflush() (plotshape method)": [[361, "PlotShape.fastflush"]], "flush() (plotshape method)": [[361, "PlotShape.flush"]], "hinton() (plotshape method)": [[361, "PlotShape.hinton"]], "label() (plotshape method)": [[361, "PlotShape.label"]], "len_scale() (plotshape method)": [[361, "PlotShape.len_scale"]], "line() (plotshape method)": [[361, "PlotShape.line"]], "mark() (plotshape method)": [[361, "PlotShape.mark"]], "menu_action() (plotshape method)": [[361, "PlotShape.menu_action"]], "menu_tool() (plotshape method)": [[361, "PlotShape.menu_tool"]], "nearest() (plotshape method)": [[361, "PlotShape.nearest"]], "observe() (plotshape method)": [[361, "PlotShape.observe"]], "plot() (plotshape method)": [[361, "PlotShape.plot"]], "printfile() (plotshape method)": [[361, "PlotShape.printfile"]], "push_selected() (plotshape method)": [[361, "PlotShape.push_selected"]], "rotate() (plotshape method)": [[361, "PlotShape.rotate"]], "save_name() (plotshape method)": [[361, "PlotShape.save_name"]], "scale() (plotshape method)": [[361, "PlotShape.scale"]], "show() (plotshape method)": [[361, "PlotShape.show"]], "size() (plotshape method)": [[361, "PlotShape.size"]], "unmap() (plotshape method)": [[361, "PlotShape.unmap"]], "variable() (plotshape method)": [[361, "PlotShape.variable"]], "view() (plotshape method)": [[361, "PlotShape.view"]], "view_count() (plotshape method)": [[361, "PlotShape.view_count"]], "rangevarplot (built-in class)": [[362, "RangeVarPlot"]], "begin() (rangevarplot method)": [[362, "RangeVarPlot.begin"]], "color() (rangevarplot method)": [[362, "RangeVarPlot.color"]], "end() (rangevarplot method)": [[362, "RangeVarPlot.end"]], "from_vector() (rangevarplot method)": [[362, "RangeVarPlot.from_vector"]], "left() (rangevarplot method)": [[362, "RangeVarPlot.left"]], "list() (rangevarplot method)": [[362, "RangeVarPlot.list"]], "origin() (rangevarplot method)": [[362, "RangeVarPlot.origin"]], "plot() (rangevarplot method)": [[362, "RangeVarPlot.plot"]], "right() (rangevarplot method)": [[362, "RangeVarPlot.right"]], "to_vector() (rangevarplot method)": [[362, "RangeVarPlot.to_vector"]], "vector() (rangevarplot method)": [[362, "RangeVarPlot.vector"]], "shape (built-in class)": [[363, "Shape"]], "action() (shape method)": [[363, "Shape.action"]], "beginline() (shape method)": [[363, "Shape.beginline"]], "color() (shape method)": [[363, "Shape.color"]], "color_all() (shape method)": [[363, "Shape.color_all"]], "color_list() (shape method)": [[363, "Shape.color_list"]], "erase() (shape method)": [[363, "Shape.erase"]], "erase_all() (shape method)": [[363, "Shape.erase_all"]], "exec_menu() (shape method)": [[363, "Shape.exec_menu"]], "flush() (shape method)": [[363, "Shape.flush"]], "label() (shape method)": [[363, "Shape.label"]], "len_scale() (shape method)": [[363, "Shape.len_scale"]], "line() (shape method)": [[363, "Shape.line"]], "mark() (shape method)": [[363, "Shape.mark"]], "menu_action() (shape method)": [[363, "Shape.menu_action"]], "menu_tool() (shape method)": [[363, "Shape.menu_tool"]], "nearest() (shape method)": [[363, "Shape.nearest"]], "observe() (shape method)": [[363, "Shape.observe"]], "point_mark() (shape method)": [[363, "Shape.point_mark"]], "point_mark_remove() (shape method)": [[363, "Shape.point_mark_remove"]], "printfile() (shape method)": [[363, "Shape.printfile"]], "push_selected() (shape method)": [[363, "Shape.push_selected"]], "rotate() (shape method)": [[363, "Shape.rotate"]], "save_name() (shape method)": [[363, "Shape.save_name"]], "select() (shape method)": [[363, "Shape.select"]], "show() (shape method)": [[363, "Shape.show"]], "size() (shape method)": [[363, "Shape.size"]], "unmap() (shape method)": [[363, "Shape.unmap"]], "view() (shape method)": [[363, "Shape.view"]], "view_count() (shape method)": [[363, "Shape.view_count"]]}})